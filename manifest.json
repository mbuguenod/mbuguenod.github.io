{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/manifest/v5.json", "dbt_version": "1.1.0", "generated_at": "2022-06-13T15:01:47.444280Z", "invocation_id": "85c6487f-7b8b-4fa9-a61a-253503baaf4f", "env": {}, "project_id": "1b762dd680b567002d7cabc78313a399", "user_id": "3be16875-74c8-40a2-b428-a6fe36df3177", "send_anonymous_usage_stats": true, "adapter_type": "redshift"}, "nodes": {"model.houm.goals_current": {"raw_sql": "WITH GoalsCurrent AS (\nSELECT *\nFROM {{ ref('rentals_units') }}\nUNION ALL\nSELECT *\nFROM {{ ref('sales_units') }}\nUNION ALL\nSELECT *\nFROM {{ref('sales_local_revenue')}}\nUNION ALL\nSELECT *\nFROM {{ref('eop_subs')}}\nUNION ALL \nSELECT *\nFROM {{ref('cum_sales_units')}}\nUNION ALL \nSELECT *\nFROM {{ref('cum_rentals_units')}}\nUNION ALL \nSELECT *\nFROM {{ref('cum_sales_local_revenue')}})\n\nSELECT \n/* NO PIVOT IN REDSHIFT */\nSUM(CASE WHEN col = 'units' THEN total END) as units,\nSUM(CASE WHEN col = 'acc_units' THEN total END) as acc_units,\nSUM(CASE WHEN col = 'local_revenue' THEN total END) AS local_revenue,\nSUM(CASE WHEN col = 'acc_local_revenue' THEN total END) AS acc_local_revenue,\nmetric,country,date_month\nFROM GoalsCurrent\nGROUP BY country,metric,date_month", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.rentals_units", "model.houm.sales_units", "model.houm.sales_local_revenue", "model.houm.eop_subs", "model.houm.cum_sales_units", "model.houm.cum_rentals_units", "model.houm.cum_sales_local_revenue"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "public", "fqn": ["houm", "dwh", "marts", "core", "finance", "goals_current"], "unique_id": "model.houm.goals_current", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "dwh/marts/core/finance/goals_current.sql", "original_file_path": "models/dwh/marts/core/finance/goals_current.sql", "name": "goals_current", "alias": "goals_current", "checksum": {"name": "sha256", "checksum": "23317083206c46e8e8d8c544cb8b431810b4fc08b8b2d17e69dba0915e9b83a4"}, "tags": [], "refs": [["rentals_units"], ["sales_units"], ["sales_local_revenue"], ["eop_subs"], ["cum_sales_units"], ["cum_rentals_units"], ["cum_sales_local_revenue"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/core/finance/goals_current.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1654784474.5549319, "compiled_sql": "WITH GoalsCurrent AS (\nSELECT *\nFROM \"houmdw_prod\".\"processing_finance\".\"rentals_units\"\nUNION ALL\nSELECT *\nFROM \"houmdw_prod\".\"processing_finance\".\"sales_units\"\nUNION ALL\nSELECT *\nFROM \"houmdw_prod\".\"processing_finance\".\"sales_local_revenue\"\nUNION ALL\nSELECT *\nFROM \"houmdw_prod\".\"processing_finance\".\"eop_subs\"\nUNION ALL \nSELECT *\nFROM \"houmdw_prod\".\"public\".\"cum_sales_units\"\nUNION ALL \nSELECT *\nFROM \"houmdw_prod\".\"public\".\"cum_rentals_units\"\nUNION ALL \nSELECT *\nFROM \"houmdw_prod\".\"public\".\"cum_sales_local_revenue\")\n\nSELECT \n/* NO PIVOT IN REDSHIFT */\nSUM(CASE WHEN col = 'units' THEN total END) as units,\nSUM(CASE WHEN col = 'acc_units' THEN total END) as acc_units,\nSUM(CASE WHEN col = 'local_revenue' THEN total END) AS local_revenue,\nSUM(CASE WHEN col = 'acc_local_revenue' THEN total END) AS acc_local_revenue,\nmetric,country,date_month\nFROM GoalsCurrent\nGROUP BY country,metric,date_month", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"public\".\"goals_current\""}, "model.houm.cum_rentals_units": {"raw_sql": "SELECT\n    'rentals_transactions' as metric,\n    'acc_units' as col,\n    country,\n    date_month,\n    SUM(total) over (\n        PARTITION BY country\n        ORDER BY\n            date_month rows unbounded preceding\n    ) AS cum_total\nFROM\n    {{ ref('rentals_units') }}\nWHERE date_month >= concat(extract(year from current_date),'-01-01')\nORDER BY\n    country,\n    date_month", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.rentals_units"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "public", "fqn": ["houm", "dwh", "marts", "core", "finance", "cum_rentals_units"], "unique_id": "model.houm.cum_rentals_units", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "dwh/marts/core/finance/cum_rentals_units.sql", "original_file_path": "models/dwh/marts/core/finance/cum_rentals_units.sql", "name": "cum_rentals_units", "alias": "cum_rentals_units", "checksum": {"name": "sha256", "checksum": "b57592818d6920d917a5a7d191773833f0052a04488fe59b114871f3b3c303d0"}, "tags": [], "refs": [["rentals_units"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/core/finance/cum_rentals_units.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1654784474.5675688, "compiled_sql": "SELECT\n    'rentals_transactions' as metric,\n    'acc_units' as col,\n    country,\n    date_month,\n    SUM(total) over (\n        PARTITION BY country\n        ORDER BY\n            date_month rows unbounded preceding\n    ) AS cum_total\nFROM\n    \"houmdw_prod\".\"processing_finance\".\"rentals_units\"\nWHERE date_month >= concat(extract(year from current_date),'-01-01')\nORDER BY\n    country,\n    date_month", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"public\".\"cum_rentals_units\""}, "model.houm.cum_sales_units": {"raw_sql": "SELECT\n    'sales_transactions' as metric,\n    'acc_units' as col,\n    country,\n    date_month,\n    SUM(total) over (\n        PARTITION BY country\n        ORDER BY\n            date_month rows unbounded preceding\n    ) AS cum_total\nFROM\n    {{ ref('sales_units') }}\nWHERE date_month >= concat(extract(year from current_date),'-01-01')\nORDER BY\n    country,\n    date_month", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.sales_units"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "public", "fqn": ["houm", "dwh", "marts", "core", "finance", "cum_sales_units"], "unique_id": "model.houm.cum_sales_units", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "dwh/marts/core/finance/cum_sales_units.sql", "original_file_path": "models/dwh/marts/core/finance/cum_sales_units.sql", "name": "cum_sales_units", "alias": "cum_sales_units", "checksum": {"name": "sha256", "checksum": "84a8f919c91fb3b354ac880eb7ef3c42870af9a1de67d62bc7508d944e5e9a00"}, "tags": [], "refs": [["sales_units"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/core/finance/cum_sales_units.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1654784474.56912, "compiled_sql": "SELECT\n    'sales_transactions' as metric,\n    'acc_units' as col,\n    country,\n    date_month,\n    SUM(total) over (\n        PARTITION BY country\n        ORDER BY\n            date_month rows unbounded preceding\n    ) AS cum_total\nFROM\n    \"houmdw_prod\".\"processing_finance\".\"sales_units\"\nWHERE date_month >= concat(extract(year from current_date),'-01-01')\nORDER BY\n    country,\n    date_month", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"public\".\"cum_sales_units\""}, "model.houm.cum_sales_local_revenue": {"raw_sql": "SELECT\n    'sales_transactions' as metric,\n    'acc_local_revenue' as col,\n    country,\n    date_month,\n    SUM(amount) over (\n        PARTITION BY country\n        ORDER BY\n            date_month rows unbounded preceding\n    ) AS cum_amount\nFROM\n    {{ ref('sales_local_revenue') }}\nWHERE date_month >= concat(extract(year from current_date),'-01-01')\nORDER BY\n    country,\n    date_month", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.sales_local_revenue"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "public", "fqn": ["houm", "dwh", "marts", "core", "finance", "cum_sales_local_revenue"], "unique_id": "model.houm.cum_sales_local_revenue", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "dwh/marts/core/finance/cum_sales_local_revenue.sql", "original_file_path": "models/dwh/marts/core/finance/cum_sales_local_revenue.sql", "name": "cum_sales_local_revenue", "alias": "cum_sales_local_revenue", "checksum": {"name": "sha256", "checksum": "a394ed7fc2202cccf0378864df609e448a6a6cebad9c23c559de6d86bb4de73c"}, "tags": [], "refs": [["sales_local_revenue"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/core/finance/cum_sales_local_revenue.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1654784474.570545, "compiled_sql": "SELECT\n    'sales_transactions' as metric,\n    'acc_local_revenue' as col,\n    country,\n    date_month,\n    SUM(amount) over (\n        PARTITION BY country\n        ORDER BY\n            date_month rows unbounded preceding\n    ) AS cum_amount\nFROM\n    \"houmdw_prod\".\"processing_finance\".\"sales_local_revenue\"\nWHERE date_month >= concat(extract(year from current_date),'-01-01')\nORDER BY\n    country,\n    date_month", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"public\".\"cum_sales_local_revenue\""}, "model.houm.sales_seller_metric_leads": {"raw_sql": "{{ config(materialized='table') }}\n\nWITH metric AS (\nSELECT * FROM {{ ref('sales_seller_metric_details_leads') }}\n)\nSELECT\n\torden\n\t, metric\n\t, geo_id\n\t, count(DISTINCT CASE WHEN yesterday = 1 THEN email END ) yesterday \n\t, count(DISTINCT CASE WHEN daybeforeyesterday = 1 THEN email END ) daybeforeyesterday\n\t, count(DISTINCT CASE WHEN LastWeek = 1 THEN email END ) LastWeek \n\t, count(DISTINCT CASE WHEN PastLastWeek = 1 THEN email END ) PastLastWeek \n\t, count(DISTINCT CASE WHEN ThisMonthtoday = 1 THEN email END ) ThisMonthtoday \n\t, count(DISTINCT CASE WHEN LastMonthtoday = 1 THEN email END ) LastMonthtoday \n\t, count(DISTINCT CASE WHEN LastMonth = 1 THEN email END ) LastMonth \n\t, count(DISTINCT CASE WHEN LasttwoMonth = 1 THEN email END ) LasttwoMonth \n\t, count(DISTINCT CASE WHEN LastthreeMonth = 1 THEN email END ) LastthreeMonth \nFROM metric \nGROUP BY 1,2,3", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.sales_seller_metric_details_leads"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "supply"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "supply", "sales_seller_metric_leads"], "unique_id": "model.houm.sales_seller_metric_leads", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "dwh/marts/supply/sales_seller_metric_leads.sql", "original_file_path": "models/dwh/marts/supply/sales_seller_metric_leads.sql", "name": "sales_seller_metric_leads", "alias": "sales_seller_metric_leads", "checksum": {"name": "sha256", "checksum": "1f1821ae98afc6fab213f69a2445b15891b2f69fe96b9e9fa6a14d0ae36129b0"}, "tags": ["dw", "marts", "supply"], "refs": [["sales_seller_metric_details_leads"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/supply/sales_seller_metric_leads.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "table", "tags": ["dw", "marts", "supply"]}, "created_at": 1654784474.572028, "compiled_sql": "\n\nWITH metric AS (\nSELECT * FROM \"houmdw_prod\".\"dbt_facts\".\"sales_seller_metric_details_leads\"\n)\nSELECT\n\torden\n\t, metric\n\t, geo_id\n\t, count(DISTINCT CASE WHEN yesterday = 1 THEN email END ) yesterday \n\t, count(DISTINCT CASE WHEN daybeforeyesterday = 1 THEN email END ) daybeforeyesterday\n\t, count(DISTINCT CASE WHEN LastWeek = 1 THEN email END ) LastWeek \n\t, count(DISTINCT CASE WHEN PastLastWeek = 1 THEN email END ) PastLastWeek \n\t, count(DISTINCT CASE WHEN ThisMonthtoday = 1 THEN email END ) ThisMonthtoday \n\t, count(DISTINCT CASE WHEN LastMonthtoday = 1 THEN email END ) LastMonthtoday \n\t, count(DISTINCT CASE WHEN LastMonth = 1 THEN email END ) LastMonth \n\t, count(DISTINCT CASE WHEN LasttwoMonth = 1 THEN email END ) LasttwoMonth \n\t, count(DISTINCT CASE WHEN LastthreeMonth = 1 THEN email END ) LastthreeMonth \nFROM metric \nGROUP BY 1,2,3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"sales_seller_metric_leads\""}, "model.houm.rental_landlord_metric_paid_media_cost": {"raw_sql": "{{ config(materialized='table') }}\n\nWITH metric AS (\nSELECT * FROM {{ ref('rental_landlord_metric_details_paid_media_cost') }}\n)\nSELECT  \n\torden ,\n\tmetric ,\n\tgeo_id ,\n\tSUM(DISTINCT CASE WHEN yesterday = 1 THEN day_cost END ) AS yesterday , \n\tSUM(DISTINCT CASE WHEN daybeforeyesterday = 1 THEN day_cost END ) AS daybeforeyesterday ,\n\tSUM(DISTINCT CASE WHEN LastWeek = 1 THEN day_cost END ) AS LastWeek , \n\tSUM(DISTINCT CASE WHEN PastLastWeek = 1 THEN day_cost END ) AS PastLastWeek ,\n\tSUM(DISTINCT CASE WHEN ThisMonthtoday = 1 THEN day_cost END ) AS ThisMonthtoday , \n\tSUM(DISTINCT CASE WHEN LastMonthtoday = 1 THEN day_cost END ) AS LastMonthtoday ,\n\tSUM(DISTINCT CASE WHEN LastMonth = 1 THEN day_cost END ) AS LastMonth ,\n\tSUM(DISTINCT CASE WHEN LasttwoMonth = 1 THEN day_cost END ) AS LasttwoMonth , \n\tSUM(DISTINCT CASE WHEN LastthreeMonth = 1 THEN day_cost END ) AS LastthreeMonth  \nFROM metric \nGROUP BY 1,2,3", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.rental_landlord_metric_details_paid_media_cost"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "supply"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "supply", "rental_landlord_metric_paid_media_cost"], "unique_id": "model.houm.rental_landlord_metric_paid_media_cost", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "dwh/marts/supply/rental_landlord_metric_paid_media_cost.sql", "original_file_path": "models/dwh/marts/supply/rental_landlord_metric_paid_media_cost.sql", "name": "rental_landlord_metric_paid_media_cost", "alias": "rental_landlord_metric_paid_media_cost", "checksum": {"name": "sha256", "checksum": "2cefc0608126e59a12d4b8329e90ef5f63f5a5fc355add3b2c29a0a47f0943aa"}, "tags": ["dw", "marts", "supply"], "refs": [["rental_landlord_metric_details_paid_media_cost"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/supply/rental_landlord_metric_paid_media_cost.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "table", "tags": ["dw", "marts", "supply"]}, "created_at": 1654784474.5744698, "compiled_sql": "\n\nWITH metric AS (\nSELECT * FROM \"houmdw_prod\".\"dbt_facts\".\"rental_landlord_metric_details_paid_media_cost\"\n)\nSELECT  \n\torden ,\n\tmetric ,\n\tgeo_id ,\n\tSUM(DISTINCT CASE WHEN yesterday = 1 THEN day_cost END ) AS yesterday , \n\tSUM(DISTINCT CASE WHEN daybeforeyesterday = 1 THEN day_cost END ) AS daybeforeyesterday ,\n\tSUM(DISTINCT CASE WHEN LastWeek = 1 THEN day_cost END ) AS LastWeek , \n\tSUM(DISTINCT CASE WHEN PastLastWeek = 1 THEN day_cost END ) AS PastLastWeek ,\n\tSUM(DISTINCT CASE WHEN ThisMonthtoday = 1 THEN day_cost END ) AS ThisMonthtoday , \n\tSUM(DISTINCT CASE WHEN LastMonthtoday = 1 THEN day_cost END ) AS LastMonthtoday ,\n\tSUM(DISTINCT CASE WHEN LastMonth = 1 THEN day_cost END ) AS LastMonth ,\n\tSUM(DISTINCT CASE WHEN LasttwoMonth = 1 THEN day_cost END ) AS LasttwoMonth , \n\tSUM(DISTINCT CASE WHEN LastthreeMonth = 1 THEN day_cost END ) AS LastthreeMonth  \nFROM metric \nGROUP BY 1,2,3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"rental_landlord_metric_paid_media_cost\""}, "model.houm.sales_seller_metric_photo_scheduled": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH metric AS (\r\nSELECT * FROM {{ ref('sales_seller_metric_details_photo_scheduled') }}\r\n)\r\nSELECT\r\n\torden\r\n\t, metric\r\n\t, geo_id\r\n\t, count(DISTINCT  CASE WHEN yesterday = 1 THEN schedule_id END ) yesterday \r\n\t, count(DISTINCT  CASE WHEN daybeforeyesterday = 1 THEN schedule_id END ) daybeforeyesterday\r\n\t, count(DISTINCT  CASE WHEN LastWeek = 1 THEN schedule_id END ) LastWeek \r\n\t, count(DISTINCT  CASE WHEN PastLastWeek = 1 THEN schedule_id END ) PastLastWeek \r\n\t, count(DISTINCT  CASE WHEN ThisMonthtoday = 1 THEN schedule_id END ) ThisMonthtoday \r\n\t, count(DISTINCT  CASE WHEN LastMonthtoday = 1 THEN schedule_id END ) LastMonthtoday \r\n\t, count(DISTINCT  CASE WHEN LastMonth = 1 THEN  schedule_id END ) LastMonth \r\n\t, count(DISTINCT  CASE WHEN LasttwoMonth = 1 THEN schedule_id END ) LasttwoMonth \r\n\t, count(DISTINCT  CASE WHEN LastthreeMonth = 1 THEN schedule_id END ) LastthreeMonth \r\nFROM metric \r\nGROUP BY 1,2,3", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.sales_seller_metric_details_photo_scheduled"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "supply"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "supply", "sales_seller_metric_photo_scheduled"], "unique_id": "model.houm.sales_seller_metric_photo_scheduled", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "dwh/marts/supply/sales_seller_metric_photo_scheduled.sql", "original_file_path": "models/dwh/marts/supply/sales_seller_metric_photo_scheduled.sql", "name": "sales_seller_metric_photo_scheduled", "alias": "sales_seller_metric_photo_scheduled", "checksum": {"name": "sha256", "checksum": "46cd6131999a62e5a9e853c4799cd5b65d8ac3859356a5e60e0ad8a6b231e8c8"}, "tags": ["dw", "marts", "supply"], "refs": [["sales_seller_metric_details_photo_scheduled"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/supply/sales_seller_metric_photo_scheduled.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "table", "tags": ["dw", "marts", "supply"]}, "created_at": 1654784474.576224, "compiled_sql": "\n\nWITH metric AS (\nSELECT * FROM \"houmdw_prod\".\"dbt_facts\".\"sales_seller_metric_details_photo_scheduled\"\n)\nSELECT\n\torden\n\t, metric\n\t, geo_id\n\t, count(DISTINCT  CASE WHEN yesterday = 1 THEN schedule_id END ) yesterday \n\t, count(DISTINCT  CASE WHEN daybeforeyesterday = 1 THEN schedule_id END ) daybeforeyesterday\n\t, count(DISTINCT  CASE WHEN LastWeek = 1 THEN schedule_id END ) LastWeek \n\t, count(DISTINCT  CASE WHEN PastLastWeek = 1 THEN schedule_id END ) PastLastWeek \n\t, count(DISTINCT  CASE WHEN ThisMonthtoday = 1 THEN schedule_id END ) ThisMonthtoday \n\t, count(DISTINCT  CASE WHEN LastMonthtoday = 1 THEN schedule_id END ) LastMonthtoday \n\t, count(DISTINCT  CASE WHEN LastMonth = 1 THEN  schedule_id END ) LastMonth \n\t, count(DISTINCT  CASE WHEN LasttwoMonth = 1 THEN schedule_id END ) LasttwoMonth \n\t, count(DISTINCT  CASE WHEN LastthreeMonth = 1 THEN schedule_id END ) LastthreeMonth \nFROM metric \nGROUP BY 1,2,3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"sales_seller_metric_photo_scheduled\""}, "model.houm.rental_landlord_metric_photo_done": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH metric AS (\r\nSELECT * FROM {{ ref('rental_landlord_metric_details_photo_done') }}\r\n)\r\nSELECT\r\n\torden\r\n\t, metric\r\n\t, geo_id\r\n\t, count(DISTINCT  CASE WHEN yesterday = 1 THEN schedule_id END ) yesterday \r\n\t, count(DISTINCT  CASE WHEN daybeforeyesterday = 1 THEN schedule_id END ) daybeforeyesterday\r\n\t, count(DISTINCT  CASE WHEN LastWeek = 1 THEN schedule_id END ) LastWeek \r\n\t, count(DISTINCT  CASE WHEN PastLastWeek = 1 THEN schedule_id END ) PastLastWeek \r\n\t, count(DISTINCT  CASE WHEN ThisMonthtoday = 1 THEN schedule_id END ) ThisMonthtoday \r\n\t, count(DISTINCT  CASE WHEN LastMonthtoday = 1 THEN schedule_id END ) LastMonthtoday \r\n\t, count(DISTINCT  CASE WHEN LastMonth = 1 THEN  schedule_id END ) LastMonth \r\n\t, count(DISTINCT  CASE WHEN LasttwoMonth = 1 THEN schedule_id END ) LasttwoMonth \r\n\t, count(DISTINCT  CASE WHEN LastthreeMonth = 1 THEN schedule_id END ) LastthreeMonth \r\nFROM metric \r\nGROUP BY 1,2,3", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.rental_landlord_metric_details_photo_done"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "supply"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "supply", "rental_landlord_metric_photo_done"], "unique_id": "model.houm.rental_landlord_metric_photo_done", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "dwh/marts/supply/rental_landlord_metric_photo_done.sql", "original_file_path": "models/dwh/marts/supply/rental_landlord_metric_photo_done.sql", "name": "rental_landlord_metric_photo_done", "alias": "rental_landlord_metric_photo_done", "checksum": {"name": "sha256", "checksum": "0dcbf3d3d0fc4e5940b9e9a2aca9bb8773bc089cd8ae5985a3949f3be87de107"}, "tags": ["dw", "marts", "supply"], "refs": [["rental_landlord_metric_details_photo_done"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/supply/rental_landlord_metric_photo_done.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "table", "tags": ["dw", "marts", "supply"]}, "created_at": 1654784474.578007, "compiled_sql": "\n\nWITH metric AS (\nSELECT * FROM \"houmdw_prod\".\"dbt_facts\".\"rental_landlord_metric_details_photo_done\"\n)\nSELECT\n\torden\n\t, metric\n\t, geo_id\n\t, count(DISTINCT  CASE WHEN yesterday = 1 THEN schedule_id END ) yesterday \n\t, count(DISTINCT  CASE WHEN daybeforeyesterday = 1 THEN schedule_id END ) daybeforeyesterday\n\t, count(DISTINCT  CASE WHEN LastWeek = 1 THEN schedule_id END ) LastWeek \n\t, count(DISTINCT  CASE WHEN PastLastWeek = 1 THEN schedule_id END ) PastLastWeek \n\t, count(DISTINCT  CASE WHEN ThisMonthtoday = 1 THEN schedule_id END ) ThisMonthtoday \n\t, count(DISTINCT  CASE WHEN LastMonthtoday = 1 THEN schedule_id END ) LastMonthtoday \n\t, count(DISTINCT  CASE WHEN LastMonth = 1 THEN  schedule_id END ) LastMonth \n\t, count(DISTINCT  CASE WHEN LasttwoMonth = 1 THEN schedule_id END ) LasttwoMonth \n\t, count(DISTINCT  CASE WHEN LastthreeMonth = 1 THEN schedule_id END ) LastthreeMonth \nFROM metric \nGROUP BY 1,2,3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"rental_landlord_metric_photo_done\""}, "model.houm.sales_seller_metric_new_sale_listing": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH metric AS (\r\nSELECT * FROM {{ ref('sales_seller_metric_details_new_sale_listing') }}\r\n)\r\nSELECT \r\n\torden ,\r\n\tmetric ,\r\n\tgeo_id ,\r\n\tCOUNT(DISTINCT CASE WHEN yesterday = 1 THEN property_id END ) AS yesterday ,\r\n\tCOUNT(DISTINCT CASE WHEN daybeforeyesterday = 1 THEN property_id END ) AS daybeforeyesterday ,\r\n\tCOUNT(DISTINCT CASE WHEN LastWeek = 1 THEN property_id END ) AS LastWeek ,\r\n\tCOUNT(DISTINCT CASE WHEN PastLastWeek = 1 THEN property_id END ) AS PastLastWeek ,\r\n\tCOUNT(DISTINCT CASE WHEN ThisMonthtoday = 1 THEN property_id END ) AS ThisMonthtoday ,\r\n\tCOUNT(DISTINCT CASE WHEN LastMonthtoday = 1 THEN property_id END ) AS LastMonthtoday ,\r\n\tCOUNT(DISTINCT CASE WHEN LastMonth = 1 THEN property_id END ) AS LastMonth ,\r\n\tCOUNT(DISTINCT CASE WHEN LasttwoMonth = 1 THEN property_id END ) AS LasttwoMonth ,\r\n\tCOUNT(DISTINCT CASE WHEN LastthreeMonth = 1 THEN property_id END ) AS LastthreeMonth \r\nFROM metric \r\nGROUP BY 1,2,3", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.sales_seller_metric_details_new_sale_listing"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "supply"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "supply", "sales_seller_metric_new_sale_listing"], "unique_id": "model.houm.sales_seller_metric_new_sale_listing", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "dwh/marts/supply/sales_seller_metric_new_sale_listing.sql", "original_file_path": "models/dwh/marts/supply/sales_seller_metric_new_sale_listing.sql", "name": "sales_seller_metric_new_sale_listing", "alias": "sales_seller_metric_new_sale_listing", "checksum": {"name": "sha256", "checksum": "5bf548dcc62e0bdaa2fc295449d1b7b273c2dfb25b8e2f8dcbac13f7b4cf1687"}, "tags": ["dw", "marts", "supply"], "refs": [["sales_seller_metric_details_new_sale_listing"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/supply/sales_seller_metric_new_sale_listing.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "table", "tags": ["dw", "marts", "supply"]}, "created_at": 1654784474.5797231, "compiled_sql": "\n\nWITH metric AS (\nSELECT * FROM \"houmdw_prod\".\"dbt_facts\".\"sales_seller_metric_details_new_sale_listing\"\n)\nSELECT \n\torden ,\n\tmetric ,\n\tgeo_id ,\n\tCOUNT(DISTINCT CASE WHEN yesterday = 1 THEN property_id END ) AS yesterday ,\n\tCOUNT(DISTINCT CASE WHEN daybeforeyesterday = 1 THEN property_id END ) AS daybeforeyesterday ,\n\tCOUNT(DISTINCT CASE WHEN LastWeek = 1 THEN property_id END ) AS LastWeek ,\n\tCOUNT(DISTINCT CASE WHEN PastLastWeek = 1 THEN property_id END ) AS PastLastWeek ,\n\tCOUNT(DISTINCT CASE WHEN ThisMonthtoday = 1 THEN property_id END ) AS ThisMonthtoday ,\n\tCOUNT(DISTINCT CASE WHEN LastMonthtoday = 1 THEN property_id END ) AS LastMonthtoday ,\n\tCOUNT(DISTINCT CASE WHEN LastMonth = 1 THEN property_id END ) AS LastMonth ,\n\tCOUNT(DISTINCT CASE WHEN LasttwoMonth = 1 THEN property_id END ) AS LasttwoMonth ,\n\tCOUNT(DISTINCT CASE WHEN LastthreeMonth = 1 THEN property_id END ) AS LastthreeMonth \nFROM metric \nGROUP BY 1,2,3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"sales_seller_metric_new_sale_listing\""}, "model.houm.sales_seller_metric_leads_qualified_date": {"raw_sql": "{{ config(materialized='table') }}\n\nWITH metric AS (\nSELECT * FROM {{ ref('sales_seller_metric_details_leads_qualified_date') }}\n)\nSELECT\n\torden\n\t, metric\n\t, geo_id\n\t, count(DISTINCT CASE WHEN yesterday = 1 THEN email END ) yesterday \n\t, count(DISTINCT CASE WHEN daybeforeyesterday = 1 THEN email END ) daybeforeyesterday\n\t, count(DISTINCT CASE WHEN LastWeek = 1 THEN email END ) LastWeek \n\t, count(DISTINCT CASE WHEN PastLastWeek = 1 THEN email END ) PastLastWeek \n\t, count(DISTINCT CASE WHEN ThisMonthtoday = 1 THEN email END ) ThisMonthtoday \n\t, count(DISTINCT CASE WHEN LastMonthtoday = 1 THEN email END ) LastMonthtoday \n\t, count(DISTINCT CASE WHEN LastMonth = 1 THEN email END ) LastMonth \n\t, count(DISTINCT CASE WHEN LasttwoMonth = 1 THEN email END ) LasttwoMonth \n\t, count(DISTINCT CASE WHEN LastthreeMonth = 1 THEN email END ) LastthreeMonth \nFROM metric \nGROUP BY 1,2,3", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.sales_seller_metric_details_leads_qualified_date"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "supply"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "supply", "sales_seller_metric_leads_qualified_date"], "unique_id": "model.houm.sales_seller_metric_leads_qualified_date", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "dwh/marts/supply/sales_seller_metric_leads_qualified_date.sql", "original_file_path": "models/dwh/marts/supply/sales_seller_metric_leads_qualified_date.sql", "name": "sales_seller_metric_leads_qualified_date", "alias": "sales_seller_metric_leads_qualified_date", "checksum": {"name": "sha256", "checksum": "17f66cd36734d10fcea19bb40eb1d46184f9e0f9a6d59c026c2ce17451b19d15"}, "tags": ["dw", "marts", "supply"], "refs": [["sales_seller_metric_details_leads_qualified_date"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/supply/sales_seller_metric_leads_qualified_date.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "table", "tags": ["dw", "marts", "supply"]}, "created_at": 1654784474.581743, "compiled_sql": "\n\nWITH metric AS (\nSELECT * FROM \"houmdw_prod\".\"dbt_facts\".\"sales_seller_metric_details_leads_qualified_date\"\n)\nSELECT\n\torden\n\t, metric\n\t, geo_id\n\t, count(DISTINCT CASE WHEN yesterday = 1 THEN email END ) yesterday \n\t, count(DISTINCT CASE WHEN daybeforeyesterday = 1 THEN email END ) daybeforeyesterday\n\t, count(DISTINCT CASE WHEN LastWeek = 1 THEN email END ) LastWeek \n\t, count(DISTINCT CASE WHEN PastLastWeek = 1 THEN email END ) PastLastWeek \n\t, count(DISTINCT CASE WHEN ThisMonthtoday = 1 THEN email END ) ThisMonthtoday \n\t, count(DISTINCT CASE WHEN LastMonthtoday = 1 THEN email END ) LastMonthtoday \n\t, count(DISTINCT CASE WHEN LastMonth = 1 THEN email END ) LastMonth \n\t, count(DISTINCT CASE WHEN LasttwoMonth = 1 THEN email END ) LasttwoMonth \n\t, count(DISTINCT CASE WHEN LastthreeMonth = 1 THEN email END ) LastthreeMonth \nFROM metric \nGROUP BY 1,2,3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"sales_seller_metric_leads_qualified_date\""}, "model.houm.properties_published": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nSELECT \r\n        a.id as property_id\r\n        ,b.status as rental_status\r\n        ,c.status as sales_status\r\n        ,a.*\r\nFROM {{ ref('proc_properties') }} a\r\nleft join {{ ref('proc_propertydetails') }} b on a.id = b.property_id \r\nleft join {{ ref('proc_property_salesdetails') }} c on a.id = c.property_id\r\nwhere b.status in ('published','republished') or c.status in ('published','republished')", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_properties", "model.houm.proc_propertydetails", "model.houm.proc_property_salesdetails"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "supply"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "supply", "properties_published"], "unique_id": "model.houm.properties_published", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "dwh/marts/supply/properties_published.sql", "original_file_path": "models/dwh/marts/supply/properties_published.sql", "name": "properties_published", "alias": "properties_published", "checksum": {"name": "sha256", "checksum": "70d753482cbbc37f43199b3a9d0615c53ac843bb07ad4367f786cd68ebc4ec34"}, "tags": ["dw", "marts", "supply"], "refs": [["proc_properties"], ["proc_propertydetails"], ["proc_property_salesdetails"]], "sources": [], "description": "", "columns": {"property_id": {"name": "property_id", "description": "This is a unique identifier for the properties at Houm", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "houm://models/dwh/marts/schema.yml", "compiled_path": "target/compiled/houm/models/dwh/marts/supply/properties_published.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "table", "tags": ["dw", "marts", "supply"]}, "created_at": 1654784475.6403542, "compiled_sql": "\n\nSELECT \n        a.id as property_id\n        ,b.status as rental_status\n        ,c.status as sales_status\n        ,a.*\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_properties\" a\nleft join \"houmdw_prod\".\"dbt_processing\".\"proc_propertydetails\" b on a.id = b.property_id \nleft join \"houmdw_prod\".\"dbt_processing\".\"proc_property_salesdetails\" c on a.id = c.property_id\nwhere b.status in ('published','republished') or c.status in ('published','republished')", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"properties_published\""}, "model.houm.rental_landlord_metric_leads_qualified": {"raw_sql": "{{ config(materialized='table') }}\n\nWITH metric AS (\nSELECT * FROM {{ ref('rental_landlord_metric_details_leads_qualified') }}\n)\nselect \n\torden  \n\t, metric \t\n\t, geo_id\n\t, COUNT(DISTINCT CASE WHEN yesterday = 1 THEN email END ) yesterday \n\t, COUNT(DISTINCT CASE WHEN daybeforeyesterday = 1 THEN email END ) daybeforeyesterday \n\t, COUNT(DISTINCT CASE WHEN LastWeek = 1 THEN email END ) LastWeek \n\t, COUNT(DISTINCT CASE WHEN PastLastWeek = 1 THEN email END ) PastLastWeek \n\t, COUNT(DISTINCT CASE WHEN ThisMonthtoday = 1 THEN email END ) ThisMonthtoday \n\t, COUNT(DISTINCT CASE WHEN LastMonthtoday = 1 THEN email END ) LastMonthtoday \n\t, COUNT(DISTINCT CASE WHEN LastMonth = 1 THEN email END ) LastMonth \n\t, COUNT(DISTINCT CASE WHEN LasttwoMonth = 1 THEN email END ) LasttwoMonth \n\t, COUNT(DISTINCT CASE WHEN LastthreeMonth = 1 THEN email END ) LastthreeMonth \nfrom metric \ngroup by 1,2,3", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.rental_landlord_metric_details_leads_qualified"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "supply"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "supply", "rental_landlord_metric_leads_qualified"], "unique_id": "model.houm.rental_landlord_metric_leads_qualified", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "dwh/marts/supply/rental_landlord_metric_leads_qualified.sql", "original_file_path": "models/dwh/marts/supply/rental_landlord_metric_leads_qualified.sql", "name": "rental_landlord_metric_leads_qualified", "alias": "rental_landlord_metric_leads_qualified", "checksum": {"name": "sha256", "checksum": "8b997c559e3f1fcedf9143aca27ba9fbc15a330e29e8e9eb7900fbbff8ceeadc"}, "tags": ["dw", "marts", "supply"], "refs": [["rental_landlord_metric_details_leads_qualified"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/supply/rental_landlord_metric_leads_qualified.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "table", "tags": ["dw", "marts", "supply"]}, "created_at": 1654784474.585697, "compiled_sql": "\n\nWITH metric AS (\nSELECT * FROM \"houmdw_prod\".\"dbt_facts\".\"rental_landlord_metric_details_leads_qualified\"\n)\nselect \n\torden  \n\t, metric \t\n\t, geo_id\n\t, COUNT(DISTINCT CASE WHEN yesterday = 1 THEN email END ) yesterday \n\t, COUNT(DISTINCT CASE WHEN daybeforeyesterday = 1 THEN email END ) daybeforeyesterday \n\t, COUNT(DISTINCT CASE WHEN LastWeek = 1 THEN email END ) LastWeek \n\t, COUNT(DISTINCT CASE WHEN PastLastWeek = 1 THEN email END ) PastLastWeek \n\t, COUNT(DISTINCT CASE WHEN ThisMonthtoday = 1 THEN email END ) ThisMonthtoday \n\t, COUNT(DISTINCT CASE WHEN LastMonthtoday = 1 THEN email END ) LastMonthtoday \n\t, COUNT(DISTINCT CASE WHEN LastMonth = 1 THEN email END ) LastMonth \n\t, COUNT(DISTINCT CASE WHEN LasttwoMonth = 1 THEN email END ) LasttwoMonth \n\t, COUNT(DISTINCT CASE WHEN LastthreeMonth = 1 THEN email END ) LastthreeMonth \nfrom metric \ngroup by 1,2,3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"rental_landlord_metric_leads_qualified\""}, "model.houm.rental_landlord_metric_photo_scheduled": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH metric AS (\r\nSELECT * FROM {{ ref('rental_landlord_metric_details_photo_scheduled') }}\r\n)\r\nSELECT\r\n\torden\r\n\t, metric\r\n\t, geo_id\r\n\t, count(DISTINCT  CASE WHEN yesterday = 1 THEN schedule_id END ) yesterday \r\n\t, count(DISTINCT  CASE WHEN daybeforeyesterday = 1 THEN schedule_id END ) daybeforeyesterday\r\n\t, count(DISTINCT  CASE WHEN LastWeek = 1 THEN schedule_id END ) LastWeek \r\n\t, count(DISTINCT  CASE WHEN PastLastWeek = 1 THEN schedule_id END ) PastLastWeek \r\n\t, count(DISTINCT  CASE WHEN ThisMonthtoday = 1 THEN schedule_id END ) ThisMonthtoday \r\n\t, count(DISTINCT  CASE WHEN LastMonthtoday = 1 THEN schedule_id END ) LastMonthtoday \r\n\t, count(DISTINCT  CASE WHEN LastMonth = 1 THEN  schedule_id END ) LastMonth \r\n\t, count(DISTINCT  CASE WHEN LasttwoMonth = 1 THEN schedule_id END ) LasttwoMonth \r\n\t, count(DISTINCT  CASE WHEN LastthreeMonth = 1 THEN schedule_id END ) LastthreeMonth \r\nFROM metric \r\nGROUP BY 1,2,3", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.rental_landlord_metric_details_photo_scheduled"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "supply"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "supply", "rental_landlord_metric_photo_scheduled"], "unique_id": "model.houm.rental_landlord_metric_photo_scheduled", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "dwh/marts/supply/rental_landlord_metric_photo_scheduled.sql", "original_file_path": "models/dwh/marts/supply/rental_landlord_metric_photo_scheduled.sql", "name": "rental_landlord_metric_photo_scheduled", "alias": "rental_landlord_metric_photo_scheduled", "checksum": {"name": "sha256", "checksum": "f68c58e99787e92a6680c1e43609c00821786ce61a45767efb46166ef7f4a023"}, "tags": ["dw", "marts", "supply"], "refs": [["rental_landlord_metric_details_photo_scheduled"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/supply/rental_landlord_metric_photo_scheduled.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "table", "tags": ["dw", "marts", "supply"]}, "created_at": 1654784474.588407, "compiled_sql": "\n\nWITH metric AS (\nSELECT * FROM \"houmdw_prod\".\"dbt_facts\".\"rental_landlord_metric_details_photo_scheduled\"\n)\nSELECT\n\torden\n\t, metric\n\t, geo_id\n\t, count(DISTINCT  CASE WHEN yesterday = 1 THEN schedule_id END ) yesterday \n\t, count(DISTINCT  CASE WHEN daybeforeyesterday = 1 THEN schedule_id END ) daybeforeyesterday\n\t, count(DISTINCT  CASE WHEN LastWeek = 1 THEN schedule_id END ) LastWeek \n\t, count(DISTINCT  CASE WHEN PastLastWeek = 1 THEN schedule_id END ) PastLastWeek \n\t, count(DISTINCT  CASE WHEN ThisMonthtoday = 1 THEN schedule_id END ) ThisMonthtoday \n\t, count(DISTINCT  CASE WHEN LastMonthtoday = 1 THEN schedule_id END ) LastMonthtoday \n\t, count(DISTINCT  CASE WHEN LastMonth = 1 THEN  schedule_id END ) LastMonth \n\t, count(DISTINCT  CASE WHEN LasttwoMonth = 1 THEN schedule_id END ) LasttwoMonth \n\t, count(DISTINCT  CASE WHEN LastthreeMonth = 1 THEN schedule_id END ) LastthreeMonth \nFROM metric \nGROUP BY 1,2,3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"rental_landlord_metric_photo_scheduled\""}, "model.houm.rental_landlord_metric_leads_qualified_date": {"raw_sql": "{{ config(materialized='table') }}\n\nWITH metric AS (\nSELECT * FROM {{ ref('rental_landlord_metric_details_leads_qualified_date') }}\n)\nSELECT  \n\torden  \n\t, metric \t\n\t, geo_id\n\t, COUNT(DISTINCT CASE WHEN yesterday = 1 THEN email END ) yesterday \n\t, COUNT(DISTINCT CASE WHEN daybeforeyesterday = 1 THEN email END ) daybeforeyesterday \n\t, COUNT(DISTINCT CASE WHEN LastWeek = 1 THEN email END ) LastWeek \n\t, COUNT(DISTINCT CASE WHEN PastLastWeek = 1 THEN email END ) PastLastWeek \n\t, COUNT(DISTINCT CASE WHEN ThisMonthtoday = 1 THEN email END ) ThisMonthtoday \n\t, COUNT(DISTINCT CASE WHEN LastMonthtoday = 1 THEN email END ) LastMonthtoday \n\t, COUNT(DISTINCT CASE WHEN LastMonth = 1 THEN email END ) LastMonth \n\t, COUNT(DISTINCT CASE WHEN LasttwoMonth = 1 THEN email END ) LasttwoMonth \n\t, COUNT(DISTINCT CASE WHEN LastthreeMonth = 1 THEN email END ) LastthreeMonth \nfrom metric \ngroup by 1,2,3", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.rental_landlord_metric_details_leads_qualified_date"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "supply"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "supply", "rental_landlord_metric_leads_qualified_date"], "unique_id": "model.houm.rental_landlord_metric_leads_qualified_date", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "dwh/marts/supply/rental_landlord_metric_leads_qualified_date.sql", "original_file_path": "models/dwh/marts/supply/rental_landlord_metric_leads_qualified_date.sql", "name": "rental_landlord_metric_leads_qualified_date", "alias": "rental_landlord_metric_leads_qualified_date", "checksum": {"name": "sha256", "checksum": "b29fba74c756634e9e662a757fc0011c8d2b8b384c4575ed2f7a95e72c69208c"}, "tags": ["dw", "marts", "supply"], "refs": [["rental_landlord_metric_details_leads_qualified_date"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/supply/rental_landlord_metric_leads_qualified_date.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "table", "tags": ["dw", "marts", "supply"]}, "created_at": 1654784474.5905569, "compiled_sql": "\n\nWITH metric AS (\nSELECT * FROM \"houmdw_prod\".\"dbt_facts\".\"rental_landlord_metric_details_leads_qualified_date\"\n)\nSELECT  \n\torden  \n\t, metric \t\n\t, geo_id\n\t, COUNT(DISTINCT CASE WHEN yesterday = 1 THEN email END ) yesterday \n\t, COUNT(DISTINCT CASE WHEN daybeforeyesterday = 1 THEN email END ) daybeforeyesterday \n\t, COUNT(DISTINCT CASE WHEN LastWeek = 1 THEN email END ) LastWeek \n\t, COUNT(DISTINCT CASE WHEN PastLastWeek = 1 THEN email END ) PastLastWeek \n\t, COUNT(DISTINCT CASE WHEN ThisMonthtoday = 1 THEN email END ) ThisMonthtoday \n\t, COUNT(DISTINCT CASE WHEN LastMonthtoday = 1 THEN email END ) LastMonthtoday \n\t, COUNT(DISTINCT CASE WHEN LastMonth = 1 THEN email END ) LastMonth \n\t, COUNT(DISTINCT CASE WHEN LasttwoMonth = 1 THEN email END ) LasttwoMonth \n\t, COUNT(DISTINCT CASE WHEN LastthreeMonth = 1 THEN email END ) LastthreeMonth \nfrom metric \ngroup by 1,2,3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"rental_landlord_metric_leads_qualified_date\""}, "model.houm.rental_landlord_metric_new_rental_listing_b2c": {"raw_sql": "-- rental_landlord_metric_details_new_rental_listing\n\n{{ config(materialized='table') }}\n\nWITH metric AS (\nSELECT * FROM {{ ref('rental_landlord_metric_details_new_rental_listing_b2c') }}\n)\nSELECT \n\torden ,\n\tmetric ,\n\tgeo_id ,\n\tCOUNT(DISTINCT CASE WHEN yesterday = 1 THEN property_id END ) AS yesterday ,\n\tCOUNT(DISTINCT CASE WHEN daybeforeyesterday = 1 THEN property_id END ) AS daybeforeyesterday ,\n\tCOUNT(DISTINCT CASE WHEN LastWeek = 1 THEN property_id END ) AS LastWeek ,\n\tCOUNT(DISTINCT CASE WHEN PastLastWeek = 1 THEN property_id END ) AS PastLastWeek ,\n\tCOUNT(DISTINCT CASE WHEN ThisMonthtoday = 1 THEN property_id END ) AS ThisMonthtoday ,\n\tCOUNT(DISTINCT CASE WHEN LastMonthtoday = 1 THEN property_id END ) AS LastMonthtoday ,\n\tCOUNT(DISTINCT CASE WHEN LastMonth = 1 THEN property_id END ) AS LastMonth ,\n\tCOUNT(DISTINCT CASE WHEN LasttwoMonth = 1 THEN property_id END ) AS LasttwoMonth ,\n\tCOUNT(DISTINCT CASE WHEN LastthreeMonth = 1 THEN property_id END ) AS LastthreeMonth \nFROM metric \nGROUP BY 1,2,3", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.rental_landlord_metric_details_new_rental_listing_b2c"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "supply"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "supply", "rental_landlord_metric_new_rental_listing_b2c"], "unique_id": "model.houm.rental_landlord_metric_new_rental_listing_b2c", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "dwh/marts/supply/rental_landlord_metric_new_rental_listing_b2c.sql", "original_file_path": "models/dwh/marts/supply/rental_landlord_metric_new_rental_listing_b2c.sql", "name": "rental_landlord_metric_new_rental_listing_b2c", "alias": "rental_landlord_metric_new_rental_listing_b2c", "checksum": {"name": "sha256", "checksum": "c1db354dad49a3a7fa0d3c2e432c9bced3fe2b33bb3cfc434a1b144d69606f4c"}, "tags": ["dw", "marts", "supply"], "refs": [["rental_landlord_metric_details_new_rental_listing_b2c"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/supply/rental_landlord_metric_new_rental_listing_b2c.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "table", "tags": ["dw", "marts", "supply"]}, "created_at": 1654784474.5925498, "compiled_sql": "-- rental_landlord_metric_details_new_rental_listing\n\n\n\nWITH metric AS (\nSELECT * FROM \"houmdw_prod\".\"dbt_facts\".\"rental_landlord_metric_details_new_rental_listing_b2c\"\n)\nSELECT \n\torden ,\n\tmetric ,\n\tgeo_id ,\n\tCOUNT(DISTINCT CASE WHEN yesterday = 1 THEN property_id END ) AS yesterday ,\n\tCOUNT(DISTINCT CASE WHEN daybeforeyesterday = 1 THEN property_id END ) AS daybeforeyesterday ,\n\tCOUNT(DISTINCT CASE WHEN LastWeek = 1 THEN property_id END ) AS LastWeek ,\n\tCOUNT(DISTINCT CASE WHEN PastLastWeek = 1 THEN property_id END ) AS PastLastWeek ,\n\tCOUNT(DISTINCT CASE WHEN ThisMonthtoday = 1 THEN property_id END ) AS ThisMonthtoday ,\n\tCOUNT(DISTINCT CASE WHEN LastMonthtoday = 1 THEN property_id END ) AS LastMonthtoday ,\n\tCOUNT(DISTINCT CASE WHEN LastMonth = 1 THEN property_id END ) AS LastMonth ,\n\tCOUNT(DISTINCT CASE WHEN LasttwoMonth = 1 THEN property_id END ) AS LasttwoMonth ,\n\tCOUNT(DISTINCT CASE WHEN LastthreeMonth = 1 THEN property_id END ) AS LastthreeMonth \nFROM metric \nGROUP BY 1,2,3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"rental_landlord_metric_new_rental_listing_b2c\""}, "model.houm.rental_landlord_metric_photo_created": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH metric AS (\r\nSELECT * FROM {{ ref('rental_landlord_metric_details_photo_created') }}\r\n)\r\nSELECT\r\n\torden\r\n\t, metric\r\n\t, geo_id\r\n\t, count(DISTINCT  CASE WHEN yesterday = 1 THEN schedule_id END ) yesterday \r\n\t, count(DISTINCT  CASE WHEN daybeforeyesterday = 1 THEN schedule_id END ) daybeforeyesterday\r\n\t, count(DISTINCT  CASE WHEN LastWeek = 1 THEN schedule_id END ) LastWeek \r\n\t, count(DISTINCT  CASE WHEN PastLastWeek = 1 THEN schedule_id END ) PastLastWeek \r\n\t, count(DISTINCT  CASE WHEN ThisMonthtoday = 1 THEN schedule_id END ) ThisMonthtoday \r\n\t, count(DISTINCT  CASE WHEN LastMonthtoday = 1 THEN schedule_id END ) LastMonthtoday \r\n\t, count(DISTINCT  CASE WHEN LastMonth = 1 THEN  schedule_id END ) LastMonth \r\n\t, count(DISTINCT  CASE WHEN LasttwoMonth = 1 THEN schedule_id END ) LasttwoMonth \r\n\t, count(DISTINCT  CASE WHEN LastthreeMonth = 1 THEN schedule_id END ) LastthreeMonth \r\nFROM metric \r\nGROUP BY 1,2,3", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.rental_landlord_metric_details_photo_created"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "supply"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "supply", "rental_landlord_metric_photo_created"], "unique_id": "model.houm.rental_landlord_metric_photo_created", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "dwh/marts/supply/rental_landlord_metric_photo_created.sql", "original_file_path": "models/dwh/marts/supply/rental_landlord_metric_photo_created.sql", "name": "rental_landlord_metric_photo_created", "alias": "rental_landlord_metric_photo_created", "checksum": {"name": "sha256", "checksum": "f9e48f616ffd3de41f495d8c78297487d6e9da58980e6938012b8b2864e83621"}, "tags": ["dw", "marts", "supply"], "refs": [["rental_landlord_metric_details_photo_created"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/supply/rental_landlord_metric_photo_created.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "table", "tags": ["dw", "marts", "supply"]}, "created_at": 1654784474.59454, "compiled_sql": "\n\nWITH metric AS (\nSELECT * FROM \"houmdw_prod\".\"dbt_facts\".\"rental_landlord_metric_details_photo_created\"\n)\nSELECT\n\torden\n\t, metric\n\t, geo_id\n\t, count(DISTINCT  CASE WHEN yesterday = 1 THEN schedule_id END ) yesterday \n\t, count(DISTINCT  CASE WHEN daybeforeyesterday = 1 THEN schedule_id END ) daybeforeyesterday\n\t, count(DISTINCT  CASE WHEN LastWeek = 1 THEN schedule_id END ) LastWeek \n\t, count(DISTINCT  CASE WHEN PastLastWeek = 1 THEN schedule_id END ) PastLastWeek \n\t, count(DISTINCT  CASE WHEN ThisMonthtoday = 1 THEN schedule_id END ) ThisMonthtoday \n\t, count(DISTINCT  CASE WHEN LastMonthtoday = 1 THEN schedule_id END ) LastMonthtoday \n\t, count(DISTINCT  CASE WHEN LastMonth = 1 THEN  schedule_id END ) LastMonth \n\t, count(DISTINCT  CASE WHEN LasttwoMonth = 1 THEN schedule_id END ) LasttwoMonth \n\t, count(DISTINCT  CASE WHEN LastthreeMonth = 1 THEN schedule_id END ) LastthreeMonth \nFROM metric \nGROUP BY 1,2,3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"rental_landlord_metric_photo_created\""}, "model.houm.sales_seller_metric_paid_media_cost": {"raw_sql": "{{ config(materialized='table') }}\n\nWITH metric AS (\nSELECT * FROM {{ ref('sales_seller_metric_details_paid_media_cost') }}\n)\nSELECT  \n\torden ,\n\tmetric ,\n\tgeo_id ,\n\tSUM(DISTINCT CASE WHEN yesterday = 1 THEN day_cost END ) AS yesterday , \n\tSUM(DISTINCT CASE WHEN daybeforeyesterday = 1 THEN day_cost END ) AS daybeforeyesterday ,\n\tSUM(DISTINCT CASE WHEN LastWeek = 1 THEN day_cost END ) AS LastWeek , \n\tSUM(DISTINCT CASE WHEN PastLastWeek = 1 THEN day_cost END ) AS PastLastWeek ,\n\tSUM(DISTINCT CASE WHEN ThisMonthtoday = 1 THEN day_cost END ) AS ThisMonthtoday , \n\tSUM(DISTINCT CASE WHEN LastMonthtoday = 1 THEN day_cost END ) AS LastMonthtoday ,\n\tSUM(DISTINCT CASE WHEN LastMonth = 1 THEN day_cost END ) AS LastMonth ,\n\tSUM(DISTINCT CASE WHEN LasttwoMonth = 1 THEN day_cost END ) AS LasttwoMonth , \n\tSUM(DISTINCT CASE WHEN LastthreeMonth = 1 THEN day_cost END ) AS LastthreeMonth  \nFROM metric \nGROUP BY 1,2,3", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.sales_seller_metric_details_paid_media_cost"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "supply"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "supply", "sales_seller_metric_paid_media_cost"], "unique_id": "model.houm.sales_seller_metric_paid_media_cost", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "dwh/marts/supply/sales_seller_metric_paid_media_cost.sql", "original_file_path": "models/dwh/marts/supply/sales_seller_metric_paid_media_cost.sql", "name": "sales_seller_metric_paid_media_cost", "alias": "sales_seller_metric_paid_media_cost", "checksum": {"name": "sha256", "checksum": "57ac196cd457469bc3f85c57c65d6d1974f8c87e9a27c2f4e65eda6f5890b516"}, "tags": ["dw", "marts", "supply"], "refs": [["sales_seller_metric_details_paid_media_cost"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/supply/sales_seller_metric_paid_media_cost.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "table", "tags": ["dw", "marts", "supply"]}, "created_at": 1654784474.596502, "compiled_sql": "\n\nWITH metric AS (\nSELECT * FROM \"houmdw_prod\".\"dbt_facts\".\"sales_seller_metric_details_paid_media_cost\"\n)\nSELECT  \n\torden ,\n\tmetric ,\n\tgeo_id ,\n\tSUM(DISTINCT CASE WHEN yesterday = 1 THEN day_cost END ) AS yesterday , \n\tSUM(DISTINCT CASE WHEN daybeforeyesterday = 1 THEN day_cost END ) AS daybeforeyesterday ,\n\tSUM(DISTINCT CASE WHEN LastWeek = 1 THEN day_cost END ) AS LastWeek , \n\tSUM(DISTINCT CASE WHEN PastLastWeek = 1 THEN day_cost END ) AS PastLastWeek ,\n\tSUM(DISTINCT CASE WHEN ThisMonthtoday = 1 THEN day_cost END ) AS ThisMonthtoday , \n\tSUM(DISTINCT CASE WHEN LastMonthtoday = 1 THEN day_cost END ) AS LastMonthtoday ,\n\tSUM(DISTINCT CASE WHEN LastMonth = 1 THEN day_cost END ) AS LastMonth ,\n\tSUM(DISTINCT CASE WHEN LasttwoMonth = 1 THEN day_cost END ) AS LasttwoMonth , \n\tSUM(DISTINCT CASE WHEN LastthreeMonth = 1 THEN day_cost END ) AS LastthreeMonth  \nFROM metric \nGROUP BY 1,2,3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"sales_seller_metric_paid_media_cost\""}, "model.houm.rental_landlord_metric_leads": {"raw_sql": "{{ config(materialized='table') }}\n\nWITH metric AS (\nSELECT * FROM {{ ref('rental_landlord_metric_details_leads') }}\n)\nselect \n\torden  \n\t, metric \t\n\t, geo_id\n\t, COUNT(DISTINCT CASE WHEN yesterday = 1 THEN email END ) yesterday \n\t, COUNT(DISTINCT CASE WHEN daybeforeyesterday = 1 THEN email END ) daybeforeyesterday \n\t, COUNT(DISTINCT CASE WHEN LastWeek = 1 THEN email END ) LastWeek \n\t, COUNT(DISTINCT CASE WHEN PastLastWeek = 1 THEN email END ) PastLastWeek \n\t, COUNT(DISTINCT CASE WHEN ThisMonthtoday = 1 THEN email END ) ThisMonthtoday \n\t, COUNT(DISTINCT CASE WHEN LastMonthtoday = 1 THEN email END ) LastMonthtoday \n\t, COUNT(DISTINCT CASE WHEN LastMonth = 1 THEN email END ) LastMonth \n\t, COUNT(DISTINCT CASE WHEN LasttwoMonth = 1 THEN email END ) LasttwoMonth \n\t, COUNT(DISTINCT CASE WHEN LastthreeMonth = 1 THEN email END ) LastthreeMonth \nfrom metric \ngroup by 1,2,3", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.rental_landlord_metric_details_leads"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "supply"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "supply", "rental_landlord_metric_leads"], "unique_id": "model.houm.rental_landlord_metric_leads", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "dwh/marts/supply/rental_landlord_metric_leads.sql", "original_file_path": "models/dwh/marts/supply/rental_landlord_metric_leads.sql", "name": "rental_landlord_metric_leads", "alias": "rental_landlord_metric_leads", "checksum": {"name": "sha256", "checksum": "afbd5fa4b51e86092e400fc09144cfb60d2e379828f0212c0ca1e369f5581c2e"}, "tags": ["dw", "marts", "supply"], "refs": [["rental_landlord_metric_details_leads"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/supply/rental_landlord_metric_leads.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "table", "tags": ["dw", "marts", "supply"]}, "created_at": 1654784474.598351, "compiled_sql": "\n\nWITH metric AS (\nSELECT * FROM \"houmdw_prod\".\"dbt_facts\".\"rental_landlord_metric_details_leads\"\n)\nselect \n\torden  \n\t, metric \t\n\t, geo_id\n\t, COUNT(DISTINCT CASE WHEN yesterday = 1 THEN email END ) yesterday \n\t, COUNT(DISTINCT CASE WHEN daybeforeyesterday = 1 THEN email END ) daybeforeyesterday \n\t, COUNT(DISTINCT CASE WHEN LastWeek = 1 THEN email END ) LastWeek \n\t, COUNT(DISTINCT CASE WHEN PastLastWeek = 1 THEN email END ) PastLastWeek \n\t, COUNT(DISTINCT CASE WHEN ThisMonthtoday = 1 THEN email END ) ThisMonthtoday \n\t, COUNT(DISTINCT CASE WHEN LastMonthtoday = 1 THEN email END ) LastMonthtoday \n\t, COUNT(DISTINCT CASE WHEN LastMonth = 1 THEN email END ) LastMonth \n\t, COUNT(DISTINCT CASE WHEN LasttwoMonth = 1 THEN email END ) LasttwoMonth \n\t, COUNT(DISTINCT CASE WHEN LastthreeMonth = 1 THEN email END ) LastthreeMonth \nfrom metric \ngroup by 1,2,3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"rental_landlord_metric_leads\""}, "model.houm.sales_seller_metric_photo_created": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH metric AS (\r\nSELECT * FROM {{ ref('sales_seller_metric_details_photo_created') }}\r\n)\r\nSELECT\r\n\torden\r\n\t, metric\r\n\t, geo_id\r\n\t, count(DISTINCT  CASE WHEN yesterday = 1 THEN schedule_id END ) yesterday \r\n\t, count(DISTINCT  CASE WHEN daybeforeyesterday = 1 THEN schedule_id END ) daybeforeyesterday\r\n\t, count(DISTINCT  CASE WHEN LastWeek = 1 THEN schedule_id END ) LastWeek \r\n\t, count(DISTINCT  CASE WHEN PastLastWeek = 1 THEN schedule_id END ) PastLastWeek \r\n\t, count(DISTINCT  CASE WHEN ThisMonthtoday = 1 THEN schedule_id END ) ThisMonthtoday \r\n\t, count(DISTINCT  CASE WHEN LastMonthtoday = 1 THEN schedule_id END ) LastMonthtoday \r\n\t, count(DISTINCT  CASE WHEN LastMonth = 1 THEN  schedule_id END ) LastMonth \r\n\t, count(DISTINCT  CASE WHEN LasttwoMonth = 1 THEN schedule_id END ) LasttwoMonth \r\n\t, count(DISTINCT  CASE WHEN LastthreeMonth = 1 THEN schedule_id END ) LastthreeMonth \r\nFROM metric \r\nGROUP BY 1,2,3", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.sales_seller_metric_details_photo_created"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "supply"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "supply", "sales_seller_metric_photo_created"], "unique_id": "model.houm.sales_seller_metric_photo_created", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "dwh/marts/supply/sales_seller_metric_photo_created.sql", "original_file_path": "models/dwh/marts/supply/sales_seller_metric_photo_created.sql", "name": "sales_seller_metric_photo_created", "alias": "sales_seller_metric_photo_created", "checksum": {"name": "sha256", "checksum": "d278a964b1a02f127d21fe2cb3abda254b5714480fcacc4eb1c03537ab2f8d20"}, "tags": ["dw", "marts", "supply"], "refs": [["sales_seller_metric_details_photo_created"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/supply/sales_seller_metric_photo_created.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "table", "tags": ["dw", "marts", "supply"]}, "created_at": 1654784474.600271, "compiled_sql": "\n\nWITH metric AS (\nSELECT * FROM \"houmdw_prod\".\"dbt_facts\".\"sales_seller_metric_details_photo_created\"\n)\nSELECT\n\torden\n\t, metric\n\t, geo_id\n\t, count(DISTINCT  CASE WHEN yesterday = 1 THEN schedule_id END ) yesterday \n\t, count(DISTINCT  CASE WHEN daybeforeyesterday = 1 THEN schedule_id END ) daybeforeyesterday\n\t, count(DISTINCT  CASE WHEN LastWeek = 1 THEN schedule_id END ) LastWeek \n\t, count(DISTINCT  CASE WHEN PastLastWeek = 1 THEN schedule_id END ) PastLastWeek \n\t, count(DISTINCT  CASE WHEN ThisMonthtoday = 1 THEN schedule_id END ) ThisMonthtoday \n\t, count(DISTINCT  CASE WHEN LastMonthtoday = 1 THEN schedule_id END ) LastMonthtoday \n\t, count(DISTINCT  CASE WHEN LastMonth = 1 THEN  schedule_id END ) LastMonth \n\t, count(DISTINCT  CASE WHEN LasttwoMonth = 1 THEN schedule_id END ) LasttwoMonth \n\t, count(DISTINCT  CASE WHEN LastthreeMonth = 1 THEN schedule_id END ) LastthreeMonth \nFROM metric \nGROUP BY 1,2,3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"sales_seller_metric_photo_created\""}, "model.houm.sales_seller_metric_photo_done": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH metric AS (\r\nSELECT * FROM {{ ref('sales_seller_metric_details_photo_done') }}\r\n)\r\nSELECT\r\n\torden\r\n\t, metric\r\n\t, geo_id\r\n\t, count(DISTINCT  CASE WHEN yesterday = 1 THEN schedule_id END ) yesterday \r\n\t, count(DISTINCT  CASE WHEN daybeforeyesterday = 1 THEN schedule_id END ) daybeforeyesterday\r\n\t, count(DISTINCT  CASE WHEN LastWeek = 1 THEN schedule_id END ) LastWeek \r\n\t, count(DISTINCT  CASE WHEN PastLastWeek = 1 THEN schedule_id END ) PastLastWeek \r\n\t, count(DISTINCT  CASE WHEN ThisMonthtoday = 1 THEN schedule_id END ) ThisMonthtoday \r\n\t, count(DISTINCT  CASE WHEN LastMonthtoday = 1 THEN schedule_id END ) LastMonthtoday \r\n\t, count(DISTINCT  CASE WHEN LastMonth = 1 THEN  schedule_id END ) LastMonth \r\n\t, count(DISTINCT  CASE WHEN LasttwoMonth = 1 THEN schedule_id END ) LasttwoMonth \r\n\t, count(DISTINCT  CASE WHEN LastthreeMonth = 1 THEN schedule_id END ) LastthreeMonth \r\nFROM metric \r\nGROUP BY 1,2,3", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.sales_seller_metric_details_photo_done"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "supply"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "supply", "sales_seller_metric_photo_done"], "unique_id": "model.houm.sales_seller_metric_photo_done", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "dwh/marts/supply/sales_seller_metric_photo_done.sql", "original_file_path": "models/dwh/marts/supply/sales_seller_metric_photo_done.sql", "name": "sales_seller_metric_photo_done", "alias": "sales_seller_metric_photo_done", "checksum": {"name": "sha256", "checksum": "e25a7cef60dcd1b549aae043da79cae947d263f995d8d7f052a6edd3c2fcca20"}, "tags": ["dw", "marts", "supply"], "refs": [["sales_seller_metric_details_photo_done"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/supply/sales_seller_metric_photo_done.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "table", "tags": ["dw", "marts", "supply"]}, "created_at": 1654784474.6021178, "compiled_sql": "\n\nWITH metric AS (\nSELECT * FROM \"houmdw_prod\".\"dbt_facts\".\"sales_seller_metric_details_photo_done\"\n)\nSELECT\n\torden\n\t, metric\n\t, geo_id\n\t, count(DISTINCT  CASE WHEN yesterday = 1 THEN schedule_id END ) yesterday \n\t, count(DISTINCT  CASE WHEN daybeforeyesterday = 1 THEN schedule_id END ) daybeforeyesterday\n\t, count(DISTINCT  CASE WHEN LastWeek = 1 THEN schedule_id END ) LastWeek \n\t, count(DISTINCT  CASE WHEN PastLastWeek = 1 THEN schedule_id END ) PastLastWeek \n\t, count(DISTINCT  CASE WHEN ThisMonthtoday = 1 THEN schedule_id END ) ThisMonthtoday \n\t, count(DISTINCT  CASE WHEN LastMonthtoday = 1 THEN schedule_id END ) LastMonthtoday \n\t, count(DISTINCT  CASE WHEN LastMonth = 1 THEN  schedule_id END ) LastMonth \n\t, count(DISTINCT  CASE WHEN LasttwoMonth = 1 THEN schedule_id END ) LasttwoMonth \n\t, count(DISTINCT  CASE WHEN LastthreeMonth = 1 THEN schedule_id END ) LastthreeMonth \nFROM metric \nGROUP BY 1,2,3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"sales_seller_metric_photo_done\""}, "model.houm.rental_landlord_metric_new_rental_listing": {"raw_sql": "-- rental_landlord_metric_details_new_rental_listing\r\n\r\n{{ config(materialized='table') }}\r\n\r\nWITH metric AS (\r\nSELECT * FROM {{ ref('rental_landlord_metric_details_new_rental_listing') }}\r\n)\r\nSELECT \r\n\torden ,\r\n\tmetric ,\r\n\tgeo_id ,\r\n\tCOUNT(DISTINCT CASE WHEN yesterday = 1 THEN property_id END ) AS yesterday ,\r\n\tCOUNT(DISTINCT CASE WHEN daybeforeyesterday = 1 THEN property_id END ) AS daybeforeyesterday ,\r\n\tCOUNT(DISTINCT CASE WHEN LastWeek = 1 THEN property_id END ) AS LastWeek ,\r\n\tCOUNT(DISTINCT CASE WHEN PastLastWeek = 1 THEN property_id END ) AS PastLastWeek ,\r\n\tCOUNT(DISTINCT CASE WHEN ThisMonthtoday = 1 THEN property_id END ) AS ThisMonthtoday ,\r\n\tCOUNT(DISTINCT CASE WHEN LastMonthtoday = 1 THEN property_id END ) AS LastMonthtoday ,\r\n\tCOUNT(DISTINCT CASE WHEN LastMonth = 1 THEN property_id END ) AS LastMonth ,\r\n\tCOUNT(DISTINCT CASE WHEN LasttwoMonth = 1 THEN property_id END ) AS LasttwoMonth ,\r\n\tCOUNT(DISTINCT CASE WHEN LastthreeMonth = 1 THEN property_id END ) AS LastthreeMonth \r\nFROM metric \r\nGROUP BY 1,2,3", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.rental_landlord_metric_details_new_rental_listing"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "supply"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "supply", "rental_landlord_metric_new_rental_listing"], "unique_id": "model.houm.rental_landlord_metric_new_rental_listing", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "dwh/marts/supply/rental_landlord_metric_new_rental_listing.sql", "original_file_path": "models/dwh/marts/supply/rental_landlord_metric_new_rental_listing.sql", "name": "rental_landlord_metric_new_rental_listing", "alias": "rental_landlord_metric_new_rental_listing", "checksum": {"name": "sha256", "checksum": "c23f83156b21d2100d788d3128e85169969297bd1c668ed25880f743c625cc24"}, "tags": ["dw", "marts", "supply"], "refs": [["rental_landlord_metric_details_new_rental_listing"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/supply/rental_landlord_metric_new_rental_listing.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "table", "tags": ["dw", "marts", "supply"]}, "created_at": 1654784474.604235, "compiled_sql": "-- rental_landlord_metric_details_new_rental_listing\n\n\n\nWITH metric AS (\nSELECT * FROM \"houmdw_prod\".\"dbt_facts\".\"rental_landlord_metric_details_new_rental_listing\"\n)\nSELECT \n\torden ,\n\tmetric ,\n\tgeo_id ,\n\tCOUNT(DISTINCT CASE WHEN yesterday = 1 THEN property_id END ) AS yesterday ,\n\tCOUNT(DISTINCT CASE WHEN daybeforeyesterday = 1 THEN property_id END ) AS daybeforeyesterday ,\n\tCOUNT(DISTINCT CASE WHEN LastWeek = 1 THEN property_id END ) AS LastWeek ,\n\tCOUNT(DISTINCT CASE WHEN PastLastWeek = 1 THEN property_id END ) AS PastLastWeek ,\n\tCOUNT(DISTINCT CASE WHEN ThisMonthtoday = 1 THEN property_id END ) AS ThisMonthtoday ,\n\tCOUNT(DISTINCT CASE WHEN LastMonthtoday = 1 THEN property_id END ) AS LastMonthtoday ,\n\tCOUNT(DISTINCT CASE WHEN LastMonth = 1 THEN property_id END ) AS LastMonth ,\n\tCOUNT(DISTINCT CASE WHEN LasttwoMonth = 1 THEN property_id END ) AS LasttwoMonth ,\n\tCOUNT(DISTINCT CASE WHEN LastthreeMonth = 1 THEN property_id END ) AS LastthreeMonth \nFROM metric \nGROUP BY 1,2,3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"rental_landlord_metric_new_rental_listing\""}, "model.houm.sales_seller_metric_new_sale_listing_b2c": {"raw_sql": "{{ config(materialized='table') }}\n\nWITH metric AS (\nSELECT * FROM {{ ref('sales_seller_metric_details_new_sale_listing_b2c') }}\n)\nSELECT \n\torden ,\n\tmetric ,\n\tgeo_id ,\n\tCOUNT(DISTINCT CASE WHEN yesterday = 1 THEN property_id END ) AS yesterday ,\n\tCOUNT(DISTINCT CASE WHEN daybeforeyesterday = 1 THEN property_id END ) AS daybeforeyesterday ,\n\tCOUNT(DISTINCT CASE WHEN LastWeek = 1 THEN property_id END ) AS LastWeek ,\n\tCOUNT(DISTINCT CASE WHEN PastLastWeek = 1 THEN property_id END ) AS PastLastWeek ,\n\tCOUNT(DISTINCT CASE WHEN ThisMonthtoday = 1 THEN property_id END ) AS ThisMonthtoday ,\n\tCOUNT(DISTINCT CASE WHEN LastMonthtoday = 1 THEN property_id END ) AS LastMonthtoday ,\n\tCOUNT(DISTINCT CASE WHEN LastMonth = 1 THEN property_id END ) AS LastMonth ,\n\tCOUNT(DISTINCT CASE WHEN LasttwoMonth = 1 THEN property_id END ) AS LasttwoMonth ,\n\tCOUNT(DISTINCT CASE WHEN LastthreeMonth = 1 THEN property_id END ) AS LastthreeMonth \nFROM metric \nGROUP BY 1,2,3", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.sales_seller_metric_details_new_sale_listing_b2c"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "supply"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "supply", "sales_seller_metric_new_sale_listing_b2c"], "unique_id": "model.houm.sales_seller_metric_new_sale_listing_b2c", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "dwh/marts/supply/sales_seller_metric_new_sale_listing_b2c.sql", "original_file_path": "models/dwh/marts/supply/sales_seller_metric_new_sale_listing_b2c.sql", "name": "sales_seller_metric_new_sale_listing_b2c", "alias": "sales_seller_metric_new_sale_listing_b2c", "checksum": {"name": "sha256", "checksum": "db7df121c3fe7b0167ed5c52e2eea2539dae0baf16ee6d77f3de99cbd21a36ba"}, "tags": ["dw", "marts", "supply"], "refs": [["sales_seller_metric_details_new_sale_listing_b2c"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/supply/sales_seller_metric_new_sale_listing_b2c.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "table", "tags": ["dw", "marts", "supply"]}, "created_at": 1654784474.6062138, "compiled_sql": "\n\nWITH metric AS (\nSELECT * FROM \"houmdw_prod\".\"dbt_facts\".\"sales_seller_metric_details_new_sale_listing_b2c\"\n)\nSELECT \n\torden ,\n\tmetric ,\n\tgeo_id ,\n\tCOUNT(DISTINCT CASE WHEN yesterday = 1 THEN property_id END ) AS yesterday ,\n\tCOUNT(DISTINCT CASE WHEN daybeforeyesterday = 1 THEN property_id END ) AS daybeforeyesterday ,\n\tCOUNT(DISTINCT CASE WHEN LastWeek = 1 THEN property_id END ) AS LastWeek ,\n\tCOUNT(DISTINCT CASE WHEN PastLastWeek = 1 THEN property_id END ) AS PastLastWeek ,\n\tCOUNT(DISTINCT CASE WHEN ThisMonthtoday = 1 THEN property_id END ) AS ThisMonthtoday ,\n\tCOUNT(DISTINCT CASE WHEN LastMonthtoday = 1 THEN property_id END ) AS LastMonthtoday ,\n\tCOUNT(DISTINCT CASE WHEN LastMonth = 1 THEN property_id END ) AS LastMonth ,\n\tCOUNT(DISTINCT CASE WHEN LasttwoMonth = 1 THEN property_id END ) AS LasttwoMonth ,\n\tCOUNT(DISTINCT CASE WHEN LastthreeMonth = 1 THEN property_id END ) AS LastthreeMonth \nFROM metric \nGROUP BY 1,2,3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"sales_seller_metric_new_sale_listing_b2c\""}, "model.houm.sales_seller_metric_leads_qualified": {"raw_sql": "{{ config(materialized='table') }}\n\nWITH metric AS (\nSELECT * FROM {{ ref('sales_seller_metric_details_leads_qualified') }}\n)\nSELECT\n\torden\n\t, metric\n\t, geo_id\n\t, count(DISTINCT CASE WHEN yesterday = 1 THEN email END ) yesterday \n\t, count(DISTINCT CASE WHEN daybeforeyesterday = 1 THEN email END ) daybeforeyesterday\n\t, count(DISTINCT CASE WHEN LastWeek = 1 THEN email END ) LastWeek \n\t, count(DISTINCT CASE WHEN PastLastWeek = 1 THEN email END ) PastLastWeek \n\t, count(DISTINCT CASE WHEN ThisMonthtoday = 1 THEN email END ) ThisMonthtoday \n\t, count(DISTINCT CASE WHEN LastMonthtoday = 1 THEN email END ) LastMonthtoday \n\t, count(DISTINCT CASE WHEN LastMonth = 1 THEN email END ) LastMonth \n\t, count(DISTINCT CASE WHEN LasttwoMonth = 1 THEN email END ) LasttwoMonth \n\t, count(DISTINCT CASE WHEN LastthreeMonth = 1 THEN email END ) LastthreeMonth \nFROM metric \nGROUP BY 1,2,3", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.sales_seller_metric_details_leads_qualified"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "supply"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "supply", "sales_seller_metric_leads_qualified"], "unique_id": "model.houm.sales_seller_metric_leads_qualified", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "dwh/marts/supply/sales_seller_metric_leads_qualified.sql", "original_file_path": "models/dwh/marts/supply/sales_seller_metric_leads_qualified.sql", "name": "sales_seller_metric_leads_qualified", "alias": "sales_seller_metric_leads_qualified", "checksum": {"name": "sha256", "checksum": "add40d61a149bed7ff42dbd5c97aa25631675ec7a53dabca5762a00a99951cbf"}, "tags": ["dw", "marts", "supply"], "refs": [["sales_seller_metric_details_leads_qualified"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/supply/sales_seller_metric_leads_qualified.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "table", "tags": ["dw", "marts", "supply"]}, "created_at": 1654784474.608334, "compiled_sql": "\n\nWITH metric AS (\nSELECT * FROM \"houmdw_prod\".\"dbt_facts\".\"sales_seller_metric_details_leads_qualified\"\n)\nSELECT\n\torden\n\t, metric\n\t, geo_id\n\t, count(DISTINCT CASE WHEN yesterday = 1 THEN email END ) yesterday \n\t, count(DISTINCT CASE WHEN daybeforeyesterday = 1 THEN email END ) daybeforeyesterday\n\t, count(DISTINCT CASE WHEN LastWeek = 1 THEN email END ) LastWeek \n\t, count(DISTINCT CASE WHEN PastLastWeek = 1 THEN email END ) PastLastWeek \n\t, count(DISTINCT CASE WHEN ThisMonthtoday = 1 THEN email END ) ThisMonthtoday \n\t, count(DISTINCT CASE WHEN LastMonthtoday = 1 THEN email END ) LastMonthtoday \n\t, count(DISTINCT CASE WHEN LastMonth = 1 THEN email END ) LastMonth \n\t, count(DISTINCT CASE WHEN LasttwoMonth = 1 THEN email END ) LasttwoMonth \n\t, count(DISTINCT CASE WHEN LastthreeMonth = 1 THEN email END ) LastthreeMonth \nFROM metric \nGROUP BY 1,2,3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"sales_seller_metric_leads_qualified\""}, "model.houm.kpi_landlord_photo_scheduled": {"raw_sql": "{{ config(materialized='table') }}\n\nselect \n    schedule_id,\n    local_begin_date,\n    country,\n    city,\n    supply_source,\n    supply_relation\nfrom {{ref('proc_tmp_demand_schedules_cleaned')}}\nwhere schedule_name = 'Photo'\nand business = 'Rentals'\nand status = 'Scheduled'", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_tmp_demand_schedules_cleaned"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "kpi"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "kpi", "rentals", "kpi_landlord_photo_scheduled"], "unique_id": "model.houm.kpi_landlord_photo_scheduled", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "dwh/marts/kpi/rentals/kpi_landlord_photo_scheduled.sql", "original_file_path": "models/dwh/marts/kpi/rentals/kpi_landlord_photo_scheduled.sql", "name": "kpi_landlord_photo_scheduled", "alias": "kpi_landlord_photo_scheduled", "checksum": {"name": "sha256", "checksum": "f2eae21934374c333ca540049e3c8c4f7133189a00e27729d4e4ece3e14c8072"}, "tags": ["dw", "marts", "kpi"], "refs": [["proc_tmp_demand_schedules_cleaned"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/kpi/rentals/kpi_landlord_photo_scheduled.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "table", "tags": ["dw", "marts", "kpi"]}, "created_at": 1654784474.610122, "compiled_sql": "\n\nselect \n    schedule_id,\n    local_begin_date,\n    country,\n    city,\n    supply_source,\n    supply_relation\nfrom \"houmdw_prod\".\"dbt_processing\".\"proc_tmp_demand_schedules_cleaned\"\nwhere schedule_name = 'Photo'\nand business = 'Rentals'\nand status = 'Scheduled'", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"kpi_landlord_photo_scheduled\""}, "model.houm.kpi_tenant_visit_done": {"raw_sql": "{{ config(materialized='table') }}\n\nselect \n    schedule_id,\n    local_begin_date,\n    country,\n    city,\n    supply_source,\n    supply_relation\nfrom {{ref('proc_tmp_demand_schedules_cleaned')}}\nwhere schedule_name = 'Visit'\nand business = 'Rentals'\nand status = 'Done'", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_tmp_demand_schedules_cleaned"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "kpi"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "kpi", "rentals", "kpi_tenant_visit_done"], "unique_id": "model.houm.kpi_tenant_visit_done", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "dwh/marts/kpi/rentals/kpi_tenant_visit_done.sql", "original_file_path": "models/dwh/marts/kpi/rentals/kpi_tenant_visit_done.sql", "name": "kpi_tenant_visit_done", "alias": "kpi_tenant_visit_done", "checksum": {"name": "sha256", "checksum": "6848672d8ba7b20b3c5cdb105a571a50bd017d8bbd364366a86cb9ef5a352dac"}, "tags": ["dw", "marts", "kpi"], "refs": [["proc_tmp_demand_schedules_cleaned"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/kpi/rentals/kpi_tenant_visit_done.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "table", "tags": ["dw", "marts", "kpi"]}, "created_at": 1654784474.61209, "compiled_sql": "\n\nselect \n    schedule_id,\n    local_begin_date,\n    country,\n    city,\n    supply_source,\n    supply_relation\nfrom \"houmdw_prod\".\"dbt_processing\".\"proc_tmp_demand_schedules_cleaned\"\nwhere schedule_name = 'Visit'\nand business = 'Rentals'\nand status = 'Done'", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"kpi_tenant_visit_done\""}, "model.houm.kpi_landlord_nrl": {"raw_sql": "{{ config(materialized='table') }}\n\nselect\n    property_id,\n    coalesce(local_first_publication_date,first_publication_date), --Aqui encontre inconsistencias en Macrozones (props sin geo_id, revisar)\n    country,\n    City_Houm as city,\n    supply_source,\n    supply_relation\nfrom {{ref('proc_tmp_supply_properties_macrozone')}}\nwhere business like 'Rental%'\nand first_publication_date is not null\norder by 2 desc", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_tmp_supply_properties_macrozone"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "kpi"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "kpi", "rentals", "kpi_landlord_nrl"], "unique_id": "model.houm.kpi_landlord_nrl", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "dwh/marts/kpi/rentals/kpi_landlord_nrl.sql", "original_file_path": "models/dwh/marts/kpi/rentals/kpi_landlord_nrl.sql", "name": "kpi_landlord_nrl", "alias": "kpi_landlord_nrl", "checksum": {"name": "sha256", "checksum": "b95d5298995825a722e08bd8c587f5014e68ea041b6d7d3d2c8a3fe3e858ad28"}, "tags": ["dw", "marts", "kpi"], "refs": [["proc_tmp_supply_properties_macrozone"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/kpi/rentals/kpi_landlord_nrl.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "table", "tags": ["dw", "marts", "kpi"]}, "created_at": 1654784474.6138182, "compiled_sql": "\n\nselect\n    property_id,\n    coalesce(local_first_publication_date,first_publication_date), --Aqui encontre inconsistencias en Macrozones (props sin geo_id, revisar)\n    country,\n    City_Houm as city,\n    supply_source,\n    supply_relation\nfrom \"houmdw_prod\".\"dbt_processing\".\"proc_tmp_supply_properties_macrozone\"\nwhere business like 'Rental%'\nand first_publication_date is not null\norder by 2 desc", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"kpi_landlord_nrl\""}, "model.houm.kpi_landlord_photo_created": {"raw_sql": "{{ config(materialized='table') }}\n\nselect \n    schedule_id,\n    local_created_at,\n    country,\n    city,\n    supply_source,\n    supply_relation\nfrom {{ref('proc_tmp_demand_schedules_cleaned')}}\nwhere schedule_name = 'Photo'\nand business = 'Rentals'", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_tmp_demand_schedules_cleaned"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "kpi"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "kpi", "rentals", "kpi_landlord_photo_created"], "unique_id": "model.houm.kpi_landlord_photo_created", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "dwh/marts/kpi/rentals/kpi_landlord_photo_created.sql", "original_file_path": "models/dwh/marts/kpi/rentals/kpi_landlord_photo_created.sql", "name": "kpi_landlord_photo_created", "alias": "kpi_landlord_photo_created", "checksum": {"name": "sha256", "checksum": "a4a06a66bad678f240b3f7061a50be467db1b76d1cb4ae2d2700a4933177f50b"}, "tags": ["dw", "marts", "kpi"], "refs": [["proc_tmp_demand_schedules_cleaned"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/kpi/rentals/kpi_landlord_photo_created.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "table", "tags": ["dw", "marts", "kpi"]}, "created_at": 1654784474.61554, "compiled_sql": "\n\nselect \n    schedule_id,\n    local_created_at,\n    country,\n    city,\n    supply_source,\n    supply_relation\nfrom \"houmdw_prod\".\"dbt_processing\".\"proc_tmp_demand_schedules_cleaned\"\nwhere schedule_name = 'Photo'\nand business = 'Rentals'", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"kpi_landlord_photo_created\""}, "model.houm.kpi_landlord_photo_done": {"raw_sql": "{{ config(materialized='table') }}\n\nselect \n    schedule_id,\n    local_begin_date,\n    country,\n    city,\n    supply_source,\n    supply_relation\nfrom {{ref('proc_tmp_demand_schedules_cleaned')}}\nwhere schedule_name = 'Photo'\nand business = 'Rentals'\nand status = 'Done'", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_tmp_demand_schedules_cleaned"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "kpi"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "kpi", "rentals", "kpi_landlord_photo_done"], "unique_id": "model.houm.kpi_landlord_photo_done", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "dwh/marts/kpi/rentals/kpi_landlord_photo_done.sql", "original_file_path": "models/dwh/marts/kpi/rentals/kpi_landlord_photo_done.sql", "name": "kpi_landlord_photo_done", "alias": "kpi_landlord_photo_done", "checksum": {"name": "sha256", "checksum": "05f051703997de2af5788d3077767df49c987f12d2b78bc610080ed3f0715acb"}, "tags": ["dw", "marts", "kpi"], "refs": [["proc_tmp_demand_schedules_cleaned"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/kpi/rentals/kpi_landlord_photo_done.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "table", "tags": ["dw", "marts", "kpi"]}, "created_at": 1654784474.6176069, "compiled_sql": "\n\nselect \n    schedule_id,\n    local_begin_date,\n    country,\n    city,\n    supply_source,\n    supply_relation\nfrom \"houmdw_prod\".\"dbt_processing\".\"proc_tmp_demand_schedules_cleaned\"\nwhere schedule_name = 'Photo'\nand business = 'Rentals'\nand status = 'Done'", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"kpi_landlord_photo_done\""}, "model.houm.kpi_tenant_visit_created": {"raw_sql": "{{ config(materialized='table') }}\n\nselect \n    schedule_id,\n    local_created_at,\n    country,\n    city,\n    supply_source,\n    supply_relation\nfrom {{ref('proc_tmp_demand_schedules_cleaned')}}\nwhere schedule_name = 'Visit'\nand business = 'Rentals'", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_tmp_demand_schedules_cleaned"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "kpi"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "kpi", "rentals", "kpi_tenant_visit_created"], "unique_id": "model.houm.kpi_tenant_visit_created", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "dwh/marts/kpi/rentals/kpi_tenant_visit_created.sql", "original_file_path": "models/dwh/marts/kpi/rentals/kpi_tenant_visit_created.sql", "name": "kpi_tenant_visit_created", "alias": "kpi_tenant_visit_created", "checksum": {"name": "sha256", "checksum": "c7f45097c8c5e6f3f218d612e005b67ff132a7f3f0c7133ce74662e6bcf76208"}, "tags": ["dw", "marts", "kpi"], "refs": [["proc_tmp_demand_schedules_cleaned"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/kpi/rentals/kpi_tenant_visit_created.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "table", "tags": ["dw", "marts", "kpi"]}, "created_at": 1654784474.61967, "compiled_sql": "\n\nselect \n    schedule_id,\n    local_created_at,\n    country,\n    city,\n    supply_source,\n    supply_relation\nfrom \"houmdw_prod\".\"dbt_processing\".\"proc_tmp_demand_schedules_cleaned\"\nwhere schedule_name = 'Visit'\nand business = 'Rentals'", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"kpi_tenant_visit_created\""}, "model.houm.kpi_landlord_leads": {"raw_sql": "{{ config(materialized='table') }}\n\nselect \n    deal_id,\n    local_time,\n    country,\n    city,\n    supply_source,\n    supply_relation\nfrom {{ref('proc_tmp_supply_leads')}}\nwhere funnel = '1. Supply'\nand business = '1. Rentals'", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_tmp_supply_leads"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "kpi"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "kpi", "rentals", "kpi_landlord_leads"], "unique_id": "model.houm.kpi_landlord_leads", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "dwh/marts/kpi/rentals/kpi_landlord_leads.sql", "original_file_path": "models/dwh/marts/kpi/rentals/kpi_landlord_leads.sql", "name": "kpi_landlord_leads", "alias": "kpi_landlord_leads", "checksum": {"name": "sha256", "checksum": "3053924b43160fc6633ca681ad03b14940210f9786a432f7a6c105da82a3da64"}, "tags": ["dw", "marts", "kpi"], "refs": [["proc_tmp_supply_leads"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/kpi/rentals/kpi_landlord_leads.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "table", "tags": ["dw", "marts", "kpi"]}, "created_at": 1654784474.621718, "compiled_sql": "\n\nselect \n    deal_id,\n    local_time,\n    country,\n    city,\n    supply_source,\n    supply_relation\nfrom \"houmdw_prod\".\"dbt_processing\".\"proc_tmp_supply_leads\"\nwhere funnel = '1. Supply'\nand business = '1. Rentals'", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"kpi_landlord_leads\""}, "model.houm.kpi_tenant_visit_scheduled": {"raw_sql": "{{ config(materialized='table') }}\n\nselect \n    schedule_id,\n    local_begin_date,\n    country,\n    city,\n    supply_source,\n    supply_relation\nfrom {{ref('proc_tmp_demand_schedules_cleaned')}}\nwhere schedule_name = 'Visit'\nand business = 'Rentals'\nand status = 'Scheduled'", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_tmp_demand_schedules_cleaned"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "kpi"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "kpi", "rentals", "kpi_tenant_visit_scheduled"], "unique_id": "model.houm.kpi_tenant_visit_scheduled", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "dwh/marts/kpi/rentals/kpi_tenant_visit_scheduled.sql", "original_file_path": "models/dwh/marts/kpi/rentals/kpi_tenant_visit_scheduled.sql", "name": "kpi_tenant_visit_scheduled", "alias": "kpi_tenant_visit_scheduled", "checksum": {"name": "sha256", "checksum": "b175fff035b68de2d27677dbecefd4e882dc387a83541af8aa0004ff26917b5e"}, "tags": ["dw", "marts", "kpi"], "refs": [["proc_tmp_demand_schedules_cleaned"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/kpi/rentals/kpi_tenant_visit_scheduled.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "table", "tags": ["dw", "marts", "kpi"]}, "created_at": 1654784474.6235, "compiled_sql": "\n\nselect \n    schedule_id,\n    local_begin_date,\n    country,\n    city,\n    supply_source,\n    supply_relation\nfrom \"houmdw_prod\".\"dbt_processing\".\"proc_tmp_demand_schedules_cleaned\"\nwhere schedule_name = 'Visit'\nand business = 'Rentals'\nand status = 'Scheduled'", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"kpi_tenant_visit_scheduled\""}, "model.houm.kpi_landlord_qualified_leads": {"raw_sql": "{{ config(materialized='table') }}\n\nselect \n    deal_id,\n    local_time,\n    country,\n    city,\n    supply_source,\n    supply_relation\nfrom {{ref('proc_tmp_supply_leads')}}\nwhere funnel = '1. Supply'\nand business = '1. Rentals'\nand lead_qualification::numeric between 3 and 5", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_tmp_supply_leads"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "kpi"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "kpi", "rentals", "kpi_landlord_qualified_leads"], "unique_id": "model.houm.kpi_landlord_qualified_leads", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "dwh/marts/kpi/rentals/kpi_landlord_qualified_leads.sql", "original_file_path": "models/dwh/marts/kpi/rentals/kpi_landlord_qualified_leads.sql", "name": "kpi_landlord_qualified_leads", "alias": "kpi_landlord_qualified_leads", "checksum": {"name": "sha256", "checksum": "1d0aa68015198b6969c667b94df81a6b69bcf734a031470fca3a97c34e1c30cd"}, "tags": ["dw", "marts", "kpi"], "refs": [["proc_tmp_supply_leads"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/kpi/rentals/kpi_landlord_qualified_leads.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "table", "tags": ["dw", "marts", "kpi"]}, "created_at": 1654784474.625432, "compiled_sql": "\n\nselect \n    deal_id,\n    local_time,\n    country,\n    city,\n    supply_source,\n    supply_relation\nfrom \"houmdw_prod\".\"dbt_processing\".\"proc_tmp_supply_leads\"\nwhere funnel = '1. Supply'\nand business = '1. Rentals'\nand lead_qualification::numeric between 3 and 5", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"kpi_landlord_qualified_leads\""}, "model.houm.kpi_seller_photo_created": {"raw_sql": "{{ config(materialized='table') }}\n\nselect \n    schedule_id,\n    local_created_at,\n    country,\n    city,\n    supply_source,\n    supply_relation\nfrom {{ref('proc_tmp_demand_schedules_cleaned')}}\nwhere schedule_name = 'Photo'\nand business = 'Sales'", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_tmp_demand_schedules_cleaned"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "kpi"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "kpi", "sales", "kpi_seller_photo_created"], "unique_id": "model.houm.kpi_seller_photo_created", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "dwh/marts/kpi/sales/kpi_seller_photo_created.sql", "original_file_path": "models/dwh/marts/kpi/sales/kpi_seller_photo_created.sql", "name": "kpi_seller_photo_created", "alias": "kpi_seller_photo_created", "checksum": {"name": "sha256", "checksum": "88e8b5ad6f189f6aa8a6d3172d67dae2587644b6f4ec01f368970384d76463c3"}, "tags": ["dw", "marts", "kpi"], "refs": [["proc_tmp_demand_schedules_cleaned"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/kpi/sales/kpi_seller_photo_created.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "table", "tags": ["dw", "marts", "kpi"]}, "created_at": 1654784474.6271648, "compiled_sql": "\n\nselect \n    schedule_id,\n    local_created_at,\n    country,\n    city,\n    supply_source,\n    supply_relation\nfrom \"houmdw_prod\".\"dbt_processing\".\"proc_tmp_demand_schedules_cleaned\"\nwhere schedule_name = 'Photo'\nand business = 'Sales'", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"kpi_seller_photo_created\""}, "model.houm.kpi_seller_nsl": {"raw_sql": "{{ config(materialized='table') }}\n\nselect\n    property_id,\n    coalesce(local_first_publication_date,first_publication_date),\n    country,\n    City_Houm as city,\n    supply_source,\n    supply_relation\nfrom {{ref('proc_tmp_supply_properties_macrozone')}}\nwhere business like '%Sale'\nand first_publication_date is not null\norder by 2 desc", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_tmp_supply_properties_macrozone"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "kpi"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "kpi", "sales", "kpi_seller_nsl"], "unique_id": "model.houm.kpi_seller_nsl", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "dwh/marts/kpi/sales/kpi_seller_nsl.sql", "original_file_path": "models/dwh/marts/kpi/sales/kpi_seller_nsl.sql", "name": "kpi_seller_nsl", "alias": "kpi_seller_nsl", "checksum": {"name": "sha256", "checksum": "0553f011394010ddbd5ed8d303aa93967047a3192505451c5769a11b1aa946e5"}, "tags": ["dw", "marts", "kpi"], "refs": [["proc_tmp_supply_properties_macrozone"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/kpi/sales/kpi_seller_nsl.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "table", "tags": ["dw", "marts", "kpi"]}, "created_at": 1654784474.6288269, "compiled_sql": "\n\nselect\n    property_id,\n    coalesce(local_first_publication_date,first_publication_date),\n    country,\n    City_Houm as city,\n    supply_source,\n    supply_relation\nfrom \"houmdw_prod\".\"dbt_processing\".\"proc_tmp_supply_properties_macrozone\"\nwhere business like '%Sale'\nand first_publication_date is not null\norder by 2 desc", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"kpi_seller_nsl\""}, "model.houm.kpi_seller_photo_scheduled": {"raw_sql": "{{ config(materialized='table') }}\n\nselect \n    schedule_id,\n    local_begin_date,\n    country,\n    city,\n    supply_source,\n    supply_relation\nfrom {{ref('proc_tmp_demand_schedules_cleaned')}}\nwhere schedule_name = 'Photo'\nand business = 'Sales'\nand status = 'Scheduled'", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_tmp_demand_schedules_cleaned"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "kpi"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "kpi", "sales", "kpi_seller_photo_scheduled"], "unique_id": "model.houm.kpi_seller_photo_scheduled", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "dwh/marts/kpi/sales/kpi_seller_photo_scheduled.sql", "original_file_path": "models/dwh/marts/kpi/sales/kpi_seller_photo_scheduled.sql", "name": "kpi_seller_photo_scheduled", "alias": "kpi_seller_photo_scheduled", "checksum": {"name": "sha256", "checksum": "ff6c40ace42d330eef680e16e8f7cfce61a27f9bfe892b869d35c5933e8c18fe"}, "tags": ["dw", "marts", "kpi"], "refs": [["proc_tmp_demand_schedules_cleaned"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/kpi/sales/kpi_seller_photo_scheduled.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "table", "tags": ["dw", "marts", "kpi"]}, "created_at": 1654784474.6306958, "compiled_sql": "\n\nselect \n    schedule_id,\n    local_begin_date,\n    country,\n    city,\n    supply_source,\n    supply_relation\nfrom \"houmdw_prod\".\"dbt_processing\".\"proc_tmp_demand_schedules_cleaned\"\nwhere schedule_name = 'Photo'\nand business = 'Sales'\nand status = 'Scheduled'", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"kpi_seller_photo_scheduled\""}, "model.houm.kpi_buyer_visit_done": {"raw_sql": "{{ config(materialized='table') }}\n\nselect \n    schedule_id,\n    local_begin_date,\n    country,\n    city,\n    supply_source,\n    supply_relation\nfrom {{ref('proc_tmp_demand_schedules_cleaned')}}\nwhere schedule_name = 'Visit'\nand business = 'Sales'\nand status = 'Done'", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_tmp_demand_schedules_cleaned"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "kpi"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "kpi", "sales", "kpi_buyer_visit_done"], "unique_id": "model.houm.kpi_buyer_visit_done", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "dwh/marts/kpi/sales/kpi_buyer_visit_done.sql", "original_file_path": "models/dwh/marts/kpi/sales/kpi_buyer_visit_done.sql", "name": "kpi_buyer_visit_done", "alias": "kpi_buyer_visit_done", "checksum": {"name": "sha256", "checksum": "59a5446d2a525284cd7ebe69b3d646f3b4f1497db31f3a24ef7c55f8e146bd26"}, "tags": ["dw", "marts", "kpi"], "refs": [["proc_tmp_demand_schedules_cleaned"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/kpi/sales/kpi_buyer_visit_done.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "table", "tags": ["dw", "marts", "kpi"]}, "created_at": 1654784474.632812, "compiled_sql": "\n\nselect \n    schedule_id,\n    local_begin_date,\n    country,\n    city,\n    supply_source,\n    supply_relation\nfrom \"houmdw_prod\".\"dbt_processing\".\"proc_tmp_demand_schedules_cleaned\"\nwhere schedule_name = 'Visit'\nand business = 'Sales'\nand status = 'Done'", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"kpi_buyer_visit_done\""}, "model.houm.kpi_buyer_visit_created": {"raw_sql": "{{ config(materialized='table') }}\n\nselect \n    schedule_id,\n    local_created_at,\n    country,\n    city,\n    supply_source,\n    supply_relation\nfrom {{ref('proc_tmp_demand_schedules_cleaned')}}\nwhere schedule_name = 'Visit'\nand business = 'Sales'", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_tmp_demand_schedules_cleaned"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "kpi"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "kpi", "sales", "kpi_buyer_visit_created"], "unique_id": "model.houm.kpi_buyer_visit_created", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "dwh/marts/kpi/sales/kpi_buyer_visit_created.sql", "original_file_path": "models/dwh/marts/kpi/sales/kpi_buyer_visit_created.sql", "name": "kpi_buyer_visit_created", "alias": "kpi_buyer_visit_created", "checksum": {"name": "sha256", "checksum": "156997cf390f480615a7288028119b38f70e7697d6bbc663e131764f46039a54"}, "tags": ["dw", "marts", "kpi"], "refs": [["proc_tmp_demand_schedules_cleaned"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/kpi/sales/kpi_buyer_visit_created.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "table", "tags": ["dw", "marts", "kpi"]}, "created_at": 1654784474.634722, "compiled_sql": "\n\nselect \n    schedule_id,\n    local_created_at,\n    country,\n    city,\n    supply_source,\n    supply_relation\nfrom \"houmdw_prod\".\"dbt_processing\".\"proc_tmp_demand_schedules_cleaned\"\nwhere schedule_name = 'Visit'\nand business = 'Sales'", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"kpi_buyer_visit_created\""}, "model.houm.kpi_seller_leads": {"raw_sql": "{{ config(materialized='table') }}\n\nselect \n    deal_id,\n    local_time,\n    country,\n    city,\n    supply_source,\n    supply_relation\nfrom {{ref('proc_tmp_supply_leads')}}\nwhere funnel = '1. Supply'\nand business = '2. Sales'", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_tmp_supply_leads"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "kpi"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "kpi", "sales", "kpi_seller_leads"], "unique_id": "model.houm.kpi_seller_leads", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "dwh/marts/kpi/sales/kpi_seller_leads.sql", "original_file_path": "models/dwh/marts/kpi/sales/kpi_seller_leads.sql", "name": "kpi_seller_leads", "alias": "kpi_seller_leads", "checksum": {"name": "sha256", "checksum": "7deae69ec14637d014234208e3439340e317abcc0acd33d248ec893fd5b6524e"}, "tags": ["dw", "marts", "kpi"], "refs": [["proc_tmp_supply_leads"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/kpi/sales/kpi_seller_leads.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "table", "tags": ["dw", "marts", "kpi"]}, "created_at": 1654784474.636621, "compiled_sql": "\n\nselect \n    deal_id,\n    local_time,\n    country,\n    city,\n    supply_source,\n    supply_relation\nfrom \"houmdw_prod\".\"dbt_processing\".\"proc_tmp_supply_leads\"\nwhere funnel = '1. Supply'\nand business = '2. Sales'", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"kpi_seller_leads\""}, "model.houm.kpi_seller_photo_done": {"raw_sql": "{{ config(materialized='table') }}\n\nselect \n    schedule_id,\n    local_begin_date,\n    country,\n    city,\n    supply_source,\n    supply_relation\nfrom {{ref('proc_tmp_demand_schedules_cleaned')}}\nwhere schedule_name = 'Photo'\nand business = 'Sales'\nand status = 'Done'", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_tmp_demand_schedules_cleaned"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "kpi"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "kpi", "sales", "kpi_seller_photo_done"], "unique_id": "model.houm.kpi_seller_photo_done", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "dwh/marts/kpi/sales/kpi_seller_photo_done.sql", "original_file_path": "models/dwh/marts/kpi/sales/kpi_seller_photo_done.sql", "name": "kpi_seller_photo_done", "alias": "kpi_seller_photo_done", "checksum": {"name": "sha256", "checksum": "22422bae33909bff3819ee4520131eb90a72e4a98c885bdb03bd0a92d3f106e5"}, "tags": ["dw", "marts", "kpi"], "refs": [["proc_tmp_demand_schedules_cleaned"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/kpi/sales/kpi_seller_photo_done.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "table", "tags": ["dw", "marts", "kpi"]}, "created_at": 1654784474.6383302, "compiled_sql": "\n\nselect \n    schedule_id,\n    local_begin_date,\n    country,\n    city,\n    supply_source,\n    supply_relation\nfrom \"houmdw_prod\".\"dbt_processing\".\"proc_tmp_demand_schedules_cleaned\"\nwhere schedule_name = 'Photo'\nand business = 'Sales'\nand status = 'Done'", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"kpi_seller_photo_done\""}, "model.houm.kpi_buyer_leads": {"raw_sql": "{{ config(materialized='table') }}\n\nselect \n    deal_id,\n    local_time,\n    country,\n    city,\n    supply_source,\n    supply_relation\nfrom {{ref('proc_tmp_supply_leads')}}\nwhere funnel = '2. Demand'\nand business = '2. Sales'", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_tmp_supply_leads"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "kpi"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "kpi", "sales", "kpi_buyer_leads"], "unique_id": "model.houm.kpi_buyer_leads", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "dwh/marts/kpi/sales/kpi_buyer_leads.sql", "original_file_path": "models/dwh/marts/kpi/sales/kpi_buyer_leads.sql", "name": "kpi_buyer_leads", "alias": "kpi_buyer_leads", "checksum": {"name": "sha256", "checksum": "3a74cb4d06ec0163563f9e57af6eeba8c362f1ca41aca43d5d95a9476d4eea25"}, "tags": ["dw", "marts", "kpi"], "refs": [["proc_tmp_supply_leads"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/kpi/sales/kpi_buyer_leads.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "table", "tags": ["dw", "marts", "kpi"]}, "created_at": 1654784474.640212, "compiled_sql": "\n\nselect \n    deal_id,\n    local_time,\n    country,\n    city,\n    supply_source,\n    supply_relation\nfrom \"houmdw_prod\".\"dbt_processing\".\"proc_tmp_supply_leads\"\nwhere funnel = '2. Demand'\nand business = '2. Sales'", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"kpi_buyer_leads\""}, "model.houm.kpi_seller_qualified_leads": {"raw_sql": "{{ config(materialized='table') }}\n\nselect \n    deal_id,\n    local_time,\n    country,\n    city,\n    supply_source,\n    supply_relation\nfrom {{ref('proc_tmp_supply_leads')}}\nwhere funnel = '1. Supply'\nand business = '2. Sales'\nand lead_qualification::numeric between 3 and 5", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_tmp_supply_leads"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "kpi"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "kpi", "sales", "kpi_seller_qualified_leads"], "unique_id": "model.houm.kpi_seller_qualified_leads", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "dwh/marts/kpi/sales/kpi_seller_qualified_leads.sql", "original_file_path": "models/dwh/marts/kpi/sales/kpi_seller_qualified_leads.sql", "name": "kpi_seller_qualified_leads", "alias": "kpi_seller_qualified_leads", "checksum": {"name": "sha256", "checksum": "24feaa586b85bb42524ec0b29cda8f2de51c1d7fa48cb0cda3e2c8b262599eb0"}, "tags": ["dw", "marts", "kpi"], "refs": [["proc_tmp_supply_leads"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/kpi/sales/kpi_seller_qualified_leads.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "table", "tags": ["dw", "marts", "kpi"]}, "created_at": 1654784474.6420639, "compiled_sql": "\n\nselect \n    deal_id,\n    local_time,\n    country,\n    city,\n    supply_source,\n    supply_relation\nfrom \"houmdw_prod\".\"dbt_processing\".\"proc_tmp_supply_leads\"\nwhere funnel = '1. Supply'\nand business = '2. Sales'\nand lead_qualification::numeric between 3 and 5", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"kpi_seller_qualified_leads\""}, "model.houm.kpi_buyer_visit_scheduled": {"raw_sql": "{{ config(materialized='table') }}\n\nselect \n    schedule_id,\n    local_begin_date,\n    country,\n    city,\n    supply_source,\n    supply_relation\nfrom {{ref('proc_tmp_demand_schedules_cleaned')}}\nwhere schedule_name = 'Visit'\nand business = 'Sales'\nand status = 'Scheduled'", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_tmp_demand_schedules_cleaned"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "kpi"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "kpi", "sales", "kpi_buyer_visit_scheduled"], "unique_id": "model.houm.kpi_buyer_visit_scheduled", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "dwh/marts/kpi/sales/kpi_buyer_visit_scheduled.sql", "original_file_path": "models/dwh/marts/kpi/sales/kpi_buyer_visit_scheduled.sql", "name": "kpi_buyer_visit_scheduled", "alias": "kpi_buyer_visit_scheduled", "checksum": {"name": "sha256", "checksum": "12b2288f1922d5e568579c0e8115048da0eed1129a48ab37184c65441c9422f3"}, "tags": ["dw", "marts", "kpi"], "refs": [["proc_tmp_demand_schedules_cleaned"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/kpi/sales/kpi_buyer_visit_scheduled.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "table", "tags": ["dw", "marts", "kpi"]}, "created_at": 1654784474.643806, "compiled_sql": "\n\nselect \n    schedule_id,\n    local_begin_date,\n    country,\n    city,\n    supply_source,\n    supply_relation\nfrom \"houmdw_prod\".\"dbt_processing\".\"proc_tmp_demand_schedules_cleaned\"\nwhere schedule_name = 'Visit'\nand business = 'Sales'\nand status = 'Scheduled'", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"kpi_buyer_visit_scheduled\""}, "model.houm.kpi_buyer_qualified_leads": {"raw_sql": "{{ config(materialized='table') }}\n\nselect \n    deal_id,\n    local_time,\n    country,\n    city,\n    supply_source,\n    supply_relation\nfrom {{ref('proc_tmp_supply_leads')}}\nwhere funnel = '2. Demand'\nand business = '2. Sales'\nand lead_qualification::numeric between 3 and 6", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_tmp_supply_leads"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "kpi"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "kpi", "sales", "kpi_buyer_qualified_leads"], "unique_id": "model.houm.kpi_buyer_qualified_leads", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "dwh/marts/kpi/sales/kpi_buyer_qualified_leads.sql", "original_file_path": "models/dwh/marts/kpi/sales/kpi_buyer_qualified_leads.sql", "name": "kpi_buyer_qualified_leads", "alias": "kpi_buyer_qualified_leads", "checksum": {"name": "sha256", "checksum": "aaa6114a815a2206141e06897dfa8224c0ec55fad9b6420bec99276671f4a115"}, "tags": ["dw", "marts", "kpi"], "refs": [["proc_tmp_supply_leads"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/kpi/sales/kpi_buyer_qualified_leads.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "table", "tags": ["dw", "marts", "kpi"]}, "created_at": 1654784474.645639, "compiled_sql": "\n\nselect \n    deal_id,\n    local_time,\n    country,\n    city,\n    supply_source,\n    supply_relation\nfrom \"houmdw_prod\".\"dbt_processing\".\"proc_tmp_supply_leads\"\nwhere funnel = '2. Demand'\nand business = '2. Sales'\nand lead_qualification::numeric between 3 and 6", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"kpi_buyer_qualified_leads\""}, "model.houm.rental_tenant_metric_portal_leads_interactions": {"raw_sql": "{{ config(materialized='table') }}\n\nWITH metric as (\nSELECT * FROM {{ ref('rental_tenant_metric_details_leads_interactions') }}\n)\nSELECT \n\torden  \n\t, metric \t\n\t, geo_id\n\t, count(DISTINCT  CASE WHEN yesterday = 1 THEN  activity_id  END ) yesterday \n\t, count(DISTINCT  CASE WHEN daybeforeyesterday = 1 THEN  activity_id  END ) daybeforeyesterday \n\t, count(DISTINCT  CASE WHEN LastWeek = 1 THEN  activity_id  END ) LastWeek \n\t, count(DISTINCT  CASE WHEN PastLastWeek = 1 THEN  activity_id  END ) PastLastWeek \n\t, count(DISTINCT  CASE WHEN ThisMonthtoday = 1 THEN  activity_id  END ) ThisMonthtoday \n\t, count(DISTINCT  CASE WHEN LastMonthtoday = 1 THEN  activity_id  END ) LastMonthtoday \n\t, count(DISTINCT  CASE WHEN LastMonth = 1 THEN  activity_id  END ) LastMonth \n\t, count(DISTINCT  CASE WHEN LasttwoMonth = 1 THEN  activity_id  END ) LasttwoMonth \n\t, count(DISTINCT  CASE WHEN LastthreeMonth = 1 THEN  activity_id  END ) LastthreeMonth \nFROM metric \nGROUP BY 1,2,3", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.rental_tenant_metric_details_leads_interactions"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "demand"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "demand", "rental_tenant_metric_portal_leads_interactions"], "unique_id": "model.houm.rental_tenant_metric_portal_leads_interactions", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "dwh/marts/demand/rental_tenant_metric_portal_leads_interactions.sql", "original_file_path": "models/dwh/marts/demand/rental_tenant_metric_portal_leads_interactions.sql", "name": "rental_tenant_metric_portal_leads_interactions", "alias": "rental_tenant_metric_portal_leads_interactions", "checksum": {"name": "sha256", "checksum": "52c7473cb1abab209166c2df95372349c317add294a81aa137888bf016c2c1d2"}, "tags": ["dw", "marts", "demand"], "refs": [["rental_tenant_metric_details_leads_interactions"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/demand/rental_tenant_metric_portal_leads_interactions.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "table", "tags": ["dw", "marts", "demand"]}, "created_at": 1654784474.647409, "compiled_sql": "\n\nWITH metric as (\nSELECT * FROM \"houmdw_prod\".\"dbt_facts\".\"rental_tenant_metric_details_leads_interactions\"\n)\nSELECT \n\torden  \n\t, metric \t\n\t, geo_id\n\t, count(DISTINCT  CASE WHEN yesterday = 1 THEN  activity_id  END ) yesterday \n\t, count(DISTINCT  CASE WHEN daybeforeyesterday = 1 THEN  activity_id  END ) daybeforeyesterday \n\t, count(DISTINCT  CASE WHEN LastWeek = 1 THEN  activity_id  END ) LastWeek \n\t, count(DISTINCT  CASE WHEN PastLastWeek = 1 THEN  activity_id  END ) PastLastWeek \n\t, count(DISTINCT  CASE WHEN ThisMonthtoday = 1 THEN  activity_id  END ) ThisMonthtoday \n\t, count(DISTINCT  CASE WHEN LastMonthtoday = 1 THEN  activity_id  END ) LastMonthtoday \n\t, count(DISTINCT  CASE WHEN LastMonth = 1 THEN  activity_id  END ) LastMonth \n\t, count(DISTINCT  CASE WHEN LasttwoMonth = 1 THEN  activity_id  END ) LasttwoMonth \n\t, count(DISTINCT  CASE WHEN LastthreeMonth = 1 THEN  activity_id  END ) LastthreeMonth \nFROM metric \nGROUP BY 1,2,3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"rental_tenant_metric_portal_leads_interactions\""}, "model.houm.sales_buyer_metrics_leads_sales_qualified_date": {"raw_sql": "{{ config(materialized='table') }}\n\nWITH metric  as (\nSELECT * FROM {{ ref('sales_buyer_metrics_details_leads_sales_qualified_date') }}\n)\nSELECT \n\torden  \n\t, metric \t\n\t, geo_id\n\t, count(DISTINCT CASE WHEN yesterday = 1 THEN  email  END ) yesterday \n\t, count(DISTINCT CASE WHEN daybeforeyesterday = 1 THEN  email  END ) daybeforeyesterday\n\t, count(DISTINCT CASE WHEN LastWeek = 1 THEN  email  END ) LastWeek \n\t, count(DISTINCT CASE WHEN PastLastWeek = 1 THEN  email  END ) PastLastWeek \n\t, count(DISTINCT CASE WHEN ThisMonthtoday = 1 THEN  email  END ) ThisMonthtoday \n\t, count(DISTINCT CASE WHEN LastMonthtoday = 1 THEN  email  END ) LastMonthtoday \n\t, count(DISTINCT  CASE WHEN LastMonth = 1 THEN  email  END ) LastMonth \n\t, count(DISTINCT  CASE WHEN LasttwoMonth = 1 THEN  email  END ) LasttwoMonth \n\t, count(DISTINCT  CASE WHEN LastthreeMonth = 1 THEN  email  END ) LastthreeMonth \nFROM metric \nGROUP BY 1,2,3", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.sales_buyer_metrics_details_leads_sales_qualified_date"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "demand"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "demand", "sales_buyer_metrics_leads_sales_qualified_date"], "unique_id": "model.houm.sales_buyer_metrics_leads_sales_qualified_date", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "dwh/marts/demand/sales_buyer_metrics_leads_sales_qualified_date.sql", "original_file_path": "models/dwh/marts/demand/sales_buyer_metrics_leads_sales_qualified_date.sql", "name": "sales_buyer_metrics_leads_sales_qualified_date", "alias": "sales_buyer_metrics_leads_sales_qualified_date", "checksum": {"name": "sha256", "checksum": "f9c0094d3b23521e78190f35fa0b2e1d316c73612413acf9c3a858c2e041368e"}, "tags": ["dw", "marts", "demand"], "refs": [["sales_buyer_metrics_details_leads_sales_qualified_date"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/demand/sales_buyer_metrics_leads_sales_qualified_date.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "table", "tags": ["dw", "marts", "demand"]}, "created_at": 1654784474.649139, "compiled_sql": "\n\nWITH metric  as (\nSELECT * FROM \"houmdw_prod\".\"dbt_facts\".\"sales_buyer_metrics_details_leads_sales_qualified_date\"\n)\nSELECT \n\torden  \n\t, metric \t\n\t, geo_id\n\t, count(DISTINCT CASE WHEN yesterday = 1 THEN  email  END ) yesterday \n\t, count(DISTINCT CASE WHEN daybeforeyesterday = 1 THEN  email  END ) daybeforeyesterday\n\t, count(DISTINCT CASE WHEN LastWeek = 1 THEN  email  END ) LastWeek \n\t, count(DISTINCT CASE WHEN PastLastWeek = 1 THEN  email  END ) PastLastWeek \n\t, count(DISTINCT CASE WHEN ThisMonthtoday = 1 THEN  email  END ) ThisMonthtoday \n\t, count(DISTINCT CASE WHEN LastMonthtoday = 1 THEN  email  END ) LastMonthtoday \n\t, count(DISTINCT  CASE WHEN LastMonth = 1 THEN  email  END ) LastMonth \n\t, count(DISTINCT  CASE WHEN LasttwoMonth = 1 THEN  email  END ) LasttwoMonth \n\t, count(DISTINCT  CASE WHEN LastthreeMonth = 1 THEN  email  END ) LastthreeMonth \nFROM metric \nGROUP BY 1,2,3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"sales_buyer_metrics_leads_sales_qualified_date\""}, "model.houm.rental_tenant_metric_schedules_created": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH metric  as (\r\nSELECT * FROM {{ ref('rental_tenant_metric_details_schedules_created') }}\r\n)\r\nSELECT \r\n\torden  \r\n\t, metric \t\r\n\t, geo_id\r\n\t, count(DISTINCT  CASE WHEN  yesterday = 1 THEN  schedule_id  END ) yesterday \r\n\t, count(DISTINCT  CASE WHEN  daybeforeyesterday = 1 THEN  schedule_id  END ) daybeforeyesterday \r\n\t, count(DISTINCT  CASE WHEN  LastWeek = 1 THEN  schedule_id  END ) LastWeek \r\n\t, count(DISTINCT  CASE WHEN  PastLastWeek = 1 THEN  schedule_id  END ) PastLastWeek \r\n\t, count(DISTINCT  CASE WHEN  ThisMonthtoday = 1 THEN  schedule_id  END ) ThisMonthtoday \r\n\t, count(DISTINCT  CASE WHEN  LastMonthtoday = 1 THEN  schedule_id  END ) LastMonthtoday \r\n\t, count(DISTINCT  CASE WHEN LastMonth = 1 THEN  schedule_id  END ) LastMonth \r\n\t, count(DISTINCT  CASE WHEN LasttwoMonth = 1 THEN  schedule_id  END ) LasttwoMonth \r\n\t, count(DISTINCT  CASE WHEN LastthreeMonth = 1 THEN  schedule_id  END ) LastthreeMonth \r\nFROM metric \r\nGROUP BY 1,2,3", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.rental_tenant_metric_details_schedules_created"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "demand"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "demand", "rental_tenant_metric_schedules_created"], "unique_id": "model.houm.rental_tenant_metric_schedules_created", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "dwh/marts/demand/rental_tenant_metric_schedules_created.sql", "original_file_path": "models/dwh/marts/demand/rental_tenant_metric_schedules_created.sql", "name": "rental_tenant_metric_schedules_created", "alias": "rental_tenant_metric_schedules_created", "checksum": {"name": "sha256", "checksum": "625fcbf7e83444dc051d7d6221b5be39d2619993ddefa72a4547d2290e159a1b"}, "tags": ["dw", "marts", "demand"], "refs": [["rental_tenant_metric_details_schedules_created"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/demand/rental_tenant_metric_schedules_created.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "table", "tags": ["dw", "marts", "demand"]}, "created_at": 1654784474.651016, "compiled_sql": "\n\nWITH metric  as (\nSELECT * FROM \"houmdw_prod\".\"dbt_facts\".\"rental_tenant_metric_details_schedules_created\"\n)\nSELECT \n\torden  \n\t, metric \t\n\t, geo_id\n\t, count(DISTINCT  CASE WHEN  yesterday = 1 THEN  schedule_id  END ) yesterday \n\t, count(DISTINCT  CASE WHEN  daybeforeyesterday = 1 THEN  schedule_id  END ) daybeforeyesterday \n\t, count(DISTINCT  CASE WHEN  LastWeek = 1 THEN  schedule_id  END ) LastWeek \n\t, count(DISTINCT  CASE WHEN  PastLastWeek = 1 THEN  schedule_id  END ) PastLastWeek \n\t, count(DISTINCT  CASE WHEN  ThisMonthtoday = 1 THEN  schedule_id  END ) ThisMonthtoday \n\t, count(DISTINCT  CASE WHEN  LastMonthtoday = 1 THEN  schedule_id  END ) LastMonthtoday \n\t, count(DISTINCT  CASE WHEN LastMonth = 1 THEN  schedule_id  END ) LastMonth \n\t, count(DISTINCT  CASE WHEN LasttwoMonth = 1 THEN  schedule_id  END ) LasttwoMonth \n\t, count(DISTINCT  CASE WHEN LastthreeMonth = 1 THEN  schedule_id  END ) LastthreeMonth \nFROM metric \nGROUP BY 1,2,3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"rental_tenant_metric_schedules_created\""}, "model.houm.sales_buyer_metric_schedules_created": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH metric as (\r\nSELECT * FROM {{ ref('sales_buyer_metric_details_schedules_created') }}\r\n)\r\nSELECT \r\n\torden \r\n\t, metric \t\r\n\t, geo_id\r\n\t, count(DISTINCT  CASE WHEN yesterday = 1 THEN  schedule_id  END ) yesterday \r\n\t, count(DISTINCT  CASE WHEN daybeforeyesterday = 1 THEN  schedule_id  END ) daybeforeyesterday \r\n\t, count(DISTINCT  CASE WHEN LastWeek = 1 THEN  schedule_id  END ) LastWeek \r\n\t, count(DISTINCT  CASE WHEN PastLastWeek = 1 THEN  schedule_id  END ) PastLastWeek \r\n\t, count(DISTINCT  CASE WHEN ThisMonthtoday = 1 THEN  schedule_id  END ) ThisMonthtoday \r\n\t, count(DISTINCT  CASE WHEN LastMonthtoday = 1 THEN  schedule_id  END ) LastMonthtoday \r\n\t, count(DISTINCT  CASE WHEN LastMonth = 1 THEN  schedule_id  END ) LastMonth \r\n\t, count(DISTINCT  CASE WHEN LasttwoMonth = 1 THEN  schedule_id  END ) LasttwoMonth \r\n\t, count(DISTINCT  CASE WHEN LastthreeMonth = 1 THEN  schedule_id  END ) LastthreeMonth \r\nFROM metric \r\nGROUP BY 1,2,3", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.sales_buyer_metric_details_schedules_created"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "demand"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "demand", "sales_buyer_metric_schedules_created"], "unique_id": "model.houm.sales_buyer_metric_schedules_created", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "dwh/marts/demand/sales_buyer_metric_schedules_created.sql", "original_file_path": "models/dwh/marts/demand/sales_buyer_metric_schedules_created.sql", "name": "sales_buyer_metric_schedules_created", "alias": "sales_buyer_metric_schedules_created", "checksum": {"name": "sha256", "checksum": "ad4e7c746c0faba6df6c40afc1e717a6b2830ed6781b28bb121c95e9a340d2d3"}, "tags": ["dw", "marts", "demand"], "refs": [["sales_buyer_metric_details_schedules_created"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/demand/sales_buyer_metric_schedules_created.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "table", "tags": ["dw", "marts", "demand"]}, "created_at": 1654784474.6531, "compiled_sql": "\n\nWITH metric as (\nSELECT * FROM \"houmdw_prod\".\"dbt_facts\".\"sales_buyer_metric_details_schedules_created\"\n)\nSELECT \n\torden \n\t, metric \t\n\t, geo_id\n\t, count(DISTINCT  CASE WHEN yesterday = 1 THEN  schedule_id  END ) yesterday \n\t, count(DISTINCT  CASE WHEN daybeforeyesterday = 1 THEN  schedule_id  END ) daybeforeyesterday \n\t, count(DISTINCT  CASE WHEN LastWeek = 1 THEN  schedule_id  END ) LastWeek \n\t, count(DISTINCT  CASE WHEN PastLastWeek = 1 THEN  schedule_id  END ) PastLastWeek \n\t, count(DISTINCT  CASE WHEN ThisMonthtoday = 1 THEN  schedule_id  END ) ThisMonthtoday \n\t, count(DISTINCT  CASE WHEN LastMonthtoday = 1 THEN  schedule_id  END ) LastMonthtoday \n\t, count(DISTINCT  CASE WHEN LastMonth = 1 THEN  schedule_id  END ) LastMonth \n\t, count(DISTINCT  CASE WHEN LasttwoMonth = 1 THEN  schedule_id  END ) LasttwoMonth \n\t, count(DISTINCT  CASE WHEN LastthreeMonth = 1 THEN  schedule_id  END ) LastthreeMonth \nFROM metric \nGROUP BY 1,2,3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"sales_buyer_metric_schedules_created\""}, "model.houm.sales_buyer_metric_schedules_done": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH metric as (\r\nSELECT * FROM {{ ref('sales_buyer_metric_details_schedules_done') }}\r\n)\r\nSELECT \r\n\torden \r\n\t, metric \t\r\n\t, geo_id\r\n\t, count(DISTINCT  CASE WHEN yesterday = 1 THEN  schedule_id  END ) yesterday \r\n\t, count(DISTINCT  CASE WHEN daybeforeyesterday = 1 THEN  schedule_id  END ) daybeforeyesterday \r\n\t, count(DISTINCT  CASE WHEN LastWeek = 1 THEN  schedule_id  END ) LastWeek \r\n\t, count(DISTINCT  CASE WHEN PastLastWeek = 1 THEN  schedule_id  END ) PastLastWeek \r\n\t, count(DISTINCT  CASE WHEN ThisMonthtoday = 1 THEN  schedule_id  END ) ThisMonthtoday \r\n\t, count(DISTINCT  CASE WHEN LastMonthtoday = 1 THEN  schedule_id  END ) LastMonthtoday \r\n\t, count(DISTINCT  CASE WHEN LastMonth = 1 THEN  schedule_id  END ) LastMonth \r\n\t, count(DISTINCT  CASE WHEN LasttwoMonth = 1 THEN  schedule_id  END ) LasttwoMonth \r\n\t, count(DISTINCT  CASE WHEN LastthreeMonth = 1 THEN  schedule_id  END ) LastthreeMonth \r\nFROM metric \r\nGROUP BY 1,2,3", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.sales_buyer_metric_details_schedules_done"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "demand"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "demand", "sales_buyer_metric_schedules_done"], "unique_id": "model.houm.sales_buyer_metric_schedules_done", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "dwh/marts/demand/sales_buyer_metric_schedules_done.sql", "original_file_path": "models/dwh/marts/demand/sales_buyer_metric_schedules_done.sql", "name": "sales_buyer_metric_schedules_done", "alias": "sales_buyer_metric_schedules_done", "checksum": {"name": "sha256", "checksum": "b45b87b98b39acf19a1bc71b470e4ab3d4713c07d8bd161440d16b4a876e8361"}, "tags": ["dw", "marts", "demand"], "refs": [["sales_buyer_metric_details_schedules_done"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/demand/sales_buyer_metric_schedules_done.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "table", "tags": ["dw", "marts", "demand"]}, "created_at": 1654784474.6548312, "compiled_sql": "\n\nWITH metric as (\nSELECT * FROM \"houmdw_prod\".\"dbt_facts\".\"sales_buyer_metric_details_schedules_done\"\n)\nSELECT \n\torden \n\t, metric \t\n\t, geo_id\n\t, count(DISTINCT  CASE WHEN yesterday = 1 THEN  schedule_id  END ) yesterday \n\t, count(DISTINCT  CASE WHEN daybeforeyesterday = 1 THEN  schedule_id  END ) daybeforeyesterday \n\t, count(DISTINCT  CASE WHEN LastWeek = 1 THEN  schedule_id  END ) LastWeek \n\t, count(DISTINCT  CASE WHEN PastLastWeek = 1 THEN  schedule_id  END ) PastLastWeek \n\t, count(DISTINCT  CASE WHEN ThisMonthtoday = 1 THEN  schedule_id  END ) ThisMonthtoday \n\t, count(DISTINCT  CASE WHEN LastMonthtoday = 1 THEN  schedule_id  END ) LastMonthtoday \n\t, count(DISTINCT  CASE WHEN LastMonth = 1 THEN  schedule_id  END ) LastMonth \n\t, count(DISTINCT  CASE WHEN LasttwoMonth = 1 THEN  schedule_id  END ) LasttwoMonth \n\t, count(DISTINCT  CASE WHEN LastthreeMonth = 1 THEN  schedule_id  END ) LastthreeMonth \nFROM metric \nGROUP BY 1,2,3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"sales_buyer_metric_schedules_done\""}, "model.houm.rental_tenant_metric_portal_leads": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH metric as (\r\nSELECT * FROM {{ ref('rental_tenant_metric_details_leads') }}\r\n)\t\t\t\t\t  \r\nSELECT \r\n\torden  \r\n\t, metric \t\r\n\t, geo_id\r\n\t, count(DISTINCT  CASE WHEN  yesterday = 1 THEN  lead_id  END ) yesterday \r\n\t, count(DISTINCT  CASE WHEN  daybeforeyesterday = 1 THEN  lead_id  END ) daybeforeyesterday \r\n\t, count(DISTINCT  CASE WHEN  LastWeek = 1 THEN  lead_id  END ) LastWeek \r\n\t, count(DISTINCT  CASE WHEN  PastLastWeek = 1 THEN  lead_id  END ) PastLastWeek \r\n\t, count(DISTINCT  CASE WHEN  ThisMonthtoday = 1 THEN  lead_id  END ) ThisMonthtoday \r\n\t, count(DISTINCT  CASE WHEN  LastMonthtoday = 1 THEN  lead_id  END ) LastMonthtoday \r\n\t, count(DISTINCT  CASE WHEN LastMonth = 1 THEN  lead_id  END ) LastMonth \r\n\t, count(DISTINCT  CASE WHEN LasttwoMonth = 1 THEN  lead_id  END ) LasttwoMonth \r\n\t, count(DISTINCT  CASE WHEN LastthreeMonth = 1 THEN  lead_id  END ) LastthreeMonth \r\nFROM metric \r\nGROUP BY 1,2,3", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.rental_tenant_metric_details_leads"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "demand"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "demand", "rental_tenant_metric_portal_leads"], "unique_id": "model.houm.rental_tenant_metric_portal_leads", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "dwh/marts/demand/rental_tenant_metric_portal_leads.sql", "original_file_path": "models/dwh/marts/demand/rental_tenant_metric_portal_leads.sql", "name": "rental_tenant_metric_portal_leads", "alias": "rental_tenant_metric_portal_leads", "checksum": {"name": "sha256", "checksum": "f6bd58aa0d23a918cb75500c59fa78bbdd414be3cbd407f5b8e2621e272adb26"}, "tags": ["dw", "marts", "demand"], "refs": [["rental_tenant_metric_details_leads"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/demand/rental_tenant_metric_portal_leads.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "table", "tags": ["dw", "marts", "demand"]}, "created_at": 1654784474.6565928, "compiled_sql": "\n\nWITH metric as (\nSELECT * FROM \"houmdw_prod\".\"dbt_facts\".\"rental_tenant_metric_details_leads\"\n)\t\t\t\t\t  \nSELECT \n\torden  \n\t, metric \t\n\t, geo_id\n\t, count(DISTINCT  CASE WHEN  yesterday = 1 THEN  lead_id  END ) yesterday \n\t, count(DISTINCT  CASE WHEN  daybeforeyesterday = 1 THEN  lead_id  END ) daybeforeyesterday \n\t, count(DISTINCT  CASE WHEN  LastWeek = 1 THEN  lead_id  END ) LastWeek \n\t, count(DISTINCT  CASE WHEN  PastLastWeek = 1 THEN  lead_id  END ) PastLastWeek \n\t, count(DISTINCT  CASE WHEN  ThisMonthtoday = 1 THEN  lead_id  END ) ThisMonthtoday \n\t, count(DISTINCT  CASE WHEN  LastMonthtoday = 1 THEN  lead_id  END ) LastMonthtoday \n\t, count(DISTINCT  CASE WHEN LastMonth = 1 THEN  lead_id  END ) LastMonth \n\t, count(DISTINCT  CASE WHEN LasttwoMonth = 1 THEN  lead_id  END ) LasttwoMonth \n\t, count(DISTINCT  CASE WHEN LastthreeMonth = 1 THEN  lead_id  END ) LastthreeMonth \nFROM metric \nGROUP BY 1,2,3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"rental_tenant_metric_portal_leads\""}, "model.houm.sales_buyer_metrics_leads": {"raw_sql": "{{ config(materialized='table') }}\n\nWITH metric  as (\nSELECT * FROM {{ ref('sales_buyer_metrics_details_leads') }}\n)\nSELECT \n\torden  \n\t, metric \t\n\t, geo_id\n\t, count(DISTINCT  CASE WHEN yesterday = 1 THEN  email  END ) yesterday \n\t, count(DISTINCT  CASE WHEN daybeforeyesterday = 1 THEN  email  END ) daybeforeyesterday\n\t, count(DISTINCT  CASE WHEN LastWeek = 1 THEN  email  END ) LastWeek \n\t, count(DISTINCT  CASE WHEN PastLastWeek = 1 THEN  email  END ) PastLastWeek \n\t, count(DISTINCT  CASE WHEN ThisMonthtoday = 1 THEN  email  END ) ThisMonthtoday \n\t, count(DISTINCT  CASE WHEN LastMonthtoday = 1 THEN  email  END ) LastMonthtoday\n\t, count(DISTINCT  CASE WHEN LastMonth = 1 THEN  email  END ) LastMonth \n\t, count(DISTINCT  CASE WHEN LasttwoMonth = 1 THEN  email  END ) LasttwoMonth \n\t, count(DISTINCT  CASE WHEN LastthreeMonth = 1 THEN  email  END ) LastthreeMonth  \nFROM metric \nGROUP BY 1,2,3", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.sales_buyer_metrics_details_leads"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "demand"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "demand", "sales_buyer_metrics_leads"], "unique_id": "model.houm.sales_buyer_metrics_leads", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "dwh/marts/demand/sales_buyer_metrics_leads.sql", "original_file_path": "models/dwh/marts/demand/sales_buyer_metrics_leads.sql", "name": "sales_buyer_metrics_leads", "alias": "sales_buyer_metrics_leads", "checksum": {"name": "sha256", "checksum": "8ce7b94ded86238139bc3afebadf4289a94e731708cfaf1f2f00956d42d19129"}, "tags": ["dw", "marts", "demand"], "refs": [["sales_buyer_metrics_details_leads"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/demand/sales_buyer_metrics_leads.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "table", "tags": ["dw", "marts", "demand"]}, "created_at": 1654784474.658327, "compiled_sql": "\n\nWITH metric  as (\nSELECT * FROM \"houmdw_prod\".\"dbt_facts\".\"sales_buyer_metrics_details_leads\"\n)\nSELECT \n\torden  \n\t, metric \t\n\t, geo_id\n\t, count(DISTINCT  CASE WHEN yesterday = 1 THEN  email  END ) yesterday \n\t, count(DISTINCT  CASE WHEN daybeforeyesterday = 1 THEN  email  END ) daybeforeyesterday\n\t, count(DISTINCT  CASE WHEN LastWeek = 1 THEN  email  END ) LastWeek \n\t, count(DISTINCT  CASE WHEN PastLastWeek = 1 THEN  email  END ) PastLastWeek \n\t, count(DISTINCT  CASE WHEN ThisMonthtoday = 1 THEN  email  END ) ThisMonthtoday \n\t, count(DISTINCT  CASE WHEN LastMonthtoday = 1 THEN  email  END ) LastMonthtoday\n\t, count(DISTINCT  CASE WHEN LastMonth = 1 THEN  email  END ) LastMonth \n\t, count(DISTINCT  CASE WHEN LasttwoMonth = 1 THEN  email  END ) LasttwoMonth \n\t, count(DISTINCT  CASE WHEN LastthreeMonth = 1 THEN  email  END ) LastthreeMonth  \nFROM metric \nGROUP BY 1,2,3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"sales_buyer_metrics_leads\""}, "model.houm.rental_tenant_metric_reservations_refunded": {"raw_sql": "{{ config(materialized='table') }}\n\nWITH metric as (\nSELECT * FROM {{ ref('rental_tenant_metric_details_reservations_refunded') }}\n)\nSELECT \n\torden \n\t, metric \t\n\t, geo_id\n\t, count(DISTINCT  CASE WHEN yesterday = 1 THEN  reservation_id  END ) yesterday \n\t, count(DISTINCT  CASE WHEN daybeforeyesterday = 1 THEN  reservation_id  END ) daybeforeyesterday \n\t, count(DISTINCT  CASE WHEN LastWeek = 1 THEN  reservation_id  END ) LastWeek \n\t, count(DISTINCT  CASE WHEN PastLastWeek = 1 THEN  reservation_id  END ) PastLastWeek \n\t, count(DISTINCT  CASE WHEN ThisMonthtoday = 1 THEN  reservation_id  END ) ThisMonthtoday \n\t, count(DISTINCT  CASE WHEN LastMonthtoday = 1 THEN  reservation_id  END ) LastMonthtoday \n\t, count(DISTINCT  CASE WHEN LastMonth = 1 THEN  reservation_id  END ) LastMonth \n\t, count(DISTINCT  CASE WHEN LasttwoMonth = 1 THEN  reservation_id  END ) LasttwoMonth \n\t, count(DISTINCT  CASE WHEN LastthreeMonth = 1 THEN  reservation_id  END ) LastthreeMonth \nFROM metric \nGROUP BY 1,2,3", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.rental_tenant_metric_details_reservations_refunded"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "demand"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "demand", "rental_tenant_metric_reservations_refunded"], "unique_id": "model.houm.rental_tenant_metric_reservations_refunded", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "dwh/marts/demand/rental_tenant_metric_reservations_refunded.sql", "original_file_path": "models/dwh/marts/demand/rental_tenant_metric_reservations_refunded.sql", "name": "rental_tenant_metric_reservations_refunded", "alias": "rental_tenant_metric_reservations_refunded", "checksum": {"name": "sha256", "checksum": "fc9bd1a16e28bb1576953fe11bc02164e133f368a4450b02fbb33c130ce59106"}, "tags": ["dw", "marts", "demand"], "refs": [["rental_tenant_metric_details_reservations_refunded"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/demand/rental_tenant_metric_reservations_refunded.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "table", "tags": ["dw", "marts", "demand"]}, "created_at": 1654784474.660255, "compiled_sql": "\n\nWITH metric as (\nSELECT * FROM \"houmdw_prod\".\"dbt_facts\".\"rental_tenant_metric_details_reservations_refunded\"\n)\nSELECT \n\torden \n\t, metric \t\n\t, geo_id\n\t, count(DISTINCT  CASE WHEN yesterday = 1 THEN  reservation_id  END ) yesterday \n\t, count(DISTINCT  CASE WHEN daybeforeyesterday = 1 THEN  reservation_id  END ) daybeforeyesterday \n\t, count(DISTINCT  CASE WHEN LastWeek = 1 THEN  reservation_id  END ) LastWeek \n\t, count(DISTINCT  CASE WHEN PastLastWeek = 1 THEN  reservation_id  END ) PastLastWeek \n\t, count(DISTINCT  CASE WHEN ThisMonthtoday = 1 THEN  reservation_id  END ) ThisMonthtoday \n\t, count(DISTINCT  CASE WHEN LastMonthtoday = 1 THEN  reservation_id  END ) LastMonthtoday \n\t, count(DISTINCT  CASE WHEN LastMonth = 1 THEN  reservation_id  END ) LastMonth \n\t, count(DISTINCT  CASE WHEN LasttwoMonth = 1 THEN  reservation_id  END ) LasttwoMonth \n\t, count(DISTINCT  CASE WHEN LastthreeMonth = 1 THEN  reservation_id  END ) LastthreeMonth \nFROM metric \nGROUP BY 1,2,3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"rental_tenant_metric_reservations_refunded\""}, "model.houm.sales_buyer_metric_schedules_scheduled": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH metric as (\r\nSELECT * FROM {{ ref('sales_buyer_metric_details_schedules_scheduled') }}\r\n)\r\nSELECT \r\n\torden \r\n\t, metric \t\r\n\t, geo_id\r\n\t, count(DISTINCT CASE WHEN yesterday = 1 THEN  schedule_id  END ) yesterday \r\n\t, count(DISTINCT CASE WHEN daybeforeyesterday = 1 THEN  schedule_id  END ) daybeforeyesterday \r\n\t, count(DISTINCT CASE WHEN LastWeek = 1 THEN  schedule_id  END ) LastWeek \r\n\t, count(DISTINCT CASE WHEN PastLastWeek = 1 THEN  schedule_id  END ) PastLastWeek \r\n\t, count(DISTINCT CASE WHEN ThisMonthtoday = 1 THEN  schedule_id  END ) ThisMonthtoday \r\n\t, count(DISTINCT CASE WHEN LastMonthtoday = 1 THEN  schedule_id  END ) LastMonthtoday \r\n\t, count(DISTINCT  CASE WHEN LastMonth = 1 THEN  schedule_id  END ) LastMonth \r\n\t, count(DISTINCT  CASE WHEN LasttwoMonth = 1 THEN  schedule_id  END ) LasttwoMonth \r\n\t, count(DISTINCT  CASE WHEN LastthreeMonth = 1 THEN  schedule_id  END ) LastthreeMonth \r\nFROM metric \r\nGROUP BY 1,2,3", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.sales_buyer_metric_details_schedules_scheduled"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "demand"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "demand", "sales_buyer_metric_schedules_scheduled"], "unique_id": "model.houm.sales_buyer_metric_schedules_scheduled", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "dwh/marts/demand/sales_buyer_metric_schedules_scheduled.sql", "original_file_path": "models/dwh/marts/demand/sales_buyer_metric_schedules_scheduled.sql", "name": "sales_buyer_metric_schedules_scheduled", "alias": "sales_buyer_metric_schedules_scheduled", "checksum": {"name": "sha256", "checksum": "18fc27954a01abd9282b49704368b4c900f0577db5bdb7e68ff80661098060af"}, "tags": ["dw", "marts", "demand"], "refs": [["sales_buyer_metric_details_schedules_scheduled"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/demand/sales_buyer_metric_schedules_scheduled.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "table", "tags": ["dw", "marts", "demand"]}, "created_at": 1654784474.662034, "compiled_sql": "\n\nWITH metric as (\nSELECT * FROM \"houmdw_prod\".\"dbt_facts\".\"sales_buyer_metric_details_schedules_scheduled\"\n)\nSELECT \n\torden \n\t, metric \t\n\t, geo_id\n\t, count(DISTINCT CASE WHEN yesterday = 1 THEN  schedule_id  END ) yesterday \n\t, count(DISTINCT CASE WHEN daybeforeyesterday = 1 THEN  schedule_id  END ) daybeforeyesterday \n\t, count(DISTINCT CASE WHEN LastWeek = 1 THEN  schedule_id  END ) LastWeek \n\t, count(DISTINCT CASE WHEN PastLastWeek = 1 THEN  schedule_id  END ) PastLastWeek \n\t, count(DISTINCT CASE WHEN ThisMonthtoday = 1 THEN  schedule_id  END ) ThisMonthtoday \n\t, count(DISTINCT CASE WHEN LastMonthtoday = 1 THEN  schedule_id  END ) LastMonthtoday \n\t, count(DISTINCT  CASE WHEN LastMonth = 1 THEN  schedule_id  END ) LastMonth \n\t, count(DISTINCT  CASE WHEN LasttwoMonth = 1 THEN  schedule_id  END ) LasttwoMonth \n\t, count(DISTINCT  CASE WHEN LastthreeMonth = 1 THEN  schedule_id  END ) LastthreeMonth \nFROM metric \nGROUP BY 1,2,3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"sales_buyer_metric_schedules_scheduled\""}, "model.houm.sales_buyer_metric_paid_media_cost": {"raw_sql": "{{ config(materialized='table') }}\n\nWITH metric AS (\nSELECT * FROM {{ ref('sales_buyer_metric_details_paid_media_cost') }}\n)\nSELECT  \n\torden ,\n\tmetric ,\n\tgeo_id ,\n\tSUM(DISTINCT CASE WHEN yesterday = 1 THEN day_cost END ) AS yesterday , \n\tSUM(DISTINCT CASE WHEN daybeforeyesterday = 1 THEN day_cost END ) AS daybeforeyesterday ,\n\tSUM(DISTINCT CASE WHEN LastWeek = 1 THEN day_cost END ) AS LastWeek , \n\tSUM(DISTINCT CASE WHEN PastLastWeek = 1 THEN day_cost END ) AS PastLastWeek ,\n\tSUM(DISTINCT CASE WHEN ThisMonthtoday = 1 THEN day_cost END ) AS ThisMonthtoday , \n\tSUM(DISTINCT CASE WHEN LastMonthtoday = 1 THEN day_cost END ) AS LastMonthtoday ,\n\tSUM(DISTINCT CASE WHEN LastMonth = 1 THEN day_cost END ) AS LastMonth ,\n\tSUM(DISTINCT CASE WHEN LasttwoMonth = 1 THEN day_cost END ) AS LasttwoMonth , \n\tSUM(DISTINCT CASE WHEN LastthreeMonth = 1 THEN day_cost END ) AS LastthreeMonth  \nFROM metric \nGROUP BY 1,2,3", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.sales_buyer_metric_details_paid_media_cost"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "demand"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "demand", "sales_buyer_metric_paid_media_cost"], "unique_id": "model.houm.sales_buyer_metric_paid_media_cost", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "dwh/marts/demand/sales_buyer_metric_paid_media_cost.sql", "original_file_path": "models/dwh/marts/demand/sales_buyer_metric_paid_media_cost.sql", "name": "sales_buyer_metric_paid_media_cost", "alias": "sales_buyer_metric_paid_media_cost", "checksum": {"name": "sha256", "checksum": "2eeae00b55ba87218f7d74e05227b5dc47f80cb32e6345c462a2138ce2ba987e"}, "tags": ["dw", "marts", "demand"], "refs": [["sales_buyer_metric_details_paid_media_cost"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/demand/sales_buyer_metric_paid_media_cost.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "table", "tags": ["dw", "marts", "demand"]}, "created_at": 1654784474.663737, "compiled_sql": "\n\nWITH metric AS (\nSELECT * FROM \"houmdw_prod\".\"dbt_facts\".\"sales_buyer_metric_details_paid_media_cost\"\n)\nSELECT  \n\torden ,\n\tmetric ,\n\tgeo_id ,\n\tSUM(DISTINCT CASE WHEN yesterday = 1 THEN day_cost END ) AS yesterday , \n\tSUM(DISTINCT CASE WHEN daybeforeyesterday = 1 THEN day_cost END ) AS daybeforeyesterday ,\n\tSUM(DISTINCT CASE WHEN LastWeek = 1 THEN day_cost END ) AS LastWeek , \n\tSUM(DISTINCT CASE WHEN PastLastWeek = 1 THEN day_cost END ) AS PastLastWeek ,\n\tSUM(DISTINCT CASE WHEN ThisMonthtoday = 1 THEN day_cost END ) AS ThisMonthtoday , \n\tSUM(DISTINCT CASE WHEN LastMonthtoday = 1 THEN day_cost END ) AS LastMonthtoday ,\n\tSUM(DISTINCT CASE WHEN LastMonth = 1 THEN day_cost END ) AS LastMonth ,\n\tSUM(DISTINCT CASE WHEN LasttwoMonth = 1 THEN day_cost END ) AS LasttwoMonth , \n\tSUM(DISTINCT CASE WHEN LastthreeMonth = 1 THEN day_cost END ) AS LastthreeMonth  \nFROM metric \nGROUP BY 1,2,3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"sales_buyer_metric_paid_media_cost\""}, "model.houm.rental_tenant_metric_new_tenant": {"raw_sql": "{{ config(materialized='table') }}\n\nWITH metric  as (\nSELECT * FROM {{ ref('rental_tenant_metric_details_new_tenant') }}\n)\nSELECT \n\torden  \n\t, metric \t\n\t, geo_id\n\t, count(DISTINCT CASE WHEN yesterday = 1 THEN sub_id END ) AS yesterday \n\t, count(DISTINCT CASE WHEN daybeforeyesterday = 1 THEN sub_id END ) AS daybeforeyesterday \n\t, count(DISTINCT CASE WHEN LastWeek = 1 THEN sub_id END ) AS LastWeek \n\t, count(DISTINCT CASE WHEN PastLastWeek = 1 THEN sub_id END ) AS PastLastWeek \n\t, count(DISTINCT CASE WHEN ThisMonthtoday = 1 THEN sub_id END ) AS ThisMonthtoday \n\t, count(DISTINCT CASE WHEN LastMonthtoday = 1 THEN sub_id END ) AS LastMonthtoday \n\t, count(DISTINCT CASE WHEN LastMonth = 1 THEN sub_id END ) AS LastMonth \n\t, count(DISTINCT CASE WHEN LasttwoMonth = 1 THEN sub_id END ) AS LasttwoMonth \n\t, count(DISTINCT CASE WHEN LastthreeMonth = 1 THEN sub_id END ) AS LastthreeMonth \nFROM metric \nGROUP BY 1,2,3", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.rental_tenant_metric_details_new_tenant"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "demand"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "demand", "rental_tenant_metric_new_tenant"], "unique_id": "model.houm.rental_tenant_metric_new_tenant", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "dwh/marts/demand/rental_tenant_metric_new_tenant.sql", "original_file_path": "models/dwh/marts/demand/rental_tenant_metric_new_tenant.sql", "name": "rental_tenant_metric_new_tenant", "alias": "rental_tenant_metric_new_tenant", "checksum": {"name": "sha256", "checksum": "27ef3e29d5b31e9852991c486be559b5a4f03f64a2bf95c5b121f74b2828ce0c"}, "tags": ["dw", "marts", "demand"], "refs": [["rental_tenant_metric_details_new_tenant"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/demand/rental_tenant_metric_new_tenant.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "table", "tags": ["dw", "marts", "demand"]}, "created_at": 1654784474.665428, "compiled_sql": "\n\nWITH metric  as (\nSELECT * FROM \"houmdw_prod\".\"dbt_facts\".\"rental_tenant_metric_details_new_tenant\"\n)\nSELECT \n\torden  \n\t, metric \t\n\t, geo_id\n\t, count(DISTINCT CASE WHEN yesterday = 1 THEN sub_id END ) AS yesterday \n\t, count(DISTINCT CASE WHEN daybeforeyesterday = 1 THEN sub_id END ) AS daybeforeyesterday \n\t, count(DISTINCT CASE WHEN LastWeek = 1 THEN sub_id END ) AS LastWeek \n\t, count(DISTINCT CASE WHEN PastLastWeek = 1 THEN sub_id END ) AS PastLastWeek \n\t, count(DISTINCT CASE WHEN ThisMonthtoday = 1 THEN sub_id END ) AS ThisMonthtoday \n\t, count(DISTINCT CASE WHEN LastMonthtoday = 1 THEN sub_id END ) AS LastMonthtoday \n\t, count(DISTINCT CASE WHEN LastMonth = 1 THEN sub_id END ) AS LastMonth \n\t, count(DISTINCT CASE WHEN LasttwoMonth = 1 THEN sub_id END ) AS LasttwoMonth \n\t, count(DISTINCT CASE WHEN LastthreeMonth = 1 THEN sub_id END ) AS LastthreeMonth \nFROM metric \nGROUP BY 1,2,3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"rental_tenant_metric_new_tenant\""}, "model.houm.sales_buyer_metrics_leads_sales_qualified": {"raw_sql": "{{ config(materialized='table') }}\n\nWITH metric  as (\nSELECT * FROM {{ ref('sales_buyer_metrics_details_leads_sales_qualified') }}\n)\nSELECT \n\torden  \n\t, metric \t\n\t, geo_id\n\t, count(DISTINCT CASE WHEN yesterday = 1 THEN  email  END ) yesterday \n\t, count(DISTINCT CASE WHEN daybeforeyesterday = 1 THEN  email  END ) daybeforeyesterday\n\t, count(DISTINCT CASE WHEN LastWeek = 1 THEN  email  END ) LastWeek \n\t, count(DISTINCT CASE WHEN PastLastWeek = 1 THEN  email  END ) PastLastWeek \n\t, count(DISTINCT CASE WHEN ThisMonthtoday = 1 THEN  email  END ) ThisMonthtoday \n\t, count(DISTINCT CASE WHEN LastMonthtoday = 1 THEN  email  END ) LastMonthtoday \n\t, count(DISTINCT CASE WHEN LastMonth = 1 THEN  email  END ) LastMonth \n\t, count(DISTINCT CASE WHEN LasttwoMonth = 1 THEN  email  END ) LasttwoMonth \n\t, count(DISTINCT CASE WHEN LastthreeMonth = 1 THEN  email  END ) LastthreeMonth \nFROM metric \nGROUP BY 1,2,3", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.sales_buyer_metrics_details_leads_sales_qualified"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "demand"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "demand", "sales_buyer_metrics_leads_sales_qualified"], "unique_id": "model.houm.sales_buyer_metrics_leads_sales_qualified", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "dwh/marts/demand/sales_buyer_metrics_leads_sales_qualified.sql", "original_file_path": "models/dwh/marts/demand/sales_buyer_metrics_leads_sales_qualified.sql", "name": "sales_buyer_metrics_leads_sales_qualified", "alias": "sales_buyer_metrics_leads_sales_qualified", "checksum": {"name": "sha256", "checksum": "57539a297eab4fe85a3d7ec656bf205f0b53ca8784512b3d199f59f3d37785a0"}, "tags": ["dw", "marts", "demand"], "refs": [["sales_buyer_metrics_details_leads_sales_qualified"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/demand/sales_buyer_metrics_leads_sales_qualified.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "table", "tags": ["dw", "marts", "demand"]}, "created_at": 1654784474.6673, "compiled_sql": "\n\nWITH metric  as (\nSELECT * FROM \"houmdw_prod\".\"dbt_facts\".\"sales_buyer_metrics_details_leads_sales_qualified\"\n)\nSELECT \n\torden  \n\t, metric \t\n\t, geo_id\n\t, count(DISTINCT CASE WHEN yesterday = 1 THEN  email  END ) yesterday \n\t, count(DISTINCT CASE WHEN daybeforeyesterday = 1 THEN  email  END ) daybeforeyesterday\n\t, count(DISTINCT CASE WHEN LastWeek = 1 THEN  email  END ) LastWeek \n\t, count(DISTINCT CASE WHEN PastLastWeek = 1 THEN  email  END ) PastLastWeek \n\t, count(DISTINCT CASE WHEN ThisMonthtoday = 1 THEN  email  END ) ThisMonthtoday \n\t, count(DISTINCT CASE WHEN LastMonthtoday = 1 THEN  email  END ) LastMonthtoday \n\t, count(DISTINCT CASE WHEN LastMonth = 1 THEN  email  END ) LastMonth \n\t, count(DISTINCT CASE WHEN LasttwoMonth = 1 THEN  email  END ) LasttwoMonth \n\t, count(DISTINCT CASE WHEN LastthreeMonth = 1 THEN  email  END ) LastthreeMonth \nFROM metric \nGROUP BY 1,2,3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"sales_buyer_metrics_leads_sales_qualified\""}, "model.houm.rental_tenant_metric_paid_media_cost": {"raw_sql": "{{ config(materialized='table') }}\n\nWITH metric AS (\nSELECT * FROM {{ ref('rental_tenant_metric_details_paid_media_cost') }}\n)\nSELECT  \n\torden ,\n\tmetric ,\n\tgeo_id ,\n\tSUM(DISTINCT CASE WHEN yesterday = 1 THEN day_cost END ) AS yesterday , \n\tSUM(DISTINCT CASE WHEN daybeforeyesterday = 1 THEN day_cost END ) AS daybeforeyesterday ,\n\tSUM(DISTINCT CASE WHEN LastWeek = 1 THEN day_cost END ) AS LastWeek , \n\tSUM(DISTINCT CASE WHEN PastLastWeek = 1 THEN day_cost END ) AS PastLastWeek ,\n\tSUM(DISTINCT CASE WHEN ThisMonthtoday = 1 THEN day_cost END ) AS ThisMonthtoday , \n\tSUM(DISTINCT CASE WHEN LastMonthtoday = 1 THEN day_cost END ) AS LastMonthtoday ,\n\tSUM(DISTINCT CASE WHEN LastMonth = 1 THEN day_cost END ) AS LastMonth ,\n\tSUM(DISTINCT CASE WHEN LasttwoMonth = 1 THEN day_cost END ) AS LasttwoMonth , \n\tSUM(DISTINCT CASE WHEN LastthreeMonth = 1 THEN day_cost END ) AS LastthreeMonth  \nFROM metric \nGROUP BY 1,2,3", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.rental_tenant_metric_details_paid_media_cost"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "demand"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "demand", "rental_tenant_metric_paid_media_cost"], "unique_id": "model.houm.rental_tenant_metric_paid_media_cost", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "dwh/marts/demand/rental_tenant_metric_paid_media_cost.sql", "original_file_path": "models/dwh/marts/demand/rental_tenant_metric_paid_media_cost.sql", "name": "rental_tenant_metric_paid_media_cost", "alias": "rental_tenant_metric_paid_media_cost", "checksum": {"name": "sha256", "checksum": "98729975155104f0cb1a801a71b2752ba72d40211526d97e8c30d4c42e65cb74"}, "tags": ["dw", "marts", "demand"], "refs": [["rental_tenant_metric_details_paid_media_cost"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/demand/rental_tenant_metric_paid_media_cost.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "table", "tags": ["dw", "marts", "demand"]}, "created_at": 1654784474.6689951, "compiled_sql": "\n\nWITH metric AS (\nSELECT * FROM \"houmdw_prod\".\"dbt_facts\".\"rental_tenant_metric_details_paid_media_cost\"\n)\nSELECT  \n\torden ,\n\tmetric ,\n\tgeo_id ,\n\tSUM(DISTINCT CASE WHEN yesterday = 1 THEN day_cost END ) AS yesterday , \n\tSUM(DISTINCT CASE WHEN daybeforeyesterday = 1 THEN day_cost END ) AS daybeforeyesterday ,\n\tSUM(DISTINCT CASE WHEN LastWeek = 1 THEN day_cost END ) AS LastWeek , \n\tSUM(DISTINCT CASE WHEN PastLastWeek = 1 THEN day_cost END ) AS PastLastWeek ,\n\tSUM(DISTINCT CASE WHEN ThisMonthtoday = 1 THEN day_cost END ) AS ThisMonthtoday , \n\tSUM(DISTINCT CASE WHEN LastMonthtoday = 1 THEN day_cost END ) AS LastMonthtoday ,\n\tSUM(DISTINCT CASE WHEN LastMonth = 1 THEN day_cost END ) AS LastMonth ,\n\tSUM(DISTINCT CASE WHEN LasttwoMonth = 1 THEN day_cost END ) AS LasttwoMonth , \n\tSUM(DISTINCT CASE WHEN LastthreeMonth = 1 THEN day_cost END ) AS LastthreeMonth  \nFROM metric \nGROUP BY 1,2,3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"rental_tenant_metric_paid_media_cost\""}, "model.houm.rental_tenant_metric_reservations": {"raw_sql": "{{ config(materialized='table') }}\n\nWITH metric as (\nSELECT * FROM {{ ref('rental_tenant_metric_details_reservations') }}\n)\nSELECT \n\torden  \n\t, metric \t\n\t, geo_id\n\t, count(DISTINCT  CASE WHEN yesterday = 1 THEN  reservation_id  END ) yesterday \n\t, count(DISTINCT  CASE WHEN daybeforeyesterday = 1 THEN  reservation_id  END ) daybeforeyesterday \n\t, count(DISTINCT  CASE WHEN LastWeek = 1 THEN  reservation_id  END ) LastWeek \n\t, count(DISTINCT  CASE WHEN PastLastWeek = 1 THEN  reservation_id  END ) PastLastWeek \n\t, count(DISTINCT  CASE WHEN ThisMonthtoday = 1 THEN  reservation_id  END ) ThisMonthtoday \n\t, count(DISTINCT  CASE WHEN LastMonthtoday = 1 THEN  reservation_id  END ) LastMonthtoday \n\t, count(DISTINCT  CASE WHEN LastMonth = 1 THEN  reservation_id  END ) LastMonth \n\t, count(DISTINCT  CASE WHEN LasttwoMonth = 1 THEN  reservation_id  END ) LasttwoMonth \n\t, count(DISTINCT  CASE WHEN LastthreeMonth = 1 THEN  reservation_id  END ) LastthreeMonth \nFROM metric \nGROUP BY 1,2,3", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.rental_tenant_metric_details_reservations"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "demand"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "demand", "rental_tenant_metric_reservations"], "unique_id": "model.houm.rental_tenant_metric_reservations", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "dwh/marts/demand/rental_tenant_metric_reservations.sql", "original_file_path": "models/dwh/marts/demand/rental_tenant_metric_reservations.sql", "name": "rental_tenant_metric_reservations", "alias": "rental_tenant_metric_reservations", "checksum": {"name": "sha256", "checksum": "c068703bd6de46d758a6391dd70b205dacd7b1fbbbc09dac7b64d71dc6719363"}, "tags": ["dw", "marts", "demand"], "refs": [["rental_tenant_metric_details_reservations"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/demand/rental_tenant_metric_reservations.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "table", "tags": ["dw", "marts", "demand"]}, "created_at": 1654784474.670659, "compiled_sql": "\n\nWITH metric as (\nSELECT * FROM \"houmdw_prod\".\"dbt_facts\".\"rental_tenant_metric_details_reservations\"\n)\nSELECT \n\torden  \n\t, metric \t\n\t, geo_id\n\t, count(DISTINCT  CASE WHEN yesterday = 1 THEN  reservation_id  END ) yesterday \n\t, count(DISTINCT  CASE WHEN daybeforeyesterday = 1 THEN  reservation_id  END ) daybeforeyesterday \n\t, count(DISTINCT  CASE WHEN LastWeek = 1 THEN  reservation_id  END ) LastWeek \n\t, count(DISTINCT  CASE WHEN PastLastWeek = 1 THEN  reservation_id  END ) PastLastWeek \n\t, count(DISTINCT  CASE WHEN ThisMonthtoday = 1 THEN  reservation_id  END ) ThisMonthtoday \n\t, count(DISTINCT  CASE WHEN LastMonthtoday = 1 THEN  reservation_id  END ) LastMonthtoday \n\t, count(DISTINCT  CASE WHEN LastMonth = 1 THEN  reservation_id  END ) LastMonth \n\t, count(DISTINCT  CASE WHEN LasttwoMonth = 1 THEN  reservation_id  END ) LasttwoMonth \n\t, count(DISTINCT  CASE WHEN LastthreeMonth = 1 THEN  reservation_id  END ) LastthreeMonth \nFROM metric \nGROUP BY 1,2,3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"rental_tenant_metric_reservations\""}, "model.houm.rental_tenant_metric_schedules_done": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH metric  as (\r\nSELECT * FROM {{ ref('rental_tenant_metric_details_schedules_done') }}\r\n)\r\nSELECT \r\n\torden  \r\n\t, metric \t\r\n\t, geo_id\r\n\t, count(DISTINCT  CASE WHEN yesterday = 1 THEN  schedule_id  END ) yesterday \r\n\t, count(DISTINCT  CASE WHEN daybeforeyesterday = 1 THEN  schedule_id  END ) daybeforeyesterday\r\n\t, count(DISTINCT  CASE WHEN LastWeek = 1 THEN  schedule_id  END ) LastWeek \r\n\t, count(DISTINCT  CASE WHEN PastLastWeek = 1 THEN  schedule_id  END ) PastLastWeek \r\n\t, count(DISTINCT  CASE WHEN ThisMonthtoday = 1 THEN  schedule_id  END ) ThisMonthtoday \r\n\t, count(DISTINCT  CASE WHEN LastMonthtoday = 1 THEN  schedule_id  END ) LastMonthtoday \r\n\t, count(DISTINCT  CASE WHEN LastMonth = 1 THEN  schedule_id  END ) LastMonth \r\n\t, count(DISTINCT  CASE WHEN LasttwoMonth = 1 THEN  schedule_id  END ) LasttwoMonth \r\n\t, count(DISTINCT  CASE WHEN LastthreeMonth = 1 THEN  schedule_id  END ) LastthreeMonth \r\nFROM metric \r\nGROUP BY 1,2,3", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.rental_tenant_metric_details_schedules_done"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "demand"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "demand", "rental_tenant_metric_schedules_done"], "unique_id": "model.houm.rental_tenant_metric_schedules_done", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "dwh/marts/demand/rental_tenant_metric_schedules_done.sql", "original_file_path": "models/dwh/marts/demand/rental_tenant_metric_schedules_done.sql", "name": "rental_tenant_metric_schedules_done", "alias": "rental_tenant_metric_schedules_done", "checksum": {"name": "sha256", "checksum": "139099e480a6a90d49cf3cd1cb01d65d9adaba7a90aced76fd50adc4e6b7faaf"}, "tags": ["dw", "marts", "demand"], "refs": [["rental_tenant_metric_details_schedules_done"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/demand/rental_tenant_metric_schedules_done.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "table", "tags": ["dw", "marts", "demand"]}, "created_at": 1654784474.672371, "compiled_sql": "\n\nWITH metric  as (\nSELECT * FROM \"houmdw_prod\".\"dbt_facts\".\"rental_tenant_metric_details_schedules_done\"\n)\nSELECT \n\torden  \n\t, metric \t\n\t, geo_id\n\t, count(DISTINCT  CASE WHEN yesterday = 1 THEN  schedule_id  END ) yesterday \n\t, count(DISTINCT  CASE WHEN daybeforeyesterday = 1 THEN  schedule_id  END ) daybeforeyesterday\n\t, count(DISTINCT  CASE WHEN LastWeek = 1 THEN  schedule_id  END ) LastWeek \n\t, count(DISTINCT  CASE WHEN PastLastWeek = 1 THEN  schedule_id  END ) PastLastWeek \n\t, count(DISTINCT  CASE WHEN ThisMonthtoday = 1 THEN  schedule_id  END ) ThisMonthtoday \n\t, count(DISTINCT  CASE WHEN LastMonthtoday = 1 THEN  schedule_id  END ) LastMonthtoday \n\t, count(DISTINCT  CASE WHEN LastMonth = 1 THEN  schedule_id  END ) LastMonth \n\t, count(DISTINCT  CASE WHEN LasttwoMonth = 1 THEN  schedule_id  END ) LasttwoMonth \n\t, count(DISTINCT  CASE WHEN LastthreeMonth = 1 THEN  schedule_id  END ) LastthreeMonth \nFROM metric \nGROUP BY 1,2,3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"rental_tenant_metric_schedules_done\""}, "model.houm.sales_buyer_metrics_leads_sales": {"raw_sql": "{{ config(materialized='table') }}\n\nWITH metric  as (\nSELECT * FROM {{ ref('sales_buyer_metrics_details_leads_sales') }}\n)\nSELECT \n\torden  \n\t, metric \t\n\t, geo_id\n\t, count(DISTINCT CASE WHEN yesterday = 1 THEN  email  END ) yesterday \n\t, count(DISTINCT CASE WHEN daybeforeyesterday = 1 THEN  email  END ) daybeforeyesterday\n\t, count(DISTINCT CASE WHEN LastWeek = 1 THEN  email  END ) LastWeek \n\t, count(DISTINCT CASE WHEN PastLastWeek = 1 THEN  email  END ) PastLastWeek \n\t, count(DISTINCT CASE WHEN ThisMonthtoday = 1 THEN  email  END ) ThisMonthtoday \n\t, count(DISTINCT CASE WHEN LastMonthtoday = 1 THEN  email  END ) LastMonthtoday \n\t, count(DISTINCT  CASE WHEN LastMonth = 1 THEN  email  END ) LastMonth \n\t, count(DISTINCT  CASE WHEN LasttwoMonth = 1 THEN  email  END ) LasttwoMonth \n\t, count(DISTINCT  CASE WHEN LastthreeMonth = 1 THEN  email  END ) LastthreeMonth \nFROM metric \nGROUP BY 1,2,3", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.sales_buyer_metrics_details_leads_sales"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "demand"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "demand", "sales_buyer_metrics_leads_sales"], "unique_id": "model.houm.sales_buyer_metrics_leads_sales", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "dwh/marts/demand/sales_buyer_metrics_leads_sales.sql", "original_file_path": "models/dwh/marts/demand/sales_buyer_metrics_leads_sales.sql", "name": "sales_buyer_metrics_leads_sales", "alias": "sales_buyer_metrics_leads_sales", "checksum": {"name": "sha256", "checksum": "bfe755659885f563ca7c5953b5eaf6cb2769f9f7ff2f43c60eee458f66ca7365"}, "tags": ["dw", "marts", "demand"], "refs": [["sales_buyer_metrics_details_leads_sales"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/demand/sales_buyer_metrics_leads_sales.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "table", "tags": ["dw", "marts", "demand"]}, "created_at": 1654784474.674195, "compiled_sql": "\n\nWITH metric  as (\nSELECT * FROM \"houmdw_prod\".\"dbt_facts\".\"sales_buyer_metrics_details_leads_sales\"\n)\nSELECT \n\torden  \n\t, metric \t\n\t, geo_id\n\t, count(DISTINCT CASE WHEN yesterday = 1 THEN  email  END ) yesterday \n\t, count(DISTINCT CASE WHEN daybeforeyesterday = 1 THEN  email  END ) daybeforeyesterday\n\t, count(DISTINCT CASE WHEN LastWeek = 1 THEN  email  END ) LastWeek \n\t, count(DISTINCT CASE WHEN PastLastWeek = 1 THEN  email  END ) PastLastWeek \n\t, count(DISTINCT CASE WHEN ThisMonthtoday = 1 THEN  email  END ) ThisMonthtoday \n\t, count(DISTINCT CASE WHEN LastMonthtoday = 1 THEN  email  END ) LastMonthtoday \n\t, count(DISTINCT  CASE WHEN LastMonth = 1 THEN  email  END ) LastMonth \n\t, count(DISTINCT  CASE WHEN LasttwoMonth = 1 THEN  email  END ) LasttwoMonth \n\t, count(DISTINCT  CASE WHEN LastthreeMonth = 1 THEN  email  END ) LastthreeMonth \nFROM metric \nGROUP BY 1,2,3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"sales_buyer_metrics_leads_sales\""}, "model.houm.sales_buyer_metric_paid_media_cost_sales": {"raw_sql": "{{ config(materialized='table') }}\n\nWITH metric AS (\nSELECT * FROM {{ ref('sales_buyer_metric_details_paid_media_cost_sales') }}\n)\nSELECT  \n\torden ,\n\tmetric ,\n\tgeo_id ,\n\tSUM(DISTINCT CASE WHEN yesterday = 1 THEN day_cost END ) AS yesterday , \n\tSUM(DISTINCT CASE WHEN daybeforeyesterday = 1 THEN day_cost END ) AS daybeforeyesterday ,\n\tSUM(DISTINCT CASE WHEN LastWeek = 1 THEN day_cost END ) AS LastWeek , \n\tSUM(DISTINCT CASE WHEN PastLastWeek = 1 THEN day_cost END ) AS PastLastWeek ,\n\tSUM(DISTINCT CASE WHEN ThisMonthtoday = 1 THEN day_cost END ) AS ThisMonthtoday , \n\tSUM(DISTINCT CASE WHEN LastMonthtoday = 1 THEN day_cost END ) AS LastMonthtoday ,\n\tSUM(DISTINCT CASE WHEN LastMonth = 1 THEN day_cost END ) AS LastMonth ,\n\tSUM(DISTINCT CASE WHEN LasttwoMonth = 1 THEN day_cost END ) AS LasttwoMonth , \n\tSUM(DISTINCT CASE WHEN LastthreeMonth = 1 THEN day_cost END ) AS LastthreeMonth  \nFROM metric \nGROUP BY 1,2,3", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.sales_buyer_metric_details_paid_media_cost_sales"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "demand"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "demand", "sales_buyer_metric_paid_media_cost_sales"], "unique_id": "model.houm.sales_buyer_metric_paid_media_cost_sales", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "dwh/marts/demand/sales_buyer_metric_paid_media_cost_sales.sql", "original_file_path": "models/dwh/marts/demand/sales_buyer_metric_paid_media_cost_sales.sql", "name": "sales_buyer_metric_paid_media_cost_sales", "alias": "sales_buyer_metric_paid_media_cost_sales", "checksum": {"name": "sha256", "checksum": "82e5555b248a245699e9813b8ded86c5625fe587b2c5e3f50795e0bc283f162a"}, "tags": ["dw", "marts", "demand"], "refs": [["sales_buyer_metric_details_paid_media_cost_sales"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/demand/sales_buyer_metric_paid_media_cost_sales.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "table", "tags": ["dw", "marts", "demand"]}, "created_at": 1654784474.675956, "compiled_sql": "\n\nWITH metric AS (\nSELECT * FROM \"houmdw_prod\".\"dbt_facts\".\"sales_buyer_metric_details_paid_media_cost_sales\"\n)\nSELECT  \n\torden ,\n\tmetric ,\n\tgeo_id ,\n\tSUM(DISTINCT CASE WHEN yesterday = 1 THEN day_cost END ) AS yesterday , \n\tSUM(DISTINCT CASE WHEN daybeforeyesterday = 1 THEN day_cost END ) AS daybeforeyesterday ,\n\tSUM(DISTINCT CASE WHEN LastWeek = 1 THEN day_cost END ) AS LastWeek , \n\tSUM(DISTINCT CASE WHEN PastLastWeek = 1 THEN day_cost END ) AS PastLastWeek ,\n\tSUM(DISTINCT CASE WHEN ThisMonthtoday = 1 THEN day_cost END ) AS ThisMonthtoday , \n\tSUM(DISTINCT CASE WHEN LastMonthtoday = 1 THEN day_cost END ) AS LastMonthtoday ,\n\tSUM(DISTINCT CASE WHEN LastMonth = 1 THEN day_cost END ) AS LastMonth ,\n\tSUM(DISTINCT CASE WHEN LasttwoMonth = 1 THEN day_cost END ) AS LasttwoMonth , \n\tSUM(DISTINCT CASE WHEN LastthreeMonth = 1 THEN day_cost END ) AS LastthreeMonth  \nFROM metric \nGROUP BY 1,2,3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"sales_buyer_metric_paid_media_cost_sales\""}, "model.houm.rental_tenant_metric_new_subs": {"raw_sql": "{{ config(materialized='table') }}\n\nWITH metric  as (\nSELECT * FROM {{ ref('rental_tenant_metric_details_new_subs') }}\n)\nSELECT \n\torden  \n\t, metric \t\n\t, geo_id\n\t, count(DISTINCT CASE WHEN yesterday = 1 THEN sub_id END ) AS yesterday \n\t, count(DISTINCT CASE WHEN daybeforeyesterday = 1 THEN sub_id END ) AS daybeforeyesterday \n\t, count(DISTINCT CASE WHEN LastWeek = 1 THEN sub_id END ) AS LastWeek \n\t, count(DISTINCT CASE WHEN PastLastWeek = 1 THEN sub_id END ) AS PastLastWeek \n\t, count(DISTINCT CASE WHEN ThisMonthtoday = 1 THEN sub_id END ) AS ThisMonthtoday \n\t, count(DISTINCT CASE WHEN LastMonthtoday = 1 THEN sub_id END ) AS LastMonthtoday \n\t, count(DISTINCT CASE WHEN LastMonth = 1 THEN sub_id END ) AS LastMonth \n\t, count(DISTINCT CASE WHEN LasttwoMonth = 1 THEN sub_id END ) AS LasttwoMonth \n\t, count(DISTINCT CASE WHEN LastthreeMonth = 1 THEN sub_id END ) AS LastthreeMonth \nFROM metric \nGROUP BY 1,2,3", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.rental_tenant_metric_details_new_subs"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "demand"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "demand", "rental_tenant_metric_new_subs"], "unique_id": "model.houm.rental_tenant_metric_new_subs", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "dwh/marts/demand/rental_tenant_metric_new_subs.sql", "original_file_path": "models/dwh/marts/demand/rental_tenant_metric_new_subs.sql", "name": "rental_tenant_metric_new_subs", "alias": "rental_tenant_metric_new_subs", "checksum": {"name": "sha256", "checksum": "dc3899952f064d25615d4cf1283e3e607f65c57b9758d345c444ceb9f56c3c42"}, "tags": ["dw", "marts", "demand"], "refs": [["rental_tenant_metric_details_new_subs"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/demand/rental_tenant_metric_new_subs.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "table", "tags": ["dw", "marts", "demand"]}, "created_at": 1654784474.6777458, "compiled_sql": "\n\nWITH metric  as (\nSELECT * FROM \"houmdw_prod\".\"dbt_facts\".\"rental_tenant_metric_details_new_subs\"\n)\nSELECT \n\torden  \n\t, metric \t\n\t, geo_id\n\t, count(DISTINCT CASE WHEN yesterday = 1 THEN sub_id END ) AS yesterday \n\t, count(DISTINCT CASE WHEN daybeforeyesterday = 1 THEN sub_id END ) AS daybeforeyesterday \n\t, count(DISTINCT CASE WHEN LastWeek = 1 THEN sub_id END ) AS LastWeek \n\t, count(DISTINCT CASE WHEN PastLastWeek = 1 THEN sub_id END ) AS PastLastWeek \n\t, count(DISTINCT CASE WHEN ThisMonthtoday = 1 THEN sub_id END ) AS ThisMonthtoday \n\t, count(DISTINCT CASE WHEN LastMonthtoday = 1 THEN sub_id END ) AS LastMonthtoday \n\t, count(DISTINCT CASE WHEN LastMonth = 1 THEN sub_id END ) AS LastMonth \n\t, count(DISTINCT CASE WHEN LasttwoMonth = 1 THEN sub_id END ) AS LasttwoMonth \n\t, count(DISTINCT CASE WHEN LastthreeMonth = 1 THEN sub_id END ) AS LastthreeMonth \nFROM metric \nGROUP BY 1,2,3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"rental_tenant_metric_new_subs\""}, "model.houm.rental_tenant_metric_schedules_scheduled": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH metric  as (\r\nSELECT * FROM {{ ref('rental_tenant_metric_details_schedules_scheduled') }}\r\n)\r\nSELECT \r\n\torden  \r\n\t, metric \t\r\n\t, geo_id\r\n\t, count(DISTINCT  CASE WHEN yesterday = 1 THEN  schedule_id  END ) yesterday \r\n\t, count(DISTINCT  CASE WHEN daybeforeyesterday = 1 THEN  schedule_id  END ) daybeforeyesterday \r\n\t, count(DISTINCT  CASE WHEN LastWeek = 1 THEN  schedule_id  END ) LastWeek \r\n\t, count(DISTINCT  CASE WHEN PastLastWeek = 1 THEN  schedule_id  END ) PastLastWeek \r\n\t, count(DISTINCT  CASE WHEN ThisMonthtoday = 1 THEN  schedule_id  END ) ThisMonthtoday \r\n\t, count(DISTINCT  CASE WHEN LastMonthtoday = 1 THEN  schedule_id  END ) LastMonthtoday \r\n\t, count(DISTINCT  CASE WHEN LastMonth = 1 THEN  schedule_id  END ) LastMonth \r\n\t, count(DISTINCT  CASE WHEN LasttwoMonth = 1 THEN  schedule_id  END ) LasttwoMonth \r\n\t, count(DISTINCT  CASE WHEN LastthreeMonth = 1 THEN  schedule_id  END ) LastthreeMonth \r\nFROM metric \r\nGROUP BY 1,2,3", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.rental_tenant_metric_details_schedules_scheduled"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "demand"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "demand", "rental_tenant_metric_schedules_scheduled"], "unique_id": "model.houm.rental_tenant_metric_schedules_scheduled", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "dwh/marts/demand/rental_tenant_metric_schedules_scheduled.sql", "original_file_path": "models/dwh/marts/demand/rental_tenant_metric_schedules_scheduled.sql", "name": "rental_tenant_metric_schedules_scheduled", "alias": "rental_tenant_metric_schedules_scheduled", "checksum": {"name": "sha256", "checksum": "3cac8aad4e0d8f70e5df552e7677a0481cbba22284ee082a0f5646b4e009dcb7"}, "tags": ["dw", "marts", "demand"], "refs": [["rental_tenant_metric_details_schedules_scheduled"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/demand/rental_tenant_metric_schedules_scheduled.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "table", "tags": ["dw", "marts", "demand"]}, "created_at": 1654784474.679606, "compiled_sql": "\n\nWITH metric  as (\nSELECT * FROM \"houmdw_prod\".\"dbt_facts\".\"rental_tenant_metric_details_schedules_scheduled\"\n)\nSELECT \n\torden  \n\t, metric \t\n\t, geo_id\n\t, count(DISTINCT  CASE WHEN yesterday = 1 THEN  schedule_id  END ) yesterday \n\t, count(DISTINCT  CASE WHEN daybeforeyesterday = 1 THEN  schedule_id  END ) daybeforeyesterday \n\t, count(DISTINCT  CASE WHEN LastWeek = 1 THEN  schedule_id  END ) LastWeek \n\t, count(DISTINCT  CASE WHEN PastLastWeek = 1 THEN  schedule_id  END ) PastLastWeek \n\t, count(DISTINCT  CASE WHEN ThisMonthtoday = 1 THEN  schedule_id  END ) ThisMonthtoday \n\t, count(DISTINCT  CASE WHEN LastMonthtoday = 1 THEN  schedule_id  END ) LastMonthtoday \n\t, count(DISTINCT  CASE WHEN LastMonth = 1 THEN  schedule_id  END ) LastMonth \n\t, count(DISTINCT  CASE WHEN LasttwoMonth = 1 THEN  schedule_id  END ) LasttwoMonth \n\t, count(DISTINCT  CASE WHEN LastthreeMonth = 1 THEN  schedule_id  END ) LastthreeMonth \nFROM metric \nGROUP BY 1,2,3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"rental_tenant_metric_schedules_scheduled\""}, "model.houm.rental_tenant_metric_reservations_effective": {"raw_sql": "{{ config(materialized='table') }}\n\nWITH metric as (\nSELECT * FROM {{ ref('rental_tenant_metric_details_reservations_effective') }}\n)\nSELECT \n\torden \n\t, metric \t\n\t, geo_id\n\t, count(DISTINCT  CASE WHEN yesterday = 1 THEN  reservation_id  END ) yesterday \n\t, count(DISTINCT  CASE WHEN daybeforeyesterday = 1 THEN  reservation_id  END ) daybeforeyesterday \n\t, count(DISTINCT  CASE WHEN LastWeek = 1 THEN  reservation_id  END ) LastWeek \n\t, count(DISTINCT  CASE WHEN PastLastWeek = 1 THEN  reservation_id  END ) PastLastWeek \n\t, count(DISTINCT  CASE WHEN ThisMonthtoday = 1 THEN  reservation_id  END ) ThisMonthtoday \n\t, count(DISTINCT  CASE WHEN LastMonthtoday = 1 THEN  reservation_id  END ) LastMonthtoday \n\t, count(DISTINCT  CASE WHEN LastMonth = 1 THEN  reservation_id  END ) LastMonth \n\t, count(DISTINCT  CASE WHEN LasttwoMonth = 1 THEN  reservation_id  END ) LasttwoMonth \n\t, count(DISTINCT  CASE WHEN LastthreeMonth = 1 THEN  reservation_id  END ) LastthreeMonth \nFROM metric \nGROUP BY 1,2,3", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.rental_tenant_metric_details_reservations_effective"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "demand"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "demand", "rental_tenant_metric_reservations_effective"], "unique_id": "model.houm.rental_tenant_metric_reservations_effective", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "dwh/marts/demand/rental_tenant_metric_reservations_effective.sql", "original_file_path": "models/dwh/marts/demand/rental_tenant_metric_reservations_effective.sql", "name": "rental_tenant_metric_reservations_effective", "alias": "rental_tenant_metric_reservations_effective", "checksum": {"name": "sha256", "checksum": "1a98fee6bf16c0b6756cd6699e755ad059e93668249cca68e7db17e9aa71fc1f"}, "tags": ["dw", "marts", "demand"], "refs": [["rental_tenant_metric_details_reservations_effective"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/demand/rental_tenant_metric_reservations_effective.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "table", "tags": ["dw", "marts", "demand"]}, "created_at": 1654784474.68129, "compiled_sql": "\n\nWITH metric as (\nSELECT * FROM \"houmdw_prod\".\"dbt_facts\".\"rental_tenant_metric_details_reservations_effective\"\n)\nSELECT \n\torden \n\t, metric \t\n\t, geo_id\n\t, count(DISTINCT  CASE WHEN yesterday = 1 THEN  reservation_id  END ) yesterday \n\t, count(DISTINCT  CASE WHEN daybeforeyesterday = 1 THEN  reservation_id  END ) daybeforeyesterday \n\t, count(DISTINCT  CASE WHEN LastWeek = 1 THEN  reservation_id  END ) LastWeek \n\t, count(DISTINCT  CASE WHEN PastLastWeek = 1 THEN  reservation_id  END ) PastLastWeek \n\t, count(DISTINCT  CASE WHEN ThisMonthtoday = 1 THEN  reservation_id  END ) ThisMonthtoday \n\t, count(DISTINCT  CASE WHEN LastMonthtoday = 1 THEN  reservation_id  END ) LastMonthtoday \n\t, count(DISTINCT  CASE WHEN LastMonth = 1 THEN  reservation_id  END ) LastMonth \n\t, count(DISTINCT  CASE WHEN LasttwoMonth = 1 THEN  reservation_id  END ) LasttwoMonth \n\t, count(DISTINCT  CASE WHEN LastthreeMonth = 1 THEN  reservation_id  END ) LastthreeMonth \nFROM metric \nGROUP BY 1,2,3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"rental_tenant_metric_reservations_effective\""}, "model.houm.rental_tenant_funnel": {"raw_sql": "{{ config(materialized='table') }}\n\nWITH metrics as (\n    SELECT *\n    FROM  {{ ref('rental_tenant_metric_portal_leads') }}\n    UNION ALL\n    SELECT *\n    FROM  {{ ref('rental_tenant_metric_portal_leads_interactions') }}\n    UNION ALL\n    SELECT *\n    FROM  {{ ref('rental_tenant_metric_paid_media_cost') }}\n    UNION ALL\n    SELECT *\n    FROM  {{ ref('rental_tenant_metric_schedules_created') }}\n    UNION ALL\n    SELECT *\n    FROM  {{ ref('rental_tenant_metric_schedules_done') }}\n    UNION ALL\n    SELECT *\n    FROM  {{ ref('rental_tenant_metric_schedules_scheduled') }}\n    UNION ALL\n    SELECT *\n    FROM  {{ ref('rental_tenant_metric_reservations') }}\n    UNION ALL\n    SELECT *\n    FROM  {{ ref('rental_tenant_metric_reservations_effective') }}\n    UNION ALL\n    SELECT *\n    FROM  {{ ref('rental_tenant_metric_reservations_refunded') }}\n    UNION ALL\n    SELECT *\n    FROM  {{ ref('rental_tenant_metric_new_tenant') }}\n    UNION ALL\n    SELECT *\n    FROM  {{ ref('rental_tenant_metric_new_subs') }}\n)\n\n\nSELECT \n    dim_geo.country\n    , dim_geo.country_sufix\n    , dim_geo.Region_Houm\n    , dim_geo.City_Houm\n    , metrics.*\nFROM metrics \nLEFT JOIN {{ ref('dim_macrozones') }} dim_geo ON dim_geo.geo_id = metrics.geo_id", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.rental_tenant_metric_portal_leads", "model.houm.rental_tenant_metric_portal_leads_interactions", "model.houm.rental_tenant_metric_paid_media_cost", "model.houm.rental_tenant_metric_schedules_created", "model.houm.rental_tenant_metric_schedules_done", "model.houm.rental_tenant_metric_schedules_scheduled", "model.houm.rental_tenant_metric_reservations", "model.houm.rental_tenant_metric_reservations_effective", "model.houm.rental_tenant_metric_reservations_refunded", "model.houm.rental_tenant_metric_new_tenant", "model.houm.rental_tenant_metric_new_subs", "model.houm.dim_macrozones"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "funnel"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "funnel", "rentals", "rental_tenant_funnel"], "unique_id": "model.houm.rental_tenant_funnel", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "dwh/marts/funnel/rentals/rental_tenant_funnel.sql", "original_file_path": "models/dwh/marts/funnel/rentals/rental_tenant_funnel.sql", "name": "rental_tenant_funnel", "alias": "rental_tenant_funnel", "checksum": {"name": "sha256", "checksum": "98bfc9b70234229657b1ff358a40f416c94ec6dc3c27693a0d3090c35303814e"}, "tags": ["dw", "marts", "funnel"], "refs": [["rental_tenant_metric_portal_leads"], ["rental_tenant_metric_portal_leads_interactions"], ["rental_tenant_metric_paid_media_cost"], ["rental_tenant_metric_schedules_created"], ["rental_tenant_metric_schedules_done"], ["rental_tenant_metric_schedules_scheduled"], ["rental_tenant_metric_reservations"], ["rental_tenant_metric_reservations_effective"], ["rental_tenant_metric_reservations_refunded"], ["rental_tenant_metric_new_tenant"], ["rental_tenant_metric_new_subs"], ["dim_macrozones"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/funnel/rentals/rental_tenant_funnel.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "table", "tags": ["dw", "marts", "funnel"]}, "created_at": 1654784474.68297, "compiled_sql": "\n\nWITH metrics as (\n    SELECT *\n    FROM  \"houmdw_prod\".\"dbt_marts\".\"rental_tenant_metric_portal_leads\"\n    UNION ALL\n    SELECT *\n    FROM  \"houmdw_prod\".\"dbt_marts\".\"rental_tenant_metric_portal_leads_interactions\"\n    UNION ALL\n    SELECT *\n    FROM  \"houmdw_prod\".\"dbt_marts\".\"rental_tenant_metric_paid_media_cost\"\n    UNION ALL\n    SELECT *\n    FROM  \"houmdw_prod\".\"dbt_marts\".\"rental_tenant_metric_schedules_created\"\n    UNION ALL\n    SELECT *\n    FROM  \"houmdw_prod\".\"dbt_marts\".\"rental_tenant_metric_schedules_done\"\n    UNION ALL\n    SELECT *\n    FROM  \"houmdw_prod\".\"dbt_marts\".\"rental_tenant_metric_schedules_scheduled\"\n    UNION ALL\n    SELECT *\n    FROM  \"houmdw_prod\".\"dbt_marts\".\"rental_tenant_metric_reservations\"\n    UNION ALL\n    SELECT *\n    FROM  \"houmdw_prod\".\"dbt_marts\".\"rental_tenant_metric_reservations_effective\"\n    UNION ALL\n    SELECT *\n    FROM  \"houmdw_prod\".\"dbt_marts\".\"rental_tenant_metric_reservations_refunded\"\n    UNION ALL\n    SELECT *\n    FROM  \"houmdw_prod\".\"dbt_marts\".\"rental_tenant_metric_new_tenant\"\n    UNION ALL\n    SELECT *\n    FROM  \"houmdw_prod\".\"dbt_marts\".\"rental_tenant_metric_new_subs\"\n)\n\n\nSELECT \n    dim_geo.country\n    , dim_geo.country_sufix\n    , dim_geo.Region_Houm\n    , dim_geo.City_Houm\n    , metrics.*\nFROM metrics \nLEFT JOIN \"houmdw_prod\".\"dbt_dims\".\"dim_macrozones\" dim_geo ON dim_geo.geo_id = metrics.geo_id", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"rental_tenant_funnel\""}, "model.houm.rental_landlord_funnel": {"raw_sql": "{{ config(materialized='table') }}\n\nWITH metrics as (\n    SELECT *\n    FROM  {{ ref('rental_landlord_metric_leads') }}\n    UNION ALL\n    SELECT *\n    FROM  {{ ref('rental_landlord_metric_leads_qualified') }}\n    UNION ALL\n    SELECT *\n    FROM  {{ ref('rental_landlord_metric_leads_qualified_date') }}\n    UNION ALL\n    SELECT *\n    FROM  {{ ref('rental_landlord_metric_paid_media_cost') }}\n    UNION ALL    \n    SELECT *\n    FROM  {{ ref('rental_landlord_metric_photo_created') }}\n    UNION ALL\n    SELECT *\n    FROM  {{ ref('rental_landlord_metric_photo_done') }}\n    UNION ALL\n    SELECT *\n    FROM  {{ ref('rental_landlord_metric_photo_scheduled') }}\n    UNION ALL\n    SELECT *\n    FROM  {{ ref('rental_landlord_metric_new_rental_listing') }}\n    UNION ALL\n    SELECT *\n    FROM  {{ ref('rental_landlord_metric_new_rental_listing_b2c') }}\n)\n\n\nSELECT \n    dim_geo.country\n    , dim_geo.country_sufix\n    , dim_geo.Region_Houm\n    , dim_geo.City_Houm\n    , metrics.*\nFROM metrics \nLEFT JOIN {{ ref('dim_macrozones') }} dim_geo ON dim_geo.geo_id = metrics.geo_id", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.rental_landlord_metric_leads", "model.houm.rental_landlord_metric_leads_qualified", "model.houm.rental_landlord_metric_leads_qualified_date", "model.houm.rental_landlord_metric_paid_media_cost", "model.houm.rental_landlord_metric_photo_created", "model.houm.rental_landlord_metric_photo_done", "model.houm.rental_landlord_metric_photo_scheduled", "model.houm.rental_landlord_metric_new_rental_listing", "model.houm.rental_landlord_metric_new_rental_listing_b2c", "model.houm.dim_macrozones"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "funnel"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "funnel", "rentals", "rental_landlord_funnel"], "unique_id": "model.houm.rental_landlord_funnel", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "dwh/marts/funnel/rentals/rental_landlord_funnel.sql", "original_file_path": "models/dwh/marts/funnel/rentals/rental_landlord_funnel.sql", "name": "rental_landlord_funnel", "alias": "rental_landlord_funnel", "checksum": {"name": "sha256", "checksum": "7067a73aa4badbb57a49c80c2a6d7936eb5464d87218ef0f83510d69eb481e4c"}, "tags": ["dw", "marts", "funnel"], "refs": [["rental_landlord_metric_leads"], ["rental_landlord_metric_leads_qualified"], ["rental_landlord_metric_leads_qualified_date"], ["rental_landlord_metric_paid_media_cost"], ["rental_landlord_metric_photo_created"], ["rental_landlord_metric_photo_done"], ["rental_landlord_metric_photo_scheduled"], ["rental_landlord_metric_new_rental_listing"], ["rental_landlord_metric_new_rental_listing_b2c"], ["dim_macrozones"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/funnel/rentals/rental_landlord_funnel.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "table", "tags": ["dw", "marts", "funnel"]}, "created_at": 1654784474.684801, "compiled_sql": "\n\nWITH metrics as (\n    SELECT *\n    FROM  \"houmdw_prod\".\"dbt_marts\".\"rental_landlord_metric_leads\"\n    UNION ALL\n    SELECT *\n    FROM  \"houmdw_prod\".\"dbt_marts\".\"rental_landlord_metric_leads_qualified\"\n    UNION ALL\n    SELECT *\n    FROM  \"houmdw_prod\".\"dbt_marts\".\"rental_landlord_metric_leads_qualified_date\"\n    UNION ALL\n    SELECT *\n    FROM  \"houmdw_prod\".\"dbt_marts\".\"rental_landlord_metric_paid_media_cost\"\n    UNION ALL    \n    SELECT *\n    FROM  \"houmdw_prod\".\"dbt_marts\".\"rental_landlord_metric_photo_created\"\n    UNION ALL\n    SELECT *\n    FROM  \"houmdw_prod\".\"dbt_marts\".\"rental_landlord_metric_photo_done\"\n    UNION ALL\n    SELECT *\n    FROM  \"houmdw_prod\".\"dbt_marts\".\"rental_landlord_metric_photo_scheduled\"\n    UNION ALL\n    SELECT *\n    FROM  \"houmdw_prod\".\"dbt_marts\".\"rental_landlord_metric_new_rental_listing\"\n    UNION ALL\n    SELECT *\n    FROM  \"houmdw_prod\".\"dbt_marts\".\"rental_landlord_metric_new_rental_listing_b2c\"\n)\n\n\nSELECT \n    dim_geo.country\n    , dim_geo.country_sufix\n    , dim_geo.Region_Houm\n    , dim_geo.City_Houm\n    , metrics.*\nFROM metrics \nLEFT JOIN \"houmdw_prod\".\"dbt_dims\".\"dim_macrozones\" dim_geo ON dim_geo.geo_id = metrics.geo_id", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"rental_landlord_funnel\""}, "model.houm.sales_buyer_funnel": {"raw_sql": "{{ config(materialized='table') }}\n\nWITH metrics as (\n    SELECT *\n    FROM  {{ ref('sales_buyer_metrics_leads') }}\n    UNION ALL\n    SELECT *\n    FROM  {{ ref('sales_buyer_metrics_leads_sales') }}\n    UNION ALL\n    SELECT *\n    FROM  {{ ref('sales_buyer_metrics_leads_sales_qualified') }}\n    UNION ALL\n    SELECT *\n    FROM  {{ ref('sales_buyer_metrics_leads_sales_qualified_date') }}\n    UNION ALL\n    SELECT *\n    FROM  {{ ref('sales_buyer_metric_paid_media_cost') }}\n    UNION ALL\n    SELECT *\n    FROM  {{ ref('sales_buyer_metric_paid_media_cost_sales') }}\n    UNION ALL \n    SELECT *\n    FROM  {{ ref('sales_buyer_metric_schedules_created') }}\n    UNION ALL\n    SELECT *\n    FROM  {{ ref('sales_buyer_metric_schedules_done') }}\n    UNION ALL\n    SELECT *\n    FROM  {{ ref('sales_buyer_metric_schedules_scheduled') }}\n)\n\nSELECT \n    dim_geo.country\n    , dim_geo.country_sufix\n    , dim_geo.Region_Houm\n    , dim_geo.City_Houm\n    , metrics.*\nFROM metrics \nLEFT JOIN {{ ref('dim_macrozones') }} dim_geo ON dim_geo.geo_id = metrics.geo_id", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.sales_buyer_metrics_leads", "model.houm.sales_buyer_metrics_leads_sales", "model.houm.sales_buyer_metrics_leads_sales_qualified", "model.houm.sales_buyer_metrics_leads_sales_qualified_date", "model.houm.sales_buyer_metric_paid_media_cost", "model.houm.sales_buyer_metric_paid_media_cost_sales", "model.houm.sales_buyer_metric_schedules_created", "model.houm.sales_buyer_metric_schedules_done", "model.houm.sales_buyer_metric_schedules_scheduled", "model.houm.dim_macrozones"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "funnel"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "funnel", "sales", "sales_buyer_funnel"], "unique_id": "model.houm.sales_buyer_funnel", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "dwh/marts/funnel/sales/sales_buyer_funnel.sql", "original_file_path": "models/dwh/marts/funnel/sales/sales_buyer_funnel.sql", "name": "sales_buyer_funnel", "alias": "sales_buyer_funnel", "checksum": {"name": "sha256", "checksum": "560aec49e46a63ae3f6e9bf3330ef84bafcdb42f7812ac7b3189390dd74f0931"}, "tags": ["dw", "marts", "funnel"], "refs": [["sales_buyer_metrics_leads"], ["sales_buyer_metrics_leads_sales"], ["sales_buyer_metrics_leads_sales_qualified"], ["sales_buyer_metrics_leads_sales_qualified_date"], ["sales_buyer_metric_paid_media_cost"], ["sales_buyer_metric_paid_media_cost_sales"], ["sales_buyer_metric_schedules_created"], ["sales_buyer_metric_schedules_done"], ["sales_buyer_metric_schedules_scheduled"], ["dim_macrozones"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/funnel/sales/sales_buyer_funnel.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "table", "tags": ["dw", "marts", "funnel"]}, "created_at": 1654784474.686806, "compiled_sql": "\n\nWITH metrics as (\n    SELECT *\n    FROM  \"houmdw_prod\".\"dbt_marts\".\"sales_buyer_metrics_leads\"\n    UNION ALL\n    SELECT *\n    FROM  \"houmdw_prod\".\"dbt_marts\".\"sales_buyer_metrics_leads_sales\"\n    UNION ALL\n    SELECT *\n    FROM  \"houmdw_prod\".\"dbt_marts\".\"sales_buyer_metrics_leads_sales_qualified\"\n    UNION ALL\n    SELECT *\n    FROM  \"houmdw_prod\".\"dbt_marts\".\"sales_buyer_metrics_leads_sales_qualified_date\"\n    UNION ALL\n    SELECT *\n    FROM  \"houmdw_prod\".\"dbt_marts\".\"sales_buyer_metric_paid_media_cost\"\n    UNION ALL\n    SELECT *\n    FROM  \"houmdw_prod\".\"dbt_marts\".\"sales_buyer_metric_paid_media_cost_sales\"\n    UNION ALL \n    SELECT *\n    FROM  \"houmdw_prod\".\"dbt_marts\".\"sales_buyer_metric_schedules_created\"\n    UNION ALL\n    SELECT *\n    FROM  \"houmdw_prod\".\"dbt_marts\".\"sales_buyer_metric_schedules_done\"\n    UNION ALL\n    SELECT *\n    FROM  \"houmdw_prod\".\"dbt_marts\".\"sales_buyer_metric_schedules_scheduled\"\n)\n\nSELECT \n    dim_geo.country\n    , dim_geo.country_sufix\n    , dim_geo.Region_Houm\n    , dim_geo.City_Houm\n    , metrics.*\nFROM metrics \nLEFT JOIN \"houmdw_prod\".\"dbt_dims\".\"dim_macrozones\" dim_geo ON dim_geo.geo_id = metrics.geo_id", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"sales_buyer_funnel\""}, "model.houm.sales_seller_funnel": {"raw_sql": "{{ config(materialized='table') }}\n\nWITH metrics AS (\n    SELECT *\n    FROM  {{ ref('sales_seller_metric_leads') }}\n    UNION ALL \n    SELECT *\n    FROM  {{ ref('sales_seller_metric_leads_qualified') }}\n    UNION ALL \n    SELECT *\n    FROM  {{ ref('sales_seller_metric_leads_qualified_date') }}\n    UNION ALL \n    SELECT *\n    FROM  {{ ref('sales_seller_metric_paid_media_cost') }}\n    UNION ALL \n    SELECT *\n    FROM  {{ ref('sales_seller_metric_photo_created') }}\n    UNION ALL \n    SELECT *\n    FROM  {{ ref('sales_seller_metric_photo_done') }}\n    UNION ALL \n    SELECT *\n    FROM  {{ ref('sales_seller_metric_photo_scheduled') }}\n    UNION ALL \n    SELECT *\n    FROM  {{ ref('sales_seller_metric_new_sale_listing') }}\n    UNION ALL \n    SELECT *\n    FROM  {{ ref('sales_seller_metric_new_sale_listing_b2c') }}\n)\n\n\nSELECT \n    dim_geo.country\n    , dim_geo.country_sufix\n    , dim_geo.Region_Houm\n    , dim_geo.City_Houm\n    , metrics.*\nFROM metrics \nLEFT JOIN {{ ref('dim_macrozones') }} dim_geo ON dim_geo.geo_id = metrics.geo_id", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.sales_seller_metric_leads", "model.houm.sales_seller_metric_leads_qualified", "model.houm.sales_seller_metric_leads_qualified_date", "model.houm.sales_seller_metric_paid_media_cost", "model.houm.sales_seller_metric_photo_created", "model.houm.sales_seller_metric_photo_done", "model.houm.sales_seller_metric_photo_scheduled", "model.houm.sales_seller_metric_new_sale_listing", "model.houm.sales_seller_metric_new_sale_listing_b2c", "model.houm.dim_macrozones"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_marts", "database": null, "tags": ["dw", "marts", "funnel"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_marts", "fqn": ["houm", "dwh", "marts", "funnel", "sales", "sales_seller_funnel"], "unique_id": "model.houm.sales_seller_funnel", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "dwh/marts/funnel/sales/sales_seller_funnel.sql", "original_file_path": "models/dwh/marts/funnel/sales/sales_seller_funnel.sql", "name": "sales_seller_funnel", "alias": "sales_seller_funnel", "checksum": {"name": "sha256", "checksum": "db1423c8bfb682695c71de803c54c55412fdb0ab93193098da805efe2a40a316"}, "tags": ["dw", "marts", "funnel"], "refs": [["sales_seller_metric_leads"], ["sales_seller_metric_leads_qualified"], ["sales_seller_metric_leads_qualified_date"], ["sales_seller_metric_paid_media_cost"], ["sales_seller_metric_photo_created"], ["sales_seller_metric_photo_done"], ["sales_seller_metric_photo_scheduled"], ["sales_seller_metric_new_sale_listing"], ["sales_seller_metric_new_sale_listing_b2c"], ["dim_macrozones"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/funnel/sales/sales_seller_funnel.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_marts", "materialized": "table", "tags": ["dw", "marts", "funnel"]}, "created_at": 1654784474.68871, "compiled_sql": "\n\nWITH metrics AS (\n    SELECT *\n    FROM  \"houmdw_prod\".\"dbt_marts\".\"sales_seller_metric_leads\"\n    UNION ALL \n    SELECT *\n    FROM  \"houmdw_prod\".\"dbt_marts\".\"sales_seller_metric_leads_qualified\"\n    UNION ALL \n    SELECT *\n    FROM  \"houmdw_prod\".\"dbt_marts\".\"sales_seller_metric_leads_qualified_date\"\n    UNION ALL \n    SELECT *\n    FROM  \"houmdw_prod\".\"dbt_marts\".\"sales_seller_metric_paid_media_cost\"\n    UNION ALL \n    SELECT *\n    FROM  \"houmdw_prod\".\"dbt_marts\".\"sales_seller_metric_photo_created\"\n    UNION ALL \n    SELECT *\n    FROM  \"houmdw_prod\".\"dbt_marts\".\"sales_seller_metric_photo_done\"\n    UNION ALL \n    SELECT *\n    FROM  \"houmdw_prod\".\"dbt_marts\".\"sales_seller_metric_photo_scheduled\"\n    UNION ALL \n    SELECT *\n    FROM  \"houmdw_prod\".\"dbt_marts\".\"sales_seller_metric_new_sale_listing\"\n    UNION ALL \n    SELECT *\n    FROM  \"houmdw_prod\".\"dbt_marts\".\"sales_seller_metric_new_sale_listing_b2c\"\n)\n\n\nSELECT \n    dim_geo.country\n    , dim_geo.country_sufix\n    , dim_geo.Region_Houm\n    , dim_geo.City_Houm\n    , metrics.*\nFROM metrics \nLEFT JOIN \"houmdw_prod\".\"dbt_dims\".\"dim_macrozones\" dim_geo ON dim_geo.geo_id = metrics.geo_id", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_marts\".\"sales_seller_funnel\""}, "model.houm.dim_currency": {"raw_sql": "{{ config(materialized='incremental') }}\r\n\r\nwith usd_etl as (\r\n        SELECT getdate()::timestamp  as etl_time,\r\n                current_date::date as date \r\n                ,'USD' as currency_type\r\n                ,'US Dollar' as currency_name \r\n                ,'United State' as currency_country\r\n                ,'1'::float as value_usd\r\n)\r\n, clp_etl as (\r\n        SELECT getdate()::timestamp as etl_time\r\n            ,  current_date::date as date \r\n            ,'CLP' as currency_type\r\n            ,'Chilean Peso' as currency_name\r\n            ,'Chile' as currency_country\r\n            ,'813.01'::float as value_usd\r\n)\r\n, cop_etl as (\r\n        SELECT getdate()::timestamp as etl_time\r\n            ,current_date::date as date\r\n            ,'COP' as currency_type\r\n            ,'Colombian Peso' as currency_name\r\n            ,'Colombia' as currency_country\r\n            ,'3826.18'::float as value_usd\r\n)\r\nSELECT * FROM usd_etl\r\nUNION ALL\r\nSELECT * FROM clp_etl\r\nUNION ALL\r\nSELECT * FROM cop_etl", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": "dbt_dims", "database": null, "tags": ["dw", "dims"], "meta": {}, "materialized": "incremental", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_dims", "fqn": ["houm", "dwh", "dims", "dim_currency"], "unique_id": "model.houm.dim_currency", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "dwh/dims/dim_currency.sql", "original_file_path": "models/dwh/dims/dim_currency.sql", "name": "dim_currency", "alias": "dim_currency", "checksum": {"name": "sha256", "checksum": "383421fddc67e09b62b3c907bc80ee24f31c20988fd632745d781e5e7619a18f"}, "tags": ["dw", "dims"], "refs": [], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/dims/dim_currency.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_dims", "tags": ["dw", "dims"], "materialized": "incremental"}, "created_at": 1654784474.690531, "compiled_sql": "\n\nwith usd_etl as (\n        SELECT getdate()::timestamp  as etl_time,\n                current_date::date as date \n                ,'USD' as currency_type\n                ,'US Dollar' as currency_name \n                ,'United State' as currency_country\n                ,'1'::float as value_usd\n)\n, clp_etl as (\n        SELECT getdate()::timestamp as etl_time\n            ,  current_date::date as date \n            ,'CLP' as currency_type\n            ,'Chilean Peso' as currency_name\n            ,'Chile' as currency_country\n            ,'813.01'::float as value_usd\n)\n, cop_etl as (\n        SELECT getdate()::timestamp as etl_time\n            ,current_date::date as date\n            ,'COP' as currency_type\n            ,'Colombian Peso' as currency_name\n            ,'Colombia' as currency_country\n            ,'3826.18'::float as value_usd\n)\nSELECT * FROM usd_etl\nUNION ALL\nSELECT * FROM clp_etl\nUNION ALL\nSELECT * FROM cop_etl", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_dims\".\"dim_currency\""}, "model.houm.dim_properties": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nSELECT \r\n        a.id as property_id \r\n        ,b.status as rental_status\r\n        ,c.status as sales_status\r\n        ,a.*\r\nFROM {{ ref('proc_properties') }} a\r\nleft join {{ ref('proc_propertydetails') }} b on a.id = b.property_id \r\nleft join {{ ref('proc_property_salesdetails') }} c on a.id = c.property_id", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_properties", "model.houm.proc_propertydetails", "model.houm.proc_property_salesdetails"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_dims", "database": null, "tags": ["dw", "dims"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_dims", "fqn": ["houm", "dwh", "dims", "dim_properties"], "unique_id": "model.houm.dim_properties", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "dwh/dims/dim_properties.sql", "original_file_path": "models/dwh/dims/dim_properties.sql", "name": "dim_properties", "alias": "dim_properties", "checksum": {"name": "sha256", "checksum": "9b4b06890a7b2da5f9a4594d11b30f141a01610acc2f20c839e61a9c7f3ec9da"}, "tags": ["dw", "dims"], "refs": [["proc_properties"], ["proc_propertydetails"], ["proc_property_salesdetails"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/dims/dim_properties.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_dims", "tags": ["dw", "dims"], "materialized": "table"}, "created_at": 1654784474.692118, "compiled_sql": "\n\nSELECT \n        a.id as property_id \n        ,b.status as rental_status\n        ,c.status as sales_status\n        ,a.*\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_properties\" a\nleft join \"houmdw_prod\".\"dbt_processing\".\"proc_propertydetails\" b on a.id = b.property_id \nleft join \"houmdw_prod\".\"dbt_processing\".\"proc_property_salesdetails\" c on a.id = c.property_id", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_dims\".\"dim_properties\""}, "model.houm.dim_business": {"raw_sql": "{{ config(materialized='table') }}\n\nWITH raw_dim AS (\nSELECT DISTINCT \n\tMIN(original_time) as created_at,\n\tbusiness,\n\tsupply_source,\n\tsupply_relation,\n\tfunnel\nFROM {{ref('proc_tmp_supply_leads')}} \nGROUP BY 2,3,4,5\nORDER BY 1 \n)\nSELECT\n\tROW_NUMBER() OVER() AS id,\n\traw_dim.*\nFROM raw_dim", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_tmp_supply_leads"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_dims", "database": null, "tags": ["dw", "dims"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_dims", "fqn": ["houm", "dwh", "dims", "dim_business"], "unique_id": "model.houm.dim_business", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "dwh/dims/dim_business.sql", "original_file_path": "models/dwh/dims/dim_business.sql", "name": "dim_business", "alias": "dim_business", "checksum": {"name": "sha256", "checksum": "842bf82207e02753a7b8238ea1e99840223f84ab6cdfabc8e74583a2e0ce042d"}, "tags": ["dw", "dims"], "refs": [["proc_tmp_supply_leads"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/dims/dim_business.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_dims", "tags": ["dw", "dims"], "materialized": "table"}, "created_at": 1654784474.694035, "compiled_sql": "\n\nWITH raw_dim AS (\nSELECT DISTINCT \n\tMIN(original_time) as created_at,\n\tbusiness,\n\tsupply_source,\n\tsupply_relation,\n\tfunnel\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_tmp_supply_leads\" \nGROUP BY 2,3,4,5\nORDER BY 1 \n)\nSELECT\n\tROW_NUMBER() OVER() AS id,\n\traw_dim.*\nFROM raw_dim", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_dims\".\"dim_business\""}, "model.houm.dim_macrozones": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nSELECT geo_id,\r\n        created_at,\r\n        updated_at,\r\n        name,\r\n        description,\r\n        country,\r\n        polygon,\r\n        city,\r\n        city_marketplace_id,\r\n        timezone,\r\n        country_sufix,\r\n        Region_Houm,\r\n        City_Houm\r\nFROM {{ ref('proc_macrozone') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_macrozone"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_dims", "database": null, "tags": ["dw", "dims"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_dims", "fqn": ["houm", "dwh", "dims", "dim_macrozones"], "unique_id": "model.houm.dim_macrozones", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "dwh/dims/dim_macrozones.sql", "original_file_path": "models/dwh/dims/dim_macrozones.sql", "name": "dim_macrozones", "alias": "dim_macrozones", "checksum": {"name": "sha256", "checksum": "8d644027b51244696cc665eec890721817240f02ed50f7a17ac66e9d9f599a09"}, "tags": ["dw", "dims"], "refs": [["proc_macrozone"]], "sources": [], "description": "", "columns": {"macrozone": {"name": "macrozone", "description": "This is operational name of a polygon at Houm", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "houm://models/dwh/dims/schema.yml", "compiled_path": "target/compiled/houm/models/dwh/dims/dim_macrozones.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_dims", "tags": ["dw", "dims"], "materialized": "table"}, "created_at": 1654784475.648248, "compiled_sql": "\n\nSELECT geo_id,\n        created_at,\n        updated_at,\n        name,\n        description,\n        country,\n        polygon,\n        city,\n        city_marketplace_id,\n        timezone,\n        country_sufix,\n        Region_Houm,\n        City_Houm\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_macrozone\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_dims\".\"dim_macrozones\""}, "model.houm.dim_pipedrive_locations": {"raw_sql": "{{ config(materialized='table') }}\n\nWITH raw_dim AS (\nSELECT DISTINCT \n\tMIN(original_time) AS created_at,\n\tcountry,\n\tregion,\n\tcity\nFROM {{ref('proc_tmp_supply_leads')}} \nGROUP BY 2,3,4\nORDER BY created_at\n)\nSELECT\n\tROW_NUMBER() OVER() AS id,\n\traw_dim.*\nFROM raw_dim", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_tmp_supply_leads"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_dims", "database": null, "tags": ["dw", "dims"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_dims", "fqn": ["houm", "dwh", "dims", "dim_pipedrive_locations"], "unique_id": "model.houm.dim_pipedrive_locations", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "dwh/dims/dim_pipedrive_locations.sql", "original_file_path": "models/dwh/dims/dim_pipedrive_locations.sql", "name": "dim_pipedrive_locations", "alias": "dim_pipedrive_locations", "checksum": {"name": "sha256", "checksum": "ed026bb03d0bc2642957d1e6a67f032b4124db1b1467a154d3c89510eafce154"}, "tags": ["dw", "dims"], "refs": [["proc_tmp_supply_leads"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/dims/dim_pipedrive_locations.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_dims", "tags": ["dw", "dims"], "materialized": "table"}, "created_at": 1654784474.697207, "compiled_sql": "\n\nWITH raw_dim AS (\nSELECT DISTINCT \n\tMIN(original_time) AS created_at,\n\tcountry,\n\tregion,\n\tcity\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_tmp_supply_leads\" \nGROUP BY 2,3,4\nORDER BY created_at\n)\nSELECT\n\tROW_NUMBER() OVER() AS id,\n\traw_dim.*\nFROM raw_dim", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_dims\".\"dim_pipedrive_locations\""}, "model.houm.dim_cities": {"raw_sql": "{{ config(materialized='table') }}\n\nselect distinct \n\tCity_Houm, \n\tregion_houm,\n\tmin(geo_id) as geo_id,\n\tmax(timezone) as timezone\nfrom {{ref('proc_macrozone')}}\ngroup by 1,2", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_macrozone"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_dims", "database": null, "tags": ["dw", "dims"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_dims", "fqn": ["houm", "dwh", "dims", "dim_cities"], "unique_id": "model.houm.dim_cities", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "dwh/dims/dim_cities.sql", "original_file_path": "models/dwh/dims/dim_cities.sql", "name": "dim_cities", "alias": "dim_cities", "checksum": {"name": "sha256", "checksum": "b2d0f115acfcfeaf4da8889b97333a93c416e21fb4006f35e2572bbe8c107935"}, "tags": ["dw", "dims"], "refs": [["proc_macrozone"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/dims/dim_cities.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_dims", "tags": ["dw", "dims"], "materialized": "table"}, "created_at": 1654784474.6988401, "compiled_sql": "\n\nselect distinct \n\tCity_Houm, \n\tregion_houm,\n\tmin(geo_id) as geo_id,\n\tmax(timezone) as timezone\nfrom \"houmdw_prod\".\"dbt_processing\".\"proc_macrozone\"\ngroup by 1,2", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_dims\".\"dim_cities\""}, "model.houm.dim_dates": {"raw_sql": "{{ config(materialized='view') }}\r\n\r\n\r\n SELECT\r\n    cast(seq + 1 AS INTEGER)                                      AS date_id,\r\n-- DATE\r\n    datum                                                         AS full_date,\r\n    TO_CHAR(datum, 'DD/MM/YYYY') :: CHAR(10)                      AS au_format_date,\r\n    TO_CHAR(datum, 'MM/DD/YYYY') :: CHAR(10)                      AS us_format_date,\r\n-- YEAR\r\n    cast(extract(YEAR FROM datum) AS SMALLINT)                    AS year_number,\r\n    cast(extract(WEEK FROM datum) AS SMALLINT)                    AS year_week_number,\r\n    cast(extract(DOY FROM datum) AS SMALLINT)                     AS year_day_number,\r\n    cast(to_char(datum + INTERVAL '6' MONTH, 'yyyy') AS SMALLINT) AS au_fiscal_year_number,\r\n    cast(to_char(datum + INTERVAL '3' MONTH, 'yyyy') AS SMALLINT) AS us_fiscal_year_number,\r\n-- QUARTER\r\n    cast(to_char(datum, 'Q') AS SMALLINT)                         AS qtr_number,\r\n    cast(to_char(datum + INTERVAL '6' MONTH, 'Q') AS SMALLINT)    AS au_fiscal_qtr_number,\r\n    cast(to_char(datum + INTERVAL '3' MONTH, 'Q') AS SMALLINT)    AS us_fiscal_qtr_number,\r\n-- MONTH\r\n    cast(extract(MONTH FROM datum) AS SMALLINT)                   AS month_number,\r\n    to_char(datum, 'Month')                                       AS month_name,\r\n    cast(extract(DAY FROM datum) AS SMALLINT)                     AS month_day_number,\r\n-- WEEK\r\n    cast(to_char(datum, 'D') AS SMALLINT)                         AS week_day_number,\r\n-- DAY\r\n    to_char(datum, 'Day')                                         AS day_name,\r\n    CASE WHEN to_char(datum, 'D') IN ('1', '7')\r\n      THEN 0\r\n    ELSE 1 END                                                    AS day_is_weekday,\r\n    CASE WHEN\r\n      extract(DAY FROM (datum + (1 - extract(DAY FROM datum)) :: INTEGER +\r\n                        INTERVAL '1' MONTH) :: DATE -\r\n                       INTERVAL '1' DAY) = extract(DAY FROM datum)\r\n      THEN 1\r\n    ELSE 0 END                                                    AS day_is_last_of_month\r\n  FROM\r\n    (\r\n      SELECT\r\n        '2018-01-01' :: DATE + generate_series AS datum,\r\n        generate_series                        AS seq\r\n      FROM generate_series(0, 7 * 365, 1)\r\n    ) DQ\r\n  ORDER BY 1 desc", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": "dbt_dims", "database": null, "tags": ["dw", "dims"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_dims", "fqn": ["houm", "dwh", "dims", "dim_dates"], "unique_id": "model.houm.dim_dates", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "dwh/dims/dim_dates.sql", "original_file_path": "models/dwh/dims/dim_dates.sql", "name": "dim_dates", "alias": "dim_dates", "checksum": {"name": "sha256", "checksum": "ff81a580689617f2dd2e80437c26f12b2f0a906b026c7553ff47506a01d290c1"}, "tags": ["dw", "dims"], "refs": [], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/dims/dim_dates.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_dims", "tags": ["dw", "dims"], "materialized": "view"}, "created_at": 1654784474.7006452, "compiled_sql": "\n\n\n SELECT\n    cast(seq + 1 AS INTEGER)                                      AS date_id,\n-- DATE\n    datum                                                         AS full_date,\n    TO_CHAR(datum, 'DD/MM/YYYY') :: CHAR(10)                      AS au_format_date,\n    TO_CHAR(datum, 'MM/DD/YYYY') :: CHAR(10)                      AS us_format_date,\n-- YEAR\n    cast(extract(YEAR FROM datum) AS SMALLINT)                    AS year_number,\n    cast(extract(WEEK FROM datum) AS SMALLINT)                    AS year_week_number,\n    cast(extract(DOY FROM datum) AS SMALLINT)                     AS year_day_number,\n    cast(to_char(datum + INTERVAL '6' MONTH, 'yyyy') AS SMALLINT) AS au_fiscal_year_number,\n    cast(to_char(datum + INTERVAL '3' MONTH, 'yyyy') AS SMALLINT) AS us_fiscal_year_number,\n-- QUARTER\n    cast(to_char(datum, 'Q') AS SMALLINT)                         AS qtr_number,\n    cast(to_char(datum + INTERVAL '6' MONTH, 'Q') AS SMALLINT)    AS au_fiscal_qtr_number,\n    cast(to_char(datum + INTERVAL '3' MONTH, 'Q') AS SMALLINT)    AS us_fiscal_qtr_number,\n-- MONTH\n    cast(extract(MONTH FROM datum) AS SMALLINT)                   AS month_number,\n    to_char(datum, 'Month')                                       AS month_name,\n    cast(extract(DAY FROM datum) AS SMALLINT)                     AS month_day_number,\n-- WEEK\n    cast(to_char(datum, 'D') AS SMALLINT)                         AS week_day_number,\n-- DAY\n    to_char(datum, 'Day')                                         AS day_name,\n    CASE WHEN to_char(datum, 'D') IN ('1', '7')\n      THEN 0\n    ELSE 1 END                                                    AS day_is_weekday,\n    CASE WHEN\n      extract(DAY FROM (datum + (1 - extract(DAY FROM datum)) :: INTEGER +\n                        INTERVAL '1' MONTH) :: DATE -\n                       INTERVAL '1' DAY) = extract(DAY FROM datum)\n      THEN 1\n    ELSE 0 END                                                    AS day_is_last_of_month\n  FROM\n    (\n      SELECT\n        '2018-01-01' :: DATE + generate_series AS datum,\n        generate_series                        AS seq\n      FROM generate_series(0, 7 * 365, 1)\n    ) DQ\n  ORDER BY 1 desc", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_dims\".\"dim_dates\""}, "model.houm.dim_locations": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nSELECT  \r\n        id,\r\n        created_at,\r\n        updated_at,\r\n        macrozone,\r\n        city,\r\n        region,\r\n        country,\r\n        description,\r\n        granularity,\r\n        polygon\r\nFROM {{ source('public', 'dim_polygons') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.public.dim_polygons"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_dims", "database": null, "tags": ["dw", "dims"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_dims", "fqn": ["houm", "dwh", "dims", "dim_locations"], "unique_id": "model.houm.dim_locations", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "dwh/dims/dim_locations.sql", "original_file_path": "models/dwh/dims/dim_locations.sql", "name": "dim_locations", "alias": "dim_locations", "checksum": {"name": "sha256", "checksum": "18addb582786d064e0b3f85ff42e8c3dab011dd6c8a38cf1308694217a2fe426"}, "tags": ["dw", "dims"], "refs": [], "sources": [["public", "dim_polygons"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/dims/dim_locations.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_dims", "tags": ["dw", "dims"], "materialized": "table"}, "created_at": 1654784474.702208, "compiled_sql": "\n\nSELECT  \n        id,\n        created_at,\n        updated_at,\n        macrozone,\n        city,\n        region,\n        country,\n        description,\n        granularity,\n        polygon\nFROM \"houmdw_prod\".\"public\".\"dim_polygons\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_dims\".\"dim_locations\""}, "model.houm.rental_landlord_metric_details_paid_media_cost": {"raw_sql": "{{ config(materialized='table') }}\n\nWITH paid_media_cost AS (\nSELECT *\nFROM  {{ ref('proc_marketing_paid_media') }} AS proc_marketing_paid_media \nWHERE TRUE\n    AND geo_id IS NOT NULL\n    AND business_marketing = 'Landlord'\n    AND funnel_marketing = 'Supply'\n)\n\nSELECT    \n    25 AS orden ,\n    'Paid Media Cost'::TEXT AS metric ,\n    geo_id , \n    '{{ var(\"processed_time\") }}' AS processed_time ,\n    executed_at ,\n    day_cost ,\n    day_clicks , \n    day_impressions ,\n    CASE WHEN executed_at =  dateadd(day,-1,'{{ var(\"processed_time\") }}'::date) THEN 1  ELSE 0 END AS yesterday ,\n    CASE WHEN executed_at =  dateadd(day,-2,'{{ var(\"processed_time\") }}'::date)  THEN 1  ELSE 0 END AS daybeforeyesterday ,\n    CASE WHEN date_trunc('week',executed_at)  =  dateadd(week,-1, date_trunc('week','{{ var(\"processed_time\") }}'::date) )  THEN 1  ELSE 0 END AS LastWeek ,\n    CASE WHEN date_trunc('week',executed_at)  =  dateadd(week,-2, date_trunc('week','{{ var(\"processed_time\") }}'::date) )  THEN 1  ELSE 0 END AS PastLastWeek ,\n    CASE WHEN \n                date_trunc('month',executed_at) =  date_trunc('month','{{ var(\"processed_time\") }}'::date) \n                 AND executed_at <=   dateadd(day,-1,'{{ var(\"processed_time\") }}'::date)  THEN 1  ELSE 0 END AS ThisMonthtoday ,\n    CASE WHEN \n                date_trunc('month',executed_at) =  dateadd(month,-1, date_trunc('month','{{ var(\"processed_time\") }}'::date) )  AND \n                executed_at <= dateadd(month,-1, '{{ var(\"processed_time\") }}'::date) \n            THEN 1  ELSE 0 END AS LastMonthtoday ,\n    CASE WHEN date_trunc('month',executed_at) =  dateadd(month,-1, date_trunc('month','{{ var(\"processed_time\") }}'::date) ) \n            THEN 1  ELSE 0 END AS LastMonth ,\n    CASE WHEN date_trunc('month',executed_at) =  dateadd(month,-2, date_trunc('month','{{ var(\"processed_time\") }}'::date) ) \n            THEN 1  ELSE 0 END AS LasttwoMonth ,\n    CASE WHEN date_trunc('month',executed_at) =  dateadd(month,-3, date_trunc('month','{{ var(\"processed_time\") }}'::date) ) \n            THEN 1  ELSE 0 END AS LastthreeMonth\nFROM paid_media_cost\nORDER BY executed_at DESC", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_marketing_paid_media"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_facts", "database": null, "tags": ["dw", "facts", "supply"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_facts", "fqn": ["houm", "dwh", "facts", "supply", "rental_landlord_metric_details_paid_media_cost"], "unique_id": "model.houm.rental_landlord_metric_details_paid_media_cost", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "dwh/facts/supply/rental_landlord_metric_details_paid_media_cost.sql", "original_file_path": "models/dwh/facts/supply/rental_landlord_metric_details_paid_media_cost.sql", "name": "rental_landlord_metric_details_paid_media_cost", "alias": "rental_landlord_metric_details_paid_media_cost", "checksum": {"name": "sha256", "checksum": "d9764249aab91e46184532cdd8d4fb7b36932e1fb2064eb3ce75a1d75c718753"}, "tags": ["dw", "facts", "supply"], "refs": [["proc_marketing_paid_media"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/facts/supply/rental_landlord_metric_details_paid_media_cost.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_facts", "tags": ["dw", "facts", "supply"], "materialized": "table"}, "created_at": 1654784474.703819, "compiled_sql": "\n\nWITH paid_media_cost AS (\nSELECT *\nFROM  \"houmdw_prod\".\"dbt_processing\".\"proc_marketing_paid_media\" AS proc_marketing_paid_media \nWHERE TRUE\n    AND geo_id IS NOT NULL\n    AND business_marketing = 'Landlord'\n    AND funnel_marketing = 'Supply'\n)\n\nSELECT    \n    25 AS orden ,\n    'Paid Media Cost'::TEXT AS metric ,\n    geo_id , \n    '2022-06-13 11:01:47.183332-04:00' AS processed_time ,\n    executed_at ,\n    day_cost ,\n    day_clicks , \n    day_impressions ,\n    CASE WHEN executed_at =  dateadd(day,-1,'2022-06-13 11:01:47.183332-04:00'::date) THEN 1  ELSE 0 END AS yesterday ,\n    CASE WHEN executed_at =  dateadd(day,-2,'2022-06-13 11:01:47.183332-04:00'::date)  THEN 1  ELSE 0 END AS daybeforeyesterday ,\n    CASE WHEN date_trunc('week',executed_at)  =  dateadd(week,-1, date_trunc('week','2022-06-13 11:01:47.183332-04:00'::date) )  THEN 1  ELSE 0 END AS LastWeek ,\n    CASE WHEN date_trunc('week',executed_at)  =  dateadd(week,-2, date_trunc('week','2022-06-13 11:01:47.183332-04:00'::date) )  THEN 1  ELSE 0 END AS PastLastWeek ,\n    CASE WHEN \n                date_trunc('month',executed_at) =  date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) \n                 AND executed_at <=   dateadd(day,-1,'2022-06-13 11:01:47.183332-04:00'::date)  THEN 1  ELSE 0 END AS ThisMonthtoday ,\n    CASE WHEN \n                date_trunc('month',executed_at) =  dateadd(month,-1, date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) )  AND \n                executed_at <= dateadd(month,-1, '2022-06-13 11:01:47.183332-04:00'::date) \n            THEN 1  ELSE 0 END AS LastMonthtoday ,\n    CASE WHEN date_trunc('month',executed_at) =  dateadd(month,-1, date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) ) \n            THEN 1  ELSE 0 END AS LastMonth ,\n    CASE WHEN date_trunc('month',executed_at) =  dateadd(month,-2, date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) ) \n            THEN 1  ELSE 0 END AS LasttwoMonth ,\n    CASE WHEN date_trunc('month',executed_at) =  dateadd(month,-3, date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) ) \n            THEN 1  ELSE 0 END AS LastthreeMonth\nFROM paid_media_cost\nORDER BY executed_at DESC", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_facts\".\"rental_landlord_metric_details_paid_media_cost\""}, "model.houm.sales_seller_metric_details_leads_qualified_date": {"raw_sql": "{{ config(materialized='table') }}\n\nWITH  supply_seller_leads_clean as (\nSELECT *\nFROM  {{ ref('proc_supply_seller_leads') }} \nWHERE TRUE \nAND ((lost_reason NOT LIKE '%Test%'  AND lost_reason != 'Pruebas'  AND lost_reason != 'Cotizaci\u00f3n Duplicada') or lost_reason is null)\nAND (supply_source != 'B2B' OR supply_source is null)\n)\n\nSELECT \n    21 orden \n    , 'Unique Seller Qualified Leads'::TEXT metric\n    , geo_id\n    , '{{ var(\"processed_time\") }}'  processed_time\n    , add_time\n    , qualification\n    , fecha_calificacion\n    , person_id\n    , email\n    , deal_id\n    , CASE WHEN fecha_calificacion =  dateadd(day,-1,'{{ var(\"processed_time\") }}'::date) THEN 1  ELSE 0 END yesterday\n    , CASE WHEN fecha_calificacion =  dateadd(day,-2,'{{ var(\"processed_time\") }}'::date)  THEN 1  ELSE 0 END daybeforeyesterday\n    , CASE WHEN date_trunc('week',fecha_calificacion)  =  dateadd(week,-1, date_trunc('week','{{ var(\"processed_time\") }}'::date) )  THEN 1  ELSE 0 END LastWeek\n    , CASE WHEN date_trunc('week',fecha_calificacion)  =  dateadd(week,-2, date_trunc('week','{{ var(\"processed_time\") }}'::date) )  THEN 1  ELSE 0 END PastLastWeek\n    , CASE WHEN \n                date_trunc('month',fecha_calificacion) =  date_trunc('month','{{ var(\"processed_time\") }}'::date) \n                 AND fecha_calificacion <=   dateadd(day,-1,'{{ var(\"processed_time\") }}'::date)  THEN 1  ELSE 0 END ThisMonthtoday\n    , CASE WHEN \n                date_trunc('month',fecha_calificacion) =  dateadd(month,-1, date_trunc('month','{{ var(\"processed_time\") }}'::date) )  AND  \n                fecha_calificacion <= dateadd(month,-1, '{{ var(\"processed_time\") }}'::date) \n            THEN 1  ELSE 0 END LastMonthtoday\n    , CASE WHEN date_trunc('month',fecha_calificacion) =  dateadd(month,-1, date_trunc('month','{{ var(\"processed_time\") }}'::date) ) \n            THEN 1  ELSE 0 END LastMonth\n    , CASE WHEN date_trunc('month',fecha_calificacion) =  dateadd(month,-2, date_trunc('month','{{ var(\"processed_time\") }}'::date) ) \n            THEN 1  ELSE 0 END LasttwoMonth\n    , CASE WHEN date_trunc('month',fecha_calificacion) =  dateadd(month,-3, date_trunc('month','{{ var(\"processed_time\") }}'::date) ) \n            THEN 1  ELSE 0 END LastthreeMonth\nFROM supply_seller_leads_clean\nwhere qualification >= 3  AND qualification <= 5\nORDER BY fecha_calificacion desc", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_supply_seller_leads"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_facts", "database": null, "tags": ["dw", "facts", "supply"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_facts", "fqn": ["houm", "dwh", "facts", "supply", "sales_seller_metric_details_leads_qualified_date"], "unique_id": "model.houm.sales_seller_metric_details_leads_qualified_date", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "dwh/facts/supply/sales_seller_metric_details_leads_qualified_date.sql", "original_file_path": "models/dwh/facts/supply/sales_seller_metric_details_leads_qualified_date.sql", "name": "sales_seller_metric_details_leads_qualified_date", "alias": "sales_seller_metric_details_leads_qualified_date", "checksum": {"name": "sha256", "checksum": "dedaca0685ccf9abd8f24e198f9d7591d767ea7d1ec3a6b6f1601597ccfae141"}, "tags": ["dw", "facts", "supply"], "refs": [["proc_supply_seller_leads"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/facts/supply/sales_seller_metric_details_leads_qualified_date.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_facts", "tags": ["dw", "facts", "supply"], "materialized": "table"}, "created_at": 1654784474.7177632, "compiled_sql": "\n\nWITH  supply_seller_leads_clean as (\nSELECT *\nFROM  \"houmdw_prod\".\"dbt_processing\".\"proc_supply_seller_leads\" \nWHERE TRUE \nAND ((lost_reason NOT LIKE '%Test%'  AND lost_reason != 'Pruebas'  AND lost_reason != 'Cotizaci\u00f3n Duplicada') or lost_reason is null)\nAND (supply_source != 'B2B' OR supply_source is null)\n)\n\nSELECT \n    21 orden \n    , 'Unique Seller Qualified Leads'::TEXT metric\n    , geo_id\n    , '2022-06-13 11:01:47.183332-04:00'  processed_time\n    , add_time\n    , qualification\n    , fecha_calificacion\n    , person_id\n    , email\n    , deal_id\n    , CASE WHEN fecha_calificacion =  dateadd(day,-1,'2022-06-13 11:01:47.183332-04:00'::date) THEN 1  ELSE 0 END yesterday\n    , CASE WHEN fecha_calificacion =  dateadd(day,-2,'2022-06-13 11:01:47.183332-04:00'::date)  THEN 1  ELSE 0 END daybeforeyesterday\n    , CASE WHEN date_trunc('week',fecha_calificacion)  =  dateadd(week,-1, date_trunc('week','2022-06-13 11:01:47.183332-04:00'::date) )  THEN 1  ELSE 0 END LastWeek\n    , CASE WHEN date_trunc('week',fecha_calificacion)  =  dateadd(week,-2, date_trunc('week','2022-06-13 11:01:47.183332-04:00'::date) )  THEN 1  ELSE 0 END PastLastWeek\n    , CASE WHEN \n                date_trunc('month',fecha_calificacion) =  date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) \n                 AND fecha_calificacion <=   dateadd(day,-1,'2022-06-13 11:01:47.183332-04:00'::date)  THEN 1  ELSE 0 END ThisMonthtoday\n    , CASE WHEN \n                date_trunc('month',fecha_calificacion) =  dateadd(month,-1, date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) )  AND  \n                fecha_calificacion <= dateadd(month,-1, '2022-06-13 11:01:47.183332-04:00'::date) \n            THEN 1  ELSE 0 END LastMonthtoday\n    , CASE WHEN date_trunc('month',fecha_calificacion) =  dateadd(month,-1, date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) ) \n            THEN 1  ELSE 0 END LastMonth\n    , CASE WHEN date_trunc('month',fecha_calificacion) =  dateadd(month,-2, date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) ) \n            THEN 1  ELSE 0 END LasttwoMonth\n    , CASE WHEN date_trunc('month',fecha_calificacion) =  dateadd(month,-3, date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) ) \n            THEN 1  ELSE 0 END LastthreeMonth\nFROM supply_seller_leads_clean\nwhere qualification >= 3  AND qualification <= 5\nORDER BY fecha_calificacion desc", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_facts\".\"sales_seller_metric_details_leads_qualified_date\""}, "model.houm.sales_seller_metric_details_paid_media_cost": {"raw_sql": "{{ config(materialized='table') }}\n\nWITH paid_media_cost AS (\nSELECT *\nFROM  {{ ref('proc_marketing_paid_media') }} AS proc_marketing_paid_media \nWHERE TRUE\n    AND geo_id IS NOT NULL\n    AND business_marketing = 'Seller'\n    AND funnel_marketing = 'Supply'\n)\n\nSELECT    \n    25 AS orden ,\n    'Paid Media Cost'::TEXT AS metric ,\n    geo_id , \n    '{{ var(\"processed_time\") }}' AS processed_time ,\n    executed_at ,\n    day_cost ,\n    day_clicks , \n    day_impressions ,\n    CASE WHEN executed_at =  dateadd(day,-1,'{{ var(\"processed_time\") }}'::date) THEN 1  ELSE 0 END AS yesterday ,\n    CASE WHEN executed_at =  dateadd(day,-2,'{{ var(\"processed_time\") }}'::date)  THEN 1  ELSE 0 END AS daybeforeyesterday ,\n    CASE WHEN date_trunc('week',executed_at)  =  dateadd(week,-1, date_trunc('week','{{ var(\"processed_time\") }}'::date) )  THEN 1  ELSE 0 END AS LastWeek ,\n    CASE WHEN date_trunc('week',executed_at)  =  dateadd(week,-2, date_trunc('week','{{ var(\"processed_time\") }}'::date) )  THEN 1  ELSE 0 END AS PastLastWeek ,\n    CASE WHEN \n                date_trunc('month',executed_at) =  date_trunc('month','{{ var(\"processed_time\") }}'::date) \n                 AND executed_at <=   dateadd(day,-1,'{{ var(\"processed_time\") }}'::date)  THEN 1  ELSE 0 END AS ThisMonthtoday ,\n    CASE WHEN \n                date_trunc('month',executed_at) =  dateadd(month,-1, date_trunc('month','{{ var(\"processed_time\") }}'::date) )  AND \n                executed_at <= dateadd(month,-1, '{{ var(\"processed_time\") }}'::date) \n            THEN 1  ELSE 0 END AS LastMonthtoday ,\n    CASE WHEN date_trunc('month',executed_at) =  dateadd(month,-1, date_trunc('month','{{ var(\"processed_time\") }}'::date) ) \n            THEN 1  ELSE 0 END AS LastMonth ,\n    CASE WHEN date_trunc('month',executed_at) =  dateadd(month,-2, date_trunc('month','{{ var(\"processed_time\") }}'::date) ) \n            THEN 1  ELSE 0 END AS LasttwoMonth ,\n    CASE WHEN date_trunc('month',executed_at) =  dateadd(month,-3, date_trunc('month','{{ var(\"processed_time\") }}'::date) ) \n            THEN 1  ELSE 0 END AS LastthreeMonth\nFROM paid_media_cost\nORDER BY executed_at DESC", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_marketing_paid_media"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_facts", "database": null, "tags": ["dw", "facts", "supply"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_facts", "fqn": ["houm", "dwh", "facts", "supply", "sales_seller_metric_details_paid_media_cost"], "unique_id": "model.houm.sales_seller_metric_details_paid_media_cost", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "dwh/facts/supply/sales_seller_metric_details_paid_media_cost.sql", "original_file_path": "models/dwh/facts/supply/sales_seller_metric_details_paid_media_cost.sql", "name": "sales_seller_metric_details_paid_media_cost", "alias": "sales_seller_metric_details_paid_media_cost", "checksum": {"name": "sha256", "checksum": "3405d7c022675dacc46c687fc3a1899763768a85f0ea32ff9ad8293cdb845e53"}, "tags": ["dw", "facts", "supply"], "refs": [["proc_marketing_paid_media"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/facts/supply/sales_seller_metric_details_paid_media_cost.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_facts", "tags": ["dw", "facts", "supply"], "materialized": "table"}, "created_at": 1654784474.731508, "compiled_sql": "\n\nWITH paid_media_cost AS (\nSELECT *\nFROM  \"houmdw_prod\".\"dbt_processing\".\"proc_marketing_paid_media\" AS proc_marketing_paid_media \nWHERE TRUE\n    AND geo_id IS NOT NULL\n    AND business_marketing = 'Seller'\n    AND funnel_marketing = 'Supply'\n)\n\nSELECT    \n    25 AS orden ,\n    'Paid Media Cost'::TEXT AS metric ,\n    geo_id , \n    '2022-06-13 11:01:47.183332-04:00' AS processed_time ,\n    executed_at ,\n    day_cost ,\n    day_clicks , \n    day_impressions ,\n    CASE WHEN executed_at =  dateadd(day,-1,'2022-06-13 11:01:47.183332-04:00'::date) THEN 1  ELSE 0 END AS yesterday ,\n    CASE WHEN executed_at =  dateadd(day,-2,'2022-06-13 11:01:47.183332-04:00'::date)  THEN 1  ELSE 0 END AS daybeforeyesterday ,\n    CASE WHEN date_trunc('week',executed_at)  =  dateadd(week,-1, date_trunc('week','2022-06-13 11:01:47.183332-04:00'::date) )  THEN 1  ELSE 0 END AS LastWeek ,\n    CASE WHEN date_trunc('week',executed_at)  =  dateadd(week,-2, date_trunc('week','2022-06-13 11:01:47.183332-04:00'::date) )  THEN 1  ELSE 0 END AS PastLastWeek ,\n    CASE WHEN \n                date_trunc('month',executed_at) =  date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) \n                 AND executed_at <=   dateadd(day,-1,'2022-06-13 11:01:47.183332-04:00'::date)  THEN 1  ELSE 0 END AS ThisMonthtoday ,\n    CASE WHEN \n                date_trunc('month',executed_at) =  dateadd(month,-1, date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) )  AND \n                executed_at <= dateadd(month,-1, '2022-06-13 11:01:47.183332-04:00'::date) \n            THEN 1  ELSE 0 END AS LastMonthtoday ,\n    CASE WHEN date_trunc('month',executed_at) =  dateadd(month,-1, date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) ) \n            THEN 1  ELSE 0 END AS LastMonth ,\n    CASE WHEN date_trunc('month',executed_at) =  dateadd(month,-2, date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) ) \n            THEN 1  ELSE 0 END AS LasttwoMonth ,\n    CASE WHEN date_trunc('month',executed_at) =  dateadd(month,-3, date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) ) \n            THEN 1  ELSE 0 END AS LastthreeMonth\nFROM paid_media_cost\nORDER BY executed_at DESC", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_facts\".\"sales_seller_metric_details_paid_media_cost\""}, "model.houm.sales_seller_metric_details_new_sale_listing": {"raw_sql": "WITH sale_properties as (\r\nSELECT a.id as property_id\r\n    ,a.country\r\n    ,a.for_sale\r\n    ,b.first_publication_date as date_sales\r\nFROM {{ ref('proc_properties') }} a \r\nLEFT JOIN {{ ref('proc_property_salesdetails') }} b ON a.id =b.property_id\r\nWHERE b.first_publication_date IS NOT NULL AND a.is_deleted = false  AND a.supply_relation != 'New Properties'\r\n)\r\n\r\nSELECT     \r\n    60 orden\r\n    , 'New Sale Listing'::TEXT metric \r\n    , geo_id \r\n    , '{{ var(\"processed_time\") }}'  processed_time\r\n    , coalesce((timezone( prop_mz.timezone, date_sales)::timestamp WITH TIME ZONE)::date,date_sales::date) as date_sales\r\n    , sale_properties.property_id\r\n    , CASE WHEN (timezone( prop_mz.timezone, date_sales)::timestamp WITH TIME ZONE)::date  =  dateadd(day,-1,'{{ var(\"processed_time\") }}'::date) THEN 1  ELSE 0 END  yesterday\r\n    , CASE WHEN (timezone( prop_mz.timezone, date_sales)::timestamp WITH TIME ZONE)::date  =  dateadd(day,-2,'{{ var(\"processed_time\") }}'::date)  THEN 1  ELSE 0 END  daybeforeyesterday\r\n    , CASE WHEN date_trunc('week',(timezone( prop_mz.timezone, date_sales)::timestamp WITH TIME ZONE)::date )  =  dateadd(week,-1, date_trunc('week','{{ var(\"processed_time\") }}'::date)) THEN 1  ELSE 0 END  LastWeek\r\n    , CASE WHEN date_trunc('week',(timezone( prop_mz.timezone, date_sales)::timestamp WITH TIME ZONE)::date )  =  dateadd(week,-2, date_trunc('week','{{ var(\"processed_time\") }}'::date))  THEN 1  ELSE 0 END  PastLastWeek\r\n    , CASE WHEN \r\n                date_trunc('month',(timezone( prop_mz.timezone, date_sales)::timestamp WITH TIME ZONE)::date ) =  date_trunc('month','{{ var(\"processed_time\") }}'::date) \r\n                 AND (timezone( prop_mz.timezone, date_sales)::timestamp WITH TIME ZONE)::date  <=   dateadd(day,-1,'{{ var(\"processed_time\") }}'::date) \r\n                THEN 1  ELSE 0 END ThisMonthtoday\r\n    , CASE WHEN \r\n                date_trunc('month',(timezone( prop_mz.timezone, date_sales)::timestamp WITH TIME ZONE)::date ) =  dateadd(month,-1, date_trunc('month','{{ var(\"processed_time\") }}'::date)) \r\n                 AND (timezone( prop_mz.timezone, date_sales)::timestamp WITH TIME ZONE)::date  <= dateadd(month,-1, '{{ var(\"processed_time\") }}'::date) \r\n                THEN 1  ELSE 0 END LastMonthtoday \r\n    , CASE WHEN date_trunc('month',(timezone( prop_mz.timezone, date_sales)::timestamp WITH TIME ZONE)::date ) =  dateadd(month,-1, date_trunc('month','{{ var(\"processed_time\") }}'::date) ) \r\n            THEN 1  ELSE 0 END LastMonth\r\n    , CASE WHEN date_trunc('month',(timezone( prop_mz.timezone, date_sales)::timestamp WITH TIME ZONE)::date ) =  dateadd(month,-2, date_trunc('month','{{ var(\"processed_time\") }}'::date) ) \r\n            THEN 1  ELSE 0 END LasttwoMonth\r\n    , CASE WHEN date_trunc('month',(timezone( prop_mz.timezone, date_sales)::timestamp WITH TIME ZONE)::date ) =  dateadd(month,-3, date_trunc('month','{{ var(\"processed_time\") }}'::date) ) \r\n            THEN 1  ELSE 0 END LastthreeMonth\r\nFROM sale_properties\r\nleft join {{ ref('proc_properties_mz') }} prop_mz on sale_properties.property_id = prop_mz.property_id \r\nORDER BY date_sales desc\r\n--group by 1,2 , 3", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_properties", "model.houm.proc_property_salesdetails", "model.houm.proc_properties_mz"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_facts", "database": null, "tags": ["dw", "facts", "supply"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_facts", "fqn": ["houm", "dwh", "facts", "supply", "sales_seller_metric_details_new_sale_listing"], "unique_id": "model.houm.sales_seller_metric_details_new_sale_listing", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "dwh/facts/supply/sales_seller_metric_details_new_sale_listing.sql", "original_file_path": "models/dwh/facts/supply/sales_seller_metric_details_new_sale_listing.sql", "name": "sales_seller_metric_details_new_sale_listing", "alias": "sales_seller_metric_details_new_sale_listing", "checksum": {"name": "sha256", "checksum": "9e4b7ea87facb3e317381bdb5b344610a3e26e70d644906a10a0fa1885399093"}, "tags": ["dw", "facts", "supply"], "refs": [["proc_properties"], ["proc_property_salesdetails"], ["proc_properties_mz"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/facts/supply/sales_seller_metric_details_new_sale_listing.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_facts", "tags": ["dw", "facts", "supply"]}, "created_at": 1654784474.745501, "compiled_sql": "WITH sale_properties as (\nSELECT a.id as property_id\n    ,a.country\n    ,a.for_sale\n    ,b.first_publication_date as date_sales\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_properties\" a \nLEFT JOIN \"houmdw_prod\".\"dbt_processing\".\"proc_property_salesdetails\" b ON a.id =b.property_id\nWHERE b.first_publication_date IS NOT NULL AND a.is_deleted = false  AND a.supply_relation != 'New Properties'\n)\n\nSELECT     \n    60 orden\n    , 'New Sale Listing'::TEXT metric \n    , geo_id \n    , '2022-06-13 11:01:47.183332-04:00'  processed_time\n    , coalesce((timezone( prop_mz.timezone, date_sales)::timestamp WITH TIME ZONE)::date,date_sales::date) as date_sales\n    , sale_properties.property_id\n    , CASE WHEN (timezone( prop_mz.timezone, date_sales)::timestamp WITH TIME ZONE)::date  =  dateadd(day,-1,'2022-06-13 11:01:47.183332-04:00'::date) THEN 1  ELSE 0 END  yesterday\n    , CASE WHEN (timezone( prop_mz.timezone, date_sales)::timestamp WITH TIME ZONE)::date  =  dateadd(day,-2,'2022-06-13 11:01:47.183332-04:00'::date)  THEN 1  ELSE 0 END  daybeforeyesterday\n    , CASE WHEN date_trunc('week',(timezone( prop_mz.timezone, date_sales)::timestamp WITH TIME ZONE)::date )  =  dateadd(week,-1, date_trunc('week','2022-06-13 11:01:47.183332-04:00'::date)) THEN 1  ELSE 0 END  LastWeek\n    , CASE WHEN date_trunc('week',(timezone( prop_mz.timezone, date_sales)::timestamp WITH TIME ZONE)::date )  =  dateadd(week,-2, date_trunc('week','2022-06-13 11:01:47.183332-04:00'::date))  THEN 1  ELSE 0 END  PastLastWeek\n    , CASE WHEN \n                date_trunc('month',(timezone( prop_mz.timezone, date_sales)::timestamp WITH TIME ZONE)::date ) =  date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) \n                 AND (timezone( prop_mz.timezone, date_sales)::timestamp WITH TIME ZONE)::date  <=   dateadd(day,-1,'2022-06-13 11:01:47.183332-04:00'::date) \n                THEN 1  ELSE 0 END ThisMonthtoday\n    , CASE WHEN \n                date_trunc('month',(timezone( prop_mz.timezone, date_sales)::timestamp WITH TIME ZONE)::date ) =  dateadd(month,-1, date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date)) \n                 AND (timezone( prop_mz.timezone, date_sales)::timestamp WITH TIME ZONE)::date  <= dateadd(month,-1, '2022-06-13 11:01:47.183332-04:00'::date) \n                THEN 1  ELSE 0 END LastMonthtoday \n    , CASE WHEN date_trunc('month',(timezone( prop_mz.timezone, date_sales)::timestamp WITH TIME ZONE)::date ) =  dateadd(month,-1, date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) ) \n            THEN 1  ELSE 0 END LastMonth\n    , CASE WHEN date_trunc('month',(timezone( prop_mz.timezone, date_sales)::timestamp WITH TIME ZONE)::date ) =  dateadd(month,-2, date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) ) \n            THEN 1  ELSE 0 END LasttwoMonth\n    , CASE WHEN date_trunc('month',(timezone( prop_mz.timezone, date_sales)::timestamp WITH TIME ZONE)::date ) =  dateadd(month,-3, date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) ) \n            THEN 1  ELSE 0 END LastthreeMonth\nFROM sale_properties\nleft join \"houmdw_prod\".\"dbt_processing\".\"proc_properties_mz\" prop_mz on sale_properties.property_id = prop_mz.property_id \nORDER BY date_sales desc\n--group by 1,2 , 3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_facts\".\"sales_seller_metric_details_new_sale_listing\""}, "model.houm.sales_seller_metric_details_photo_done": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH schedules_photo_clean AS (\r\nSELECT *\r\nFROM {{ ref('proc_supply_schedules') }}\r\nWHERE TRUE \r\nAND schedule_type_name = 'SalesPhoto' \r\nAND (( email NOT LIKE '%test.test'  AND email NOT LIKE '%test.com')  OR applicant_id IS NULL ) \r\nAND  supply_relation != 'New Properties'\r\nAND status = 'Done'\r\n)\r\n\r\nSELECT  \r\n    50 orden\r\n    , 'SalesPhoto Done'::TEXT metric\r\n    , geo_id\r\n    , '{{ var(\"processed_time\") }}'  processed_time\r\n    , begin_date\r\n    , schedule_id\r\n    , CASE WHEN begin_date =  dateadd(day,-1,'{{ var(\"processed_time\") }}'::date) THEN 1  ELSE 0 END  yesterday\r\n    , CASE WHEN begin_date =  dateadd(day,-2,'{{ var(\"processed_time\") }}'::date)  THEN 1  ELSE 0 END  daybeforeyesterday\r\n    , CASE WHEN date_trunc('week',begin_date)  =  dateadd(week,-1, date_trunc('week','{{ var(\"processed_time\") }}'::date) )  THEN 1  ELSE 0 END  LastWeek\r\n    , CASE WHEN date_trunc('week',begin_date)  =  dateadd(week,-2, date_trunc('week','{{ var(\"processed_time\") }}'::date) )  THEN 1  ELSE 0 END  PastLastWeek\r\n    , CASE WHEN \r\n                date_trunc('month',begin_date) =  date_trunc('month','{{ var(\"processed_time\") }}'::date) \r\n                 AND begin_date <=   dateadd(day,-1,'{{ var(\"processed_time\") }}'::date)  THEN 1  ELSE 0 END  ThisMonthtoday\r\n    , CASE WHEN \r\n                date_trunc('month',begin_date) =  dateadd(month,-1, date_trunc('month','{{ var(\"processed_time\") }}'::date) )  AND  \r\n                begin_date <= dateadd(month,-1, '{{ var(\"processed_time\") }}'::date) \r\n            THEN 1  ELSE 0 END  LastMonthtoday\r\n    , CASE WHEN date_trunc('month',begin_date) =  dateadd(month,-1, date_trunc('month','{{ var(\"processed_time\") }}'::date) ) \r\n            THEN 1  ELSE 0 END LastMonth\r\n    , CASE WHEN date_trunc('month',begin_date) =  dateadd(month,-2, date_trunc('month','{{ var(\"processed_time\") }}'::date) ) \r\n            THEN 1  ELSE 0 END LasttwoMonth\r\n    , CASE WHEN date_trunc('month',begin_date) =  dateadd(month,-3, date_trunc('month','{{ var(\"processed_time\") }}'::date) ) \r\n            THEN 1  ELSE 0 END LastthreeMonth\r\nFROM schedules_photo_clean\r\nORDER BY begin_date DESC\r\n--group by 1,2 , 3", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_supply_schedules"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_facts", "database": null, "tags": ["dw", "facts", "supply"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_facts", "fqn": ["houm", "dwh", "facts", "supply", "sales_seller_metric_details_photo_done"], "unique_id": "model.houm.sales_seller_metric_details_photo_done", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "dwh/facts/supply/sales_seller_metric_details_photo_done.sql", "original_file_path": "models/dwh/facts/supply/sales_seller_metric_details_photo_done.sql", "name": "sales_seller_metric_details_photo_done", "alias": "sales_seller_metric_details_photo_done", "checksum": {"name": "sha256", "checksum": "1b8b01c66e455b37f41c7768a4bf3dba3fe5218e5173f22694da7a60548ac7b1"}, "tags": ["dw", "facts", "supply"], "refs": [["proc_supply_schedules"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/facts/supply/sales_seller_metric_details_photo_done.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_facts", "tags": ["dw", "facts", "supply"], "materialized": "table"}, "created_at": 1654784474.7595851, "compiled_sql": "\n\nWITH schedules_photo_clean AS (\nSELECT *\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_supply_schedules\"\nWHERE TRUE \nAND schedule_type_name = 'SalesPhoto' \nAND (( email NOT LIKE '%test.test'  AND email NOT LIKE '%test.com')  OR applicant_id IS NULL ) \nAND  supply_relation != 'New Properties'\nAND status = 'Done'\n)\n\nSELECT  \n    50 orden\n    , 'SalesPhoto Done'::TEXT metric\n    , geo_id\n    , '2022-06-13 11:01:47.183332-04:00'  processed_time\n    , begin_date\n    , schedule_id\n    , CASE WHEN begin_date =  dateadd(day,-1,'2022-06-13 11:01:47.183332-04:00'::date) THEN 1  ELSE 0 END  yesterday\n    , CASE WHEN begin_date =  dateadd(day,-2,'2022-06-13 11:01:47.183332-04:00'::date)  THEN 1  ELSE 0 END  daybeforeyesterday\n    , CASE WHEN date_trunc('week',begin_date)  =  dateadd(week,-1, date_trunc('week','2022-06-13 11:01:47.183332-04:00'::date) )  THEN 1  ELSE 0 END  LastWeek\n    , CASE WHEN date_trunc('week',begin_date)  =  dateadd(week,-2, date_trunc('week','2022-06-13 11:01:47.183332-04:00'::date) )  THEN 1  ELSE 0 END  PastLastWeek\n    , CASE WHEN \n                date_trunc('month',begin_date) =  date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) \n                 AND begin_date <=   dateadd(day,-1,'2022-06-13 11:01:47.183332-04:00'::date)  THEN 1  ELSE 0 END  ThisMonthtoday\n    , CASE WHEN \n                date_trunc('month',begin_date) =  dateadd(month,-1, date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) )  AND  \n                begin_date <= dateadd(month,-1, '2022-06-13 11:01:47.183332-04:00'::date) \n            THEN 1  ELSE 0 END  LastMonthtoday\n    , CASE WHEN date_trunc('month',begin_date) =  dateadd(month,-1, date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) ) \n            THEN 1  ELSE 0 END LastMonth\n    , CASE WHEN date_trunc('month',begin_date) =  dateadd(month,-2, date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) ) \n            THEN 1  ELSE 0 END LasttwoMonth\n    , CASE WHEN date_trunc('month',begin_date) =  dateadd(month,-3, date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) ) \n            THEN 1  ELSE 0 END LastthreeMonth\nFROM schedules_photo_clean\nORDER BY begin_date DESC\n--group by 1,2 , 3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_facts\".\"sales_seller_metric_details_photo_done\""}, "model.houm.rental_landlord_metric_details_photo_done": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH schedules_photo_clean AS (\r\nSELECT *\r\nFROM {{ ref('proc_supply_schedules') }}\r\nWHERE schedule_type_name = 'Photo'\r\nAND status = 'Done'\r\nAND (( email NOT LIKE '%test.test'  AND email NOT LIKE '%test.com')  OR applicant_id IS NULL ) \r\n)\r\n\r\nSELECT  \r\n    50 orden\r\n    , 'Photo Done'::TEXT metric\r\n    , geo_id\r\n    , '{{ var(\"processed_time\") }}' processed_time\r\n    , begin_date\r\n    , schedule_id\r\n    , CASE WHEN begin_date =  dateadd(day,-1,'{{ var(\"processed_time\") }}'::date) THEN 1  ELSE 0 END  yesterday\r\n    , CASE WHEN begin_date =  dateadd(day,-2,'{{ var(\"processed_time\") }}'::date)  THEN 1  ELSE 0 END  daybeforeyesterday\r\n    , CASE WHEN date_trunc('week',begin_date)  =  dateadd(week,-1, date_trunc('week','{{ var(\"processed_time\") }}'::date) )  THEN 1  ELSE 0 END  LastWeek\r\n    , CASE WHEN date_trunc('week',begin_date)  =  dateadd(week,-2, date_trunc('week','{{ var(\"processed_time\") }}'::date) )  THEN 1  ELSE 0 END  PastLastWeek\r\n    , CASE WHEN \r\n                date_trunc('month',begin_date) =  date_trunc('month','{{ var(\"processed_time\") }}'::date) \r\n                 AND begin_date <=   dateadd(day,-1,'{{ var(\"processed_time\") }}'::date)  THEN 1  ELSE 0 END  ThisMonthtoday\r\n    , CASE WHEN \r\n                date_trunc('month',begin_date) =  dateadd(month,-1, date_trunc('month','{{ var(\"processed_time\") }}'::date) )  AND -- Que son del mes pasado \r\n                begin_date <= dateadd(month,-1, '{{ var(\"processed_time\") }}'::date) \r\n            THEN 1  ELSE 0 END  LastMonthtoday\r\n    , CASE WHEN date_trunc('month',begin_date) =  dateadd(month,-1, date_trunc('month','{{ var(\"processed_time\") }}'::date) ) \r\n            THEN 1  ELSE 0 END LastMonth\r\n    , CASE WHEN date_trunc('month',begin_date) =  dateadd(month,-2, date_trunc('month','{{ var(\"processed_time\") }}'::date) ) \r\n            THEN 1  ELSE 0 END LasttwoMonth\r\n    , CASE WHEN date_trunc('month',begin_date) =  dateadd(month,-3, date_trunc('month','{{ var(\"processed_time\") }}'::date) ) \r\n            THEN 1  ELSE 0 END LastthreeMonth\r\nFROM schedules_photo_clean\r\nORDER BY begin_date DESC", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_supply_schedules"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_facts", "database": null, "tags": ["dw", "facts", "supply"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_facts", "fqn": ["houm", "dwh", "facts", "supply", "rental_landlord_metric_details_photo_done"], "unique_id": "model.houm.rental_landlord_metric_details_photo_done", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "dwh/facts/supply/rental_landlord_metric_details_photo_done.sql", "original_file_path": "models/dwh/facts/supply/rental_landlord_metric_details_photo_done.sql", "name": "rental_landlord_metric_details_photo_done", "alias": "rental_landlord_metric_details_photo_done", "checksum": {"name": "sha256", "checksum": "cb7ab680a0d2c6dbd6f1f982afc317ee59d62a654d9eb91f1d460ff5c7852398"}, "tags": ["dw", "facts", "supply"], "refs": [["proc_supply_schedules"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/facts/supply/rental_landlord_metric_details_photo_done.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_facts", "tags": ["dw", "facts", "supply"], "materialized": "table"}, "created_at": 1654784474.773165, "compiled_sql": "\n\nWITH schedules_photo_clean AS (\nSELECT *\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_supply_schedules\"\nWHERE schedule_type_name = 'Photo'\nAND status = 'Done'\nAND (( email NOT LIKE '%test.test'  AND email NOT LIKE '%test.com')  OR applicant_id IS NULL ) \n)\n\nSELECT  \n    50 orden\n    , 'Photo Done'::TEXT metric\n    , geo_id\n    , '2022-06-13 11:01:47.183332-04:00' processed_time\n    , begin_date\n    , schedule_id\n    , CASE WHEN begin_date =  dateadd(day,-1,'2022-06-13 11:01:47.183332-04:00'::date) THEN 1  ELSE 0 END  yesterday\n    , CASE WHEN begin_date =  dateadd(day,-2,'2022-06-13 11:01:47.183332-04:00'::date)  THEN 1  ELSE 0 END  daybeforeyesterday\n    , CASE WHEN date_trunc('week',begin_date)  =  dateadd(week,-1, date_trunc('week','2022-06-13 11:01:47.183332-04:00'::date) )  THEN 1  ELSE 0 END  LastWeek\n    , CASE WHEN date_trunc('week',begin_date)  =  dateadd(week,-2, date_trunc('week','2022-06-13 11:01:47.183332-04:00'::date) )  THEN 1  ELSE 0 END  PastLastWeek\n    , CASE WHEN \n                date_trunc('month',begin_date) =  date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) \n                 AND begin_date <=   dateadd(day,-1,'2022-06-13 11:01:47.183332-04:00'::date)  THEN 1  ELSE 0 END  ThisMonthtoday\n    , CASE WHEN \n                date_trunc('month',begin_date) =  dateadd(month,-1, date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) )  AND -- Que son del mes pasado \n                begin_date <= dateadd(month,-1, '2022-06-13 11:01:47.183332-04:00'::date) \n            THEN 1  ELSE 0 END  LastMonthtoday\n    , CASE WHEN date_trunc('month',begin_date) =  dateadd(month,-1, date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) ) \n            THEN 1  ELSE 0 END LastMonth\n    , CASE WHEN date_trunc('month',begin_date) =  dateadd(month,-2, date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) ) \n            THEN 1  ELSE 0 END LasttwoMonth\n    , CASE WHEN date_trunc('month',begin_date) =  dateadd(month,-3, date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) ) \n            THEN 1  ELSE 0 END LastthreeMonth\nFROM schedules_photo_clean\nORDER BY begin_date DESC", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_facts\".\"rental_landlord_metric_details_photo_done\""}, "model.houm.rental_landlord_metric_details_leads_qualified": {"raw_sql": "{{ config(materialized='table') }}\n\nWITH  demand_landlord_leads_clean AS (\nSELECT *\nFROM  {{ ref('proc_supply_landlord_leads') }} \nWHERE TRUE \nAND  ( (lost_reason NOT LIKE '%Test%'  AND lost_reason != 'Pruebas'  AND lost_reason != 'Cotizaci\u00f3n Duplicada') OR lost_reason IS NULL)\nAND (supply_source != 'B2B' OR supply_source IS NULL)\n)\n\nSELECT \n    20 orden \n    , 'Created Unique Landlord Hot Qualified Leads'::TEXT metric\n    , geo_id\n    , '{{ var(\"processed_time\") }}'  processed_time\n    , add_time\n    , qualification\n    , fecha_calificacion\n    , person_id\n    , email\n    , deal_id\n    , CASE WHEN add_time =  dateadd(day,-1,'{{ var(\"processed_time\") }}'::date) THEN 1  ELSE 0 END  yesterday\n    , CASE WHEN add_time =  dateadd(day,-2,'{{ var(\"processed_time\") }}'::date)  THEN 1  ELSE 0 END  daybeforeyesterday\n    , CASE WHEN date_trunc('week',add_time)  =  dateadd(week,-1, date_trunc('week','{{ var(\"processed_time\") }}'::date) )  THEN 1  ELSE 0 END LastWeek\n    , CASE WHEN date_trunc('week',add_time)  =  dateadd(week,-2, date_trunc('week','{{ var(\"processed_time\") }}'::date) )  THEN 1  ELSE 0 END PastLastWeek\n    , CASE WHEN \n                date_trunc('month',add_time) =  date_trunc('month','{{ var(\"processed_time\") }}'::date) \n                 AND add_time <=   dateadd(day,-1,'{{ var(\"processed_time\") }}'::date)  THEN 1  ELSE 0 END  ThisMonthtoday\n    , CASE WHEN \n                date_trunc('month',add_time) =  dateadd(month,-1, date_trunc('month','{{ var(\"processed_time\") }}'::date) )  AND -- Que son del mes pasado \n                add_time <= dateadd(month,-1, '{{ var(\"processed_time\") }}'::date) \n            THEN 1  ELSE 0 END LastMonthtoday\n    , CASE WHEN date_trunc('month',add_time) =  dateadd(month,-1, date_trunc('month','{{ var(\"processed_time\") }}'::date) ) \n            THEN 1  ELSE 0 END LastMonth\n    , CASE WHEN date_trunc('month',add_time) =  dateadd(month,-2, date_trunc('month','{{ var(\"processed_time\") }}'::date) ) \n            THEN 1  ELSE 0 END LasttwoMonth\n    , CASE WHEN date_trunc('month',add_time) =  dateadd(month,-3, date_trunc('month','{{ var(\"processed_time\") }}'::date) ) \n            THEN 1  ELSE 0 END LastthreeMonth\nFROM demand_landlord_leads_clean\nwhere qualification >= 3  AND qualification <= 5\nORDER BY add_time desc\n--group by 1 , 2, 3", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_supply_landlord_leads"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_facts", "database": null, "tags": ["dw", "facts", "supply"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_facts", "fqn": ["houm", "dwh", "facts", "supply", "rental_landlord_metric_details_leads_qualified"], "unique_id": "model.houm.rental_landlord_metric_details_leads_qualified", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "dwh/facts/supply/rental_landlord_metric_details_leads_qualified.sql", "original_file_path": "models/dwh/facts/supply/rental_landlord_metric_details_leads_qualified.sql", "name": "rental_landlord_metric_details_leads_qualified", "alias": "rental_landlord_metric_details_leads_qualified", "checksum": {"name": "sha256", "checksum": "eb4cb24c24a39c378811c20ebe3f07ebad75088079c9e41ed3ff284b67e6b421"}, "tags": ["dw", "facts", "supply"], "refs": [["proc_supply_landlord_leads"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/facts/supply/rental_landlord_metric_details_leads_qualified.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_facts", "tags": ["dw", "facts", "supply"], "materialized": "table"}, "created_at": 1654784474.78651, "compiled_sql": "\n\nWITH  demand_landlord_leads_clean AS (\nSELECT *\nFROM  \"houmdw_prod\".\"dbt_processing\".\"proc_supply_landlord_leads\" \nWHERE TRUE \nAND  ( (lost_reason NOT LIKE '%Test%'  AND lost_reason != 'Pruebas'  AND lost_reason != 'Cotizaci\u00f3n Duplicada') OR lost_reason IS NULL)\nAND (supply_source != 'B2B' OR supply_source IS NULL)\n)\n\nSELECT \n    20 orden \n    , 'Created Unique Landlord Hot Qualified Leads'::TEXT metric\n    , geo_id\n    , '2022-06-13 11:01:47.183332-04:00'  processed_time\n    , add_time\n    , qualification\n    , fecha_calificacion\n    , person_id\n    , email\n    , deal_id\n    , CASE WHEN add_time =  dateadd(day,-1,'2022-06-13 11:01:47.183332-04:00'::date) THEN 1  ELSE 0 END  yesterday\n    , CASE WHEN add_time =  dateadd(day,-2,'2022-06-13 11:01:47.183332-04:00'::date)  THEN 1  ELSE 0 END  daybeforeyesterday\n    , CASE WHEN date_trunc('week',add_time)  =  dateadd(week,-1, date_trunc('week','2022-06-13 11:01:47.183332-04:00'::date) )  THEN 1  ELSE 0 END LastWeek\n    , CASE WHEN date_trunc('week',add_time)  =  dateadd(week,-2, date_trunc('week','2022-06-13 11:01:47.183332-04:00'::date) )  THEN 1  ELSE 0 END PastLastWeek\n    , CASE WHEN \n                date_trunc('month',add_time) =  date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) \n                 AND add_time <=   dateadd(day,-1,'2022-06-13 11:01:47.183332-04:00'::date)  THEN 1  ELSE 0 END  ThisMonthtoday\n    , CASE WHEN \n                date_trunc('month',add_time) =  dateadd(month,-1, date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) )  AND -- Que son del mes pasado \n                add_time <= dateadd(month,-1, '2022-06-13 11:01:47.183332-04:00'::date) \n            THEN 1  ELSE 0 END LastMonthtoday\n    , CASE WHEN date_trunc('month',add_time) =  dateadd(month,-1, date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) ) \n            THEN 1  ELSE 0 END LastMonth\n    , CASE WHEN date_trunc('month',add_time) =  dateadd(month,-2, date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) ) \n            THEN 1  ELSE 0 END LasttwoMonth\n    , CASE WHEN date_trunc('month',add_time) =  dateadd(month,-3, date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) ) \n            THEN 1  ELSE 0 END LastthreeMonth\nFROM demand_landlord_leads_clean\nwhere qualification >= 3  AND qualification <= 5\nORDER BY add_time desc\n--group by 1 , 2, 3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_facts\".\"rental_landlord_metric_details_leads_qualified\""}, "model.houm.sales_seller_metric_details_leads_qualified": {"raw_sql": "{{ config(materialized='table') }}\n\nWITH  supply_seller_leads_clean as (\nSELECT *\nFROM  {{ ref('proc_supply_seller_leads') }} \nWHERE TRUE \nAND ((lost_reason NOT LIKE '%Test%'  AND lost_reason != 'Pruebas'  AND lost_reason != 'Cotizaci\u00f3n Duplicada') or lost_reason is null)\nAND (supply_source != 'B2B' OR supply_source is null)\n)\n\nSELECT \n    20 orden \n    , 'Created Unique Seller Qualified Leads'::TEXT metric\n    , geo_id\n    , '{{ var(\"processed_time\") }}'  processed_time\n    , add_time\n    , qualification\n    , fecha_calificacion\n    , person_id\n    , email\n    , deal_id\n    , CASE WHEN add_time =  dateadd(day,-1,'{{ var(\"processed_time\") }}'::date) THEN 1  ELSE 0 END yesterday\n    , CASE WHEN add_time =  dateadd(day,-2,'{{ var(\"processed_time\") }}'::date)  THEN 1  ELSE 0 END daybeforeyesterday\n    , CASE WHEN date_trunc('week',add_time)  =  dateadd(week,-1, date_trunc('week','{{ var(\"processed_time\") }}'::date) )  THEN 1  ELSE 0 END LastWeek\n    , CASE WHEN date_trunc('week',add_time)  =  dateadd(week,-2, date_trunc('week','{{ var(\"processed_time\") }}'::date) )  THEN 1  ELSE 0 END PastLastWeek\n    , CASE WHEN \n                date_trunc('month',add_time) =  date_trunc('month','{{ var(\"processed_time\") }}'::date) \n                 AND add_time <=   dateadd(day,-1,'{{ var(\"processed_time\") }}'::date)  THEN 1  ELSE 0 END ThisMonthtoday\n    , CASE WHEN \n                date_trunc('month',add_time) =  dateadd(month,-1, date_trunc('month','{{ var(\"processed_time\") }}'::date) )  AND  \n                add_time <= dateadd(month,-1, '{{ var(\"processed_time\") }}'::date) \n            THEN 1  ELSE 0 END LastMonthtoday\n    , CASE WHEN date_trunc('month',add_time) =  dateadd(month,-1, date_trunc('month','{{ var(\"processed_time\") }}'::date) ) \n            THEN 1  ELSE 0 END LastMonth\n    , CASE WHEN date_trunc('month',add_time) =  dateadd(month,-2, date_trunc('month','{{ var(\"processed_time\") }}'::date) ) \n            THEN 1  ELSE 0 END LasttwoMonth\n    , CASE WHEN date_trunc('month',add_time) =  dateadd(month,-3, date_trunc('month','{{ var(\"processed_time\") }}'::date) ) \n            THEN 1  ELSE 0 END LastthreeMonth\nFROM supply_seller_leads_clean\nwhere qualification >= 3  AND qualification <= 5\nORDER BY add_time desc", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_supply_seller_leads"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_facts", "database": null, "tags": ["dw", "facts", "supply"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_facts", "fqn": ["houm", "dwh", "facts", "supply", "sales_seller_metric_details_leads_qualified"], "unique_id": "model.houm.sales_seller_metric_details_leads_qualified", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "dwh/facts/supply/sales_seller_metric_details_leads_qualified.sql", "original_file_path": "models/dwh/facts/supply/sales_seller_metric_details_leads_qualified.sql", "name": "sales_seller_metric_details_leads_qualified", "alias": "sales_seller_metric_details_leads_qualified", "checksum": {"name": "sha256", "checksum": "d9511ce9833572d0f7883900b4e9e640a350db94e1386f5472357e30abc0e678"}, "tags": ["dw", "facts", "supply"], "refs": [["proc_supply_seller_leads"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/facts/supply/sales_seller_metric_details_leads_qualified.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_facts", "tags": ["dw", "facts", "supply"], "materialized": "table"}, "created_at": 1654784474.800077, "compiled_sql": "\n\nWITH  supply_seller_leads_clean as (\nSELECT *\nFROM  \"houmdw_prod\".\"dbt_processing\".\"proc_supply_seller_leads\" \nWHERE TRUE \nAND ((lost_reason NOT LIKE '%Test%'  AND lost_reason != 'Pruebas'  AND lost_reason != 'Cotizaci\u00f3n Duplicada') or lost_reason is null)\nAND (supply_source != 'B2B' OR supply_source is null)\n)\n\nSELECT \n    20 orden \n    , 'Created Unique Seller Qualified Leads'::TEXT metric\n    , geo_id\n    , '2022-06-13 11:01:47.183332-04:00'  processed_time\n    , add_time\n    , qualification\n    , fecha_calificacion\n    , person_id\n    , email\n    , deal_id\n    , CASE WHEN add_time =  dateadd(day,-1,'2022-06-13 11:01:47.183332-04:00'::date) THEN 1  ELSE 0 END yesterday\n    , CASE WHEN add_time =  dateadd(day,-2,'2022-06-13 11:01:47.183332-04:00'::date)  THEN 1  ELSE 0 END daybeforeyesterday\n    , CASE WHEN date_trunc('week',add_time)  =  dateadd(week,-1, date_trunc('week','2022-06-13 11:01:47.183332-04:00'::date) )  THEN 1  ELSE 0 END LastWeek\n    , CASE WHEN date_trunc('week',add_time)  =  dateadd(week,-2, date_trunc('week','2022-06-13 11:01:47.183332-04:00'::date) )  THEN 1  ELSE 0 END PastLastWeek\n    , CASE WHEN \n                date_trunc('month',add_time) =  date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) \n                 AND add_time <=   dateadd(day,-1,'2022-06-13 11:01:47.183332-04:00'::date)  THEN 1  ELSE 0 END ThisMonthtoday\n    , CASE WHEN \n                date_trunc('month',add_time) =  dateadd(month,-1, date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) )  AND  \n                add_time <= dateadd(month,-1, '2022-06-13 11:01:47.183332-04:00'::date) \n            THEN 1  ELSE 0 END LastMonthtoday\n    , CASE WHEN date_trunc('month',add_time) =  dateadd(month,-1, date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) ) \n            THEN 1  ELSE 0 END LastMonth\n    , CASE WHEN date_trunc('month',add_time) =  dateadd(month,-2, date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) ) \n            THEN 1  ELSE 0 END LasttwoMonth\n    , CASE WHEN date_trunc('month',add_time) =  dateadd(month,-3, date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) ) \n            THEN 1  ELSE 0 END LastthreeMonth\nFROM supply_seller_leads_clean\nwhere qualification >= 3  AND qualification <= 5\nORDER BY add_time desc", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_facts\".\"sales_seller_metric_details_leads_qualified\""}, "model.houm.rental_landlord_metric_details_new_rental_listing": {"raw_sql": "WITH rental_properties AS (\r\nSELECT id property_id\r\n    ,country\r\n    ,for_rental\r\n    ,first_publication_date as date_rentals\r\nFROM {{ ref('proc_properties') }} a\r\nWHERE a.first_publication_date IS NOT NULL AND a.is_deleted = false \r\n)\r\n\r\nSELECT     \r\n    60 orden\r\n    , 'New Rental Listing'::TEXT metric \r\n    , geo_id\r\n    , '{{ var(\"processed_time\") }}'  processed_time\r\n    , coalesce((timezone( prop_mz.timezone, date_rentals)::timestamp WITH TIME ZONE)::date,date_rentals::date) as date_rentals\r\n    , rental_properties.property_id \r\n    , CASE WHEN (timezone( prop_mz.timezone, date_rentals)::timestamp WITH TIME ZONE)::date  =  dateadd(day,-1,'{{ var(\"processed_time\") }}'::date) THEN 1  ELSE 0 END  yesterday\r\n    , CASE WHEN (timezone( prop_mz.timezone, date_rentals)::timestamp WITH TIME ZONE)::date  =  dateadd(day,-2,'{{ var(\"processed_time\") }}'::date)  THEN 1  ELSE 0 END  daybeforeyesterday\r\n    , CASE WHEN date_trunc('week',(timezone( prop_mz.timezone, date_rentals)::timestamp WITH TIME ZONE)::date )  =  dateadd(week,-1, date_trunc('week','{{ var(\"processed_time\") }}'::date)) THEN 1  ELSE 0 END  LastWeek\r\n    , CASE WHEN date_trunc('week',(timezone( prop_mz.timezone, date_rentals)::timestamp WITH TIME ZONE)::date )  =  dateadd(week,-2, date_trunc('week','{{ var(\"processed_time\") }}'::date))  THEN 1  ELSE 0 END  PastLastWeek\r\n    , CASE WHEN \r\n                date_trunc('month',(timezone( prop_mz.timezone, date_rentals)::timestamp WITH TIME ZONE)::date ) =  date_trunc('month','{{ var(\"processed_time\") }}'::date) \r\n                 AND (timezone( prop_mz.timezone, date_rentals)::timestamp WITH TIME ZONE)::date  <=   dateadd(day,-1,'{{ var(\"processed_time\") }}'::date) \r\n                THEN 1  ELSE 0 END ThisMonthtoday\r\n    , CASE WHEN \r\n                date_trunc('month',(timezone( prop_mz.timezone, date_rentals)::timestamp WITH TIME ZONE)::date ) =  dateadd(month,-1, date_trunc('month','{{ var(\"processed_time\") }}'::date)) \r\n                 AND (timezone( prop_mz.timezone, date_rentals)::timestamp WITH TIME ZONE)::date  <= dateadd(month,-1, '{{ var(\"processed_time\") }}'::date) \r\n                THEN 1  ELSE 0 END LastMonthtoday \r\n    , CASE WHEN date_trunc('month',(timezone( prop_mz.timezone, date_rentals)::timestamp WITH TIME ZONE)::date ) =  dateadd(month,-1, date_trunc('month','{{ var(\"processed_time\") }}'::date) ) \r\n            THEN 1  ELSE 0 END LastMonth\r\n    , CASE WHEN date_trunc('month',(timezone( prop_mz.timezone, date_rentals)::timestamp WITH TIME ZONE)::date ) =  dateadd(month,-2, date_trunc('month','{{ var(\"processed_time\") }}'::date) ) \r\n            THEN 1  ELSE 0 END LasttwoMonth\r\n    , CASE WHEN date_trunc('month',(timezone( prop_mz.timezone, date_rentals)::timestamp WITH TIME ZONE)::date ) =  dateadd(month,-3, date_trunc('month','{{ var(\"processed_time\") }}'::date) ) \r\n            THEN 1  ELSE 0 END LastthreeMonth\r\nFROM rental_properties\r\nleft join {{ ref('proc_properties_mz') }} prop_mz on rental_properties.property_id = prop_mz.property_id \r\nORDER BY date_rentals desc\r\n--group by 1,2 , 3", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_properties", "model.houm.proc_properties_mz"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_facts", "database": null, "tags": ["dw", "facts", "supply"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_facts", "fqn": ["houm", "dwh", "facts", "supply", "rental_landlord_metric_details_new_rental_listing"], "unique_id": "model.houm.rental_landlord_metric_details_new_rental_listing", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "dwh/facts/supply/rental_landlord_metric_details_new_rental_listing.sql", "original_file_path": "models/dwh/facts/supply/rental_landlord_metric_details_new_rental_listing.sql", "name": "rental_landlord_metric_details_new_rental_listing", "alias": "rental_landlord_metric_details_new_rental_listing", "checksum": {"name": "sha256", "checksum": "78ef0526267ebbb783a42d6e7ef6a1a0068e993174278e0c2a11b994f8448289"}, "tags": ["dw", "facts", "supply"], "refs": [["proc_properties"], ["proc_properties_mz"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/facts/supply/rental_landlord_metric_details_new_rental_listing.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_facts", "tags": ["dw", "facts", "supply"]}, "created_at": 1654784474.8135412, "compiled_sql": "WITH rental_properties AS (\nSELECT id property_id\n    ,country\n    ,for_rental\n    ,first_publication_date as date_rentals\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_properties\" a\nWHERE a.first_publication_date IS NOT NULL AND a.is_deleted = false \n)\n\nSELECT     \n    60 orden\n    , 'New Rental Listing'::TEXT metric \n    , geo_id\n    , '2022-06-13 11:01:47.183332-04:00'  processed_time\n    , coalesce((timezone( prop_mz.timezone, date_rentals)::timestamp WITH TIME ZONE)::date,date_rentals::date) as date_rentals\n    , rental_properties.property_id \n    , CASE WHEN (timezone( prop_mz.timezone, date_rentals)::timestamp WITH TIME ZONE)::date  =  dateadd(day,-1,'2022-06-13 11:01:47.183332-04:00'::date) THEN 1  ELSE 0 END  yesterday\n    , CASE WHEN (timezone( prop_mz.timezone, date_rentals)::timestamp WITH TIME ZONE)::date  =  dateadd(day,-2,'2022-06-13 11:01:47.183332-04:00'::date)  THEN 1  ELSE 0 END  daybeforeyesterday\n    , CASE WHEN date_trunc('week',(timezone( prop_mz.timezone, date_rentals)::timestamp WITH TIME ZONE)::date )  =  dateadd(week,-1, date_trunc('week','2022-06-13 11:01:47.183332-04:00'::date)) THEN 1  ELSE 0 END  LastWeek\n    , CASE WHEN date_trunc('week',(timezone( prop_mz.timezone, date_rentals)::timestamp WITH TIME ZONE)::date )  =  dateadd(week,-2, date_trunc('week','2022-06-13 11:01:47.183332-04:00'::date))  THEN 1  ELSE 0 END  PastLastWeek\n    , CASE WHEN \n                date_trunc('month',(timezone( prop_mz.timezone, date_rentals)::timestamp WITH TIME ZONE)::date ) =  date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) \n                 AND (timezone( prop_mz.timezone, date_rentals)::timestamp WITH TIME ZONE)::date  <=   dateadd(day,-1,'2022-06-13 11:01:47.183332-04:00'::date) \n                THEN 1  ELSE 0 END ThisMonthtoday\n    , CASE WHEN \n                date_trunc('month',(timezone( prop_mz.timezone, date_rentals)::timestamp WITH TIME ZONE)::date ) =  dateadd(month,-1, date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date)) \n                 AND (timezone( prop_mz.timezone, date_rentals)::timestamp WITH TIME ZONE)::date  <= dateadd(month,-1, '2022-06-13 11:01:47.183332-04:00'::date) \n                THEN 1  ELSE 0 END LastMonthtoday \n    , CASE WHEN date_trunc('month',(timezone( prop_mz.timezone, date_rentals)::timestamp WITH TIME ZONE)::date ) =  dateadd(month,-1, date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) ) \n            THEN 1  ELSE 0 END LastMonth\n    , CASE WHEN date_trunc('month',(timezone( prop_mz.timezone, date_rentals)::timestamp WITH TIME ZONE)::date ) =  dateadd(month,-2, date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) ) \n            THEN 1  ELSE 0 END LasttwoMonth\n    , CASE WHEN date_trunc('month',(timezone( prop_mz.timezone, date_rentals)::timestamp WITH TIME ZONE)::date ) =  dateadd(month,-3, date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) ) \n            THEN 1  ELSE 0 END LastthreeMonth\nFROM rental_properties\nleft join \"houmdw_prod\".\"dbt_processing\".\"proc_properties_mz\" prop_mz on rental_properties.property_id = prop_mz.property_id \nORDER BY date_rentals desc\n--group by 1,2 , 3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_facts\".\"rental_landlord_metric_details_new_rental_listing\""}, "model.houm.sales_seller_metric_details_photo_scheduled": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH schedules_photo_clean AS (\r\nSELECT *\r\nFROM {{ ref('proc_supply_schedules') }}\r\nWHERE true \r\nAND schedule_type_name = 'SalesPhoto' \r\nAND (( email NOT LIKE '%test.test'  AND email NOT LIKE '%test.com')  OR applicant_id IS NULL ) \r\nAND  supply_relation != 'New Properties'\r\n)\r\n\r\n\r\nSELECT  \r\n    40 orden\r\n    , 'SalesPhoto Scheduled'::TEXT metric \r\n    , geo_id\r\n    , '{{ var(\"processed_time\") }}'  processed_time\r\n    , begin_date\r\n    , schedule_id\r\n    , CASE WHEN begin_date =  dateadd(day,-1,'{{ var(\"processed_time\") }}'::date) THEN 1  ELSE 0 END yesterday\r\n    , CASE WHEN begin_date =  dateadd(day,-2,'{{ var(\"processed_time\") }}'::date)  THEN 1  ELSE 0 END daybeforeyesterday\r\n    , CASE WHEN date_trunc('week',begin_date)  =  dateadd(week,-1, date_trunc('week','{{ var(\"processed_time\") }}'::date) )  THEN 1  ELSE 0 END LastWeek\r\n    , CASE WHEN date_trunc('week',begin_date)  =  dateadd(week,-2, date_trunc('week','{{ var(\"processed_time\") }}'::date) )  THEN 1  ELSE 0 END PastLastWeek\r\n    , CASE WHEN \r\n                date_trunc('month',begin_date) =  date_trunc('month','{{ var(\"processed_time\") }}'::date) \r\n                 AND begin_date <=   dateadd(day,-1,'{{ var(\"processed_time\") }}'::date)  THEN 1  ELSE 0 END ThisMonthtoday\r\n    , CASE WHEN \r\n                date_trunc('month',begin_date) =  dateadd(month,-1, date_trunc('month','{{ var(\"processed_time\") }}'::date) )  AND  \r\n                begin_date <= dateadd(month,-1, '{{ var(\"processed_time\") }}'::date) \r\n            THEN 1  ELSE 0 END LastMonthtoday\r\n    , CASE WHEN date_trunc('month',begin_date) =  dateadd(month,-1, date_trunc('month','{{ var(\"processed_time\") }}'::date) ) \r\n            THEN 1  ELSE 0 END LastMonth\r\n    , CASE WHEN date_trunc('month',begin_date) =  dateadd(month,-2, date_trunc('month','{{ var(\"processed_time\") }}'::date) ) \r\n            THEN 1  ELSE 0 END LasttwoMonth\r\n    , CASE WHEN date_trunc('month',begin_date) =  dateadd(month,-3, date_trunc('month','{{ var(\"processed_time\") }}'::date) ) \r\n            THEN 1  ELSE 0 END LastthreeMonth\r\nFROM schedules_photo_clean\r\nORDER BY begin_date DESC\r\n--group by 1,2 , 3", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_supply_schedules"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_facts", "database": null, "tags": ["dw", "facts", "supply"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_facts", "fqn": ["houm", "dwh", "facts", "supply", "sales_seller_metric_details_photo_scheduled"], "unique_id": "model.houm.sales_seller_metric_details_photo_scheduled", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "dwh/facts/supply/sales_seller_metric_details_photo_scheduled.sql", "original_file_path": "models/dwh/facts/supply/sales_seller_metric_details_photo_scheduled.sql", "name": "sales_seller_metric_details_photo_scheduled", "alias": "sales_seller_metric_details_photo_scheduled", "checksum": {"name": "sha256", "checksum": "43cb15b660fc2856c1dd7fa1ac1767e7eba346de2e7ae212d7af0b745b4a6d5d"}, "tags": ["dw", "facts", "supply"], "refs": [["proc_supply_schedules"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/facts/supply/sales_seller_metric_details_photo_scheduled.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_facts", "tags": ["dw", "facts", "supply"], "materialized": "table"}, "created_at": 1654784474.8276181, "compiled_sql": "\n\nWITH schedules_photo_clean AS (\nSELECT *\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_supply_schedules\"\nWHERE true \nAND schedule_type_name = 'SalesPhoto' \nAND (( email NOT LIKE '%test.test'  AND email NOT LIKE '%test.com')  OR applicant_id IS NULL ) \nAND  supply_relation != 'New Properties'\n)\n\n\nSELECT  \n    40 orden\n    , 'SalesPhoto Scheduled'::TEXT metric \n    , geo_id\n    , '2022-06-13 11:01:47.183332-04:00'  processed_time\n    , begin_date\n    , schedule_id\n    , CASE WHEN begin_date =  dateadd(day,-1,'2022-06-13 11:01:47.183332-04:00'::date) THEN 1  ELSE 0 END yesterday\n    , CASE WHEN begin_date =  dateadd(day,-2,'2022-06-13 11:01:47.183332-04:00'::date)  THEN 1  ELSE 0 END daybeforeyesterday\n    , CASE WHEN date_trunc('week',begin_date)  =  dateadd(week,-1, date_trunc('week','2022-06-13 11:01:47.183332-04:00'::date) )  THEN 1  ELSE 0 END LastWeek\n    , CASE WHEN date_trunc('week',begin_date)  =  dateadd(week,-2, date_trunc('week','2022-06-13 11:01:47.183332-04:00'::date) )  THEN 1  ELSE 0 END PastLastWeek\n    , CASE WHEN \n                date_trunc('month',begin_date) =  date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) \n                 AND begin_date <=   dateadd(day,-1,'2022-06-13 11:01:47.183332-04:00'::date)  THEN 1  ELSE 0 END ThisMonthtoday\n    , CASE WHEN \n                date_trunc('month',begin_date) =  dateadd(month,-1, date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) )  AND  \n                begin_date <= dateadd(month,-1, '2022-06-13 11:01:47.183332-04:00'::date) \n            THEN 1  ELSE 0 END LastMonthtoday\n    , CASE WHEN date_trunc('month',begin_date) =  dateadd(month,-1, date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) ) \n            THEN 1  ELSE 0 END LastMonth\n    , CASE WHEN date_trunc('month',begin_date) =  dateadd(month,-2, date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) ) \n            THEN 1  ELSE 0 END LasttwoMonth\n    , CASE WHEN date_trunc('month',begin_date) =  dateadd(month,-3, date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) ) \n            THEN 1  ELSE 0 END LastthreeMonth\nFROM schedules_photo_clean\nORDER BY begin_date DESC\n--group by 1,2 , 3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_facts\".\"sales_seller_metric_details_photo_scheduled\""}, "model.houm.rental_landlord_metric_details_photo_scheduled": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH schedules_photo_clean as (\r\nSELECT *\r\nFROM {{ ref('proc_supply_schedules') }}\r\nWHERE schedule_type_name = 'Photo'\r\nAND (( email NOT LIKE '%test.test'  AND email NOT LIKE '%test.com')  OR applicant_id IS NULL ) \r\n)\r\n\r\nSELECT  \r\n    40 orden\r\n    , 'Photo Scheduled'::TEXT metric\r\n    , geo_id\r\n    , '{{ var(\"processed_time\") }}'  processed_time\r\n    , begin_date\r\n    , schedule_id\r\n    , CASE WHEN begin_date =  dateadd(day,-1,'{{ var(\"processed_time\") }}'::date) THEN 1  ELSE 0 END  yesterday\r\n    , CASE WHEN begin_date =  dateadd(day,-2,'{{ var(\"processed_time\") }}'::date)  THEN 1  ELSE 0 END  daybeforeyesterday\r\n    , CASE WHEN date_trunc('week',begin_date)  =  dateadd(week,-1, date_trunc('week','{{ var(\"processed_time\") }}'::date) )  THEN 1  ELSE 0 END  LastWeek\r\n    , CASE WHEN date_trunc('week',begin_date)  =  dateadd(week,-2, date_trunc('week','{{ var(\"processed_time\") }}'::date) )  THEN 1  ELSE 0 END  PastLastWeek\r\n    , CASE WHEN \r\n                date_trunc('month',begin_date) =  date_trunc('month','{{ var(\"processed_time\") }}'::date) \r\n                 AND begin_date <=   dateadd(day,-1,'{{ var(\"processed_time\") }}'::date)  THEN 1  ELSE 0 END  ThisMonthtoday\r\n    , CASE WHEN \r\n                date_trunc('month',begin_date) =  dateadd(month,-1, date_trunc('month','{{ var(\"processed_time\") }}'::date) )  AND\r\n                begin_date <= dateadd(month,-1, '{{ var(\"processed_time\") }}'::date) -- Que son del mes pasado \r\n            THEN 1  ELSE 0 END  LastMonthtoday\r\n    , CASE WHEN date_trunc('month',begin_date) =  dateadd(month,-1, date_trunc('month','{{ var(\"processed_time\") }}'::date) ) \r\n            THEN 1  ELSE 0 END LastMonth\r\n    , CASE WHEN date_trunc('month',begin_date) =  dateadd(month,-2, date_trunc('month','{{ var(\"processed_time\") }}'::date) ) \r\n            THEN 1  ELSE 0 END LasttwoMonth\r\n    , CASE WHEN date_trunc('month',begin_date) =  dateadd(month,-3, date_trunc('month','{{ var(\"processed_time\") }}'::date) ) \r\n            THEN 1  ELSE 0 END LastthreeMonth\r\nFROM schedules_photo_clean\r\nORDER BY begin_date desc", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_supply_schedules"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_facts", "database": null, "tags": ["dw", "facts", "supply"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_facts", "fqn": ["houm", "dwh", "facts", "supply", "rental_landlord_metric_details_photo_scheduled"], "unique_id": "model.houm.rental_landlord_metric_details_photo_scheduled", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "dwh/facts/supply/rental_landlord_metric_details_photo_scheduled.sql", "original_file_path": "models/dwh/facts/supply/rental_landlord_metric_details_photo_scheduled.sql", "name": "rental_landlord_metric_details_photo_scheduled", "alias": "rental_landlord_metric_details_photo_scheduled", "checksum": {"name": "sha256", "checksum": "da251c7cc638dfade7f9aa5aeca1e49637c413bf6d8e4eb3c8499524e36ecdab"}, "tags": ["dw", "facts", "supply"], "refs": [["proc_supply_schedules"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/facts/supply/rental_landlord_metric_details_photo_scheduled.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_facts", "tags": ["dw", "facts", "supply"], "materialized": "table"}, "created_at": 1654784474.841105, "compiled_sql": "\n\nWITH schedules_photo_clean as (\nSELECT *\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_supply_schedules\"\nWHERE schedule_type_name = 'Photo'\nAND (( email NOT LIKE '%test.test'  AND email NOT LIKE '%test.com')  OR applicant_id IS NULL ) \n)\n\nSELECT  \n    40 orden\n    , 'Photo Scheduled'::TEXT metric\n    , geo_id\n    , '2022-06-13 11:01:47.183332-04:00'  processed_time\n    , begin_date\n    , schedule_id\n    , CASE WHEN begin_date =  dateadd(day,-1,'2022-06-13 11:01:47.183332-04:00'::date) THEN 1  ELSE 0 END  yesterday\n    , CASE WHEN begin_date =  dateadd(day,-2,'2022-06-13 11:01:47.183332-04:00'::date)  THEN 1  ELSE 0 END  daybeforeyesterday\n    , CASE WHEN date_trunc('week',begin_date)  =  dateadd(week,-1, date_trunc('week','2022-06-13 11:01:47.183332-04:00'::date) )  THEN 1  ELSE 0 END  LastWeek\n    , CASE WHEN date_trunc('week',begin_date)  =  dateadd(week,-2, date_trunc('week','2022-06-13 11:01:47.183332-04:00'::date) )  THEN 1  ELSE 0 END  PastLastWeek\n    , CASE WHEN \n                date_trunc('month',begin_date) =  date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) \n                 AND begin_date <=   dateadd(day,-1,'2022-06-13 11:01:47.183332-04:00'::date)  THEN 1  ELSE 0 END  ThisMonthtoday\n    , CASE WHEN \n                date_trunc('month',begin_date) =  dateadd(month,-1, date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) )  AND\n                begin_date <= dateadd(month,-1, '2022-06-13 11:01:47.183332-04:00'::date) -- Que son del mes pasado \n            THEN 1  ELSE 0 END  LastMonthtoday\n    , CASE WHEN date_trunc('month',begin_date) =  dateadd(month,-1, date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) ) \n            THEN 1  ELSE 0 END LastMonth\n    , CASE WHEN date_trunc('month',begin_date) =  dateadd(month,-2, date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) ) \n            THEN 1  ELSE 0 END LasttwoMonth\n    , CASE WHEN date_trunc('month',begin_date) =  dateadd(month,-3, date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) ) \n            THEN 1  ELSE 0 END LastthreeMonth\nFROM schedules_photo_clean\nORDER BY begin_date desc", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_facts\".\"rental_landlord_metric_details_photo_scheduled\""}, "model.houm.sales_seller_metric_details_photo_created": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH schedules_photo_clean as (\r\nSELECT *\r\nFROM {{ ref('proc_supply_schedules') }}\r\nWHERE true \r\nAND schedule_type_name = 'SalesPhoto' \r\nAND (( email NOT LIKE '%test.test'  AND email NOT LIKE '%test.com')  OR applicant_id IS NULL ) \r\nAND  supply_relation != 'New Properties'\r\n)\r\n\r\n\r\nSELECT  \r\n    30 orden\r\n    , 'SalesPhoto Created'::TEXT metric\r\n    , geo_id\r\n    , '{{ var(\"processed_time\") }}'  processed_time\r\n    , created_at\r\n    , schedule_id\r\n    , CASE WHEN created_at =  dateadd(day,-1,'{{ var(\"processed_time\") }}'::date) THEN 1  ELSE 0 END yesterday\r\n    , CASE WHEN created_at =  dateadd(day,-2,'{{ var(\"processed_time\") }}'::date)  THEN 1  ELSE 0 END daybeforeyesterday\r\n    , CASE WHEN date_trunc('week',created_at)  =  dateadd(week,-1, date_trunc('week','{{ var(\"processed_time\") }}'::date) )  THEN 1  ELSE 0 END LastWeek\r\n    , CASE WHEN date_trunc('week',created_at)  =  dateadd(week,-2, date_trunc('week','{{ var(\"processed_time\") }}'::date) )  THEN 1  ELSE 0 END PastLastWeek\r\n    , CASE WHEN \r\n                date_trunc('month',created_at) =  date_trunc('month','{{ var(\"processed_time\") }}'::date) \r\n                 AND created_at <=   dateadd(day,-1,'{{ var(\"processed_time\") }}'::date)  THEN 1  ELSE 0 END ThisMonthtoday\r\n    , CASE WHEN \r\n                date_trunc('month',created_at) =  dateadd(month,-1, date_trunc('month','{{ var(\"processed_time\") }}'::date) )  AND  \r\n                created_at <= dateadd(month,-1, '{{ var(\"processed_time\") }}'::date) \r\n            THEN 1  ELSE 0 END LastMonthtoday\r\n    , CASE WHEN date_trunc('month',created_at) =  dateadd(month,-1, date_trunc('month','{{ var(\"processed_time\") }}'::date) ) \r\n            THEN 1  ELSE 0 END LastMonth\r\n    , CASE WHEN date_trunc('month',created_at) =  dateadd(month,-2, date_trunc('month','{{ var(\"processed_time\") }}'::date) ) \r\n            THEN 1  ELSE 0 END LasttwoMonth\r\n    , CASE WHEN date_trunc('month',created_at) =  dateadd(month,-3, date_trunc('month','{{ var(\"processed_time\") }}'::date) ) \r\n            THEN 1  ELSE 0 END LastthreeMonth\r\nFROM schedules_photo_clean\r\nORDER BY created_at desc\r\n--group by 1,2 , 3", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_supply_schedules"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_facts", "database": null, "tags": ["dw", "facts", "supply"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_facts", "fqn": ["houm", "dwh", "facts", "supply", "sales_seller_metric_details_photo_created"], "unique_id": "model.houm.sales_seller_metric_details_photo_created", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "dwh/facts/supply/sales_seller_metric_details_photo_created.sql", "original_file_path": "models/dwh/facts/supply/sales_seller_metric_details_photo_created.sql", "name": "sales_seller_metric_details_photo_created", "alias": "sales_seller_metric_details_photo_created", "checksum": {"name": "sha256", "checksum": "122964e182298350bdc13d4455ffb17737bb3d501d62c11123d5ceee89bb253a"}, "tags": ["dw", "facts", "supply"], "refs": [["proc_supply_schedules"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/facts/supply/sales_seller_metric_details_photo_created.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_facts", "tags": ["dw", "facts", "supply"], "materialized": "table"}, "created_at": 1654784474.854746, "compiled_sql": "\n\nWITH schedules_photo_clean as (\nSELECT *\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_supply_schedules\"\nWHERE true \nAND schedule_type_name = 'SalesPhoto' \nAND (( email NOT LIKE '%test.test'  AND email NOT LIKE '%test.com')  OR applicant_id IS NULL ) \nAND  supply_relation != 'New Properties'\n)\n\n\nSELECT  \n    30 orden\n    , 'SalesPhoto Created'::TEXT metric\n    , geo_id\n    , '2022-06-13 11:01:47.183332-04:00'  processed_time\n    , created_at\n    , schedule_id\n    , CASE WHEN created_at =  dateadd(day,-1,'2022-06-13 11:01:47.183332-04:00'::date) THEN 1  ELSE 0 END yesterday\n    , CASE WHEN created_at =  dateadd(day,-2,'2022-06-13 11:01:47.183332-04:00'::date)  THEN 1  ELSE 0 END daybeforeyesterday\n    , CASE WHEN date_trunc('week',created_at)  =  dateadd(week,-1, date_trunc('week','2022-06-13 11:01:47.183332-04:00'::date) )  THEN 1  ELSE 0 END LastWeek\n    , CASE WHEN date_trunc('week',created_at)  =  dateadd(week,-2, date_trunc('week','2022-06-13 11:01:47.183332-04:00'::date) )  THEN 1  ELSE 0 END PastLastWeek\n    , CASE WHEN \n                date_trunc('month',created_at) =  date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) \n                 AND created_at <=   dateadd(day,-1,'2022-06-13 11:01:47.183332-04:00'::date)  THEN 1  ELSE 0 END ThisMonthtoday\n    , CASE WHEN \n                date_trunc('month',created_at) =  dateadd(month,-1, date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) )  AND  \n                created_at <= dateadd(month,-1, '2022-06-13 11:01:47.183332-04:00'::date) \n            THEN 1  ELSE 0 END LastMonthtoday\n    , CASE WHEN date_trunc('month',created_at) =  dateadd(month,-1, date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) ) \n            THEN 1  ELSE 0 END LastMonth\n    , CASE WHEN date_trunc('month',created_at) =  dateadd(month,-2, date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) ) \n            THEN 1  ELSE 0 END LasttwoMonth\n    , CASE WHEN date_trunc('month',created_at) =  dateadd(month,-3, date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) ) \n            THEN 1  ELSE 0 END LastthreeMonth\nFROM schedules_photo_clean\nORDER BY created_at desc\n--group by 1,2 , 3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_facts\".\"sales_seller_metric_details_photo_created\""}, "model.houm.sales_seller_metric_details_new_sale_listing_b2c": {"raw_sql": "WITH sale_properties AS (\nSELECT a.id AS property_id\n    ,a.country\n    ,a.for_sale\n    ,b.first_publication_date AS date_sales\nFROM {{ ref('proc_properties') }} a \nLEFT JOIN {{ ref('proc_property_salesdetails') }} b ON a.id =b.property_id\nWHERE TRUE\n        AND b.first_publication_date IS NOT NULL \n        AND a.is_deleted = false  \n        AND a.supply_relation != 'New Properties'\n        AND a.supply_source = 'B2C'\n)\n\nSELECT     \n    61 orden\n    , 'New Sale Listing B2C'::TEXT AS metric \n    , geo_id \n    , '{{ var(\"processed_time\") }}'  AS processed_time\n    , coalesce((timezone( prop_mz.timezone, date_sales)::timestamp WITH TIME ZONE)::date,date_sales::date) AS date_sales\n    , sale_properties.property_id\n    , CASE WHEN (timezone( prop_mz.timezone, date_sales)::timestamp WITH TIME ZONE)::date  =  dateadd(day,-1,'{{ var(\"processed_time\") }}'::date) THEN 1  ELSE 0 END AS yesterday\n    , CASE WHEN (timezone( prop_mz.timezone, date_sales)::timestamp WITH TIME ZONE)::date  =  dateadd(day,-2,'{{ var(\"processed_time\") }}'::date)  THEN 1  ELSE 0 END AS daybeforeyesterday\n    , CASE WHEN date_trunc('week',(timezone( prop_mz.timezone, date_sales)::timestamp WITH TIME ZONE)::date )  =  dateadd(week,-1, date_trunc('week','{{ var(\"processed_time\") }}'::date)) THEN 1  ELSE 0 END AS LastWeek\n    , CASE WHEN date_trunc('week',(timezone( prop_mz.timezone, date_sales)::timestamp WITH TIME ZONE)::date )  =  dateadd(week,-2, date_trunc('week','{{ var(\"processed_time\") }}'::date))  THEN 1  ELSE 0 END AS PastLastWeek\n    , CASE WHEN \n                date_trunc('month',(timezone( prop_mz.timezone, date_sales)::timestamp WITH TIME ZONE)::date ) =  date_trunc('month','{{ var(\"processed_time\") }}'::date) \n                 AND (timezone( prop_mz.timezone, date_sales)::timestamp WITH TIME ZONE)::date  <=   dateadd(day,-1,'{{ var(\"processed_time\") }}'::date) \n                THEN 1  ELSE 0 END AS ThisMonthtoday\n    , CASE WHEN \n                date_trunc('month',(timezone( prop_mz.timezone, date_sales)::timestamp WITH TIME ZONE)::date ) =  dateadd(month,-1, date_trunc('month','{{ var(\"processed_time\") }}'::date)) \n                 AND (timezone( prop_mz.timezone, date_sales)::timestamp WITH TIME ZONE)::date  <= dateadd(month,-1, '{{ var(\"processed_time\") }}'::date) \n                THEN 1  ELSE 0 END AS LastMonthtoday \n    , CASE WHEN date_trunc('month',(timezone( prop_mz.timezone, date_sales)::timestamp WITH TIME ZONE)::date ) =  dateadd(month,-1, date_trunc('month','{{ var(\"processed_time\") }}'::date) ) \n            THEN 1  ELSE 0 END LastMonth\n    , CASE WHEN date_trunc('month',(timezone( prop_mz.timezone, date_sales)::timestamp WITH TIME ZONE)::date ) =  dateadd(month,-2, date_trunc('month','{{ var(\"processed_time\") }}'::date) ) \n            THEN 1  ELSE 0 END AS LasttwoMonth\n    , CASE WHEN date_trunc('month',(timezone( prop_mz.timezone, date_sales)::timestamp WITH TIME ZONE)::date ) =  dateadd(month,-3, date_trunc('month','{{ var(\"processed_time\") }}'::date) ) \n            THEN 1  ELSE 0 END AS LastthreeMonth\nFROM sale_properties\nLEFT JOIN {{ ref('proc_properties_mz') }} prop_mz ON sale_properties.property_id = prop_mz.property_id \nORDER BY date_sales DESC\n--group by 1,2 , 3", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_properties", "model.houm.proc_property_salesdetails", "model.houm.proc_properties_mz"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_facts", "database": null, "tags": ["dw", "facts", "supply"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_facts", "fqn": ["houm", "dwh", "facts", "supply", "sales_seller_metric_details_new_sale_listing_b2c"], "unique_id": "model.houm.sales_seller_metric_details_new_sale_listing_b2c", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "dwh/facts/supply/sales_seller_metric_details_new_sale_listing_b2c.sql", "original_file_path": "models/dwh/facts/supply/sales_seller_metric_details_new_sale_listing_b2c.sql", "name": "sales_seller_metric_details_new_sale_listing_b2c", "alias": "sales_seller_metric_details_new_sale_listing_b2c", "checksum": {"name": "sha256", "checksum": "0bda2cd98e6d6653a94d549236c5d13898b99bd07ca0af21866d72cee6c40c9f"}, "tags": ["dw", "facts", "supply"], "refs": [["proc_properties"], ["proc_property_salesdetails"], ["proc_properties_mz"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/facts/supply/sales_seller_metric_details_new_sale_listing_b2c.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_facts", "tags": ["dw", "facts", "supply"]}, "created_at": 1654784474.868385, "compiled_sql": "WITH sale_properties AS (\nSELECT a.id AS property_id\n    ,a.country\n    ,a.for_sale\n    ,b.first_publication_date AS date_sales\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_properties\" a \nLEFT JOIN \"houmdw_prod\".\"dbt_processing\".\"proc_property_salesdetails\" b ON a.id =b.property_id\nWHERE TRUE\n        AND b.first_publication_date IS NOT NULL \n        AND a.is_deleted = false  \n        AND a.supply_relation != 'New Properties'\n        AND a.supply_source = 'B2C'\n)\n\nSELECT     \n    61 orden\n    , 'New Sale Listing B2C'::TEXT AS metric \n    , geo_id \n    , '2022-06-13 11:01:47.183332-04:00'  AS processed_time\n    , coalesce((timezone( prop_mz.timezone, date_sales)::timestamp WITH TIME ZONE)::date,date_sales::date) AS date_sales\n    , sale_properties.property_id\n    , CASE WHEN (timezone( prop_mz.timezone, date_sales)::timestamp WITH TIME ZONE)::date  =  dateadd(day,-1,'2022-06-13 11:01:47.183332-04:00'::date) THEN 1  ELSE 0 END AS yesterday\n    , CASE WHEN (timezone( prop_mz.timezone, date_sales)::timestamp WITH TIME ZONE)::date  =  dateadd(day,-2,'2022-06-13 11:01:47.183332-04:00'::date)  THEN 1  ELSE 0 END AS daybeforeyesterday\n    , CASE WHEN date_trunc('week',(timezone( prop_mz.timezone, date_sales)::timestamp WITH TIME ZONE)::date )  =  dateadd(week,-1, date_trunc('week','2022-06-13 11:01:47.183332-04:00'::date)) THEN 1  ELSE 0 END AS LastWeek\n    , CASE WHEN date_trunc('week',(timezone( prop_mz.timezone, date_sales)::timestamp WITH TIME ZONE)::date )  =  dateadd(week,-2, date_trunc('week','2022-06-13 11:01:47.183332-04:00'::date))  THEN 1  ELSE 0 END AS PastLastWeek\n    , CASE WHEN \n                date_trunc('month',(timezone( prop_mz.timezone, date_sales)::timestamp WITH TIME ZONE)::date ) =  date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) \n                 AND (timezone( prop_mz.timezone, date_sales)::timestamp WITH TIME ZONE)::date  <=   dateadd(day,-1,'2022-06-13 11:01:47.183332-04:00'::date) \n                THEN 1  ELSE 0 END AS ThisMonthtoday\n    , CASE WHEN \n                date_trunc('month',(timezone( prop_mz.timezone, date_sales)::timestamp WITH TIME ZONE)::date ) =  dateadd(month,-1, date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date)) \n                 AND (timezone( prop_mz.timezone, date_sales)::timestamp WITH TIME ZONE)::date  <= dateadd(month,-1, '2022-06-13 11:01:47.183332-04:00'::date) \n                THEN 1  ELSE 0 END AS LastMonthtoday \n    , CASE WHEN date_trunc('month',(timezone( prop_mz.timezone, date_sales)::timestamp WITH TIME ZONE)::date ) =  dateadd(month,-1, date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) ) \n            THEN 1  ELSE 0 END LastMonth\n    , CASE WHEN date_trunc('month',(timezone( prop_mz.timezone, date_sales)::timestamp WITH TIME ZONE)::date ) =  dateadd(month,-2, date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) ) \n            THEN 1  ELSE 0 END AS LasttwoMonth\n    , CASE WHEN date_trunc('month',(timezone( prop_mz.timezone, date_sales)::timestamp WITH TIME ZONE)::date ) =  dateadd(month,-3, date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) ) \n            THEN 1  ELSE 0 END AS LastthreeMonth\nFROM sale_properties\nLEFT JOIN \"houmdw_prod\".\"dbt_processing\".\"proc_properties_mz\" prop_mz ON sale_properties.property_id = prop_mz.property_id \nORDER BY date_sales DESC\n--group by 1,2 , 3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_facts\".\"sales_seller_metric_details_new_sale_listing_b2c\""}, "model.houm.rental_landlord_metric_details_new_rental_listing_b2c": {"raw_sql": "WITH rental_properties AS (\nSELECT id property_id\n    ,country\n    ,for_rental\n    ,first_publication_date as date_rentals\nFROM {{ ref('proc_properties') }} a\nWHERE TRUE \n        AND a.first_publication_date IS NOT NULL \n        AND a.is_deleted = false \n        AND a.supply_source = 'B2C'\n)\n\nSELECT     \n    61 orden\n    , 'New Rental Listing B2C'::TEXT AS metric \n    , geo_id\n    , '{{ var(\"processed_time\") }}'  processed_time\n    , coalesce((timezone( prop_mz.timezone, date_rentals)::timestamp WITH TIME ZONE)::date,date_rentals::date) AS date_rentals\n    , rental_properties.property_id \n    , CASE WHEN (timezone( prop_mz.timezone, date_rentals)::timestamp WITH TIME ZONE)::date  =  dateadd(day,-1,'{{ var(\"processed_time\") }}'::date) THEN 1  ELSE 0 END AS yesterday\n    , CASE WHEN (timezone( prop_mz.timezone, date_rentals)::timestamp WITH TIME ZONE)::date  =  dateadd(day,-2,'{{ var(\"processed_time\") }}'::date)  THEN 1  ELSE 0 END AS daybeforeyesterday\n    , CASE WHEN date_trunc('week',(timezone( prop_mz.timezone, date_rentals)::timestamp WITH TIME ZONE)::date )  =  dateadd(week,-1, date_trunc('week','{{ var(\"processed_time\") }}'::date)) THEN 1  ELSE 0 END AS LastWeek\n    , CASE WHEN date_trunc('week',(timezone( prop_mz.timezone, date_rentals)::timestamp WITH TIME ZONE)::date )  =  dateadd(week,-2, date_trunc('week','{{ var(\"processed_time\") }}'::date))  THEN 1  ELSE 0 END AS PastLastWeek\n    , CASE WHEN \n                date_trunc('month',(timezone( prop_mz.timezone, date_rentals)::timestamp WITH TIME ZONE)::date ) =  date_trunc('month','{{ var(\"processed_time\") }}'::date) \n                 AND (timezone( prop_mz.timezone, date_rentals)::timestamp WITH TIME ZONE)::date  <=   dateadd(day,-1,'{{ var(\"processed_time\") }}'::date) \n                THEN 1  ELSE 0 END AS ThisMonthtoday\n    , CASE WHEN \n                date_trunc('month',(timezone( prop_mz.timezone, date_rentals)::timestamp WITH TIME ZONE)::date ) =  dateadd(month,-1, date_trunc('month','{{ var(\"processed_time\") }}'::date)) \n                 AND (timezone( prop_mz.timezone, date_rentals)::timestamp WITH TIME ZONE)::date  <= dateadd(month,-1, '{{ var(\"processed_time\") }}'::date) \n                THEN 1  ELSE 0 END AS LastMonthtoday \n    , CASE WHEN date_trunc('month',(timezone( prop_mz.timezone, date_rentals)::timestamp WITH TIME ZONE)::date ) =  dateadd(month,-1, date_trunc('month','{{ var(\"processed_time\") }}'::date) ) \n            THEN 1  ELSE 0 END AS LastMonth\n    , CASE WHEN date_trunc('month',(timezone( prop_mz.timezone, date_rentals)::timestamp WITH TIME ZONE)::date ) =  dateadd(month,-2, date_trunc('month','{{ var(\"processed_time\") }}'::date) ) \n            THEN 1  ELSE 0 END AS LasttwoMonth\n    , CASE WHEN date_trunc('month',(timezone( prop_mz.timezone, date_rentals)::timestamp WITH TIME ZONE)::date ) =  dateadd(month,-3, date_trunc('month','{{ var(\"processed_time\") }}'::date) ) \n            THEN 1  ELSE 0 END AS LastthreeMonth\nFROM rental_properties\nLEFT JOIN {{ ref('proc_properties_mz') }} AS prop_mz ON rental_properties.property_id = prop_mz.property_id \nORDER BY date_rentals DESC\n--group by 1,2 , 3", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_properties", "model.houm.proc_properties_mz"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_facts", "database": null, "tags": ["dw", "facts", "supply"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_facts", "fqn": ["houm", "dwh", "facts", "supply", "rental_landlord_metric_details_new_rental_listing_b2c"], "unique_id": "model.houm.rental_landlord_metric_details_new_rental_listing_b2c", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "dwh/facts/supply/rental_landlord_metric_details_new_rental_listing_b2c.sql", "original_file_path": "models/dwh/facts/supply/rental_landlord_metric_details_new_rental_listing_b2c.sql", "name": "rental_landlord_metric_details_new_rental_listing_b2c", "alias": "rental_landlord_metric_details_new_rental_listing_b2c", "checksum": {"name": "sha256", "checksum": "2ead93456cd92d52331621d67a38b99fbf7ad1e01b424df1322930e60c4e71db"}, "tags": ["dw", "facts", "supply"], "refs": [["proc_properties"], ["proc_properties_mz"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/facts/supply/rental_landlord_metric_details_new_rental_listing_b2c.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_facts", "tags": ["dw", "facts", "supply"]}, "created_at": 1654784474.882077, "compiled_sql": "WITH rental_properties AS (\nSELECT id property_id\n    ,country\n    ,for_rental\n    ,first_publication_date as date_rentals\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_properties\" a\nWHERE TRUE \n        AND a.first_publication_date IS NOT NULL \n        AND a.is_deleted = false \n        AND a.supply_source = 'B2C'\n)\n\nSELECT     \n    61 orden\n    , 'New Rental Listing B2C'::TEXT AS metric \n    , geo_id\n    , '2022-06-13 11:01:47.183332-04:00'  processed_time\n    , coalesce((timezone( prop_mz.timezone, date_rentals)::timestamp WITH TIME ZONE)::date,date_rentals::date) AS date_rentals\n    , rental_properties.property_id \n    , CASE WHEN (timezone( prop_mz.timezone, date_rentals)::timestamp WITH TIME ZONE)::date  =  dateadd(day,-1,'2022-06-13 11:01:47.183332-04:00'::date) THEN 1  ELSE 0 END AS yesterday\n    , CASE WHEN (timezone( prop_mz.timezone, date_rentals)::timestamp WITH TIME ZONE)::date  =  dateadd(day,-2,'2022-06-13 11:01:47.183332-04:00'::date)  THEN 1  ELSE 0 END AS daybeforeyesterday\n    , CASE WHEN date_trunc('week',(timezone( prop_mz.timezone, date_rentals)::timestamp WITH TIME ZONE)::date )  =  dateadd(week,-1, date_trunc('week','2022-06-13 11:01:47.183332-04:00'::date)) THEN 1  ELSE 0 END AS LastWeek\n    , CASE WHEN date_trunc('week',(timezone( prop_mz.timezone, date_rentals)::timestamp WITH TIME ZONE)::date )  =  dateadd(week,-2, date_trunc('week','2022-06-13 11:01:47.183332-04:00'::date))  THEN 1  ELSE 0 END AS PastLastWeek\n    , CASE WHEN \n                date_trunc('month',(timezone( prop_mz.timezone, date_rentals)::timestamp WITH TIME ZONE)::date ) =  date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) \n                 AND (timezone( prop_mz.timezone, date_rentals)::timestamp WITH TIME ZONE)::date  <=   dateadd(day,-1,'2022-06-13 11:01:47.183332-04:00'::date) \n                THEN 1  ELSE 0 END AS ThisMonthtoday\n    , CASE WHEN \n                date_trunc('month',(timezone( prop_mz.timezone, date_rentals)::timestamp WITH TIME ZONE)::date ) =  dateadd(month,-1, date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date)) \n                 AND (timezone( prop_mz.timezone, date_rentals)::timestamp WITH TIME ZONE)::date  <= dateadd(month,-1, '2022-06-13 11:01:47.183332-04:00'::date) \n                THEN 1  ELSE 0 END AS LastMonthtoday \n    , CASE WHEN date_trunc('month',(timezone( prop_mz.timezone, date_rentals)::timestamp WITH TIME ZONE)::date ) =  dateadd(month,-1, date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) ) \n            THEN 1  ELSE 0 END AS LastMonth\n    , CASE WHEN date_trunc('month',(timezone( prop_mz.timezone, date_rentals)::timestamp WITH TIME ZONE)::date ) =  dateadd(month,-2, date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) ) \n            THEN 1  ELSE 0 END AS LasttwoMonth\n    , CASE WHEN date_trunc('month',(timezone( prop_mz.timezone, date_rentals)::timestamp WITH TIME ZONE)::date ) =  dateadd(month,-3, date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) ) \n            THEN 1  ELSE 0 END AS LastthreeMonth\nFROM rental_properties\nLEFT JOIN \"houmdw_prod\".\"dbt_processing\".\"proc_properties_mz\" AS prop_mz ON rental_properties.property_id = prop_mz.property_id \nORDER BY date_rentals DESC\n--group by 1,2 , 3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_facts\".\"rental_landlord_metric_details_new_rental_listing_b2c\""}, "model.houm.rental_landlord_metric_details_photo_created": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH schedules_photo_clean AS (\r\nSELECT *\r\nFROM {{ ref('proc_supply_schedules') }}\r\nWHERE schedule_type_name = 'Photo'\r\nAND (( email NOT LIKE '%test.test'  AND email NOT LIKE '%test.com')  OR applicant_id IS NULL ) \r\n)\r\n\r\n\r\nSELECT  \r\n    30 orden\r\n    , 'Photo Created'::TEXT metric\r\n    , geo_id\r\n    , '{{ var(\"processed_time\") }}'  processed_time\r\n    , created_at\r\n    , schedule_id\r\n    , CASE WHEN created_at =  dateadd(day,-1,'{{ var(\"processed_time\") }}'::date) THEN 1  ELSE 0 END yesterday\r\n    , CASE WHEN created_at =  dateadd(day,-2,'{{ var(\"processed_time\") }}'::date)  THEN 1  ELSE 0 END daybeforeyesterday\r\n    , CASE WHEN date_trunc('week',created_at)  =  dateadd(week,-1, date_trunc('week','{{ var(\"processed_time\") }}'::date) )  THEN 1  ELSE 0 END LastWeek\r\n    , CASE WHEN date_trunc('week',created_at)  =  dateadd(week,-2, date_trunc('week','{{ var(\"processed_time\") }}'::date) )  THEN 1  ELSE 0 END PastLastWeek\r\n    , CASE WHEN \r\n                date_trunc('month',created_at) =  date_trunc('month','{{ var(\"processed_time\") }}'::date) \r\n                 AND created_at <=   dateadd(day,-1,'{{ var(\"processed_time\") }}'::date)  THEN 1  ELSE 0 END ThisMonthtoday\r\n    , CASE WHEN \r\n                date_trunc('month',created_at) =  dateadd(month,-1, date_trunc('month','{{ var(\"processed_time\") }}'::date) )  AND -- Que son del mes pasado \r\n                created_at <= dateadd(month,-1, '{{ var(\"processed_time\") }}'::date) \r\n            THEN 1  ELSE 0 END LastMonthtoday\r\n    , CASE WHEN date_trunc('month',created_at) =  dateadd(month,-1, date_trunc('month','{{ var(\"processed_time\") }}'::date) ) \r\n            THEN 1  ELSE 0 END LastMonth\r\n    , CASE WHEN date_trunc('month',created_at) =  dateadd(month,-2, date_trunc('month','{{ var(\"processed_time\") }}'::date) ) \r\n            THEN 1  ELSE 0 END LasttwoMonth\r\n    , CASE WHEN date_trunc('month',created_at) =  dateadd(month,-3, date_trunc('month','{{ var(\"processed_time\") }}'::date) ) \r\n            THEN 1  ELSE 0 END LastthreeMonth\r\nFROM schedules_photo_clean\r\nORDER BY created_at DESC", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_supply_schedules"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_facts", "database": null, "tags": ["dw", "facts", "supply"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_facts", "fqn": ["houm", "dwh", "facts", "supply", "rental_landlord_metric_details_photo_created"], "unique_id": "model.houm.rental_landlord_metric_details_photo_created", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "dwh/facts/supply/rental_landlord_metric_details_photo_created.sql", "original_file_path": "models/dwh/facts/supply/rental_landlord_metric_details_photo_created.sql", "name": "rental_landlord_metric_details_photo_created", "alias": "rental_landlord_metric_details_photo_created", "checksum": {"name": "sha256", "checksum": "3f8e2fb1e7c5c5c4827e165fb03959a0201fe2bb96432910007112a79acf1fdf"}, "tags": ["dw", "facts", "supply"], "refs": [["proc_supply_schedules"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/facts/supply/rental_landlord_metric_details_photo_created.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_facts", "tags": ["dw", "facts", "supply"], "materialized": "table"}, "created_at": 1654784474.895784, "compiled_sql": "\n\nWITH schedules_photo_clean AS (\nSELECT *\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_supply_schedules\"\nWHERE schedule_type_name = 'Photo'\nAND (( email NOT LIKE '%test.test'  AND email NOT LIKE '%test.com')  OR applicant_id IS NULL ) \n)\n\n\nSELECT  \n    30 orden\n    , 'Photo Created'::TEXT metric\n    , geo_id\n    , '2022-06-13 11:01:47.183332-04:00'  processed_time\n    , created_at\n    , schedule_id\n    , CASE WHEN created_at =  dateadd(day,-1,'2022-06-13 11:01:47.183332-04:00'::date) THEN 1  ELSE 0 END yesterday\n    , CASE WHEN created_at =  dateadd(day,-2,'2022-06-13 11:01:47.183332-04:00'::date)  THEN 1  ELSE 0 END daybeforeyesterday\n    , CASE WHEN date_trunc('week',created_at)  =  dateadd(week,-1, date_trunc('week','2022-06-13 11:01:47.183332-04:00'::date) )  THEN 1  ELSE 0 END LastWeek\n    , CASE WHEN date_trunc('week',created_at)  =  dateadd(week,-2, date_trunc('week','2022-06-13 11:01:47.183332-04:00'::date) )  THEN 1  ELSE 0 END PastLastWeek\n    , CASE WHEN \n                date_trunc('month',created_at) =  date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) \n                 AND created_at <=   dateadd(day,-1,'2022-06-13 11:01:47.183332-04:00'::date)  THEN 1  ELSE 0 END ThisMonthtoday\n    , CASE WHEN \n                date_trunc('month',created_at) =  dateadd(month,-1, date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) )  AND -- Que son del mes pasado \n                created_at <= dateadd(month,-1, '2022-06-13 11:01:47.183332-04:00'::date) \n            THEN 1  ELSE 0 END LastMonthtoday\n    , CASE WHEN date_trunc('month',created_at) =  dateadd(month,-1, date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) ) \n            THEN 1  ELSE 0 END LastMonth\n    , CASE WHEN date_trunc('month',created_at) =  dateadd(month,-2, date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) ) \n            THEN 1  ELSE 0 END LasttwoMonth\n    , CASE WHEN date_trunc('month',created_at) =  dateadd(month,-3, date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) ) \n            THEN 1  ELSE 0 END LastthreeMonth\nFROM schedules_photo_clean\nORDER BY created_at DESC", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_facts\".\"rental_landlord_metric_details_photo_created\""}, "model.houm.sales_seller_metric_details_leads": {"raw_sql": "{{ config(materialized='table') }}\n\nWITH  supply_seller_leads_clean as (\nSELECT *\nFROM  {{ ref('proc_supply_seller_leads') }} \nWHERE TRUE \nAND ((lost_reason NOT LIKE '%Test%'  AND lost_reason != 'Pruebas'  AND lost_reason != 'Cotizaci\u00f3n Duplicada') or lost_reason is null)\nAND (supply_source != 'B2B' OR supply_source is null)\n)\n\nSELECT \n    10 orden \n    , 'Created Unique Seller Leads'::TEXT metric\n    , geo_id\n    , '{{ var(\"processed_time\") }}'  processed_time\n    , add_time\n    , qualification\n    , fecha_calificacion\n    , person_id\n    , email\n    , deal_id\n    , CASE WHEN add_time =  dateadd(day,-1,'{{ var(\"processed_time\") }}'::date) THEN 1  ELSE 0 END yesterday\n    , CASE WHEN add_time =  dateadd(day,-2,'{{ var(\"processed_time\") }}'::date)  THEN 1  ELSE 0 END daybeforeyesterday\n    , CASE WHEN date_trunc('week',add_time)  =  dateadd(week,-1, date_trunc('week','{{ var(\"processed_time\") }}'::date) )  THEN 1  ELSE 0 END LastWeek\n    , CASE WHEN date_trunc('week',add_time)  =  dateadd(week,-2, date_trunc('week','{{ var(\"processed_time\") }}'::date) )  THEN 1  ELSE 0 END PastLastWeek\n    , CASE WHEN \n                date_trunc('month',add_time) =  date_trunc('month','{{ var(\"processed_time\") }}'::date) \n                 AND add_time <=   dateadd(day,-1,'{{ var(\"processed_time\") }}'::date)  THEN 1  ELSE 0 END ThisMonthtoday\n    , CASE WHEN \n                date_trunc('month',add_time) =  dateadd(month,-1, date_trunc('month','{{ var(\"processed_time\") }}'::date) )  AND  \n                add_time <= dateadd(month,-1, '{{ var(\"processed_time\") }}'::date) \n            THEN 1  ELSE 0 END LastMonthtoday\n    , CASE WHEN date_trunc('month',add_time) =  dateadd(month,-1, date_trunc('month','{{ var(\"processed_time\") }}'::date) ) \n            THEN 1  ELSE 0 END LastMonth\n    , CASE WHEN date_trunc('month',add_time) =  dateadd(month,-2, date_trunc('month','{{ var(\"processed_time\") }}'::date) ) \n            THEN 1  ELSE 0 END LasttwoMonth\n    , CASE WHEN date_trunc('month',add_time) =  dateadd(month,-3, date_trunc('month','{{ var(\"processed_time\") }}'::date) ) \n            THEN 1  ELSE 0 END LastthreeMonth\nFROM supply_seller_leads_clean \nORDER BY add_time desc", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_supply_seller_leads"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_facts", "database": null, "tags": ["dw", "facts", "supply"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_facts", "fqn": ["houm", "dwh", "facts", "supply", "sales_seller_metric_details_leads"], "unique_id": "model.houm.sales_seller_metric_details_leads", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "dwh/facts/supply/sales_seller_metric_details_leads.sql", "original_file_path": "models/dwh/facts/supply/sales_seller_metric_details_leads.sql", "name": "sales_seller_metric_details_leads", "alias": "sales_seller_metric_details_leads", "checksum": {"name": "sha256", "checksum": "aa32d8c16c8b794a8118a626591b1d73d58e8b9d12f4e0979f04c6ae894b2920"}, "tags": ["dw", "facts", "supply"], "refs": [["proc_supply_seller_leads"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/facts/supply/sales_seller_metric_details_leads.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_facts", "tags": ["dw", "facts", "supply"], "materialized": "table"}, "created_at": 1654784474.910122, "compiled_sql": "\n\nWITH  supply_seller_leads_clean as (\nSELECT *\nFROM  \"houmdw_prod\".\"dbt_processing\".\"proc_supply_seller_leads\" \nWHERE TRUE \nAND ((lost_reason NOT LIKE '%Test%'  AND lost_reason != 'Pruebas'  AND lost_reason != 'Cotizaci\u00f3n Duplicada') or lost_reason is null)\nAND (supply_source != 'B2B' OR supply_source is null)\n)\n\nSELECT \n    10 orden \n    , 'Created Unique Seller Leads'::TEXT metric\n    , geo_id\n    , '2022-06-13 11:01:47.183332-04:00'  processed_time\n    , add_time\n    , qualification\n    , fecha_calificacion\n    , person_id\n    , email\n    , deal_id\n    , CASE WHEN add_time =  dateadd(day,-1,'2022-06-13 11:01:47.183332-04:00'::date) THEN 1  ELSE 0 END yesterday\n    , CASE WHEN add_time =  dateadd(day,-2,'2022-06-13 11:01:47.183332-04:00'::date)  THEN 1  ELSE 0 END daybeforeyesterday\n    , CASE WHEN date_trunc('week',add_time)  =  dateadd(week,-1, date_trunc('week','2022-06-13 11:01:47.183332-04:00'::date) )  THEN 1  ELSE 0 END LastWeek\n    , CASE WHEN date_trunc('week',add_time)  =  dateadd(week,-2, date_trunc('week','2022-06-13 11:01:47.183332-04:00'::date) )  THEN 1  ELSE 0 END PastLastWeek\n    , CASE WHEN \n                date_trunc('month',add_time) =  date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) \n                 AND add_time <=   dateadd(day,-1,'2022-06-13 11:01:47.183332-04:00'::date)  THEN 1  ELSE 0 END ThisMonthtoday\n    , CASE WHEN \n                date_trunc('month',add_time) =  dateadd(month,-1, date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) )  AND  \n                add_time <= dateadd(month,-1, '2022-06-13 11:01:47.183332-04:00'::date) \n            THEN 1  ELSE 0 END LastMonthtoday\n    , CASE WHEN date_trunc('month',add_time) =  dateadd(month,-1, date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) ) \n            THEN 1  ELSE 0 END LastMonth\n    , CASE WHEN date_trunc('month',add_time) =  dateadd(month,-2, date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) ) \n            THEN 1  ELSE 0 END LasttwoMonth\n    , CASE WHEN date_trunc('month',add_time) =  dateadd(month,-3, date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) ) \n            THEN 1  ELSE 0 END LastthreeMonth\nFROM supply_seller_leads_clean \nORDER BY add_time desc", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_facts\".\"sales_seller_metric_details_leads\""}, "model.houm.rental_landlord_metric_details_leads_qualified_date": {"raw_sql": "{{ config(materialized='table') }}\n\nWITH  demand_landlord_leads_clean AS (\nSELECT *\nFROM  {{ ref('proc_supply_landlord_leads') }} \nWHERE TRUE \nAND  ( (lost_reason NOT LIKE '%Test%'  AND lost_reason != 'Pruebas'  AND lost_reason != 'Cotizaci\u00f3n Duplicada') OR lost_reason IS NULL)\nAND (supply_source != 'B2B' OR supply_source IS NULL)\n)\n\nSELECT \n    21 orden \n    , 'Unique Landlord Hot Qualified Leads'::TEXT metric\n    , geo_id\n    , '{{ var(\"processed_time\") }}'  processed_time\n    , add_time\n    , qualification\n    , fecha_calificacion\n    , person_id\n    , email\n    , deal_id\n    , CASE WHEN fecha_calificacion =  dateadd(day,-1,'{{ var(\"processed_time\") }}'::date) THEN 1  ELSE 0 END yesterday\n    , CASE WHEN fecha_calificacion =  dateadd(day,-2,'{{ var(\"processed_time\") }}'::date)  THEN 1  ELSE 0 END daybeforeyesterday\n    , CASE WHEN date_trunc('week',fecha_calificacion)  =  dateadd(week,-1, date_trunc('week','{{ var(\"processed_time\") }}'::date) )  THEN 1  ELSE 0 END as  LastWeek\n    , CASE WHEN date_trunc('week',fecha_calificacion)  =  dateadd(week,-2, date_trunc('week','{{ var(\"processed_time\") }}'::date) )  THEN 1  ELSE 0 END as PastLastWeek\n    , CASE WHEN \n                date_trunc('month',fecha_calificacion) =  date_trunc('month','{{ var(\"processed_time\") }}'::date) \n                 AND fecha_calificacion <=   dateadd(day,-1,'{{ var(\"processed_time\") }}'::date)  THEN 1  ELSE 0 END ThisMonthtoday\n    , CASE WHEN \n                date_trunc('month',fecha_calificacion) =  dateadd(month,-1, date_trunc('month','{{ var(\"processed_time\") }}'::date) )  AND -- Que son del mes pasado \n                fecha_calificacion <= dateadd(month,-1, '{{ var(\"processed_time\") }}'::date) \n            THEN 1  ELSE 0 END LastMonthtoday\n    , CASE WHEN date_trunc('month',fecha_calificacion) =  dateadd(month,-1, date_trunc('month','{{ var(\"processed_time\") }}'::date) ) \n            THEN 1  ELSE 0 END LastMonth\n    , CASE WHEN date_trunc('month',fecha_calificacion) =  dateadd(month,-2, date_trunc('month','{{ var(\"processed_time\") }}'::date) ) \n            THEN 1  ELSE 0 END LasttwoMonth\n    , CASE WHEN date_trunc('month',fecha_calificacion) =  dateadd(month,-3, date_trunc('month','{{ var(\"processed_time\") }}'::date) ) \n            THEN 1  ELSE 0 END LastthreeMonth\nFROM demand_landlord_leads_clean\nwhere qualification >= 3  AND qualification <= 5\nORDER BY fecha_calificacion DESC \n--group by 1 , 2, 3", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_supply_landlord_leads"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_facts", "database": null, "tags": ["dw", "facts", "supply"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_facts", "fqn": ["houm", "dwh", "facts", "supply", "rental_landlord_metric_details_leads_qualified_date"], "unique_id": "model.houm.rental_landlord_metric_details_leads_qualified_date", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "dwh/facts/supply/rental_landlord_metric_details_leads_qualified_date.sql", "original_file_path": "models/dwh/facts/supply/rental_landlord_metric_details_leads_qualified_date.sql", "name": "rental_landlord_metric_details_leads_qualified_date", "alias": "rental_landlord_metric_details_leads_qualified_date", "checksum": {"name": "sha256", "checksum": "498587b803c3b7b244a0494041e18a59c78f374d18dbdffb561b81c19ccf2f7e"}, "tags": ["dw", "facts", "supply"], "refs": [["proc_supply_landlord_leads"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/facts/supply/rental_landlord_metric_details_leads_qualified_date.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_facts", "tags": ["dw", "facts", "supply"], "materialized": "table"}, "created_at": 1654784474.923572, "compiled_sql": "\n\nWITH  demand_landlord_leads_clean AS (\nSELECT *\nFROM  \"houmdw_prod\".\"dbt_processing\".\"proc_supply_landlord_leads\" \nWHERE TRUE \nAND  ( (lost_reason NOT LIKE '%Test%'  AND lost_reason != 'Pruebas'  AND lost_reason != 'Cotizaci\u00f3n Duplicada') OR lost_reason IS NULL)\nAND (supply_source != 'B2B' OR supply_source IS NULL)\n)\n\nSELECT \n    21 orden \n    , 'Unique Landlord Hot Qualified Leads'::TEXT metric\n    , geo_id\n    , '2022-06-13 11:01:47.183332-04:00'  processed_time\n    , add_time\n    , qualification\n    , fecha_calificacion\n    , person_id\n    , email\n    , deal_id\n    , CASE WHEN fecha_calificacion =  dateadd(day,-1,'2022-06-13 11:01:47.183332-04:00'::date) THEN 1  ELSE 0 END yesterday\n    , CASE WHEN fecha_calificacion =  dateadd(day,-2,'2022-06-13 11:01:47.183332-04:00'::date)  THEN 1  ELSE 0 END daybeforeyesterday\n    , CASE WHEN date_trunc('week',fecha_calificacion)  =  dateadd(week,-1, date_trunc('week','2022-06-13 11:01:47.183332-04:00'::date) )  THEN 1  ELSE 0 END as  LastWeek\n    , CASE WHEN date_trunc('week',fecha_calificacion)  =  dateadd(week,-2, date_trunc('week','2022-06-13 11:01:47.183332-04:00'::date) )  THEN 1  ELSE 0 END as PastLastWeek\n    , CASE WHEN \n                date_trunc('month',fecha_calificacion) =  date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) \n                 AND fecha_calificacion <=   dateadd(day,-1,'2022-06-13 11:01:47.183332-04:00'::date)  THEN 1  ELSE 0 END ThisMonthtoday\n    , CASE WHEN \n                date_trunc('month',fecha_calificacion) =  dateadd(month,-1, date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) )  AND -- Que son del mes pasado \n                fecha_calificacion <= dateadd(month,-1, '2022-06-13 11:01:47.183332-04:00'::date) \n            THEN 1  ELSE 0 END LastMonthtoday\n    , CASE WHEN date_trunc('month',fecha_calificacion) =  dateadd(month,-1, date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) ) \n            THEN 1  ELSE 0 END LastMonth\n    , CASE WHEN date_trunc('month',fecha_calificacion) =  dateadd(month,-2, date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) ) \n            THEN 1  ELSE 0 END LasttwoMonth\n    , CASE WHEN date_trunc('month',fecha_calificacion) =  dateadd(month,-3, date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) ) \n            THEN 1  ELSE 0 END LastthreeMonth\nFROM demand_landlord_leads_clean\nwhere qualification >= 3  AND qualification <= 5\nORDER BY fecha_calificacion DESC \n--group by 1 , 2, 3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_facts\".\"rental_landlord_metric_details_leads_qualified_date\""}, "model.houm.rental_landlord_metric_details_leads": {"raw_sql": "{{ config(materialized='table') }}\n\nWITH  demand_landlord_leads_clean AS (\nSELECT *\nFROM  {{ ref('proc_supply_landlord_leads') }} \nWHERE TRUE \nAND  ( (lost_reason NOT LIKE '%Test%'  AND lost_reason != 'Pruebas'  AND lost_reason != 'Cotizaci\u00f3n Duplicada') OR lost_reason IS NULL)\nAND (supply_source != 'B2B' OR supply_source IS NULL)\n)\n\nSELECT \n    10 orden \n    , 'Created Unique Landlord Leads'::TEXT metric\n    , geo_id\n    , '{{ var(\"processed_time\") }}'  processed_time\n    , add_time\n    , qualification\n    , fecha_calificacion\n    , person_id\n    , email\n    , deal_id\n    , CASE WHEN add_time =  dateadd(day,-1,'{{ var(\"processed_time\") }}'::date) THEN 1  ELSE 0 END  yesterday\n    , CASE WHEN add_time =  dateadd(day,-2,'{{ var(\"processed_time\") }}'::date)  THEN 1  ELSE 0 END  daybeforeyesterday\n    , CASE WHEN date_trunc('week',add_time)  =  dateadd(week,-1, date_trunc('week','{{ var(\"processed_time\") }}'::date) )  THEN 1  ELSE 0 END LastWeek\n    , CASE WHEN date_trunc('week',add_time)  =  dateadd(week,-2, date_trunc('week','{{ var(\"processed_time\") }}'::date) )  THEN 1  ELSE 0 END  PastLastWeek\n    , CASE WHEN \n                date_trunc('month',add_time) =  date_trunc('month','{{ var(\"processed_time\") }}'::date) \n                 AND add_time <=   dateadd(day,-1,'{{ var(\"processed_time\") }}'::date)  THEN 1  ELSE 0 END  ThisMonthtoday\n    , CASE WHEN \n                date_trunc('month',add_time) =  dateadd(month,-1, date_trunc('month','{{ var(\"processed_time\") }}'::date) )  AND -- Que son del mes pasado \n                add_time <= dateadd(month,-1, '{{ var(\"processed_time\") }}'::date) \n            THEN 1  ELSE 0 END LastMonthtoday\n    , CASE WHEN date_trunc('month',add_time) =  dateadd(month,-1, date_trunc('month','{{ var(\"processed_time\") }}'::date) ) \n            THEN 1  ELSE 0 END LastMonth\n    , CASE WHEN date_trunc('month',add_time) =  dateadd(month,-2, date_trunc('month','{{ var(\"processed_time\") }}'::date) ) \n            THEN 1  ELSE 0 END LasttwoMonth\n    , CASE WHEN date_trunc('month',add_time) =  dateadd(month,-3, date_trunc('month','{{ var(\"processed_time\") }}'::date) ) \n            THEN 1  ELSE 0 END LastthreeMonth\nFROM demand_landlord_leads_clean\nORDER BY add_time desc\n--group by 1 , 2, 3", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_supply_landlord_leads"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_facts", "database": null, "tags": ["dw", "facts", "supply"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_facts", "fqn": ["houm", "dwh", "facts", "supply", "rental_landlord_metric_details_leads"], "unique_id": "model.houm.rental_landlord_metric_details_leads", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "dwh/facts/supply/rental_landlord_metric_details_leads.sql", "original_file_path": "models/dwh/facts/supply/rental_landlord_metric_details_leads.sql", "name": "rental_landlord_metric_details_leads", "alias": "rental_landlord_metric_details_leads", "checksum": {"name": "sha256", "checksum": "e9139a0a3ca18fa9261c4fdfc2a34f73b5f83941377de9517c5b6111ff671572"}, "tags": ["dw", "facts", "supply"], "refs": [["proc_supply_landlord_leads"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/facts/supply/rental_landlord_metric_details_leads.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_facts", "tags": ["dw", "facts", "supply"], "materialized": "table"}, "created_at": 1654784474.937147, "compiled_sql": "\n\nWITH  demand_landlord_leads_clean AS (\nSELECT *\nFROM  \"houmdw_prod\".\"dbt_processing\".\"proc_supply_landlord_leads\" \nWHERE TRUE \nAND  ( (lost_reason NOT LIKE '%Test%'  AND lost_reason != 'Pruebas'  AND lost_reason != 'Cotizaci\u00f3n Duplicada') OR lost_reason IS NULL)\nAND (supply_source != 'B2B' OR supply_source IS NULL)\n)\n\nSELECT \n    10 orden \n    , 'Created Unique Landlord Leads'::TEXT metric\n    , geo_id\n    , '2022-06-13 11:01:47.183332-04:00'  processed_time\n    , add_time\n    , qualification\n    , fecha_calificacion\n    , person_id\n    , email\n    , deal_id\n    , CASE WHEN add_time =  dateadd(day,-1,'2022-06-13 11:01:47.183332-04:00'::date) THEN 1  ELSE 0 END  yesterday\n    , CASE WHEN add_time =  dateadd(day,-2,'2022-06-13 11:01:47.183332-04:00'::date)  THEN 1  ELSE 0 END  daybeforeyesterday\n    , CASE WHEN date_trunc('week',add_time)  =  dateadd(week,-1, date_trunc('week','2022-06-13 11:01:47.183332-04:00'::date) )  THEN 1  ELSE 0 END LastWeek\n    , CASE WHEN date_trunc('week',add_time)  =  dateadd(week,-2, date_trunc('week','2022-06-13 11:01:47.183332-04:00'::date) )  THEN 1  ELSE 0 END  PastLastWeek\n    , CASE WHEN \n                date_trunc('month',add_time) =  date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) \n                 AND add_time <=   dateadd(day,-1,'2022-06-13 11:01:47.183332-04:00'::date)  THEN 1  ELSE 0 END  ThisMonthtoday\n    , CASE WHEN \n                date_trunc('month',add_time) =  dateadd(month,-1, date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) )  AND -- Que son del mes pasado \n                add_time <= dateadd(month,-1, '2022-06-13 11:01:47.183332-04:00'::date) \n            THEN 1  ELSE 0 END LastMonthtoday\n    , CASE WHEN date_trunc('month',add_time) =  dateadd(month,-1, date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) ) \n            THEN 1  ELSE 0 END LastMonth\n    , CASE WHEN date_trunc('month',add_time) =  dateadd(month,-2, date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) ) \n            THEN 1  ELSE 0 END LasttwoMonth\n    , CASE WHEN date_trunc('month',add_time) =  dateadd(month,-3, date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) ) \n            THEN 1  ELSE 0 END LastthreeMonth\nFROM demand_landlord_leads_clean\nORDER BY add_time desc\n--group by 1 , 2, 3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_facts\".\"rental_landlord_metric_details_leads\""}, "model.houm.facts_pipedrive_leads": {"raw_sql": "{{ config(materialized='table') }}\n\nSELECT \n    deal_id,\n    property_id,\n    original_time,\n    local_time,\n    lead_qualification,\n    person_id,\n    qualification_date,\n    dim_business.id AS dim_business_id,\n    dim_pipedrive_locations.id AS dim_locations_id\nFROM {{ref('proc_tmp_supply_leads')}} AS proc_tmp_supply_leads\nLEFT JOIN {{ref('dim_business')}} AS dim_business\n    ON dim_business.business = proc_tmp_supply_leads.business\n    AND dim_business.supply_source = proc_tmp_supply_leads.supply_source\n    AND dim_business.supply_relation = proc_tmp_supply_leads.supply_relation\n    AND dim_business.funnel = proc_tmp_supply_leads.funnel\nLEFT JOIN {{ref('dim_pipedrive_locations')}} AS dim_pipedrive_locations\n    ON dim_pipedrive_locations.country = proc_tmp_supply_leads.country\n    AND dim_pipedrive_locations.region = proc_tmp_supply_leads.region\n    AND dim_pipedrive_locations.city = proc_tmp_supply_leads.city", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_tmp_supply_leads", "model.houm.dim_business", "model.houm.dim_pipedrive_locations"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_facts", "database": null, "tags": ["dw", "facts", "supply"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_facts", "fqn": ["houm", "dwh", "facts", "supply", "facts_pipedrive_leads"], "unique_id": "model.houm.facts_pipedrive_leads", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "dwh/facts/supply/facts_pipedrive_leads.sql", "original_file_path": "models/dwh/facts/supply/facts_pipedrive_leads.sql", "name": "facts_pipedrive_leads", "alias": "facts_pipedrive_leads", "checksum": {"name": "sha256", "checksum": "be95f91824b6fc21167399c6d7cf5b15994cf79743abfa36e628619dca610797"}, "tags": ["dw", "facts", "supply"], "refs": [["proc_tmp_supply_leads"], ["dim_business"], ["dim_pipedrive_locations"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/facts/supply/facts_pipedrive_leads.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_facts", "tags": ["dw", "facts", "supply"], "materialized": "table"}, "created_at": 1654784474.950741, "compiled_sql": "\n\nSELECT \n    deal_id,\n    property_id,\n    original_time,\n    local_time,\n    lead_qualification,\n    person_id,\n    qualification_date,\n    dim_business.id AS dim_business_id,\n    dim_pipedrive_locations.id AS dim_locations_id\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_tmp_supply_leads\" AS proc_tmp_supply_leads\nLEFT JOIN \"houmdw_prod\".\"dbt_dims\".\"dim_business\" AS dim_business\n    ON dim_business.business = proc_tmp_supply_leads.business\n    AND dim_business.supply_source = proc_tmp_supply_leads.supply_source\n    AND dim_business.supply_relation = proc_tmp_supply_leads.supply_relation\n    AND dim_business.funnel = proc_tmp_supply_leads.funnel\nLEFT JOIN \"houmdw_prod\".\"dbt_dims\".\"dim_pipedrive_locations\" AS dim_pipedrive_locations\n    ON dim_pipedrive_locations.country = proc_tmp_supply_leads.country\n    AND dim_pipedrive_locations.region = proc_tmp_supply_leads.region\n    AND dim_pipedrive_locations.city = proc_tmp_supply_leads.city", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_facts\".\"facts_pipedrive_leads\""}, "model.houm.fact_daily_virtual_uf_cl": {"raw_sql": "with table6 as (\nselect row_number() over (order by thedate asc) as n_day\n \t,thefirstofmonth \n \t,thedate\n \t,b.monthly_inflation\n \t,b.daily_inflation\n \t,lead(daily_inflation,1) over (order by thedate asc) as next_daily_inflation\nfrom dim_dates a\nleft join {{ ref('proc_monthly_daily_inflation_cl') }} b on a.thefirstofmonth  = b.date_formatted \norder by thedate asc\n)\n, table7 as (\nselect thedate\n\t\t,n_day\n\t\t,monthly_inflation\n\t\t,daily_inflation\n\t\t--,(SUM(1 * (1+daily_inflation) ) OVER(ORDER BY thedate ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW)-(n_day-1)) as try_1\nfrom table6\nwhere monthly_inflation is not null\norder by n_day\n)\n\nselect \n\tn_day\n\t,thedate\n\t,monthly_inflation\n\t,daily_inflation\n\t,exp(sum(ln(1+daily_inflation)) over (ORDER BY thedate ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW)) as  daily_virtual_uf\nfrom table7", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_monthly_daily_inflation_cl"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_facts", "database": null, "tags": ["dw", "facts", "ipc"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_facts", "fqn": ["houm", "dwh", "facts", "economic_indicators", "fact_daily_virtual_uf_cl"], "unique_id": "model.houm.fact_daily_virtual_uf_cl", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "dwh/facts/economic_indicators/fact_daily_virtual_uf_cl.sql", "original_file_path": "models/dwh/facts/economic_indicators/fact_daily_virtual_uf_cl.sql", "name": "fact_daily_virtual_uf_cl", "alias": "fact_daily_virtual_uf_cl", "checksum": {"name": "sha256", "checksum": "4fd1b2adb692cb8b7ea1aa71462e75567e117ccc974e98eaf0986f0784e739dd"}, "tags": ["dw", "facts", "ipc"], "refs": [["proc_monthly_daily_inflation_cl"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/facts/economic_indicators/fact_daily_virtual_uf_cl.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_facts", "tags": ["dw", "facts", "ipc"]}, "created_at": 1654784474.952595, "compiled_sql": "with table6 as (\nselect row_number() over (order by thedate asc) as n_day\n \t,thefirstofmonth \n \t,thedate\n \t,b.monthly_inflation\n \t,b.daily_inflation\n \t,lead(daily_inflation,1) over (order by thedate asc) as next_daily_inflation\nfrom dim_dates a\nleft join \"houmdw_prod\".\"dbt_processing\".\"proc_monthly_daily_inflation_cl\" b on a.thefirstofmonth  = b.date_formatted \norder by thedate asc\n)\n, table7 as (\nselect thedate\n\t\t,n_day\n\t\t,monthly_inflation\n\t\t,daily_inflation\n\t\t--,(SUM(1 * (1+daily_inflation) ) OVER(ORDER BY thedate ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW)-(n_day-1)) as try_1\nfrom table6\nwhere monthly_inflation is not null\norder by n_day\n)\n\nselect \n\tn_day\n\t,thedate\n\t,monthly_inflation\n\t,daily_inflation\n\t,exp(sum(ln(1+daily_inflation)) over (ORDER BY thedate ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW)) as  daily_virtual_uf\nfrom table7", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_facts\".\"fact_daily_virtual_uf_cl\""}, "model.houm.fact_daily_virtual_uf_co": {"raw_sql": "with table6 as (\nselect row_number() over (order by thedate asc) as n_day\n \t,thefirstofmonth \n \t,thedate\n \t,b.monthly_inflation\n \t,b.daily_inflation\n \t,lead(daily_inflation,1) over (order by thedate asc) as next_daily_inflation\nfrom dim_dates a\nleft join {{ ref('proc_monthly_daily_inflation_co') }} b on a.thefirstofmonth  = b.date_formatted \norder by thedate asc\n)\n, table7 as (\nselect thedate\n\t\t,n_day\n\t\t,monthly_inflation\n\t\t,daily_inflation\n\t\t--,(SUM(1 * (1+daily_inflation) ) OVER(ORDER BY thedate ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW)-(n_day-1)) as try_1\nfrom table6\nwhere monthly_inflation is not null\norder by n_day\n)\n\nselect \n\tn_day\n\t,thedate\n\t,monthly_inflation\n\t,daily_inflation\n\t,exp(sum(ln(1+daily_inflation)) over (ORDER BY thedate ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW)) as  daily_virtual_uf\nfrom table7", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_monthly_daily_inflation_co"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_facts", "database": null, "tags": ["dw", "facts", "ipc"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_facts", "fqn": ["houm", "dwh", "facts", "economic_indicators", "fact_daily_virtual_uf_co"], "unique_id": "model.houm.fact_daily_virtual_uf_co", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "dwh/facts/economic_indicators/fact_daily_virtual_uf_co.sql", "original_file_path": "models/dwh/facts/economic_indicators/fact_daily_virtual_uf_co.sql", "name": "fact_daily_virtual_uf_co", "alias": "fact_daily_virtual_uf_co", "checksum": {"name": "sha256", "checksum": "e3949025b3ff978828964228c357f5833abf99f04c1f200db61a4c4a75c49c7b"}, "tags": ["dw", "facts", "ipc"], "refs": [["proc_monthly_daily_inflation_co"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/facts/economic_indicators/fact_daily_virtual_uf_co.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_facts", "tags": ["dw", "facts", "ipc"]}, "created_at": 1654784474.954227, "compiled_sql": "with table6 as (\nselect row_number() over (order by thedate asc) as n_day\n \t,thefirstofmonth \n \t,thedate\n \t,b.monthly_inflation\n \t,b.daily_inflation\n \t,lead(daily_inflation,1) over (order by thedate asc) as next_daily_inflation\nfrom dim_dates a\nleft join \"houmdw_prod\".\"dbt_processing\".\"proc_monthly_daily_inflation_co\" b on a.thefirstofmonth  = b.date_formatted \norder by thedate asc\n)\n, table7 as (\nselect thedate\n\t\t,n_day\n\t\t,monthly_inflation\n\t\t,daily_inflation\n\t\t--,(SUM(1 * (1+daily_inflation) ) OVER(ORDER BY thedate ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW)-(n_day-1)) as try_1\nfrom table6\nwhere monthly_inflation is not null\norder by n_day\n)\n\nselect \n\tn_day\n\t,thedate\n\t,monthly_inflation\n\t,daily_inflation\n\t,exp(sum(ln(1+daily_inflation)) over (ORDER BY thedate ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW)) as  daily_virtual_uf\nfrom table7", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_facts\".\"fact_daily_virtual_uf_co\""}, "model.houm.fact_daily_virtual_uf_mx": {"raw_sql": "with table6 as (\nselect row_number() over (order by thedate asc) as n_day\n \t,thefirstofmonth \n \t,thedate\n \t,b.monthly_inflation\n \t,b.daily_inflation\n \t,lead(daily_inflation,1) over (order by thedate asc) as next_daily_inflation\nfrom dim_dates a\nleft join {{ ref('proc_monthly_daily_inflation_mx') }} b on a.thefirstofmonth  = b.date_formatted \norder by thedate asc\n)\n, table7 as (\nselect thedate\n\t\t,n_day\n\t\t,monthly_inflation\n\t\t,daily_inflation\n\t\t--,(SUM(1 * (1+daily_inflation) ) OVER(ORDER BY thedate ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW)-(n_day-1)) as try_1\nfrom table6\nwhere monthly_inflation is not null\norder by n_day\n)\n\nselect \n\tn_day\n\t,thedate\n\t,monthly_inflation\n\t,daily_inflation\n\t,exp(sum(ln(1+daily_inflation)) over (ORDER BY thedate ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW)) as  daily_virtual_uf\nfrom table7", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_monthly_daily_inflation_mx"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_facts", "database": null, "tags": ["dw", "facts", "ipc"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_facts", "fqn": ["houm", "dwh", "facts", "economic_indicators", "fact_daily_virtual_uf_mx"], "unique_id": "model.houm.fact_daily_virtual_uf_mx", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "dwh/facts/economic_indicators/fact_daily_virtual_uf_mx.sql", "original_file_path": "models/dwh/facts/economic_indicators/fact_daily_virtual_uf_mx.sql", "name": "fact_daily_virtual_uf_mx", "alias": "fact_daily_virtual_uf_mx", "checksum": {"name": "sha256", "checksum": "e76f8c6fda5323ce42f067da226b422ecc4dfd24137d0f0c90396b4df27574ec"}, "tags": ["dw", "facts", "ipc"], "refs": [["proc_monthly_daily_inflation_mx"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/facts/economic_indicators/fact_daily_virtual_uf_mx.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_facts", "tags": ["dw", "facts", "ipc"]}, "created_at": 1654784474.9558558, "compiled_sql": "with table6 as (\nselect row_number() over (order by thedate asc) as n_day\n \t,thefirstofmonth \n \t,thedate\n \t,b.monthly_inflation\n \t,b.daily_inflation\n \t,lead(daily_inflation,1) over (order by thedate asc) as next_daily_inflation\nfrom dim_dates a\nleft join \"houmdw_prod\".\"dbt_processing\".\"proc_monthly_daily_inflation_mx\" b on a.thefirstofmonth  = b.date_formatted \norder by thedate asc\n)\n, table7 as (\nselect thedate\n\t\t,n_day\n\t\t,monthly_inflation\n\t\t,daily_inflation\n\t\t--,(SUM(1 * (1+daily_inflation) ) OVER(ORDER BY thedate ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW)-(n_day-1)) as try_1\nfrom table6\nwhere monthly_inflation is not null\norder by n_day\n)\n\nselect \n\tn_day\n\t,thedate\n\t,monthly_inflation\n\t,daily_inflation\n\t,exp(sum(ln(1+daily_inflation)) over (ORDER BY thedate ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW)) as  daily_virtual_uf\nfrom table7", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_facts\".\"fact_daily_virtual_uf_mx\""}, "model.houm.sales_investor_metrics_details_leads_sales_qualified": {"raw_sql": "{{ config(materialized='table') }}\n\nWITH  demand_buyer_leads_clean as (\nSELECT *\nFROM  {{ ref('proc_demand_buyer_leads') }}\nWHERE  true \nAND ( (lost_reason NOT LIKE '%Test%'  AND lost_reason != 'Pruebas'  AND lost_reason != 'Cotizaci\u00f3n Duplicada') OR lost_reason IS NULL )\nAND (supply_relation = 'New Properties')\n)\n\nSELECT \n    20 AS orden ,\n    'Created Unique NP Buyer Hot Qualified Leads'::TEXT AS metric ,\n    geo_id ,\n    '{{ var(\"processed_time\") }}' as  processed_time ,\n    add_time ,\n    qualification ,\n    fecha_calificacion ,\n    person_id ,\n    email ,\n    deal_id ,\n    CASE WHEN add_time =  dateadd(day,-1,'{{ var(\"processed_time\") }}'::date) THEN 1 ELSE 0 END AS yesterday , \n    CASE WHEN add_time =  dateadd(day,-2,'{{ var(\"processed_time\") }}'::date)  THEN 1 ELSE 0 END AS daybeforeyesterday , \n    CASE WHEN date_trunc('week',add_time)  =  dateadd(week,-1, date_trunc('week','{{ var(\"processed_time\") }}'::date) ) THEN 1 ELSE 0 END AS LastWeek ,\n    CASE WHEN date_trunc('week',add_time)  =  dateadd(week,-2, date_trunc('week','{{ var(\"processed_time\") }}'::date) ) THEN 1 ELSE 0 END AS PastLastWeek , \n    CASE WHEN \n                date_trunc('month',add_time) =  date_trunc('month','{{ var(\"processed_time\") }}'::date) \n                 AND add_time <=   dateadd(day,-1,'{{ var(\"processed_time\") }}'::date) THEN 1 ELSE 0 END AS ThisMonthtoday , \n    CASE WHEN \n                date_trunc('month',add_time) =  dateadd(month,-1, date_trunc('month','{{ var(\"processed_time\") }}'::date) )  AND  \n                add_time <= dateadd(month,-1, '{{ var(\"processed_time\") }}'::date) \n            THEN 1 ELSE 0 END AS LastMonthtoday , \n    CASE WHEN date_trunc('month',add_time) =  dateadd(month,-1, date_trunc('month','{{ var(\"processed_time\") }}'::date) ) \n            THEN 1 ELSE 0 END AS LastMonth ,\n    CASE WHEN date_trunc('month',add_time) =  dateadd(month,-2, date_trunc('month','{{ var(\"processed_time\") }}'::date) ) \n            THEN 1 ELSE 0 END AS LasttwoMonth ,\n    CASE WHEN date_trunc('month',add_time) =  dateadd(month,-3, date_trunc('month','{{ var(\"processed_time\") }}'::date) ) \n            THEN 1 ELSE 0 END AS LastthreeMonth\nFROM demand_buyer_leads_clean\nWHERE qualification >= 3  AND qualification <= 5\nORDER BY add_time DESC \n--group by 1 , 2, 3", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_demand_buyer_leads"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_facts", "database": null, "tags": ["dw", "facts", "demand"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_facts", "fqn": ["houm", "dwh", "facts", "demand", "sales_investor_metrics_details_leads_sales_qualified"], "unique_id": "model.houm.sales_investor_metrics_details_leads_sales_qualified", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "dwh/facts/demand/sales_investor_metrics_details_leads_sales_qualified.sql", "original_file_path": "models/dwh/facts/demand/sales_investor_metrics_details_leads_sales_qualified.sql", "name": "sales_investor_metrics_details_leads_sales_qualified", "alias": "sales_investor_metrics_details_leads_sales_qualified", "checksum": {"name": "sha256", "checksum": "c0441e284eb7547b8a7a8cb7871e476bc982a215726bf740fe89ccd88582a0f6"}, "tags": ["dw", "facts", "demand"], "refs": [["proc_demand_buyer_leads"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/facts/demand/sales_investor_metrics_details_leads_sales_qualified.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_facts", "tags": ["dw", "facts", "demand"], "materialized": "table"}, "created_at": 1654784474.9576619, "compiled_sql": "\n\nWITH  demand_buyer_leads_clean as (\nSELECT *\nFROM  \"houmdw_prod\".\"dbt_processing\".\"proc_demand_buyer_leads\"\nWHERE  true \nAND ( (lost_reason NOT LIKE '%Test%'  AND lost_reason != 'Pruebas'  AND lost_reason != 'Cotizaci\u00f3n Duplicada') OR lost_reason IS NULL )\nAND (supply_relation = 'New Properties')\n)\n\nSELECT \n    20 AS orden ,\n    'Created Unique NP Buyer Hot Qualified Leads'::TEXT AS metric ,\n    geo_id ,\n    '2022-06-13 11:01:47.183332-04:00' as  processed_time ,\n    add_time ,\n    qualification ,\n    fecha_calificacion ,\n    person_id ,\n    email ,\n    deal_id ,\n    CASE WHEN add_time =  dateadd(day,-1,'2022-06-13 11:01:47.183332-04:00'::date) THEN 1 ELSE 0 END AS yesterday , \n    CASE WHEN add_time =  dateadd(day,-2,'2022-06-13 11:01:47.183332-04:00'::date)  THEN 1 ELSE 0 END AS daybeforeyesterday , \n    CASE WHEN date_trunc('week',add_time)  =  dateadd(week,-1, date_trunc('week','2022-06-13 11:01:47.183332-04:00'::date) ) THEN 1 ELSE 0 END AS LastWeek ,\n    CASE WHEN date_trunc('week',add_time)  =  dateadd(week,-2, date_trunc('week','2022-06-13 11:01:47.183332-04:00'::date) ) THEN 1 ELSE 0 END AS PastLastWeek , \n    CASE WHEN \n                date_trunc('month',add_time) =  date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) \n                 AND add_time <=   dateadd(day,-1,'2022-06-13 11:01:47.183332-04:00'::date) THEN 1 ELSE 0 END AS ThisMonthtoday , \n    CASE WHEN \n                date_trunc('month',add_time) =  dateadd(month,-1, date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) )  AND  \n                add_time <= dateadd(month,-1, '2022-06-13 11:01:47.183332-04:00'::date) \n            THEN 1 ELSE 0 END AS LastMonthtoday , \n    CASE WHEN date_trunc('month',add_time) =  dateadd(month,-1, date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) ) \n            THEN 1 ELSE 0 END AS LastMonth ,\n    CASE WHEN date_trunc('month',add_time) =  dateadd(month,-2, date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) ) \n            THEN 1 ELSE 0 END AS LasttwoMonth ,\n    CASE WHEN date_trunc('month',add_time) =  dateadd(month,-3, date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) ) \n            THEN 1 ELSE 0 END AS LastthreeMonth\nFROM demand_buyer_leads_clean\nWHERE qualification >= 3  AND qualification <= 5\nORDER BY add_time DESC \n--group by 1 , 2, 3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_facts\".\"sales_investor_metrics_details_leads_sales_qualified\""}, "model.houm.rental_tenant_metric_details_reservations_refunded": {"raw_sql": "{{ config(materialized='table') }}\n\nSELECT    \n    52 orden\n    , 'Refunded Reservations'::TEXT metric \n    , geo_id\n    , '{{ var(\"processed_time\") }}'  processed_time\n    , thedate\n    , reservation_id\n    , status\n    , CASE WHEN thedate =  dateadd(day,-1,'{{ var(\"processed_time\") }}'::date) THEN 1  ELSE 0 END yesterday\n    , CASE WHEN thedate =  dateadd(day,-2,'{{ var(\"processed_time\") }}'::date)  THEN 1  ELSE 0 END daybeforeyesterday\n    , CASE WHEN date_trunc('week',thedate)  =  dateadd(week,-1, date_trunc('week','{{ var(\"processed_time\") }}'::date) )  THEN 1  ELSE 0 END LastWeek\n    , CASE WHEN date_trunc('week',thedate)  =  dateadd(week,-2, date_trunc('week','{{ var(\"processed_time\") }}'::date) )  THEN 1  ELSE 0 END PastLastWeek\n    , CASE WHEN \n                date_trunc('month',thedate) =  date_trunc('month','{{ var(\"processed_time\") }}'::date) \n                 AND thedate <=   dateadd(day,-1,'{{ var(\"processed_time\") }}'::date)  THEN 1  ELSE 0 END ThisMonthtoday\n    , CASE WHEN \n                date_trunc('month',thedate) =  dateadd(month,-1, date_trunc('month','{{ var(\"processed_time\") }}'::date) )  AND -- Que son del mes pasado \n                thedate <= dateadd(month,-1, '{{ var(\"processed_time\") }}'::date) \n            THEN 1  ELSE 0 END LastMonthtoday\n    , CASE WHEN date_trunc('month',thedate) =  dateadd(month,-1, date_trunc('month','{{ var(\"processed_time\") }}'::date) ) \n            THEN 1  ELSE 0 END LastMonth\n    , CASE WHEN date_trunc('month',thedate) =  dateadd(month,-2, date_trunc('month','{{ var(\"processed_time\") }}'::date) ) \n            THEN 1  ELSE 0 END LasttwoMonth\n    , CASE WHEN date_trunc('month',thedate) =  dateadd(month,-3, date_trunc('month','{{ var(\"processed_time\") }}'::date) ) \n            THEN 1  ELSE 0 END LastthreeMonth\nFROM {{ ref('proc_demand_reservations') }}\nWHERE status = 'REFUNDED'\nORDER BY thedate desc\n--group by 1,2 , 3", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_demand_reservations"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_facts", "database": null, "tags": ["dw", "facts", "demand"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_facts", "fqn": ["houm", "dwh", "facts", "demand", "rental_tenant_metric_details_reservations_refunded"], "unique_id": "model.houm.rental_tenant_metric_details_reservations_refunded", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "dwh/facts/demand/rental_tenant_metric_details_reservations_refunded.sql", "original_file_path": "models/dwh/facts/demand/rental_tenant_metric_details_reservations_refunded.sql", "name": "rental_tenant_metric_details_reservations_refunded", "alias": "rental_tenant_metric_details_reservations_refunded", "checksum": {"name": "sha256", "checksum": "b84bea40312ac88bc17e5563d8c2217a5c0597db809f760d5eea298ea14eb202"}, "tags": ["dw", "facts", "demand"], "refs": [["proc_demand_reservations"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/facts/demand/rental_tenant_metric_details_reservations_refunded.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_facts", "tags": ["dw", "facts", "demand"], "materialized": "table"}, "created_at": 1654784474.9710379, "compiled_sql": "\n\nSELECT    \n    52 orden\n    , 'Refunded Reservations'::TEXT metric \n    , geo_id\n    , '2022-06-13 11:01:47.183332-04:00'  processed_time\n    , thedate\n    , reservation_id\n    , status\n    , CASE WHEN thedate =  dateadd(day,-1,'2022-06-13 11:01:47.183332-04:00'::date) THEN 1  ELSE 0 END yesterday\n    , CASE WHEN thedate =  dateadd(day,-2,'2022-06-13 11:01:47.183332-04:00'::date)  THEN 1  ELSE 0 END daybeforeyesterday\n    , CASE WHEN date_trunc('week',thedate)  =  dateadd(week,-1, date_trunc('week','2022-06-13 11:01:47.183332-04:00'::date) )  THEN 1  ELSE 0 END LastWeek\n    , CASE WHEN date_trunc('week',thedate)  =  dateadd(week,-2, date_trunc('week','2022-06-13 11:01:47.183332-04:00'::date) )  THEN 1  ELSE 0 END PastLastWeek\n    , CASE WHEN \n                date_trunc('month',thedate) =  date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) \n                 AND thedate <=   dateadd(day,-1,'2022-06-13 11:01:47.183332-04:00'::date)  THEN 1  ELSE 0 END ThisMonthtoday\n    , CASE WHEN \n                date_trunc('month',thedate) =  dateadd(month,-1, date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) )  AND -- Que son del mes pasado \n                thedate <= dateadd(month,-1, '2022-06-13 11:01:47.183332-04:00'::date) \n            THEN 1  ELSE 0 END LastMonthtoday\n    , CASE WHEN date_trunc('month',thedate) =  dateadd(month,-1, date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) ) \n            THEN 1  ELSE 0 END LastMonth\n    , CASE WHEN date_trunc('month',thedate) =  dateadd(month,-2, date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) ) \n            THEN 1  ELSE 0 END LasttwoMonth\n    , CASE WHEN date_trunc('month',thedate) =  dateadd(month,-3, date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) ) \n            THEN 1  ELSE 0 END LastthreeMonth\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_demand_reservations\"\nWHERE status = 'REFUNDED'\nORDER BY thedate desc\n--group by 1,2 , 3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_facts\".\"rental_tenant_metric_details_reservations_refunded\""}, "model.houm.sales_buyer_metrics_details_leads_sales_qualified_date": {"raw_sql": "{{ config(materialized='table') }}\n\nWITH  demand_buyer_leads_clean AS (\nSELECT *\nFROM  {{ ref('proc_demand_buyer_leads') }}\nWHERE  true \nAND ( (lost_reason not like '%Test%'  AND lost_reason != 'Pruebas'  AND lost_reason != 'Cotizaci\u00f3n Duplicada') OR lost_reason IS NULL )\nAND (supply_relation != 'New Properties')\n)\n\nSELECT\n    21 AS orden ,\n     'Unique SH Buyer Hot Qualified Leads'::TEXT AS metric ,\n     geo_id ,\n     '{{ var(\"processed_time\") }}' AS processed_time ,\n     add_time ,\n     qualification ,\n     fecha_calificacion ,\n     person_id ,\n     email ,\n     deal_id ,\n     CASE WHEN fecha_calificacion =  dateadd(day,-1,'{{ var(\"processed_time\") }}'::date) THEN 1 ELSE 0 END AS yesterday ,\n     CASE WHEN fecha_calificacion =  dateadd(day,-2,'{{ var(\"processed_time\") }}'::date)  THEN 1 ELSE 0 END AS daybeforeyesterday ,\n     CASE WHEN date_trunc('week',fecha_calificacion)  =  dateadd(week,-1, date_trunc('week','{{ var(\"processed_time\") }}'::date) )  THEN 1 ELSE 0 END AS LastWeek ,\n     CASE WHEN date_trunc('week',fecha_calificacion)  =  dateadd(week,-2, date_trunc('week','{{ var(\"processed_time\") }}'::date) )  THEN 1 ELSE 0 END AS PastLastWeek ,\n     CASE WHEN \n                date_trunc('month',fecha_calificacion) =  date_trunc('month','{{ var(\"processed_time\") }}'::date) \n                 AND fecha_calificacion <=   dateadd(day,-1,'{{ var(\"processed_time\") }}'::date)  THEN 1 ELSE 0 END AS ThisMonthtoday ,\n     CASE WHEN \n                date_trunc('month',fecha_calificacion) =  dateadd(month,-1, date_trunc('month','{{ var(\"processed_time\") }}'::date) ) AND  \n                fecha_calificacion <= dateadd(month,-1, '{{ var(\"processed_time\") }}'::date) \n            THEN 1 ELSE 0 END AS LastMonthtoday ,\n     CASE WHEN date_trunc('month',fecha_calificacion) =  dateadd(month,-1, date_trunc('month','{{ var(\"processed_time\") }}'::date) ) \n            THEN 1 ELSE 0 END AS LastMonth ,\n     CASE WHEN date_trunc('month',fecha_calificacion) =  dateadd(month,-2, date_trunc('month','{{ var(\"processed_time\") }}'::date) ) \n            THEN 1 ELSE 0 END AS LasttwoMonth ,\n     CASE WHEN date_trunc('month',fecha_calificacion) =  dateadd(month,-3, date_trunc('month','{{ var(\"processed_time\") }}'::date) ) \n            THEN 1  ELSE 0 END AS LastthreeMonth\nFROM demand_buyer_leads_clean\nWHERE TRUE \n        AND qualification >= 3  AND qualification <= 5\n        AND fecha_calificacion IS NOT NULL\nORDER BY fecha_calificacion DESC \n--group by 1 , 2, 3", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_demand_buyer_leads"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_facts", "database": null, "tags": ["dw", "facts", "demand"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_facts", "fqn": ["houm", "dwh", "facts", "demand", "sales_buyer_metrics_details_leads_sales_qualified_date"], "unique_id": "model.houm.sales_buyer_metrics_details_leads_sales_qualified_date", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "dwh/facts/demand/sales_buyer_metrics_details_leads_sales_qualified_date.sql", "original_file_path": "models/dwh/facts/demand/sales_buyer_metrics_details_leads_sales_qualified_date.sql", "name": "sales_buyer_metrics_details_leads_sales_qualified_date", "alias": "sales_buyer_metrics_details_leads_sales_qualified_date", "checksum": {"name": "sha256", "checksum": "1689f68c0ae83a3cd6839bd7666214ef37a7e79be4e265def917e4e405d3d34b"}, "tags": ["dw", "facts", "demand"], "refs": [["proc_demand_buyer_leads"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/facts/demand/sales_buyer_metrics_details_leads_sales_qualified_date.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_facts", "tags": ["dw", "facts", "demand"], "materialized": "table"}, "created_at": 1654784474.9846458, "compiled_sql": "\n\nWITH  demand_buyer_leads_clean AS (\nSELECT *\nFROM  \"houmdw_prod\".\"dbt_processing\".\"proc_demand_buyer_leads\"\nWHERE  true \nAND ( (lost_reason not like '%Test%'  AND lost_reason != 'Pruebas'  AND lost_reason != 'Cotizaci\u00f3n Duplicada') OR lost_reason IS NULL )\nAND (supply_relation != 'New Properties')\n)\n\nSELECT\n    21 AS orden ,\n     'Unique SH Buyer Hot Qualified Leads'::TEXT AS metric ,\n     geo_id ,\n     '2022-06-13 11:01:47.183332-04:00' AS processed_time ,\n     add_time ,\n     qualification ,\n     fecha_calificacion ,\n     person_id ,\n     email ,\n     deal_id ,\n     CASE WHEN fecha_calificacion =  dateadd(day,-1,'2022-06-13 11:01:47.183332-04:00'::date) THEN 1 ELSE 0 END AS yesterday ,\n     CASE WHEN fecha_calificacion =  dateadd(day,-2,'2022-06-13 11:01:47.183332-04:00'::date)  THEN 1 ELSE 0 END AS daybeforeyesterday ,\n     CASE WHEN date_trunc('week',fecha_calificacion)  =  dateadd(week,-1, date_trunc('week','2022-06-13 11:01:47.183332-04:00'::date) )  THEN 1 ELSE 0 END AS LastWeek ,\n     CASE WHEN date_trunc('week',fecha_calificacion)  =  dateadd(week,-2, date_trunc('week','2022-06-13 11:01:47.183332-04:00'::date) )  THEN 1 ELSE 0 END AS PastLastWeek ,\n     CASE WHEN \n                date_trunc('month',fecha_calificacion) =  date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) \n                 AND fecha_calificacion <=   dateadd(day,-1,'2022-06-13 11:01:47.183332-04:00'::date)  THEN 1 ELSE 0 END AS ThisMonthtoday ,\n     CASE WHEN \n                date_trunc('month',fecha_calificacion) =  dateadd(month,-1, date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) ) AND  \n                fecha_calificacion <= dateadd(month,-1, '2022-06-13 11:01:47.183332-04:00'::date) \n            THEN 1 ELSE 0 END AS LastMonthtoday ,\n     CASE WHEN date_trunc('month',fecha_calificacion) =  dateadd(month,-1, date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) ) \n            THEN 1 ELSE 0 END AS LastMonth ,\n     CASE WHEN date_trunc('month',fecha_calificacion) =  dateadd(month,-2, date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) ) \n            THEN 1 ELSE 0 END AS LasttwoMonth ,\n     CASE WHEN date_trunc('month',fecha_calificacion) =  dateadd(month,-3, date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) ) \n            THEN 1  ELSE 0 END AS LastthreeMonth\nFROM demand_buyer_leads_clean\nWHERE TRUE \n        AND qualification >= 3  AND qualification <= 5\n        AND fecha_calificacion IS NOT NULL\nORDER BY fecha_calificacion DESC \n--group by 1 , 2, 3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_facts\".\"sales_buyer_metrics_details_leads_sales_qualified_date\""}, "model.houm.sales_buyer_metrics_details_leads": {"raw_sql": "{{ config(materialized='table') }}\n\nWITH  demand_landlord_leads_clean as (\nSELECT *\nFROM  {{ ref('proc_demand_buyer_leads') }}\nWHERE  true \nAND ( (lost_reason NOT LIKE '%Test%'  AND lost_reason != 'Pruebas'  AND lost_reason != 'Cotizaci\u00f3n Duplicada') OR lost_reason IS NULL )\n\n)\n\nSELECT \n    10 orden \n    , 'Created Unique NP & SH Buyer Leads'::TEXT metric\n    , geo_id\n    , '{{ var(\"processed_time\") }}'  processed_time\n    , add_time\n    , qualification\n    , fecha_calificacion\n    , person_id\n    , email\n    , deal_id\n    , CASE WHEN add_time =  dateadd(day,-1,'{{ var(\"processed_time\") }}'::date) THEN 1  ELSE 0 END  yesterday\n    , CASE WHEN add_time =  dateadd(day,-2,'{{ var(\"processed_time\") }}'::date)  THEN 1  ELSE 0 END  daybeforeyesterday\n    , CASE WHEN date_trunc('week',add_time)  =  dateadd(week,-1, date_trunc('week','{{ var(\"processed_time\") }}'::date) )  THEN 1  ELSE 0 END  LastWeek\n    , CASE WHEN date_trunc('week',add_time)  =  dateadd(week,-2, date_trunc('week','{{ var(\"processed_time\") }}'::date) )  THEN 1  ELSE 0 END  PastLastWeek\n    , CASE WHEN \n                date_trunc('month',add_time) =  date_trunc('month','{{ var(\"processed_time\") }}'::date) \n                 AND add_time <=   dateadd(day,-1,'{{ var(\"processed_time\") }}'::date)  THEN 1  ELSE 0 END  ThisMonthtoday\n    , CASE WHEN \n                date_trunc('month',add_time) =  dateadd(month,-1, date_trunc('month','{{ var(\"processed_time\") }}'::date) )  AND  \n                add_time <= dateadd(month,-1, '{{ var(\"processed_time\") }}'::date) \n            THEN 1  ELSE 0 END  LastMonthtoday\n    , CASE WHEN date_trunc('month',add_time) =  dateadd(month,-1, date_trunc('month','{{ var(\"processed_time\") }}'::date) ) \n            THEN 1  ELSE 0 END LastMonth\n    , CASE WHEN date_trunc('month',add_time) =  dateadd(month,-2, date_trunc('month','{{ var(\"processed_time\") }}'::date) ) \n            THEN 1  ELSE 0 END LasttwoMonth\n    , CASE WHEN date_trunc('month',add_time) =  dateadd(month,-3, date_trunc('month','{{ var(\"processed_time\") }}'::date) ) \n            THEN 1  ELSE 0 END LastthreeMonth\nFROM {{ ref('proc_demand_buyer_leads') }}\nORDER BY add_time DESC \n--group by 1 , 2, 3", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_demand_buyer_leads", "model.houm.proc_demand_buyer_leads"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_facts", "database": null, "tags": ["dw", "facts", "demand"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_facts", "fqn": ["houm", "dwh", "facts", "demand", "sales_buyer_metrics_details_leads"], "unique_id": "model.houm.sales_buyer_metrics_details_leads", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "dwh/facts/demand/sales_buyer_metrics_details_leads.sql", "original_file_path": "models/dwh/facts/demand/sales_buyer_metrics_details_leads.sql", "name": "sales_buyer_metrics_details_leads", "alias": "sales_buyer_metrics_details_leads", "checksum": {"name": "sha256", "checksum": "d3ddbf3aad15440cf0050107bdccda795021882dedcd86bd56c288aa71447399"}, "tags": ["dw", "facts", "demand"], "refs": [["proc_demand_buyer_leads"], ["proc_demand_buyer_leads"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/facts/demand/sales_buyer_metrics_details_leads.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_facts", "tags": ["dw", "facts", "demand"], "materialized": "table"}, "created_at": 1654784474.9989161, "compiled_sql": "\n\nWITH  demand_landlord_leads_clean as (\nSELECT *\nFROM  \"houmdw_prod\".\"dbt_processing\".\"proc_demand_buyer_leads\"\nWHERE  true \nAND ( (lost_reason NOT LIKE '%Test%'  AND lost_reason != 'Pruebas'  AND lost_reason != 'Cotizaci\u00f3n Duplicada') OR lost_reason IS NULL )\n\n)\n\nSELECT \n    10 orden \n    , 'Created Unique NP & SH Buyer Leads'::TEXT metric\n    , geo_id\n    , '2022-06-13 11:01:47.183332-04:00'  processed_time\n    , add_time\n    , qualification\n    , fecha_calificacion\n    , person_id\n    , email\n    , deal_id\n    , CASE WHEN add_time =  dateadd(day,-1,'2022-06-13 11:01:47.183332-04:00'::date) THEN 1  ELSE 0 END  yesterday\n    , CASE WHEN add_time =  dateadd(day,-2,'2022-06-13 11:01:47.183332-04:00'::date)  THEN 1  ELSE 0 END  daybeforeyesterday\n    , CASE WHEN date_trunc('week',add_time)  =  dateadd(week,-1, date_trunc('week','2022-06-13 11:01:47.183332-04:00'::date) )  THEN 1  ELSE 0 END  LastWeek\n    , CASE WHEN date_trunc('week',add_time)  =  dateadd(week,-2, date_trunc('week','2022-06-13 11:01:47.183332-04:00'::date) )  THEN 1  ELSE 0 END  PastLastWeek\n    , CASE WHEN \n                date_trunc('month',add_time) =  date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) \n                 AND add_time <=   dateadd(day,-1,'2022-06-13 11:01:47.183332-04:00'::date)  THEN 1  ELSE 0 END  ThisMonthtoday\n    , CASE WHEN \n                date_trunc('month',add_time) =  dateadd(month,-1, date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) )  AND  \n                add_time <= dateadd(month,-1, '2022-06-13 11:01:47.183332-04:00'::date) \n            THEN 1  ELSE 0 END  LastMonthtoday\n    , CASE WHEN date_trunc('month',add_time) =  dateadd(month,-1, date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) ) \n            THEN 1  ELSE 0 END LastMonth\n    , CASE WHEN date_trunc('month',add_time) =  dateadd(month,-2, date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) ) \n            THEN 1  ELSE 0 END LasttwoMonth\n    , CASE WHEN date_trunc('month',add_time) =  dateadd(month,-3, date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) ) \n            THEN 1  ELSE 0 END LastthreeMonth\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_demand_buyer_leads\"\nORDER BY add_time DESC \n--group by 1 , 2, 3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_facts\".\"sales_buyer_metrics_details_leads\""}, "model.houm.rental_tenant_metric_details_schedules_scheduled": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH schedules_visit_clean AS (\r\nSELECT *\r\nFROM {{ ref('proc_demand_schedules') }}\r\nWHERE schedule_type_name = 'Visit'\r\nAND (( email NOT LIKE '%test.test'  AND email NOT LIKE '%test.com')  OR applicant_id IS NULL ) \r\n)\r\n\r\n\r\nSELECT \r\n    30 orden\r\n    , 'Visit Scheduled'::TEXT metric\r\n    , geo_id\r\n    , '{{ var(\"processed_time\") }}'  processed_time\r\n    , begin_date\r\n    , schedule_id\r\n    , CASE WHEN begin_date =  dateadd(day,-1,'{{ var(\"processed_time\") }}'::date) THEN 1  ELSE 0 END yesterday\r\n    , CASE WHEN begin_date =  dateadd(day,-2,'{{ var(\"processed_time\") }}'::date)  THEN 1  ELSE 0 END daybeforeyesterday\r\n    , CASE WHEN date_trunc('week',begin_date)  =  dateadd(week,-1, date_trunc('week','{{ var(\"processed_time\") }}'::date) )  THEN 1  ELSE 0 END LastWeek\r\n    , CASE WHEN date_trunc('week',begin_date)  =  dateadd(week,-2, date_trunc('week','{{ var(\"processed_time\") }}'::date) )  THEN 1  ELSE 0 END PastLastWeek\r\n    , CASE WHEN \r\n                date_trunc('month',begin_date) =  date_trunc('month','{{ var(\"processed_time\") }}'::date) \r\n                 AND begin_date <=   dateadd(day,-1,'{{ var(\"processed_time\") }}'::date)  THEN 1  ELSE 0 END ThisMonthtoday\r\n    , CASE WHEN \r\n                date_trunc('month',begin_date) =  dateadd(month,-1, date_trunc('month','{{ var(\"processed_time\") }}'::date) )  AND \r\n                begin_date <= dateadd(month,-1, '{{ var(\"processed_time\") }}'::date) \r\n            THEN 1  ELSE 0 END LastMonthtoday\r\n    , CASE WHEN date_trunc('month',begin_date) =  dateadd(month,-1, date_trunc('month','{{ var(\"processed_time\") }}'::date) ) \r\n            THEN 1  ELSE 0 END LastMonth\r\n    , CASE WHEN date_trunc('month',begin_date) =  dateadd(month,-2, date_trunc('month','{{ var(\"processed_time\") }}'::date) ) \r\n            THEN 1  ELSE 0 END LasttwoMonth\r\n    , CASE WHEN date_trunc('month',begin_date) =  dateadd(month,-3, date_trunc('month','{{ var(\"processed_time\") }}'::date) ) \r\n            THEN 1  ELSE 0 END LastthreeMonth\r\nFROM schedules_visit_clean\r\nORDER BY begin_date desc\r\n--group by 1,2 , 3", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_demand_schedules"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_facts", "database": null, "tags": ["dw", "facts", "demand"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_facts", "fqn": ["houm", "dwh", "facts", "demand", "rental_tenant_metric_details_schedules_scheduled"], "unique_id": "model.houm.rental_tenant_metric_details_schedules_scheduled", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "dwh/facts/demand/rental_tenant_metric_details_schedules_scheduled.sql", "original_file_path": "models/dwh/facts/demand/rental_tenant_metric_details_schedules_scheduled.sql", "name": "rental_tenant_metric_details_schedules_scheduled", "alias": "rental_tenant_metric_details_schedules_scheduled", "checksum": {"name": "sha256", "checksum": "9e12781bf1d1acdca8b1fb3a33280f0fc7407f955ee8ca9f90ecdacb1021db30"}, "tags": ["dw", "facts", "demand"], "refs": [["proc_demand_schedules"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/facts/demand/rental_tenant_metric_details_schedules_scheduled.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_facts", "tags": ["dw", "facts", "demand"], "materialized": "table"}, "created_at": 1654784475.012823, "compiled_sql": "\n\nWITH schedules_visit_clean AS (\nSELECT *\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_demand_schedules\"\nWHERE schedule_type_name = 'Visit'\nAND (( email NOT LIKE '%test.test'  AND email NOT LIKE '%test.com')  OR applicant_id IS NULL ) \n)\n\n\nSELECT \n    30 orden\n    , 'Visit Scheduled'::TEXT metric\n    , geo_id\n    , '2022-06-13 11:01:47.183332-04:00'  processed_time\n    , begin_date\n    , schedule_id\n    , CASE WHEN begin_date =  dateadd(day,-1,'2022-06-13 11:01:47.183332-04:00'::date) THEN 1  ELSE 0 END yesterday\n    , CASE WHEN begin_date =  dateadd(day,-2,'2022-06-13 11:01:47.183332-04:00'::date)  THEN 1  ELSE 0 END daybeforeyesterday\n    , CASE WHEN date_trunc('week',begin_date)  =  dateadd(week,-1, date_trunc('week','2022-06-13 11:01:47.183332-04:00'::date) )  THEN 1  ELSE 0 END LastWeek\n    , CASE WHEN date_trunc('week',begin_date)  =  dateadd(week,-2, date_trunc('week','2022-06-13 11:01:47.183332-04:00'::date) )  THEN 1  ELSE 0 END PastLastWeek\n    , CASE WHEN \n                date_trunc('month',begin_date) =  date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) \n                 AND begin_date <=   dateadd(day,-1,'2022-06-13 11:01:47.183332-04:00'::date)  THEN 1  ELSE 0 END ThisMonthtoday\n    , CASE WHEN \n                date_trunc('month',begin_date) =  dateadd(month,-1, date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) )  AND \n                begin_date <= dateadd(month,-1, '2022-06-13 11:01:47.183332-04:00'::date) \n            THEN 1  ELSE 0 END LastMonthtoday\n    , CASE WHEN date_trunc('month',begin_date) =  dateadd(month,-1, date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) ) \n            THEN 1  ELSE 0 END LastMonth\n    , CASE WHEN date_trunc('month',begin_date) =  dateadd(month,-2, date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) ) \n            THEN 1  ELSE 0 END LasttwoMonth\n    , CASE WHEN date_trunc('month',begin_date) =  dateadd(month,-3, date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) ) \n            THEN 1  ELSE 0 END LastthreeMonth\nFROM schedules_visit_clean\nORDER BY begin_date desc\n--group by 1,2 , 3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_facts\".\"rental_tenant_metric_details_schedules_scheduled\""}, "model.houm.sales_investor_metric_details_schedules_created": {"raw_sql": "{{ config(materialized='table') }}\n\nWITH schedules_salesvisit_clean as (\nSELECT *\nFROM {{ ref('proc_demand_schedules') }}\nWHERE schedule_type_name = 'SalesVisit' \nAND (( email NOT LIKE '%test.test'  AND email NOT LIKE '%test.com')  OR applicant_id IS NULL  )\nAND (supply_relation = 'New Properties')\n)\n\nSELECT \n    30::INT AS orden ,\n    'SalesVisit Created'::TEXT AS metric ,\n    geo_id ,\n    '{{ var(\"processed_time\") }}' AS processed_time ,\n    created_at ,\n    schedule_id ,\n    CASE WHEN created_at =  dateadd(day,-1,'{{ var(\"processed_time\") }}'::date) THEN 1 ELSE 0 END AS yesterday ,\n    CASE WHEN created_at =  dateadd(day,-2,'{{ var(\"processed_time\") }}'::date) THEN 1 ELSE 0 END AS daybeforeyesterday ,\n    CASE WHEN date_trunc('week',created_at)  =  dateadd(week,-1, date_trunc('week','{{ var(\"processed_time\") }}'::date) ) THEN 1 ELSE 0 END AS LastWeek ,\n    CASE WHEN date_trunc('week',created_at)  =  dateadd(week,-2, date_trunc('week','{{ var(\"processed_time\") }}'::date) ) THEN 1 ELSE 0 END AS PastLastWeek ,\n    CASE WHEN \n                date_trunc('month',created_at) =  date_trunc('month','{{ var(\"processed_time\") }}'::date) \n                 AND created_at <=   dateadd(day,-1,'{{ var(\"processed_time\") }}'::date) THEN 1 ELSE 0 END AS ThisMonthtoday ,\n    CASE WHEN \n                date_trunc('month',created_at) =  dateadd(month,-1, date_trunc('month','{{ var(\"processed_time\") }}'::date) ) AND  \n                created_at <= dateadd(month,-1, '{{ var(\"processed_time\") }}'::date) \n            THEN 1 ELSE 0 END AS LastMonthtoday ,\n    CASE WHEN date_trunc('month',created_at) =  dateadd(month,-1, date_trunc('month','{{ var(\"processed_time\") }}'::date) ) \n            THEN 1 ELSE 0 END AS LastMonth ,\n    CASE WHEN date_trunc('month',created_at) =  dateadd(month,-2, date_trunc('month','{{ var(\"processed_time\") }}'::date) ) \n            THEN 1 ELSE 0 END AS LasttwoMonth ,\n    CASE WHEN date_trunc('month',created_at) =  dateadd(month,-3, date_trunc('month','{{ var(\"processed_time\") }}'::date) ) \n            THEN 1 ELSE 0 END AS LastthreeMonth\nFROM schedules_salesvisit_clean\nORDER BY created_at DESC\n--group by 1,2 , 3", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_demand_schedules"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_facts", "database": null, "tags": ["dw", "facts", "demand"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_facts", "fqn": ["houm", "dwh", "facts", "demand", "sales_investor_metric_details_schedules_created"], "unique_id": "model.houm.sales_investor_metric_details_schedules_created", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "dwh/facts/demand/sales_investor_metric_details_schedules_created.sql", "original_file_path": "models/dwh/facts/demand/sales_investor_metric_details_schedules_created.sql", "name": "sales_investor_metric_details_schedules_created", "alias": "sales_investor_metric_details_schedules_created", "checksum": {"name": "sha256", "checksum": "15a3baff5789a510cbb9ce2b839d656dfdf1b8a7b8391cab3f1e72fe4d936558"}, "tags": ["dw", "facts", "demand"], "refs": [["proc_demand_schedules"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/facts/demand/sales_investor_metric_details_schedules_created.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_facts", "tags": ["dw", "facts", "demand"], "materialized": "table"}, "created_at": 1654784475.026328, "compiled_sql": "\n\nWITH schedules_salesvisit_clean as (\nSELECT *\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_demand_schedules\"\nWHERE schedule_type_name = 'SalesVisit' \nAND (( email NOT LIKE '%test.test'  AND email NOT LIKE '%test.com')  OR applicant_id IS NULL  )\nAND (supply_relation = 'New Properties')\n)\n\nSELECT \n    30::INT AS orden ,\n    'SalesVisit Created'::TEXT AS metric ,\n    geo_id ,\n    '2022-06-13 11:01:47.183332-04:00' AS processed_time ,\n    created_at ,\n    schedule_id ,\n    CASE WHEN created_at =  dateadd(day,-1,'2022-06-13 11:01:47.183332-04:00'::date) THEN 1 ELSE 0 END AS yesterday ,\n    CASE WHEN created_at =  dateadd(day,-2,'2022-06-13 11:01:47.183332-04:00'::date) THEN 1 ELSE 0 END AS daybeforeyesterday ,\n    CASE WHEN date_trunc('week',created_at)  =  dateadd(week,-1, date_trunc('week','2022-06-13 11:01:47.183332-04:00'::date) ) THEN 1 ELSE 0 END AS LastWeek ,\n    CASE WHEN date_trunc('week',created_at)  =  dateadd(week,-2, date_trunc('week','2022-06-13 11:01:47.183332-04:00'::date) ) THEN 1 ELSE 0 END AS PastLastWeek ,\n    CASE WHEN \n                date_trunc('month',created_at) =  date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) \n                 AND created_at <=   dateadd(day,-1,'2022-06-13 11:01:47.183332-04:00'::date) THEN 1 ELSE 0 END AS ThisMonthtoday ,\n    CASE WHEN \n                date_trunc('month',created_at) =  dateadd(month,-1, date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) ) AND  \n                created_at <= dateadd(month,-1, '2022-06-13 11:01:47.183332-04:00'::date) \n            THEN 1 ELSE 0 END AS LastMonthtoday ,\n    CASE WHEN date_trunc('month',created_at) =  dateadd(month,-1, date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) ) \n            THEN 1 ELSE 0 END AS LastMonth ,\n    CASE WHEN date_trunc('month',created_at) =  dateadd(month,-2, date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) ) \n            THEN 1 ELSE 0 END AS LasttwoMonth ,\n    CASE WHEN date_trunc('month',created_at) =  dateadd(month,-3, date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) ) \n            THEN 1 ELSE 0 END AS LastthreeMonth\nFROM schedules_salesvisit_clean\nORDER BY created_at DESC\n--group by 1,2 , 3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_facts\".\"sales_investor_metric_details_schedules_created\""}, "model.houm.rental_tenant_metric_details_schedules_done": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH schedules_visit_clean AS (\r\nSELECT *\r\nfrom {{ ref('proc_demand_schedules') }}\r\nwhere schedule_type_name = 'Visit' \r\nand status = 'Done'\r\nAND (( email NOT LIKE '%test.test'  AND email NOT LIKE '%test.com')  OR applicant_id IS NULL )\r\n)\r\n\r\nSELECT \r\n    40 orden\r\n    , 'Visit Done'::TEXT metric\r\n    , geo_id\r\n    , '{{ var(\"processed_time\") }}'  processed_time\r\n    , begin_date\r\n    , schedule_id\r\n    , CASE WHEN begin_date =  dateadd(day,-1,'{{ var(\"processed_time\") }}'::date) THEN 1  ELSE 0 END yesterday\r\n    , CASE WHEN begin_date =  dateadd(day,-2,'{{ var(\"processed_time\") }}'::date)  THEN 1  ELSE 0 END daybeforeyesterday\r\n    , CASE WHEN date_trunc('week',begin_date)  =  dateadd(week,-1, date_trunc('week','{{ var(\"processed_time\") }}'::date) )  THEN 1  ELSE 0 END LastWeek\r\n    , CASE WHEN date_trunc('week',begin_date)  =  dateadd(week,-2, date_trunc('week','{{ var(\"processed_time\") }}'::date) )  THEN 1  ELSE 0 END PastLastWeek\r\n    , CASE WHEN \r\n                date_trunc('month',begin_date) =  date_trunc('month','{{ var(\"processed_time\") }}'::date) \r\n                 AND begin_date <=   dateadd(day,-1,'{{ var(\"processed_time\") }}'::date)  THEN 1  ELSE 0 END ThisMonthtoday\r\n    , CASE WHEN \r\n                date_trunc('month',begin_date) =  dateadd(month,-1, date_trunc('month','{{ var(\"processed_time\") }}'::date) ) \r\n                 AND begin_date <= dateadd(month,-1, '{{ var(\"processed_time\") }}'::date) \r\n            THEN 1  ELSE 0 END LastMonthtoday\r\n    , CASE WHEN date_trunc('month',begin_date) =  dateadd(month,-1, date_trunc('month','{{ var(\"processed_time\") }}'::date) ) \r\n            THEN 1  ELSE 0 END LastMonth\r\n    , CASE WHEN date_trunc('month',begin_date) =  dateadd(month,-2, date_trunc('month','{{ var(\"processed_time\") }}'::date) ) \r\n            THEN 1  ELSE 0 END LasttwoMonth\r\n    , CASE WHEN date_trunc('month',begin_date) =  dateadd(month,-3, date_trunc('month','{{ var(\"processed_time\") }}'::date) ) \r\n            THEN 1  ELSE 0 END LastthreeMonth\r\nfrom schedules_visit_clean\r\nORDER BY begin_date desc\r\n--group by 1,2 , 3", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_demand_schedules"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_facts", "database": null, "tags": ["dw", "facts", "demand"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_facts", "fqn": ["houm", "dwh", "facts", "demand", "rental_tenant_metric_details_schedules_done"], "unique_id": "model.houm.rental_tenant_metric_details_schedules_done", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "dwh/facts/demand/rental_tenant_metric_details_schedules_done.sql", "original_file_path": "models/dwh/facts/demand/rental_tenant_metric_details_schedules_done.sql", "name": "rental_tenant_metric_details_schedules_done", "alias": "rental_tenant_metric_details_schedules_done", "checksum": {"name": "sha256", "checksum": "9606b61e31b0c90ebb7e204afb9d5156e3b55b3094791048f7416cfd45e21afa"}, "tags": ["dw", "facts", "demand"], "refs": [["proc_demand_schedules"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/facts/demand/rental_tenant_metric_details_schedules_done.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_facts", "tags": ["dw", "facts", "demand"], "materialized": "table"}, "created_at": 1654784475.03999, "compiled_sql": "\n\nWITH schedules_visit_clean AS (\nSELECT *\nfrom \"houmdw_prod\".\"dbt_processing\".\"proc_demand_schedules\"\nwhere schedule_type_name = 'Visit' \nand status = 'Done'\nAND (( email NOT LIKE '%test.test'  AND email NOT LIKE '%test.com')  OR applicant_id IS NULL )\n)\n\nSELECT \n    40 orden\n    , 'Visit Done'::TEXT metric\n    , geo_id\n    , '2022-06-13 11:01:47.183332-04:00'  processed_time\n    , begin_date\n    , schedule_id\n    , CASE WHEN begin_date =  dateadd(day,-1,'2022-06-13 11:01:47.183332-04:00'::date) THEN 1  ELSE 0 END yesterday\n    , CASE WHEN begin_date =  dateadd(day,-2,'2022-06-13 11:01:47.183332-04:00'::date)  THEN 1  ELSE 0 END daybeforeyesterday\n    , CASE WHEN date_trunc('week',begin_date)  =  dateadd(week,-1, date_trunc('week','2022-06-13 11:01:47.183332-04:00'::date) )  THEN 1  ELSE 0 END LastWeek\n    , CASE WHEN date_trunc('week',begin_date)  =  dateadd(week,-2, date_trunc('week','2022-06-13 11:01:47.183332-04:00'::date) )  THEN 1  ELSE 0 END PastLastWeek\n    , CASE WHEN \n                date_trunc('month',begin_date) =  date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) \n                 AND begin_date <=   dateadd(day,-1,'2022-06-13 11:01:47.183332-04:00'::date)  THEN 1  ELSE 0 END ThisMonthtoday\n    , CASE WHEN \n                date_trunc('month',begin_date) =  dateadd(month,-1, date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) ) \n                 AND begin_date <= dateadd(month,-1, '2022-06-13 11:01:47.183332-04:00'::date) \n            THEN 1  ELSE 0 END LastMonthtoday\n    , CASE WHEN date_trunc('month',begin_date) =  dateadd(month,-1, date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) ) \n            THEN 1  ELSE 0 END LastMonth\n    , CASE WHEN date_trunc('month',begin_date) =  dateadd(month,-2, date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) ) \n            THEN 1  ELSE 0 END LasttwoMonth\n    , CASE WHEN date_trunc('month',begin_date) =  dateadd(month,-3, date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) ) \n            THEN 1  ELSE 0 END LastthreeMonth\nfrom schedules_visit_clean\nORDER BY begin_date desc\n--group by 1,2 , 3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_facts\".\"rental_tenant_metric_details_schedules_done\""}, "model.houm.sales_investor_metric_details_schedules_scheduled": {"raw_sql": "{{ config(materialized='table') }}\n\nWITH schedules_salesvisit_clean AS (\nSELECT *\nFROM {{ ref('proc_demand_schedules') }}\nWHERE schedule_type_name = 'SalesVisit' \nAND (( email NOT LIKE '%test.test'  AND email NOT LIKE '%test.com')  OR applicant_id IS NULL  )\nAND (supply_relation = 'New Properties')\n)\n\nSELECT \n    40::INT AS orden , \n    'SalesVisit Scheduled'::TEXT AS metric , \n    geo_id ,\n    '{{ var(\"processed_time\") }}' AS processed_time, \n    begin_date ,\n    schedule_id ,\n    CASE WHEN begin_date =  dateadd(day,-1,'{{ var(\"processed_time\") }}'::date) THEN 1  ELSE 0 END AS yesterday ,\n    CASE WHEN begin_date =  dateadd(day,-2,'{{ var(\"processed_time\") }}'::date)  THEN 1  ELSE 0 END AS daybeforeyesterday ,\n    CASE WHEN date_trunc('week',begin_date)  =  dateadd(week,-1, date_trunc('week','{{ var(\"processed_time\") }}'::date) ) THEN 1 ELSE 0 END AS LastWeek ,\n    CASE WHEN date_trunc('week',begin_date)  =  dateadd(week,-2, date_trunc('week','{{ var(\"processed_time\") }}'::date) ) THEN 1 ELSE 0 END AS PastLastWeek ,\n    CASE WHEN \n                date_trunc('month',begin_date) =  date_trunc('month','{{ var(\"processed_time\") }}'::date) \n                 AND begin_date <=   dateadd(day,-1,'{{ var(\"processed_time\") }}'::date)  THEN 1  ELSE 0 END AS ThisMonthtoday, \n    CASE WHEN \n                date_trunc('month',begin_date) =  dateadd(month,-1, date_trunc('month','{{ var(\"processed_time\") }}'::date) )  AND  \n                begin_date <= dateadd(month,-1, '{{ var(\"processed_time\") }}'::date) \n            THEN 1 ELSE 0 END AS LastMonthtoday ,  \n    CASE WHEN date_trunc('month',begin_date) =  dateadd(month,-1, date_trunc('month','{{ var(\"processed_time\") }}'::date) ) \n            THEN 1 ELSE 0 END AS LastMonth ,\n    CASE WHEN date_trunc('month',begin_date) =  dateadd(month,-2, date_trunc('month','{{ var(\"processed_time\") }}'::date) ) \n            THEN 1 ELSE 0 END AS LasttwoMonth ,\n    CASE WHEN date_trunc('month',begin_date) =  dateadd(month,-3, date_trunc('month','{{ var(\"processed_time\") }}'::date) ) \n            THEN 1 ELSE 0 END AS LastthreeMonth\nFROM schedules_salesvisit_clean\nORDER BY begin_date desc\n--group by 1,2 , 3", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_demand_schedules"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_facts", "database": null, "tags": ["dw", "facts", "demand"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_facts", "fqn": ["houm", "dwh", "facts", "demand", "sales_investor_metric_details_schedules_scheduled"], "unique_id": "model.houm.sales_investor_metric_details_schedules_scheduled", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "dwh/facts/demand/sales_investor_metric_details_schedules_scheduled.sql", "original_file_path": "models/dwh/facts/demand/sales_investor_metric_details_schedules_scheduled.sql", "name": "sales_investor_metric_details_schedules_scheduled", "alias": "sales_investor_metric_details_schedules_scheduled", "checksum": {"name": "sha256", "checksum": "c27b1dadfe7886d86f1f94bc82ec65cfa114f5aa5a939d652f77a9cc14f0d953"}, "tags": ["dw", "facts", "demand"], "refs": [["proc_demand_schedules"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/facts/demand/sales_investor_metric_details_schedules_scheduled.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_facts", "tags": ["dw", "facts", "demand"], "materialized": "table"}, "created_at": 1654784475.053406, "compiled_sql": "\n\nWITH schedules_salesvisit_clean AS (\nSELECT *\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_demand_schedules\"\nWHERE schedule_type_name = 'SalesVisit' \nAND (( email NOT LIKE '%test.test'  AND email NOT LIKE '%test.com')  OR applicant_id IS NULL  )\nAND (supply_relation = 'New Properties')\n)\n\nSELECT \n    40::INT AS orden , \n    'SalesVisit Scheduled'::TEXT AS metric , \n    geo_id ,\n    '2022-06-13 11:01:47.183332-04:00' AS processed_time, \n    begin_date ,\n    schedule_id ,\n    CASE WHEN begin_date =  dateadd(day,-1,'2022-06-13 11:01:47.183332-04:00'::date) THEN 1  ELSE 0 END AS yesterday ,\n    CASE WHEN begin_date =  dateadd(day,-2,'2022-06-13 11:01:47.183332-04:00'::date)  THEN 1  ELSE 0 END AS daybeforeyesterday ,\n    CASE WHEN date_trunc('week',begin_date)  =  dateadd(week,-1, date_trunc('week','2022-06-13 11:01:47.183332-04:00'::date) ) THEN 1 ELSE 0 END AS LastWeek ,\n    CASE WHEN date_trunc('week',begin_date)  =  dateadd(week,-2, date_trunc('week','2022-06-13 11:01:47.183332-04:00'::date) ) THEN 1 ELSE 0 END AS PastLastWeek ,\n    CASE WHEN \n                date_trunc('month',begin_date) =  date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) \n                 AND begin_date <=   dateadd(day,-1,'2022-06-13 11:01:47.183332-04:00'::date)  THEN 1  ELSE 0 END AS ThisMonthtoday, \n    CASE WHEN \n                date_trunc('month',begin_date) =  dateadd(month,-1, date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) )  AND  \n                begin_date <= dateadd(month,-1, '2022-06-13 11:01:47.183332-04:00'::date) \n            THEN 1 ELSE 0 END AS LastMonthtoday ,  \n    CASE WHEN date_trunc('month',begin_date) =  dateadd(month,-1, date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) ) \n            THEN 1 ELSE 0 END AS LastMonth ,\n    CASE WHEN date_trunc('month',begin_date) =  dateadd(month,-2, date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) ) \n            THEN 1 ELSE 0 END AS LasttwoMonth ,\n    CASE WHEN date_trunc('month',begin_date) =  dateadd(month,-3, date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) ) \n            THEN 1 ELSE 0 END AS LastthreeMonth\nFROM schedules_salesvisit_clean\nORDER BY begin_date desc\n--group by 1,2 , 3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_facts\".\"sales_investor_metric_details_schedules_scheduled\""}, "model.houm.rental_tenant_metric_details_reservations_effective": {"raw_sql": "{{ config(materialized='table') }}\n\nSELECT    \n    51 orden\n    , 'Effective Reservations'::TEXT metric \n    , geo_id\n    , '{{ var(\"processed_time\") }}'  processed_time\n    , thedate\n    , reservation_id\n    , status\n    , CASE WHEN thedate =  dateadd(day,-1,'{{ var(\"processed_time\") }}'::date) THEN 1  ELSE 0 END yesterday\n    , CASE WHEN thedate =  dateadd(day,-2,'{{ var(\"processed_time\") }}'::date)  THEN 1  ELSE 0 END daybeforeyesterday\n    , CASE WHEN date_trunc('week',thedate)  =  dateadd(week,-1, date_trunc('week','{{ var(\"processed_time\") }}'::date) )  THEN 1  ELSE 0 END LastWeek\n    , CASE WHEN date_trunc('week',thedate)  =  dateadd(week,-2, date_trunc('week','{{ var(\"processed_time\") }}'::date) )  THEN 1  ELSE 0 END PastLastWeek\n    , CASE WHEN \n                date_trunc('month',thedate) =  date_trunc('month','{{ var(\"processed_time\") }}'::date) \n                 AND thedate <=   dateadd(day,-1,'{{ var(\"processed_time\") }}'::date)  THEN 1  ELSE 0 END ThisMonthtoday\n    , CASE WHEN \n                date_trunc('month',thedate) =  dateadd(month,-1, date_trunc('month','{{ var(\"processed_time\") }}'::date) )  AND -- Que son del mes pasado \n                thedate <= dateadd(month,-1, '{{ var(\"processed_time\") }}'::date) \n            THEN 1  ELSE 0 END LastMonthtoday\n    , CASE WHEN date_trunc('month',thedate) =  dateadd(month,-1, date_trunc('month','{{ var(\"processed_time\") }}'::date) ) \n            THEN 1  ELSE 0 END LastMonth\n    , CASE WHEN date_trunc('month',thedate) =  dateadd(month,-2, date_trunc('month','{{ var(\"processed_time\") }}'::date) ) \n            THEN 1  ELSE 0 END LasttwoMonth\n    , CASE WHEN date_trunc('month',thedate) =  dateadd(month,-3, date_trunc('month','{{ var(\"processed_time\") }}'::date) ) \n            THEN 1  ELSE 0 END LastthreeMonth\nFROM {{ ref('proc_demand_reservations') }}\nWHERE status = 'PAID'\nORDER BY thedate DESC\n--group by 1,2 , 3", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_demand_reservations"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_facts", "database": null, "tags": ["dw", "facts", "demand"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_facts", "fqn": ["houm", "dwh", "facts", "demand", "rental_tenant_metric_details_reservations_effective"], "unique_id": "model.houm.rental_tenant_metric_details_reservations_effective", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "dwh/facts/demand/rental_tenant_metric_details_reservations_effective.sql", "original_file_path": "models/dwh/facts/demand/rental_tenant_metric_details_reservations_effective.sql", "name": "rental_tenant_metric_details_reservations_effective", "alias": "rental_tenant_metric_details_reservations_effective", "checksum": {"name": "sha256", "checksum": "9fea18d149432cc8537c830b327afdb9f9cfbe892d792bad66137afd227cf951"}, "tags": ["dw", "facts", "demand"], "refs": [["proc_demand_reservations"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/facts/demand/rental_tenant_metric_details_reservations_effective.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_facts", "tags": ["dw", "facts", "demand"], "materialized": "table"}, "created_at": 1654784475.066896, "compiled_sql": "\n\nSELECT    \n    51 orden\n    , 'Effective Reservations'::TEXT metric \n    , geo_id\n    , '2022-06-13 11:01:47.183332-04:00'  processed_time\n    , thedate\n    , reservation_id\n    , status\n    , CASE WHEN thedate =  dateadd(day,-1,'2022-06-13 11:01:47.183332-04:00'::date) THEN 1  ELSE 0 END yesterday\n    , CASE WHEN thedate =  dateadd(day,-2,'2022-06-13 11:01:47.183332-04:00'::date)  THEN 1  ELSE 0 END daybeforeyesterday\n    , CASE WHEN date_trunc('week',thedate)  =  dateadd(week,-1, date_trunc('week','2022-06-13 11:01:47.183332-04:00'::date) )  THEN 1  ELSE 0 END LastWeek\n    , CASE WHEN date_trunc('week',thedate)  =  dateadd(week,-2, date_trunc('week','2022-06-13 11:01:47.183332-04:00'::date) )  THEN 1  ELSE 0 END PastLastWeek\n    , CASE WHEN \n                date_trunc('month',thedate) =  date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) \n                 AND thedate <=   dateadd(day,-1,'2022-06-13 11:01:47.183332-04:00'::date)  THEN 1  ELSE 0 END ThisMonthtoday\n    , CASE WHEN \n                date_trunc('month',thedate) =  dateadd(month,-1, date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) )  AND -- Que son del mes pasado \n                thedate <= dateadd(month,-1, '2022-06-13 11:01:47.183332-04:00'::date) \n            THEN 1  ELSE 0 END LastMonthtoday\n    , CASE WHEN date_trunc('month',thedate) =  dateadd(month,-1, date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) ) \n            THEN 1  ELSE 0 END LastMonth\n    , CASE WHEN date_trunc('month',thedate) =  dateadd(month,-2, date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) ) \n            THEN 1  ELSE 0 END LasttwoMonth\n    , CASE WHEN date_trunc('month',thedate) =  dateadd(month,-3, date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) ) \n            THEN 1  ELSE 0 END LastthreeMonth\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_demand_reservations\"\nWHERE status = 'PAID'\nORDER BY thedate DESC\n--group by 1,2 , 3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_facts\".\"rental_tenant_metric_details_reservations_effective\""}, "model.houm.sales_buyer_metric_details_schedules_scheduled": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH schedules_salesvisit_clean AS (\r\nSELECT *\r\nFROM {{ ref('proc_demand_schedules') }}\r\nWHERE schedule_type_name = 'SalesVisit' \r\nAND (( email NOT LIKE '%test.test'  AND email NOT LIKE '%test.com')  OR applicant_id IS NULL  )\r\nAND (supply_relation != 'New Properties')\r\n)\r\n\r\nSELECT \r\n    40 orden\r\n    , 'SalesVisit Scheduled'::TEXT metric\r\n    , geo_id\r\n    , '{{ var(\"processed_time\") }}'  processed_time\r\n    , begin_date\r\n    , schedule_id\r\n    , CASE WHEN begin_date =  dateadd(day,-1,'{{ var(\"processed_time\") }}'::date) THEN 1  ELSE 0 END  yesterday\r\n    , CASE WHEN begin_date =  dateadd(day,-2,'{{ var(\"processed_time\") }}'::date)  THEN 1  ELSE 0 END  daybeforeyesterday\r\n    , CASE WHEN date_trunc('week',begin_date)  =  dateadd(week,-1, date_trunc('week','{{ var(\"processed_time\") }}'::date) )  THEN 1  ELSE 0 END  LastWeek\r\n    , CASE WHEN date_trunc('week',begin_date)  =  dateadd(week,-2, date_trunc('week','{{ var(\"processed_time\") }}'::date) )  THEN 1  ELSE 0 END  PastLastWeek\r\n    , CASE WHEN \r\n                date_trunc('month',begin_date) =  date_trunc('month','{{ var(\"processed_time\") }}'::date) \r\n                 AND begin_date <=   dateadd(day,-1,'{{ var(\"processed_time\") }}'::date)  THEN 1  ELSE 0 END  ThisMonthtoday\r\n    , CASE WHEN \r\n                date_trunc('month',begin_date) =  dateadd(month,-1, date_trunc('month','{{ var(\"processed_time\") }}'::date) )  AND  \r\n                begin_date <= dateadd(month,-1, '{{ var(\"processed_time\") }}'::date) \r\n            THEN 1  ELSE 0 END  LastMonthtoday\r\n    , CASE WHEN date_trunc('month',begin_date) =  dateadd(month,-1, date_trunc('month','{{ var(\"processed_time\") }}'::date) ) \r\n            THEN 1  ELSE 0 END LastMonth\r\n    , CASE WHEN date_trunc('month',begin_date) =  dateadd(month,-2, date_trunc('month','{{ var(\"processed_time\") }}'::date) ) \r\n            THEN 1  ELSE 0 END LasttwoMonth\r\n    , CASE WHEN date_trunc('month',begin_date) =  dateadd(month,-3, date_trunc('month','{{ var(\"processed_time\") }}'::date) ) \r\n            THEN 1  ELSE 0 END LastthreeMonth\r\nFROM schedules_salesvisit_clean\r\nORDER BY begin_date desc\r\n--group by 1,2 , 3", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_demand_schedules"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_facts", "database": null, "tags": ["dw", "facts", "demand"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_facts", "fqn": ["houm", "dwh", "facts", "demand", "sales_buyer_metric_details_schedules_scheduled"], "unique_id": "model.houm.sales_buyer_metric_details_schedules_scheduled", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "dwh/facts/demand/sales_buyer_metric_details_schedules_scheduled.sql", "original_file_path": "models/dwh/facts/demand/sales_buyer_metric_details_schedules_scheduled.sql", "name": "sales_buyer_metric_details_schedules_scheduled", "alias": "sales_buyer_metric_details_schedules_scheduled", "checksum": {"name": "sha256", "checksum": "3e0b29f22cc62c78bbbb1e19d694ee4d5a3be71ab09b3ca9a8d68ea06239592b"}, "tags": ["dw", "facts", "demand"], "refs": [["proc_demand_schedules"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/facts/demand/sales_buyer_metric_details_schedules_scheduled.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_facts", "tags": ["dw", "facts", "demand"], "materialized": "table"}, "created_at": 1654784475.080134, "compiled_sql": "\n\nWITH schedules_salesvisit_clean AS (\nSELECT *\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_demand_schedules\"\nWHERE schedule_type_name = 'SalesVisit' \nAND (( email NOT LIKE '%test.test'  AND email NOT LIKE '%test.com')  OR applicant_id IS NULL  )\nAND (supply_relation != 'New Properties')\n)\n\nSELECT \n    40 orden\n    , 'SalesVisit Scheduled'::TEXT metric\n    , geo_id\n    , '2022-06-13 11:01:47.183332-04:00'  processed_time\n    , begin_date\n    , schedule_id\n    , CASE WHEN begin_date =  dateadd(day,-1,'2022-06-13 11:01:47.183332-04:00'::date) THEN 1  ELSE 0 END  yesterday\n    , CASE WHEN begin_date =  dateadd(day,-2,'2022-06-13 11:01:47.183332-04:00'::date)  THEN 1  ELSE 0 END  daybeforeyesterday\n    , CASE WHEN date_trunc('week',begin_date)  =  dateadd(week,-1, date_trunc('week','2022-06-13 11:01:47.183332-04:00'::date) )  THEN 1  ELSE 0 END  LastWeek\n    , CASE WHEN date_trunc('week',begin_date)  =  dateadd(week,-2, date_trunc('week','2022-06-13 11:01:47.183332-04:00'::date) )  THEN 1  ELSE 0 END  PastLastWeek\n    , CASE WHEN \n                date_trunc('month',begin_date) =  date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) \n                 AND begin_date <=   dateadd(day,-1,'2022-06-13 11:01:47.183332-04:00'::date)  THEN 1  ELSE 0 END  ThisMonthtoday\n    , CASE WHEN \n                date_trunc('month',begin_date) =  dateadd(month,-1, date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) )  AND  \n                begin_date <= dateadd(month,-1, '2022-06-13 11:01:47.183332-04:00'::date) \n            THEN 1  ELSE 0 END  LastMonthtoday\n    , CASE WHEN date_trunc('month',begin_date) =  dateadd(month,-1, date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) ) \n            THEN 1  ELSE 0 END LastMonth\n    , CASE WHEN date_trunc('month',begin_date) =  dateadd(month,-2, date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) ) \n            THEN 1  ELSE 0 END LasttwoMonth\n    , CASE WHEN date_trunc('month',begin_date) =  dateadd(month,-3, date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) ) \n            THEN 1  ELSE 0 END LastthreeMonth\nFROM schedules_salesvisit_clean\nORDER BY begin_date desc\n--group by 1,2 , 3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_facts\".\"sales_buyer_metric_details_schedules_scheduled\""}, "model.houm.rental_tenant_metric_details_leads": {"raw_sql": "{{ config(materialized='table') }}\n\nSELECT \n    10 orden\n    , 'Unique Tenant Lead'::TEXT metric\n    , geo_id\n    , '{{ var(\"processed_time\") }}'  processed_time\n    , created_at\n    , lead_id \n    , activity_id\n    , CASE WHEN created_at =  dateadd(day,-1,'{{ var(\"processed_time\") }}'::date) THEN 1  ELSE 0 END yesterday\n    , CASE WHEN created_at =  dateadd(day,-2,'{{ var(\"processed_time\") }}'::date)  THEN 1  ELSE 0 END daybeforeyesterday\n    , CASE WHEN date_trunc('week',created_at)  =  dateadd(week,-1, date_trunc('week','{{ var(\"processed_time\") }}'::date) )  THEN 1  ELSE 0 END LastWeek\n    , CASE WHEN date_trunc('week',created_at)  =  dateadd(week,-2, date_trunc('week','{{ var(\"processed_time\") }}'::date) )  THEN 1  ELSE 0 END PastLastWeek\n    , CASE WHEN \n                date_trunc('month',created_at) =  date_trunc('month','{{ var(\"processed_time\") }}'::date) \n                 AND created_at <=   dateadd(day,-1,'{{ var(\"processed_time\") }}'::date)  THEN 1  ELSE 0 END ThisMonthtoday\n    , CASE WHEN \n                date_trunc('month',created_at) =  dateadd(month,-1, date_trunc('month','{{ var(\"processed_time\") }}'::date) ) \n                 AND created_at <= dateadd(month,-1, '{{ var(\"processed_time\") }}'::date) \n            THEN 1  ELSE 0 END LastMonthtoday\n    , CASE WHEN date_trunc('month',created_at) =  dateadd(month,-1, date_trunc('month','{{ var(\"processed_time\") }}'::date) ) \n            THEN 1  ELSE 0 END LastMonth\n    , CASE WHEN date_trunc('month',created_at) =  dateadd(month,-2, date_trunc('month','{{ var(\"processed_time\") }}'::date) ) \n            THEN 1  ELSE 0 END LasttwoMonth\n    , CASE WHEN date_trunc('month',created_at) =  dateadd(month,-3, date_trunc('month','{{ var(\"processed_time\") }}'::date) ) \n            THEN 1  ELSE 0 END LastthreeMonth\nFROM {{ ref('proc_demand_leads') }}\nORDER BY created_at DESC\n--group by 1,2 , 3", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_demand_leads"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_facts", "database": null, "tags": ["dw", "facts", "demand"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_facts", "fqn": ["houm", "dwh", "facts", "demand", "rental_tenant_metric_details_leads"], "unique_id": "model.houm.rental_tenant_metric_details_leads", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "dwh/facts/demand/rental_tenant_metric_details_leads.sql", "original_file_path": "models/dwh/facts/demand/rental_tenant_metric_details_leads.sql", "name": "rental_tenant_metric_details_leads", "alias": "rental_tenant_metric_details_leads", "checksum": {"name": "sha256", "checksum": "c4ad100311facdf099f8465d0e5f3064822d33139c1b32de93b30bfe5ba06985"}, "tags": ["dw", "facts", "demand"], "refs": [["proc_demand_leads"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/facts/demand/rental_tenant_metric_details_leads.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_facts", "tags": ["dw", "facts", "demand"], "materialized": "table"}, "created_at": 1654784475.094719, "compiled_sql": "\n\nSELECT \n    10 orden\n    , 'Unique Tenant Lead'::TEXT metric\n    , geo_id\n    , '2022-06-13 11:01:47.183332-04:00'  processed_time\n    , created_at\n    , lead_id \n    , activity_id\n    , CASE WHEN created_at =  dateadd(day,-1,'2022-06-13 11:01:47.183332-04:00'::date) THEN 1  ELSE 0 END yesterday\n    , CASE WHEN created_at =  dateadd(day,-2,'2022-06-13 11:01:47.183332-04:00'::date)  THEN 1  ELSE 0 END daybeforeyesterday\n    , CASE WHEN date_trunc('week',created_at)  =  dateadd(week,-1, date_trunc('week','2022-06-13 11:01:47.183332-04:00'::date) )  THEN 1  ELSE 0 END LastWeek\n    , CASE WHEN date_trunc('week',created_at)  =  dateadd(week,-2, date_trunc('week','2022-06-13 11:01:47.183332-04:00'::date) )  THEN 1  ELSE 0 END PastLastWeek\n    , CASE WHEN \n                date_trunc('month',created_at) =  date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) \n                 AND created_at <=   dateadd(day,-1,'2022-06-13 11:01:47.183332-04:00'::date)  THEN 1  ELSE 0 END ThisMonthtoday\n    , CASE WHEN \n                date_trunc('month',created_at) =  dateadd(month,-1, date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) ) \n                 AND created_at <= dateadd(month,-1, '2022-06-13 11:01:47.183332-04:00'::date) \n            THEN 1  ELSE 0 END LastMonthtoday\n    , CASE WHEN date_trunc('month',created_at) =  dateadd(month,-1, date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) ) \n            THEN 1  ELSE 0 END LastMonth\n    , CASE WHEN date_trunc('month',created_at) =  dateadd(month,-2, date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) ) \n            THEN 1  ELSE 0 END LasttwoMonth\n    , CASE WHEN date_trunc('month',created_at) =  dateadd(month,-3, date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) ) \n            THEN 1  ELSE 0 END LastthreeMonth\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_demand_leads\"\nORDER BY created_at DESC\n--group by 1,2 , 3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_facts\".\"rental_tenant_metric_details_leads\""}, "model.houm.sales_buyer_metrics_details_leads_sales": {"raw_sql": "{{ config(materialized='table') }}\n\nWITH  demand_buyer_leads_clean as (\nSELECT *\nFROM  {{ ref('proc_demand_buyer_leads') }}\nWHERE  true \nAND ( (lost_reason NOT LIKE '%Test%'  AND lost_reason != 'Pruebas'  AND lost_reason != 'Cotizaci\u00f3n Duplicada') OR lost_reason IS  NULL )\nAND (supply_relation != 'New Properties')\n)\n\nSELECT \n    11 orden \n    , 'Created Unique SH Buyer Leads'::TEXT metric\n    , geo_id\n    , '{{ var(\"processed_time\") }}'  processed_time\n    , add_time\n    , qualification\n    , fecha_calificacion\n    , person_id\n    , email\n    , deal_id\n    , CASE WHEN add_time =  dateadd(day,-1,'{{ var(\"processed_time\") }}'::date) THEN 1  ELSE 0 END  yesterday\n    , CASE WHEN add_time =  dateadd(day,-2,'{{ var(\"processed_time\") }}'::date)  THEN 1  ELSE 0 END  daybeforeyesterday\n    , CASE WHEN date_trunc('week',add_time)  =  dateadd(week,-1, date_trunc('week','{{ var(\"processed_time\") }}'::date) )  THEN 1  ELSE 0 END  LastWeek\n    , CASE WHEN date_trunc('week',add_time)  =  dateadd(week,-2, date_trunc('week','{{ var(\"processed_time\") }}'::date) )  THEN 1  ELSE 0 END  PastLastWeek\n    , CASE WHEN \n                date_trunc('month',add_time) =  date_trunc('month','{{ var(\"processed_time\") }}'::date) \n                 AND add_time <=   dateadd(day,-1,'{{ var(\"processed_time\") }}'::date)  THEN 1  ELSE 0 END  ThisMonthtoday\n    , CASE WHEN \n                date_trunc('month',add_time) =  dateadd(month,-1, date_trunc('month','{{ var(\"processed_time\") }}'::date) )  AND  \n                add_time <= dateadd(month,-1, '{{ var(\"processed_time\") }}'::date) \n            THEN 1  ELSE 0 END  LastMonthtoday\n    , CASE WHEN date_trunc('month',add_time) =  dateadd(month,-1, date_trunc('month','{{ var(\"processed_time\") }}'::date) ) \n            THEN 1  ELSE 0 END LastMonth\n    , CASE WHEN date_trunc('month',add_time) =  dateadd(month,-2, date_trunc('month','{{ var(\"processed_time\") }}'::date) ) \n            THEN 1  ELSE 0 END LasttwoMonth\n    , CASE WHEN date_trunc('month',add_time) =  dateadd(month,-3, date_trunc('month','{{ var(\"processed_time\") }}'::date) ) \n            THEN 1  ELSE 0 END LastthreeMonth\nFROM demand_buyer_leads_clean\nORDER BY add_time DESC \n--group by 1 , 2, 3", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_demand_buyer_leads"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_facts", "database": null, "tags": ["dw", "facts", "demand"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_facts", "fqn": ["houm", "dwh", "facts", "demand", "sales_buyer_metrics_details_leads_sales"], "unique_id": "model.houm.sales_buyer_metrics_details_leads_sales", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "dwh/facts/demand/sales_buyer_metrics_details_leads_sales.sql", "original_file_path": "models/dwh/facts/demand/sales_buyer_metrics_details_leads_sales.sql", "name": "sales_buyer_metrics_details_leads_sales", "alias": "sales_buyer_metrics_details_leads_sales", "checksum": {"name": "sha256", "checksum": "adc3b9d4122d8291dcbbfe7ab638c3d249fae7534c906627927232b509b9a106"}, "tags": ["dw", "facts", "demand"], "refs": [["proc_demand_buyer_leads"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/facts/demand/sales_buyer_metrics_details_leads_sales.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_facts", "tags": ["dw", "facts", "demand"], "materialized": "table"}, "created_at": 1654784475.107987, "compiled_sql": "\n\nWITH  demand_buyer_leads_clean as (\nSELECT *\nFROM  \"houmdw_prod\".\"dbt_processing\".\"proc_demand_buyer_leads\"\nWHERE  true \nAND ( (lost_reason NOT LIKE '%Test%'  AND lost_reason != 'Pruebas'  AND lost_reason != 'Cotizaci\u00f3n Duplicada') OR lost_reason IS  NULL )\nAND (supply_relation != 'New Properties')\n)\n\nSELECT \n    11 orden \n    , 'Created Unique SH Buyer Leads'::TEXT metric\n    , geo_id\n    , '2022-06-13 11:01:47.183332-04:00'  processed_time\n    , add_time\n    , qualification\n    , fecha_calificacion\n    , person_id\n    , email\n    , deal_id\n    , CASE WHEN add_time =  dateadd(day,-1,'2022-06-13 11:01:47.183332-04:00'::date) THEN 1  ELSE 0 END  yesterday\n    , CASE WHEN add_time =  dateadd(day,-2,'2022-06-13 11:01:47.183332-04:00'::date)  THEN 1  ELSE 0 END  daybeforeyesterday\n    , CASE WHEN date_trunc('week',add_time)  =  dateadd(week,-1, date_trunc('week','2022-06-13 11:01:47.183332-04:00'::date) )  THEN 1  ELSE 0 END  LastWeek\n    , CASE WHEN date_trunc('week',add_time)  =  dateadd(week,-2, date_trunc('week','2022-06-13 11:01:47.183332-04:00'::date) )  THEN 1  ELSE 0 END  PastLastWeek\n    , CASE WHEN \n                date_trunc('month',add_time) =  date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) \n                 AND add_time <=   dateadd(day,-1,'2022-06-13 11:01:47.183332-04:00'::date)  THEN 1  ELSE 0 END  ThisMonthtoday\n    , CASE WHEN \n                date_trunc('month',add_time) =  dateadd(month,-1, date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) )  AND  \n                add_time <= dateadd(month,-1, '2022-06-13 11:01:47.183332-04:00'::date) \n            THEN 1  ELSE 0 END  LastMonthtoday\n    , CASE WHEN date_trunc('month',add_time) =  dateadd(month,-1, date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) ) \n            THEN 1  ELSE 0 END LastMonth\n    , CASE WHEN date_trunc('month',add_time) =  dateadd(month,-2, date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) ) \n            THEN 1  ELSE 0 END LasttwoMonth\n    , CASE WHEN date_trunc('month',add_time) =  dateadd(month,-3, date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) ) \n            THEN 1  ELSE 0 END LastthreeMonth\nFROM demand_buyer_leads_clean\nORDER BY add_time DESC \n--group by 1 , 2, 3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_facts\".\"sales_buyer_metrics_details_leads_sales\""}, "model.houm.rental_tenant_metric_details_new_subs": {"raw_sql": "{{ config(materialized='table') }}\n\nWITH new_subs AS (\nSELECT * \nFROM {{ ref('proc_closure_subs') }}\nWHERE TRUE\n        AND has_management = TRUE \n        AND sub_init_reason in ('NEW_LEAD','NEW_LEAD_WITHOUT_BROKERAGE')\n)\n\nSELECT    \n    61 orden ,\n    'New Subs'::TEXT AS metric ,\n    geo_id ,\n    '{{ var(\"processed_time\") }}' AS processed_time ,\n    payment_date_local ,\n    sub_id ,\n    sub_init_reason ,\n    plan_id , \n    plan_name , \n    plan_description , \n    has_management , \n    CASE WHEN payment_date_local =  dateadd(day,-1,'{{ var(\"processed_time\") }}'::date) THEN 1  ELSE 0 END AS yesterday ,\n    CASE WHEN payment_date_local =  dateadd(day,-2,'{{ var(\"processed_time\") }}'::date)  THEN 1  ELSE 0 END AS daybeforeyesterday ,\n    CASE WHEN date_trunc('week',payment_date_local)  =  dateadd(week,-1, date_trunc('week','{{ var(\"processed_time\") }}'::date) )  THEN 1  ELSE 0 END AS LastWeek ,\n    CASE WHEN date_trunc('week',payment_date_local)  =  dateadd(week,-2, date_trunc('week','{{ var(\"processed_time\") }}'::date) )  THEN 1  ELSE 0 END AS PastLastWeek ,\n    CASE WHEN \n                date_trunc('month',payment_date_local) =  date_trunc('month','{{ var(\"processed_time\") }}'::date) \n                 AND payment_date_local <=   dateadd(day,-1,'{{ var(\"processed_time\") }}'::date)  THEN 1  ELSE 0 END AS ThisMonthtoday ,\n    CASE WHEN \n                date_trunc('month',payment_date_local) =  dateadd(month,-1, date_trunc('month','{{ var(\"processed_time\") }}'::date) )  AND \n                payment_date_local <= dateadd(month,-1, '{{ var(\"processed_time\") }}'::date) \n            THEN 1  ELSE 0 END AS LastMonthtoday ,\n    CASE WHEN date_trunc('month',payment_date_local) =  dateadd(month,-1, date_trunc('month','{{ var(\"processed_time\") }}'::date) ) \n            THEN 1  ELSE 0 END AS LastMonth ,\n    CASE WHEN date_trunc('month',payment_date_local) =  dateadd(month,-2, date_trunc('month','{{ var(\"processed_time\") }}'::date) ) \n            THEN 1  ELSE 0 END AS LasttwoMonth ,\n    CASE WHEN date_trunc('month',payment_date_local) =  dateadd(month,-3, date_trunc('month','{{ var(\"processed_time\") }}'::date) ) \n            THEN 1  ELSE 0 END AS LastthreeMonth\nFROM new_subs\nORDER BY payment_date_local DESC\n--group by 1,2 , 3", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_closure_subs"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_facts", "database": null, "tags": ["dw", "facts", "demand"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_facts", "fqn": ["houm", "dwh", "facts", "demand", "rental_tenant_metric_details_new_subs"], "unique_id": "model.houm.rental_tenant_metric_details_new_subs", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "dwh/facts/demand/rental_tenant_metric_details_new_subs.sql", "original_file_path": "models/dwh/facts/demand/rental_tenant_metric_details_new_subs.sql", "name": "rental_tenant_metric_details_new_subs", "alias": "rental_tenant_metric_details_new_subs", "checksum": {"name": "sha256", "checksum": "6c119991799432ad696bc95f450066643d3d4fd5a8040c4bc6f810ae7698a46e"}, "tags": ["dw", "facts", "demand"], "refs": [["proc_closure_subs"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/facts/demand/rental_tenant_metric_details_new_subs.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_facts", "tags": ["dw", "facts", "demand"], "materialized": "table"}, "created_at": 1654784475.121695, "compiled_sql": "\n\nWITH new_subs AS (\nSELECT * \nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_closure_subs\"\nWHERE TRUE\n        AND has_management = TRUE \n        AND sub_init_reason in ('NEW_LEAD','NEW_LEAD_WITHOUT_BROKERAGE')\n)\n\nSELECT    \n    61 orden ,\n    'New Subs'::TEXT AS metric ,\n    geo_id ,\n    '2022-06-13 11:01:47.183332-04:00' AS processed_time ,\n    payment_date_local ,\n    sub_id ,\n    sub_init_reason ,\n    plan_id , \n    plan_name , \n    plan_description , \n    has_management , \n    CASE WHEN payment_date_local =  dateadd(day,-1,'2022-06-13 11:01:47.183332-04:00'::date) THEN 1  ELSE 0 END AS yesterday ,\n    CASE WHEN payment_date_local =  dateadd(day,-2,'2022-06-13 11:01:47.183332-04:00'::date)  THEN 1  ELSE 0 END AS daybeforeyesterday ,\n    CASE WHEN date_trunc('week',payment_date_local)  =  dateadd(week,-1, date_trunc('week','2022-06-13 11:01:47.183332-04:00'::date) )  THEN 1  ELSE 0 END AS LastWeek ,\n    CASE WHEN date_trunc('week',payment_date_local)  =  dateadd(week,-2, date_trunc('week','2022-06-13 11:01:47.183332-04:00'::date) )  THEN 1  ELSE 0 END AS PastLastWeek ,\n    CASE WHEN \n                date_trunc('month',payment_date_local) =  date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) \n                 AND payment_date_local <=   dateadd(day,-1,'2022-06-13 11:01:47.183332-04:00'::date)  THEN 1  ELSE 0 END AS ThisMonthtoday ,\n    CASE WHEN \n                date_trunc('month',payment_date_local) =  dateadd(month,-1, date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) )  AND \n                payment_date_local <= dateadd(month,-1, '2022-06-13 11:01:47.183332-04:00'::date) \n            THEN 1  ELSE 0 END AS LastMonthtoday ,\n    CASE WHEN date_trunc('month',payment_date_local) =  dateadd(month,-1, date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) ) \n            THEN 1  ELSE 0 END AS LastMonth ,\n    CASE WHEN date_trunc('month',payment_date_local) =  dateadd(month,-2, date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) ) \n            THEN 1  ELSE 0 END AS LasttwoMonth ,\n    CASE WHEN date_trunc('month',payment_date_local) =  dateadd(month,-3, date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) ) \n            THEN 1  ELSE 0 END AS LastthreeMonth\nFROM new_subs\nORDER BY payment_date_local DESC\n--group by 1,2 , 3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_facts\".\"rental_tenant_metric_details_new_subs\""}, "model.houm.rental_tenant_metric_details_reservations": {"raw_sql": "{{ config(materialized='table') }}\n\nSELECT    \n    50 orden\n    , 'Reservations'::TEXT metric \n    , geo_id\n    , '{{ var(\"processed_time\") }}'  processed_time\n    , thedate\n    , reservation_id\n    , status\n    , CASE WHEN thedate =  dateadd(day,-1,'{{ var(\"processed_time\") }}'::date) THEN 1  ELSE 0 END yesterday\n    , CASE WHEN thedate =  dateadd(day,-2,'{{ var(\"processed_time\") }}'::date)  THEN 1  ELSE 0 END daybeforeyesterday\n    , CASE WHEN date_trunc('week',thedate)  =  dateadd(week,-1, date_trunc('week','{{ var(\"processed_time\") }}'::date) )  THEN 1  ELSE 0 END LastWeek\n    , CASE WHEN date_trunc('week',thedate)  =  dateadd(week,-2, date_trunc('week','{{ var(\"processed_time\") }}'::date) )  THEN 1  ELSE 0 END PastLastWeek\n    , CASE WHEN \n                date_trunc('month',thedate) =  date_trunc('month','{{ var(\"processed_time\") }}'::date) \n                 AND thedate <=   dateadd(day,-1,'{{ var(\"processed_time\") }}'::date)  THEN 1  ELSE 0 END ThisMonthtoday\n    , CASE WHEN \n                date_trunc('month',thedate) =  dateadd(month,-1, date_trunc('month','{{ var(\"processed_time\") }}'::date) )  AND -- Que son del mes pasado \n                thedate <= dateadd(month,-1, '{{ var(\"processed_time\") }}'::date) \n            THEN 1  ELSE 0 END LastMonthtoday\n    , CASE WHEN date_trunc('month',thedate) =  dateadd(month,-1, date_trunc('month','{{ var(\"processed_time\") }}'::date) ) \n            THEN 1  ELSE 0 END LastMonth\n    , CASE WHEN date_trunc('month',thedate) =  dateadd(month,-2, date_trunc('month','{{ var(\"processed_time\") }}'::date) ) \n            THEN 1  ELSE 0 END LasttwoMonth\n    , CASE WHEN date_trunc('month',thedate) =  dateadd(month,-3, date_trunc('month','{{ var(\"processed_time\") }}'::date) ) \n            THEN 1  ELSE 0 END LastthreeMonth\nFROM {{ ref('proc_demand_reservations') }}\nORDER BY thedate desc\n--group by 1,2 , 3", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_demand_reservations"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_facts", "database": null, "tags": ["dw", "facts", "demand"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_facts", "fqn": ["houm", "dwh", "facts", "demand", "rental_tenant_metric_details_reservations"], "unique_id": "model.houm.rental_tenant_metric_details_reservations", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "dwh/facts/demand/rental_tenant_metric_details_reservations.sql", "original_file_path": "models/dwh/facts/demand/rental_tenant_metric_details_reservations.sql", "name": "rental_tenant_metric_details_reservations", "alias": "rental_tenant_metric_details_reservations", "checksum": {"name": "sha256", "checksum": "bb53c42d21bcb645104cd9e4fd41d9835cf106cdf374752beaca9476ddc6ca62"}, "tags": ["dw", "facts", "demand"], "refs": [["proc_demand_reservations"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/facts/demand/rental_tenant_metric_details_reservations.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_facts", "tags": ["dw", "facts", "demand"], "materialized": "table"}, "created_at": 1654784475.135562, "compiled_sql": "\n\nSELECT    \n    50 orden\n    , 'Reservations'::TEXT metric \n    , geo_id\n    , '2022-06-13 11:01:47.183332-04:00'  processed_time\n    , thedate\n    , reservation_id\n    , status\n    , CASE WHEN thedate =  dateadd(day,-1,'2022-06-13 11:01:47.183332-04:00'::date) THEN 1  ELSE 0 END yesterday\n    , CASE WHEN thedate =  dateadd(day,-2,'2022-06-13 11:01:47.183332-04:00'::date)  THEN 1  ELSE 0 END daybeforeyesterday\n    , CASE WHEN date_trunc('week',thedate)  =  dateadd(week,-1, date_trunc('week','2022-06-13 11:01:47.183332-04:00'::date) )  THEN 1  ELSE 0 END LastWeek\n    , CASE WHEN date_trunc('week',thedate)  =  dateadd(week,-2, date_trunc('week','2022-06-13 11:01:47.183332-04:00'::date) )  THEN 1  ELSE 0 END PastLastWeek\n    , CASE WHEN \n                date_trunc('month',thedate) =  date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) \n                 AND thedate <=   dateadd(day,-1,'2022-06-13 11:01:47.183332-04:00'::date)  THEN 1  ELSE 0 END ThisMonthtoday\n    , CASE WHEN \n                date_trunc('month',thedate) =  dateadd(month,-1, date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) )  AND -- Que son del mes pasado \n                thedate <= dateadd(month,-1, '2022-06-13 11:01:47.183332-04:00'::date) \n            THEN 1  ELSE 0 END LastMonthtoday\n    , CASE WHEN date_trunc('month',thedate) =  dateadd(month,-1, date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) ) \n            THEN 1  ELSE 0 END LastMonth\n    , CASE WHEN date_trunc('month',thedate) =  dateadd(month,-2, date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) ) \n            THEN 1  ELSE 0 END LasttwoMonth\n    , CASE WHEN date_trunc('month',thedate) =  dateadd(month,-3, date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) ) \n            THEN 1  ELSE 0 END LastthreeMonth\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_demand_reservations\"\nORDER BY thedate desc\n--group by 1,2 , 3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_facts\".\"rental_tenant_metric_details_reservations\""}, "model.houm.sales_buyer_metric_details_schedules_created": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH schedules_salesvisit_clean as (\r\nSELECT *\r\nFROM {{ ref('proc_demand_schedules') }}\r\nWHERE schedule_type_name = 'SalesVisit' \r\nAND (( email NOT LIKE '%test.test'  AND email NOT LIKE '%test.com')  OR applicant_id IS NULL  )\r\nAND (supply_relation != 'New Properties')\r\n)\r\n\r\nSELECT \r\n    30 orden\r\n    , 'SalesVisit Created'::TEXT metric\r\n    , geo_id\r\n    , '{{ var(\"processed_time\") }}'  processed_time\r\n    , created_at\r\n    , schedule_id\r\n    , CASE WHEN created_at =  dateadd(day,-1,'{{ var(\"processed_time\") }}'::date) THEN 1  ELSE 0 END yesterday\r\n    , CASE WHEN created_at =  dateadd(day,-2,'{{ var(\"processed_time\") }}'::date)  THEN 1  ELSE 0 END daybeforeyesterday\r\n    , CASE WHEN date_trunc('week',created_at)  =  dateadd(week,-1, date_trunc('week','{{ var(\"processed_time\") }}'::date) )  THEN 1  ELSE 0 END LastWeek\r\n    , CASE WHEN date_trunc('week',created_at)  =  dateadd(week,-2, date_trunc('week','{{ var(\"processed_time\") }}'::date) )  THEN 1  ELSE 0 END PastLastWeek\r\n    , CASE WHEN \r\n                date_trunc('month',created_at) =  date_trunc('month','{{ var(\"processed_time\") }}'::date) \r\n                 AND created_at <=   dateadd(day,-1,'{{ var(\"processed_time\") }}'::date)  THEN 1  ELSE 0 END ThisMonthtoday\r\n    , CASE WHEN \r\n                date_trunc('month',created_at) =  dateadd(month,-1, date_trunc('month','{{ var(\"processed_time\") }}'::date) )  AND  \r\n                created_at <= dateadd(month,-1, '{{ var(\"processed_time\") }}'::date) \r\n            THEN 1  ELSE 0 END LastMonthtoday\r\n    , CASE WHEN date_trunc('month',created_at) =  dateadd(month,-1, date_trunc('month','{{ var(\"processed_time\") }}'::date) ) \r\n            THEN 1  ELSE 0 END LastMonth\r\n    , CASE WHEN date_trunc('month',created_at) =  dateadd(month,-2, date_trunc('month','{{ var(\"processed_time\") }}'::date) ) \r\n            THEN 1  ELSE 0 END LasttwoMonth\r\n    , CASE WHEN date_trunc('month',created_at) =  dateadd(month,-3, date_trunc('month','{{ var(\"processed_time\") }}'::date) ) \r\n            THEN 1  ELSE 0 END LastthreeMonth\r\nFROM schedules_salesvisit_clean\r\nORDER BY created_at DESC\r\n--group by 1,2 , 3", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_demand_schedules"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_facts", "database": null, "tags": ["dw", "facts", "demand"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_facts", "fqn": ["houm", "dwh", "facts", "demand", "sales_buyer_metric_details_schedules_created"], "unique_id": "model.houm.sales_buyer_metric_details_schedules_created", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "dwh/facts/demand/sales_buyer_metric_details_schedules_created.sql", "original_file_path": "models/dwh/facts/demand/sales_buyer_metric_details_schedules_created.sql", "name": "sales_buyer_metric_details_schedules_created", "alias": "sales_buyer_metric_details_schedules_created", "checksum": {"name": "sha256", "checksum": "96fcb971607997ba0b81578a19d8aa44021a61ed74935a3c020ca999ffa6b18d"}, "tags": ["dw", "facts", "demand"], "refs": [["proc_demand_schedules"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/facts/demand/sales_buyer_metric_details_schedules_created.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_facts", "tags": ["dw", "facts", "demand"], "materialized": "table"}, "created_at": 1654784475.148936, "compiled_sql": "\n\nWITH schedules_salesvisit_clean as (\nSELECT *\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_demand_schedules\"\nWHERE schedule_type_name = 'SalesVisit' \nAND (( email NOT LIKE '%test.test'  AND email NOT LIKE '%test.com')  OR applicant_id IS NULL  )\nAND (supply_relation != 'New Properties')\n)\n\nSELECT \n    30 orden\n    , 'SalesVisit Created'::TEXT metric\n    , geo_id\n    , '2022-06-13 11:01:47.183332-04:00'  processed_time\n    , created_at\n    , schedule_id\n    , CASE WHEN created_at =  dateadd(day,-1,'2022-06-13 11:01:47.183332-04:00'::date) THEN 1  ELSE 0 END yesterday\n    , CASE WHEN created_at =  dateadd(day,-2,'2022-06-13 11:01:47.183332-04:00'::date)  THEN 1  ELSE 0 END daybeforeyesterday\n    , CASE WHEN date_trunc('week',created_at)  =  dateadd(week,-1, date_trunc('week','2022-06-13 11:01:47.183332-04:00'::date) )  THEN 1  ELSE 0 END LastWeek\n    , CASE WHEN date_trunc('week',created_at)  =  dateadd(week,-2, date_trunc('week','2022-06-13 11:01:47.183332-04:00'::date) )  THEN 1  ELSE 0 END PastLastWeek\n    , CASE WHEN \n                date_trunc('month',created_at) =  date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) \n                 AND created_at <=   dateadd(day,-1,'2022-06-13 11:01:47.183332-04:00'::date)  THEN 1  ELSE 0 END ThisMonthtoday\n    , CASE WHEN \n                date_trunc('month',created_at) =  dateadd(month,-1, date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) )  AND  \n                created_at <= dateadd(month,-1, '2022-06-13 11:01:47.183332-04:00'::date) \n            THEN 1  ELSE 0 END LastMonthtoday\n    , CASE WHEN date_trunc('month',created_at) =  dateadd(month,-1, date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) ) \n            THEN 1  ELSE 0 END LastMonth\n    , CASE WHEN date_trunc('month',created_at) =  dateadd(month,-2, date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) ) \n            THEN 1  ELSE 0 END LasttwoMonth\n    , CASE WHEN date_trunc('month',created_at) =  dateadd(month,-3, date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) ) \n            THEN 1  ELSE 0 END LastthreeMonth\nFROM schedules_salesvisit_clean\nORDER BY created_at DESC\n--group by 1,2 , 3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_facts\".\"sales_buyer_metric_details_schedules_created\""}, "model.houm.rental_tenant_metric_details_schedules_created": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH schedules_visit_clean AS (\r\nSELECT *\r\nFROM {{ ref('proc_demand_schedules') }}\r\nWHERE schedule_type_name = 'Visit'\r\nAND (( email NOT LIKE '%test.test'  AND email NOT LIKE '%test.com') OR applicant_id IS NULL )\r\n)\r\n\r\nSELECT \r\n    20 orden\r\n    , 'Visit Created'::TEXT metric\r\n    , geo_id\r\n    , '{{ var(\"processed_time\") }}'  processed_time\r\n    , created_at\r\n    , schedule_id\r\n    , CASE WHEN created_at =  dateadd(day,-1,'{{ var(\"processed_time\") }}'::date) THEN 1  ELSE 0 END yesterday\r\n    , CASE WHEN created_at =  dateadd(day,-2,'{{ var(\"processed_time\") }}'::date)  THEN 1  ELSE 0 END daybeforeyesterday\r\n    , CASE WHEN date_trunc('week',created_at)  =  dateadd(week,-1, date_trunc('week','{{ var(\"processed_time\") }}'::date) )  THEN 1  ELSE 0 END LastWeek\r\n    , CASE WHEN date_trunc('week',created_at)  =  dateadd(week,-2, date_trunc('week','{{ var(\"processed_time\") }}'::date) )  THEN 1  ELSE 0 END PastLastWeek\r\n    , CASE WHEN \r\n                date_trunc('month',created_at) =  date_trunc('month','{{ var(\"processed_time\") }}'::date) \r\n                 AND created_at <=   dateadd(day,-1,'{{ var(\"processed_time\") }}'::date)  THEN 1  ELSE 0 END ThisMonthtoday\r\n    , CASE WHEN \r\n                date_trunc('month',created_at) =  dateadd(month,-1, date_trunc('month','{{ var(\"processed_time\") }}'::date) )  AND \r\n                created_at <= dateadd(month,-1, '{{ var(\"processed_time\") }}'::date) \r\n            THEN 1  ELSE 0 END LastMonthtoday\r\n    , CASE WHEN date_trunc('month',created_at) =  dateadd(month,-1, date_trunc('month','{{ var(\"processed_time\") }}'::date) ) \r\n            THEN 1  ELSE 0 END LastMonth\r\n    , CASE WHEN date_trunc('month',created_at) =  dateadd(month,-2, date_trunc('month','{{ var(\"processed_time\") }}'::date) ) \r\n            THEN 1  ELSE 0 END LasttwoMonth\r\n    , CASE WHEN date_trunc('month',created_at) =  dateadd(month,-3, date_trunc('month','{{ var(\"processed_time\") }}'::date) ) \r\n            THEN 1  ELSE 0 END LastthreeMonth\r\nFROM schedules_visit_clean\r\nORDER BY created_at DESC\r\n--group by 1,2 , 3", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_demand_schedules"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_facts", "database": null, "tags": ["dw", "facts", "demand"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_facts", "fqn": ["houm", "dwh", "facts", "demand", "rental_tenant_metric_details_schedules_created"], "unique_id": "model.houm.rental_tenant_metric_details_schedules_created", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "dwh/facts/demand/rental_tenant_metric_details_schedules_created.sql", "original_file_path": "models/dwh/facts/demand/rental_tenant_metric_details_schedules_created.sql", "name": "rental_tenant_metric_details_schedules_created", "alias": "rental_tenant_metric_details_schedules_created", "checksum": {"name": "sha256", "checksum": "ce42deb882d06c76012277d4a491db16147a37e24a34e88cd716ec0b5d2d1bd8"}, "tags": ["dw", "facts", "demand"], "refs": [["proc_demand_schedules"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/facts/demand/rental_tenant_metric_details_schedules_created.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_facts", "tags": ["dw", "facts", "demand"], "materialized": "table"}, "created_at": 1654784475.162591, "compiled_sql": "\n\nWITH schedules_visit_clean AS (\nSELECT *\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_demand_schedules\"\nWHERE schedule_type_name = 'Visit'\nAND (( email NOT LIKE '%test.test'  AND email NOT LIKE '%test.com') OR applicant_id IS NULL )\n)\n\nSELECT \n    20 orden\n    , 'Visit Created'::TEXT metric\n    , geo_id\n    , '2022-06-13 11:01:47.183332-04:00'  processed_time\n    , created_at\n    , schedule_id\n    , CASE WHEN created_at =  dateadd(day,-1,'2022-06-13 11:01:47.183332-04:00'::date) THEN 1  ELSE 0 END yesterday\n    , CASE WHEN created_at =  dateadd(day,-2,'2022-06-13 11:01:47.183332-04:00'::date)  THEN 1  ELSE 0 END daybeforeyesterday\n    , CASE WHEN date_trunc('week',created_at)  =  dateadd(week,-1, date_trunc('week','2022-06-13 11:01:47.183332-04:00'::date) )  THEN 1  ELSE 0 END LastWeek\n    , CASE WHEN date_trunc('week',created_at)  =  dateadd(week,-2, date_trunc('week','2022-06-13 11:01:47.183332-04:00'::date) )  THEN 1  ELSE 0 END PastLastWeek\n    , CASE WHEN \n                date_trunc('month',created_at) =  date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) \n                 AND created_at <=   dateadd(day,-1,'2022-06-13 11:01:47.183332-04:00'::date)  THEN 1  ELSE 0 END ThisMonthtoday\n    , CASE WHEN \n                date_trunc('month',created_at) =  dateadd(month,-1, date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) )  AND \n                created_at <= dateadd(month,-1, '2022-06-13 11:01:47.183332-04:00'::date) \n            THEN 1  ELSE 0 END LastMonthtoday\n    , CASE WHEN date_trunc('month',created_at) =  dateadd(month,-1, date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) ) \n            THEN 1  ELSE 0 END LastMonth\n    , CASE WHEN date_trunc('month',created_at) =  dateadd(month,-2, date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) ) \n            THEN 1  ELSE 0 END LasttwoMonth\n    , CASE WHEN date_trunc('month',created_at) =  dateadd(month,-3, date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) ) \n            THEN 1  ELSE 0 END LastthreeMonth\nFROM schedules_visit_clean\nORDER BY created_at DESC\n--group by 1,2 , 3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_facts\".\"rental_tenant_metric_details_schedules_created\""}, "model.houm.rental_tenant_metric_details_leads_interactions": {"raw_sql": "{{ config(materialized='table') }}\n\nSELECT\n    09 orden\n    , 'Interaction Tenant Lead'::TEXT metric\n    , geo_id\n    , '{{ var(\"processed_time\") }}' processed_time\n    , created_at\n    , lead_id \n    , activity_id\n    , CASE WHEN created_at =  dateadd(day,-1,'{{ var(\"processed_time\") }}'::date) THEN 1  ELSE 0 END yesterday\n    , CASE WHEN created_at =  dateadd(day,-2,'{{ var(\"processed_time\") }}'::date)  THEN 1  ELSE 0 END daybeforeyesterday\n    , CASE WHEN date_trunc('week',created_at)  =  dateadd(week,-1, date_trunc('week','{{ var(\"processed_time\") }}'::date) )  THEN 1  ELSE 0 END LastWeek\n    , CASE WHEN date_trunc('week',created_at)  =  dateadd(week,-2, date_trunc('week','{{ var(\"processed_time\") }}'::date) )  THEN 1  ELSE 0 END PastLastWeek\n    , CASE WHEN \n                date_trunc('month',created_at) =  date_trunc('month','{{ var(\"processed_time\") }}'::date) \n                 AND created_at <=   dateadd(day,-1,'{{ var(\"processed_time\") }}'::date)  THEN 1  ELSE 0 END ThisMonthtoday\n    , CASE WHEN \n                date_trunc('month',created_at) =  dateadd(month,-1, date_trunc('month','{{ var(\"processed_time\") }}'::date) ) \n                 AND created_at <= dateadd(month,-1, '{{ var(\"processed_time\") }}'::date) \n            THEN 1  ELSE 0 END LastMonthtoday\n    , CASE WHEN date_trunc('month',created_at) =  dateadd(month,-1, date_trunc('month','{{ var(\"processed_time\") }}'::date) ) \n            THEN 1  ELSE 0 END LastMonth\n    , CASE WHEN date_trunc('month',created_at) =  dateadd(month,-2, date_trunc('month','{{ var(\"processed_time\") }}'::date) ) \n            THEN 1  ELSE 0 END LasttwoMonth\n    , CASE WHEN date_trunc('month',created_at) =  dateadd(month,-3, date_trunc('month','{{ var(\"processed_time\") }}'::date) ) \n            THEN 1  ELSE 0 END LastthreeMonth\nFROM {{ ref('proc_demand_leads') }}\nORDER BY created_at desc\n--GROUP BY 1,2 , 3", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_demand_leads"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_facts", "database": null, "tags": ["dw", "facts", "demand"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_facts", "fqn": ["houm", "dwh", "facts", "demand", "rental_tenant_metric_details_leads_interactions"], "unique_id": "model.houm.rental_tenant_metric_details_leads_interactions", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "dwh/facts/demand/rental_tenant_metric_details_leads_interactions.sql", "original_file_path": "models/dwh/facts/demand/rental_tenant_metric_details_leads_interactions.sql", "name": "rental_tenant_metric_details_leads_interactions", "alias": "rental_tenant_metric_details_leads_interactions", "checksum": {"name": "sha256", "checksum": "6faa51fd5d60904a3eadd1d1b1d000f12175e6315225f67633d85b3c26ae8ffd"}, "tags": ["dw", "facts", "demand"], "refs": [["proc_demand_leads"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/facts/demand/rental_tenant_metric_details_leads_interactions.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_facts", "tags": ["dw", "facts", "demand"], "materialized": "table"}, "created_at": 1654784475.175869, "compiled_sql": "\n\nSELECT\n    09 orden\n    , 'Interaction Tenant Lead'::TEXT metric\n    , geo_id\n    , '2022-06-13 11:01:47.183332-04:00' processed_time\n    , created_at\n    , lead_id \n    , activity_id\n    , CASE WHEN created_at =  dateadd(day,-1,'2022-06-13 11:01:47.183332-04:00'::date) THEN 1  ELSE 0 END yesterday\n    , CASE WHEN created_at =  dateadd(day,-2,'2022-06-13 11:01:47.183332-04:00'::date)  THEN 1  ELSE 0 END daybeforeyesterday\n    , CASE WHEN date_trunc('week',created_at)  =  dateadd(week,-1, date_trunc('week','2022-06-13 11:01:47.183332-04:00'::date) )  THEN 1  ELSE 0 END LastWeek\n    , CASE WHEN date_trunc('week',created_at)  =  dateadd(week,-2, date_trunc('week','2022-06-13 11:01:47.183332-04:00'::date) )  THEN 1  ELSE 0 END PastLastWeek\n    , CASE WHEN \n                date_trunc('month',created_at) =  date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) \n                 AND created_at <=   dateadd(day,-1,'2022-06-13 11:01:47.183332-04:00'::date)  THEN 1  ELSE 0 END ThisMonthtoday\n    , CASE WHEN \n                date_trunc('month',created_at) =  dateadd(month,-1, date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) ) \n                 AND created_at <= dateadd(month,-1, '2022-06-13 11:01:47.183332-04:00'::date) \n            THEN 1  ELSE 0 END LastMonthtoday\n    , CASE WHEN date_trunc('month',created_at) =  dateadd(month,-1, date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) ) \n            THEN 1  ELSE 0 END LastMonth\n    , CASE WHEN date_trunc('month',created_at) =  dateadd(month,-2, date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) ) \n            THEN 1  ELSE 0 END LasttwoMonth\n    , CASE WHEN date_trunc('month',created_at) =  dateadd(month,-3, date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) ) \n            THEN 1  ELSE 0 END LastthreeMonth\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_demand_leads\"\nORDER BY created_at desc\n--GROUP BY 1,2 , 3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_facts\".\"rental_tenant_metric_details_leads_interactions\""}, "model.houm.sales_investor_metric_details_schedules_done": {"raw_sql": "{{ config(materialized='table') }}\n\nWITH schedules_salesvisit_clean AS (\nSELECT *\nFROM {{ ref('proc_demand_schedules') }}\nWHERE schedule_type_name = 'SalesVisit' \nAND status = 'Done'\nAND (( email NOT LIKE '%test.test'  AND email NOT LIKE '%test.com')  OR applicant_id IS NULL ) \nAND (supply_relation = 'New Properties')\n)\n\nSELECT \n    50::INT AS orden ,\n    'SalesVisit Done'::TEXT AS metric ,\n    geo_id ,\n    '{{ var(\"processed_time\") }}' AS processed_time ,\n    begin_date ,\n    schedule_id ,\n    CASE WHEN begin_date =  dateadd(day,-1,'{{ var(\"processed_time\") }}'::date) THEN 1  ELSE 0 END AS yesterday ,\n    CASE WHEN begin_date =  dateadd(day,-2,'{{ var(\"processed_time\") }}'::date)  THEN 1  ELSE 0 END AS daybeforeyesterday ,\n    CASE WHEN date_trunc('week',begin_date)  =  dateadd(week,-1, date_trunc('week','{{ var(\"processed_time\") }}'::date) ) THEN 1 ELSE 0 END AS LastWeek ,\n    CASE WHEN date_trunc('week',begin_date)  =  dateadd(week,-2, date_trunc('week','{{ var(\"processed_time\") }}'::date) ) THEN 1 ELSE 0 END AS PastLastWeek ,\n    CASE WHEN \n                date_trunc('month',begin_date) =  date_trunc('month','{{ var(\"processed_time\") }}'::date) \n                 AND begin_date <=   dateadd(day,-1,'{{ var(\"processed_time\") }}'::date)  THEN 1  ELSE 0 END AS ThisMonthtoday, \n    CASE WHEN \n                date_trunc('month',begin_date) =  dateadd(month,-1, date_trunc('month','{{ var(\"processed_time\") }}'::date) )  AND  \n                begin_date <= dateadd(month,-1, '{{ var(\"processed_time\") }}'::date) \n            THEN 1 ELSE 0 END AS LastMonthtoday ,  \n    CASE WHEN date_trunc('month',begin_date) =  dateadd(month,-1, date_trunc('month','{{ var(\"processed_time\") }}'::date) ) \n            THEN 1 ELSE 0 END AS LastMonth ,\n    CASE WHEN date_trunc('month',begin_date) =  dateadd(month,-2, date_trunc('month','{{ var(\"processed_time\") }}'::date) ) \n            THEN 1 ELSE 0 END AS LasttwoMonth ,\n    CASE WHEN date_trunc('month',begin_date) =  dateadd(month,-3, date_trunc('month','{{ var(\"processed_time\") }}'::date) ) \n            THEN 1 ELSE 0 END AS LastthreeMonth\nFROM schedules_salesvisit_clean\nORDER BY begin_date desc\n--group by 1,2 , 3", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_demand_schedules"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_facts", "database": null, "tags": ["dw", "facts", "demand"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_facts", "fqn": ["houm", "dwh", "facts", "demand", "sales_investor_metric_details_schedules_done"], "unique_id": "model.houm.sales_investor_metric_details_schedules_done", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "dwh/facts/demand/sales_investor_metric_details_schedules_done.sql", "original_file_path": "models/dwh/facts/demand/sales_investor_metric_details_schedules_done.sql", "name": "sales_investor_metric_details_schedules_done", "alias": "sales_investor_metric_details_schedules_done", "checksum": {"name": "sha256", "checksum": "b3298e074ce0fac507092fd47fd48209663ef63d7cdf9aca4a0ecb1808173f47"}, "tags": ["dw", "facts", "demand"], "refs": [["proc_demand_schedules"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/facts/demand/sales_investor_metric_details_schedules_done.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_facts", "tags": ["dw", "facts", "demand"], "materialized": "table"}, "created_at": 1654784475.190639, "compiled_sql": "\n\nWITH schedules_salesvisit_clean AS (\nSELECT *\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_demand_schedules\"\nWHERE schedule_type_name = 'SalesVisit' \nAND status = 'Done'\nAND (( email NOT LIKE '%test.test'  AND email NOT LIKE '%test.com')  OR applicant_id IS NULL ) \nAND (supply_relation = 'New Properties')\n)\n\nSELECT \n    50::INT AS orden ,\n    'SalesVisit Done'::TEXT AS metric ,\n    geo_id ,\n    '2022-06-13 11:01:47.183332-04:00' AS processed_time ,\n    begin_date ,\n    schedule_id ,\n    CASE WHEN begin_date =  dateadd(day,-1,'2022-06-13 11:01:47.183332-04:00'::date) THEN 1  ELSE 0 END AS yesterday ,\n    CASE WHEN begin_date =  dateadd(day,-2,'2022-06-13 11:01:47.183332-04:00'::date)  THEN 1  ELSE 0 END AS daybeforeyesterday ,\n    CASE WHEN date_trunc('week',begin_date)  =  dateadd(week,-1, date_trunc('week','2022-06-13 11:01:47.183332-04:00'::date) ) THEN 1 ELSE 0 END AS LastWeek ,\n    CASE WHEN date_trunc('week',begin_date)  =  dateadd(week,-2, date_trunc('week','2022-06-13 11:01:47.183332-04:00'::date) ) THEN 1 ELSE 0 END AS PastLastWeek ,\n    CASE WHEN \n                date_trunc('month',begin_date) =  date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) \n                 AND begin_date <=   dateadd(day,-1,'2022-06-13 11:01:47.183332-04:00'::date)  THEN 1  ELSE 0 END AS ThisMonthtoday, \n    CASE WHEN \n                date_trunc('month',begin_date) =  dateadd(month,-1, date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) )  AND  \n                begin_date <= dateadd(month,-1, '2022-06-13 11:01:47.183332-04:00'::date) \n            THEN 1 ELSE 0 END AS LastMonthtoday ,  \n    CASE WHEN date_trunc('month',begin_date) =  dateadd(month,-1, date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) ) \n            THEN 1 ELSE 0 END AS LastMonth ,\n    CASE WHEN date_trunc('month',begin_date) =  dateadd(month,-2, date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) ) \n            THEN 1 ELSE 0 END AS LasttwoMonth ,\n    CASE WHEN date_trunc('month',begin_date) =  dateadd(month,-3, date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) ) \n            THEN 1 ELSE 0 END AS LastthreeMonth\nFROM schedules_salesvisit_clean\nORDER BY begin_date desc\n--group by 1,2 , 3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_facts\".\"sales_investor_metric_details_schedules_done\""}, "model.houm.sales_buyer_metrics_details_leads_sales_qualified": {"raw_sql": "{{ config(materialized='table') }}\n\nWITH  demand_buyer_leads_clean as (\nSELECT *\nFROM  {{ ref('proc_demand_buyer_leads') }}\nWHERE  true \nAND ( (lost_reason not like '%Test%'  AND lost_reason != 'Pruebas'  AND lost_reason != 'Cotizaci\u00f3n Duplicada') OR lost_reason IS NULL )\nAND (supply_relation != 'New Properties')\n)\n\nSELECT \n    20 orden ,\n    'Created Unique SH Buyer Hot Qualified Leads'::TEXT metric ,\n    geo_id ,\n    '{{ var(\"processed_time\") }}' as  processed_time ,\n    add_time ,\n    qualification ,\n    fecha_calificacion ,\n    person_id ,\n    email ,\n    deal_id ,\n    CASE WHEN add_time =  dateadd(day,-1,'{{ var(\"processed_time\") }}'::date) THEN 1 ELSE 0 END AS yesterday, \n    CASE WHEN add_time =  dateadd(day,-2,'{{ var(\"processed_time\") }}'::date)  THEN 1 ELSE 0 END AS daybeforeyesterday, \n    CASE WHEN date_trunc('week',add_time)  =  dateadd(week,-1, date_trunc('week','{{ var(\"processed_time\") }}'::date) ) THEN 1 ELSE 0 END AS LastWeek,\n    CASE WHEN date_trunc('week',add_time)  =  dateadd(week,-2, date_trunc('week','{{ var(\"processed_time\") }}'::date) ) THEN 1 ELSE 0 END AS PastLastWeek, \n    CASE WHEN \n                date_trunc('month',add_time) =  date_trunc('month','{{ var(\"processed_time\") }}'::date) \n                 AND add_time <=   dateadd(day,-1,'{{ var(\"processed_time\") }}'::date) THEN 1 ELSE 0 END AS ThisMonthtoday , \n    CASE WHEN \n                date_trunc('month',add_time) =  dateadd(month,-1, date_trunc('month','{{ var(\"processed_time\") }}'::date) )  AND  \n                add_time <= dateadd(month,-1, '{{ var(\"processed_time\") }}'::date) \n            THEN 1 ELSE 0 END AS LastMonthtoday , \n    CASE WHEN date_trunc('month',add_time) =  dateadd(month,-1, date_trunc('month','{{ var(\"processed_time\") }}'::date) ) \n            THEN 1 ELSE 0 END AS LastMonth ,\n    CASE WHEN date_trunc('month',add_time) =  dateadd(month,-2, date_trunc('month','{{ var(\"processed_time\") }}'::date) ) \n            THEN 1 ELSE 0 END AS LasttwoMonth ,\n    CASE WHEN date_trunc('month',add_time) =  dateadd(month,-3, date_trunc('month','{{ var(\"processed_time\") }}'::date) ) \n            THEN 1 ELSE 0 END AS LastthreeMonth\nFROM demand_buyer_leads_clean\nwhere qualification >= 3  AND qualification <= 5\nORDER BY add_time DESC \n--group by 1 , 2, 3", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_demand_buyer_leads"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_facts", "database": null, "tags": ["dw", "facts", "demand"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_facts", "fqn": ["houm", "dwh", "facts", "demand", "sales_buyer_metrics_details_leads_sales_qualified"], "unique_id": "model.houm.sales_buyer_metrics_details_leads_sales_qualified", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "dwh/facts/demand/sales_buyer_metrics_details_leads_sales_qualified.sql", "original_file_path": "models/dwh/facts/demand/sales_buyer_metrics_details_leads_sales_qualified.sql", "name": "sales_buyer_metrics_details_leads_sales_qualified", "alias": "sales_buyer_metrics_details_leads_sales_qualified", "checksum": {"name": "sha256", "checksum": "1ae050a887c644438f7e4b45304a68e020524039e46bdd45a3fac6985abc9e48"}, "tags": ["dw", "facts", "demand"], "refs": [["proc_demand_buyer_leads"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/facts/demand/sales_buyer_metrics_details_leads_sales_qualified.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_facts", "tags": ["dw", "facts", "demand"], "materialized": "table"}, "created_at": 1654784475.204133, "compiled_sql": "\n\nWITH  demand_buyer_leads_clean as (\nSELECT *\nFROM  \"houmdw_prod\".\"dbt_processing\".\"proc_demand_buyer_leads\"\nWHERE  true \nAND ( (lost_reason not like '%Test%'  AND lost_reason != 'Pruebas'  AND lost_reason != 'Cotizaci\u00f3n Duplicada') OR lost_reason IS NULL )\nAND (supply_relation != 'New Properties')\n)\n\nSELECT \n    20 orden ,\n    'Created Unique SH Buyer Hot Qualified Leads'::TEXT metric ,\n    geo_id ,\n    '2022-06-13 11:01:47.183332-04:00' as  processed_time ,\n    add_time ,\n    qualification ,\n    fecha_calificacion ,\n    person_id ,\n    email ,\n    deal_id ,\n    CASE WHEN add_time =  dateadd(day,-1,'2022-06-13 11:01:47.183332-04:00'::date) THEN 1 ELSE 0 END AS yesterday, \n    CASE WHEN add_time =  dateadd(day,-2,'2022-06-13 11:01:47.183332-04:00'::date)  THEN 1 ELSE 0 END AS daybeforeyesterday, \n    CASE WHEN date_trunc('week',add_time)  =  dateadd(week,-1, date_trunc('week','2022-06-13 11:01:47.183332-04:00'::date) ) THEN 1 ELSE 0 END AS LastWeek,\n    CASE WHEN date_trunc('week',add_time)  =  dateadd(week,-2, date_trunc('week','2022-06-13 11:01:47.183332-04:00'::date) ) THEN 1 ELSE 0 END AS PastLastWeek, \n    CASE WHEN \n                date_trunc('month',add_time) =  date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) \n                 AND add_time <=   dateadd(day,-1,'2022-06-13 11:01:47.183332-04:00'::date) THEN 1 ELSE 0 END AS ThisMonthtoday , \n    CASE WHEN \n                date_trunc('month',add_time) =  dateadd(month,-1, date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) )  AND  \n                add_time <= dateadd(month,-1, '2022-06-13 11:01:47.183332-04:00'::date) \n            THEN 1 ELSE 0 END AS LastMonthtoday , \n    CASE WHEN date_trunc('month',add_time) =  dateadd(month,-1, date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) ) \n            THEN 1 ELSE 0 END AS LastMonth ,\n    CASE WHEN date_trunc('month',add_time) =  dateadd(month,-2, date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) ) \n            THEN 1 ELSE 0 END AS LasttwoMonth ,\n    CASE WHEN date_trunc('month',add_time) =  dateadd(month,-3, date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) ) \n            THEN 1 ELSE 0 END AS LastthreeMonth\nFROM demand_buyer_leads_clean\nwhere qualification >= 3  AND qualification <= 5\nORDER BY add_time DESC \n--group by 1 , 2, 3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_facts\".\"sales_buyer_metrics_details_leads_sales_qualified\""}, "model.houm.rental_tenant_metric_details_new_tenant": {"raw_sql": "{{ config(materialized='table') }}\n\nWITH new_tenant AS (\nSELECT * \nFROM {{ ref('proc_closure_subs') }}\nWHERE TRUE\n   AND sub_init_reason in ('NEW_LEAD','REPUBLISH_DUE_TO_DEFAULTER_TENANT','REPUBLISHED','REPLUBLISHED' )\n)\n\nSELECT    \n    60 orden ,\n    'New Tenant'::TEXT AS metric ,\n    geo_id , \n    '{{ var(\"processed_time\") }}' AS processed_time ,\n    payment_date_local ,\n    sub_id ,\n    sub_init_reason ,\n    plan_name , \n    plan_description , \n    has_management , \n    CASE WHEN payment_date_local =  dateadd(day,-1,'{{ var(\"processed_time\") }}'::date) THEN 1  ELSE 0 END AS yesterday ,\n    CASE WHEN payment_date_local =  dateadd(day,-2,'{{ var(\"processed_time\") }}'::date)  THEN 1  ELSE 0 END AS daybeforeyesterday ,\n    CASE WHEN date_trunc('week',payment_date_local)  =  dateadd(week,-1, date_trunc('week','{{ var(\"processed_time\") }}'::date) )  THEN 1  ELSE 0 END AS LastWeek ,\n    CASE WHEN date_trunc('week',payment_date_local)  =  dateadd(week,-2, date_trunc('week','{{ var(\"processed_time\") }}'::date) )  THEN 1  ELSE 0 END AS PastLastWeek ,\n    CASE WHEN \n                date_trunc('month',payment_date_local) =  date_trunc('month','{{ var(\"processed_time\") }}'::date) \n                 AND payment_date_local <=   dateadd(day,-1,'{{ var(\"processed_time\") }}'::date)  THEN 1  ELSE 0 END AS ThisMonthtoday ,\n    CASE WHEN \n                date_trunc('month',payment_date_local) =  dateadd(month,-1, date_trunc('month','{{ var(\"processed_time\") }}'::date) )  AND \n                payment_date_local <= dateadd(month,-1, '{{ var(\"processed_time\") }}'::date) \n            THEN 1  ELSE 0 END AS LastMonthtoday ,\n    CASE WHEN date_trunc('month',payment_date_local) =  dateadd(month,-1, date_trunc('month','{{ var(\"processed_time\") }}'::date) ) \n            THEN 1  ELSE 0 END AS LastMonth ,\n    CASE WHEN date_trunc('month',payment_date_local) =  dateadd(month,-2, date_trunc('month','{{ var(\"processed_time\") }}'::date) ) \n            THEN 1  ELSE 0 END AS LasttwoMonth ,\n    CASE WHEN date_trunc('month',payment_date_local) =  dateadd(month,-3, date_trunc('month','{{ var(\"processed_time\") }}'::date) ) \n            THEN 1  ELSE 0 END AS LastthreeMonth\nFROM new_tenant\nORDER BY payment_date_local DESC\n--group by 1,2 , 3", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_closure_subs"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_facts", "database": null, "tags": ["dw", "facts", "demand"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_facts", "fqn": ["houm", "dwh", "facts", "demand", "rental_tenant_metric_details_new_tenant"], "unique_id": "model.houm.rental_tenant_metric_details_new_tenant", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "dwh/facts/demand/rental_tenant_metric_details_new_tenant.sql", "original_file_path": "models/dwh/facts/demand/rental_tenant_metric_details_new_tenant.sql", "name": "rental_tenant_metric_details_new_tenant", "alias": "rental_tenant_metric_details_new_tenant", "checksum": {"name": "sha256", "checksum": "7f34563285c4be449504076e84070386deeedc3ddfd00c61fd0433c9d1dee374"}, "tags": ["dw", "facts", "demand"], "refs": [["proc_closure_subs"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/facts/demand/rental_tenant_metric_details_new_tenant.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_facts", "tags": ["dw", "facts", "demand"], "materialized": "table"}, "created_at": 1654784475.218128, "compiled_sql": "\n\nWITH new_tenant AS (\nSELECT * \nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_closure_subs\"\nWHERE TRUE\n   AND sub_init_reason in ('NEW_LEAD','REPUBLISH_DUE_TO_DEFAULTER_TENANT','REPUBLISHED','REPLUBLISHED' )\n)\n\nSELECT    \n    60 orden ,\n    'New Tenant'::TEXT AS metric ,\n    geo_id , \n    '2022-06-13 11:01:47.183332-04:00' AS processed_time ,\n    payment_date_local ,\n    sub_id ,\n    sub_init_reason ,\n    plan_name , \n    plan_description , \n    has_management , \n    CASE WHEN payment_date_local =  dateadd(day,-1,'2022-06-13 11:01:47.183332-04:00'::date) THEN 1  ELSE 0 END AS yesterday ,\n    CASE WHEN payment_date_local =  dateadd(day,-2,'2022-06-13 11:01:47.183332-04:00'::date)  THEN 1  ELSE 0 END AS daybeforeyesterday ,\n    CASE WHEN date_trunc('week',payment_date_local)  =  dateadd(week,-1, date_trunc('week','2022-06-13 11:01:47.183332-04:00'::date) )  THEN 1  ELSE 0 END AS LastWeek ,\n    CASE WHEN date_trunc('week',payment_date_local)  =  dateadd(week,-2, date_trunc('week','2022-06-13 11:01:47.183332-04:00'::date) )  THEN 1  ELSE 0 END AS PastLastWeek ,\n    CASE WHEN \n                date_trunc('month',payment_date_local) =  date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) \n                 AND payment_date_local <=   dateadd(day,-1,'2022-06-13 11:01:47.183332-04:00'::date)  THEN 1  ELSE 0 END AS ThisMonthtoday ,\n    CASE WHEN \n                date_trunc('month',payment_date_local) =  dateadd(month,-1, date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) )  AND \n                payment_date_local <= dateadd(month,-1, '2022-06-13 11:01:47.183332-04:00'::date) \n            THEN 1  ELSE 0 END AS LastMonthtoday ,\n    CASE WHEN date_trunc('month',payment_date_local) =  dateadd(month,-1, date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) ) \n            THEN 1  ELSE 0 END AS LastMonth ,\n    CASE WHEN date_trunc('month',payment_date_local) =  dateadd(month,-2, date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) ) \n            THEN 1  ELSE 0 END AS LasttwoMonth ,\n    CASE WHEN date_trunc('month',payment_date_local) =  dateadd(month,-3, date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) ) \n            THEN 1  ELSE 0 END AS LastthreeMonth\nFROM new_tenant\nORDER BY payment_date_local DESC\n--group by 1,2 , 3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_facts\".\"rental_tenant_metric_details_new_tenant\""}, "model.houm.rental_tenant_metric_details_paid_media_cost": {"raw_sql": "{{ config(materialized='table') }}\n\nWITH paid_media_cost AS (\nSELECT *\nFROM  {{ ref('proc_marketing_paid_media') }} AS proc_marketing_paid_media \nWHERE TRUE\n    AND geo_id IS NOT NULL\n    AND business_marketing = 'Tenant'\n    AND funnel_marketing = 'Demand'\n)\n\nSELECT    \n    15 AS orden ,\n    'Paid Media Cost'::TEXT AS metric ,\n    geo_id , \n    '{{ var(\"processed_time\") }}' AS processed_time ,\n    executed_at ,\n    day_cost ,\n    day_clicks , \n    day_impressions ,\n    CASE WHEN executed_at =  dateadd(day,-1,'{{ var(\"processed_time\") }}'::date) THEN 1  ELSE 0 END AS yesterday ,\n    CASE WHEN executed_at =  dateadd(day,-2,'{{ var(\"processed_time\") }}'::date)  THEN 1  ELSE 0 END AS daybeforeyesterday ,\n    CASE WHEN date_trunc('week',executed_at)  =  dateadd(week,-1, date_trunc('week','{{ var(\"processed_time\") }}'::date) )  THEN 1  ELSE 0 END AS LastWeek ,\n    CASE WHEN date_trunc('week',executed_at)  =  dateadd(week,-2, date_trunc('week','{{ var(\"processed_time\") }}'::date) )  THEN 1  ELSE 0 END AS PastLastWeek ,\n    CASE WHEN \n                date_trunc('month',executed_at) =  date_trunc('month','{{ var(\"processed_time\") }}'::date) \n                 AND executed_at <=   dateadd(day,-1,'{{ var(\"processed_time\") }}'::date)  THEN 1  ELSE 0 END AS ThisMonthtoday ,\n    CASE WHEN \n                date_trunc('month',executed_at) =  dateadd(month,-1, date_trunc('month','{{ var(\"processed_time\") }}'::date) )  AND \n                executed_at <= dateadd(month,-1, '{{ var(\"processed_time\") }}'::date) \n            THEN 1  ELSE 0 END AS LastMonthtoday ,\n    CASE WHEN date_trunc('month',executed_at) =  dateadd(month,-1, date_trunc('month','{{ var(\"processed_time\") }}'::date) ) \n            THEN 1  ELSE 0 END AS LastMonth ,\n    CASE WHEN date_trunc('month',executed_at) =  dateadd(month,-2, date_trunc('month','{{ var(\"processed_time\") }}'::date) ) \n            THEN 1  ELSE 0 END AS LasttwoMonth ,\n    CASE WHEN date_trunc('month',executed_at) =  dateadd(month,-3, date_trunc('month','{{ var(\"processed_time\") }}'::date) ) \n            THEN 1  ELSE 0 END AS LastthreeMonth\nFROM paid_media_cost\nORDER BY executed_at DESC", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_marketing_paid_media"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_facts", "database": null, "tags": ["dw", "facts", "demand"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_facts", "fqn": ["houm", "dwh", "facts", "demand", "rental_tenant_metric_details_paid_media_cost"], "unique_id": "model.houm.rental_tenant_metric_details_paid_media_cost", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "dwh/facts/demand/rental_tenant_metric_details_paid_media_cost.sql", "original_file_path": "models/dwh/facts/demand/rental_tenant_metric_details_paid_media_cost.sql", "name": "rental_tenant_metric_details_paid_media_cost", "alias": "rental_tenant_metric_details_paid_media_cost", "checksum": {"name": "sha256", "checksum": "0f28ba3476dc3ae0c6844fe56196d75c5c7983fd5d29d5aed21f0e41b3ba3390"}, "tags": ["dw", "facts", "demand"], "refs": [["proc_marketing_paid_media"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/facts/demand/rental_tenant_metric_details_paid_media_cost.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_facts", "tags": ["dw", "facts", "demand"], "materialized": "table"}, "created_at": 1654784475.232094, "compiled_sql": "\n\nWITH paid_media_cost AS (\nSELECT *\nFROM  \"houmdw_prod\".\"dbt_processing\".\"proc_marketing_paid_media\" AS proc_marketing_paid_media \nWHERE TRUE\n    AND geo_id IS NOT NULL\n    AND business_marketing = 'Tenant'\n    AND funnel_marketing = 'Demand'\n)\n\nSELECT    \n    15 AS orden ,\n    'Paid Media Cost'::TEXT AS metric ,\n    geo_id , \n    '2022-06-13 11:01:47.183332-04:00' AS processed_time ,\n    executed_at ,\n    day_cost ,\n    day_clicks , \n    day_impressions ,\n    CASE WHEN executed_at =  dateadd(day,-1,'2022-06-13 11:01:47.183332-04:00'::date) THEN 1  ELSE 0 END AS yesterday ,\n    CASE WHEN executed_at =  dateadd(day,-2,'2022-06-13 11:01:47.183332-04:00'::date)  THEN 1  ELSE 0 END AS daybeforeyesterday ,\n    CASE WHEN date_trunc('week',executed_at)  =  dateadd(week,-1, date_trunc('week','2022-06-13 11:01:47.183332-04:00'::date) )  THEN 1  ELSE 0 END AS LastWeek ,\n    CASE WHEN date_trunc('week',executed_at)  =  dateadd(week,-2, date_trunc('week','2022-06-13 11:01:47.183332-04:00'::date) )  THEN 1  ELSE 0 END AS PastLastWeek ,\n    CASE WHEN \n                date_trunc('month',executed_at) =  date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) \n                 AND executed_at <=   dateadd(day,-1,'2022-06-13 11:01:47.183332-04:00'::date)  THEN 1  ELSE 0 END AS ThisMonthtoday ,\n    CASE WHEN \n                date_trunc('month',executed_at) =  dateadd(month,-1, date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) )  AND \n                executed_at <= dateadd(month,-1, '2022-06-13 11:01:47.183332-04:00'::date) \n            THEN 1  ELSE 0 END AS LastMonthtoday ,\n    CASE WHEN date_trunc('month',executed_at) =  dateadd(month,-1, date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) ) \n            THEN 1  ELSE 0 END AS LastMonth ,\n    CASE WHEN date_trunc('month',executed_at) =  dateadd(month,-2, date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) ) \n            THEN 1  ELSE 0 END AS LasttwoMonth ,\n    CASE WHEN date_trunc('month',executed_at) =  dateadd(month,-3, date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) ) \n            THEN 1  ELSE 0 END AS LastthreeMonth\nFROM paid_media_cost\nORDER BY executed_at DESC", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_facts\".\"rental_tenant_metric_details_paid_media_cost\""}, "model.houm.sales_buyer_metric_details_paid_media_cost": {"raw_sql": "{{ config(materialized='table') }}\n\nWITH paid_media_cost AS (\nSELECT *\nFROM  {{ ref('proc_marketing_paid_media') }} AS proc_marketing_paid_media \nWHERE TRUE\n    AND geo_id IS NOT NULL\n    AND business_marketing in ('Buyer New Properties','Buyer Second Hand')\n    AND funnel_marketing = 'Demand'\n)\n\nSELECT    \n    25 AS orden ,\n    'Paid Media Cost NP & SC'::TEXT AS metric ,\n    geo_id , \n    '{{ var(\"processed_time\") }}' AS processed_time ,\n    executed_at ,\n    day_cost ,\n    day_clicks , \n    day_impressions ,\n    CASE WHEN executed_at =  dateadd(day,-1,'{{ var(\"processed_time\") }}'::date) THEN 1  ELSE 0 END AS yesterday ,\n    CASE WHEN executed_at =  dateadd(day,-2,'{{ var(\"processed_time\") }}'::date)  THEN 1  ELSE 0 END AS daybeforeyesterday ,\n    CASE WHEN date_trunc('week',executed_at)  =  dateadd(week,-1, date_trunc('week','{{ var(\"processed_time\") }}'::date) )  THEN 1  ELSE 0 END AS LastWeek ,\n    CASE WHEN date_trunc('week',executed_at)  =  dateadd(week,-2, date_trunc('week','{{ var(\"processed_time\") }}'::date) )  THEN 1  ELSE 0 END AS PastLastWeek ,\n    CASE WHEN \n                date_trunc('month',executed_at) =  date_trunc('month','{{ var(\"processed_time\") }}'::date) \n                 AND executed_at <=   dateadd(day,-1,'{{ var(\"processed_time\") }}'::date)  THEN 1  ELSE 0 END AS ThisMonthtoday ,\n    CASE WHEN \n                date_trunc('month',executed_at) =  dateadd(month,-1, date_trunc('month','{{ var(\"processed_time\") }}'::date) )  AND \n                executed_at <= dateadd(month,-1, '{{ var(\"processed_time\") }}'::date) \n            THEN 1  ELSE 0 END AS LastMonthtoday ,\n    CASE WHEN date_trunc('month',executed_at) =  dateadd(month,-1, date_trunc('month','{{ var(\"processed_time\") }}'::date) ) \n            THEN 1  ELSE 0 END AS LastMonth ,\n    CASE WHEN date_trunc('month',executed_at) =  dateadd(month,-2, date_trunc('month','{{ var(\"processed_time\") }}'::date) ) \n            THEN 1  ELSE 0 END AS LasttwoMonth ,\n    CASE WHEN date_trunc('month',executed_at) =  dateadd(month,-3, date_trunc('month','{{ var(\"processed_time\") }}'::date) ) \n            THEN 1  ELSE 0 END AS LastthreeMonth\nFROM paid_media_cost\nORDER BY executed_at DESC", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_marketing_paid_media"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_facts", "database": null, "tags": ["dw", "facts", "demand"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_facts", "fqn": ["houm", "dwh", "facts", "demand", "sales_buyer_metric_details_paid_media_cost"], "unique_id": "model.houm.sales_buyer_metric_details_paid_media_cost", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "dwh/facts/demand/sales_buyer_metric_details_paid_media_cost.sql", "original_file_path": "models/dwh/facts/demand/sales_buyer_metric_details_paid_media_cost.sql", "name": "sales_buyer_metric_details_paid_media_cost", "alias": "sales_buyer_metric_details_paid_media_cost", "checksum": {"name": "sha256", "checksum": "0ffc7618d3a6e98f44a3f420dc8e487258f9f214175e30d7563e94908ecd4b3c"}, "tags": ["dw", "facts", "demand"], "refs": [["proc_marketing_paid_media"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/facts/demand/sales_buyer_metric_details_paid_media_cost.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_facts", "tags": ["dw", "facts", "demand"], "materialized": "table"}, "created_at": 1654784475.2457201, "compiled_sql": "\n\nWITH paid_media_cost AS (\nSELECT *\nFROM  \"houmdw_prod\".\"dbt_processing\".\"proc_marketing_paid_media\" AS proc_marketing_paid_media \nWHERE TRUE\n    AND geo_id IS NOT NULL\n    AND business_marketing in ('Buyer New Properties','Buyer Second Hand')\n    AND funnel_marketing = 'Demand'\n)\n\nSELECT    \n    25 AS orden ,\n    'Paid Media Cost NP & SC'::TEXT AS metric ,\n    geo_id , \n    '2022-06-13 11:01:47.183332-04:00' AS processed_time ,\n    executed_at ,\n    day_cost ,\n    day_clicks , \n    day_impressions ,\n    CASE WHEN executed_at =  dateadd(day,-1,'2022-06-13 11:01:47.183332-04:00'::date) THEN 1  ELSE 0 END AS yesterday ,\n    CASE WHEN executed_at =  dateadd(day,-2,'2022-06-13 11:01:47.183332-04:00'::date)  THEN 1  ELSE 0 END AS daybeforeyesterday ,\n    CASE WHEN date_trunc('week',executed_at)  =  dateadd(week,-1, date_trunc('week','2022-06-13 11:01:47.183332-04:00'::date) )  THEN 1  ELSE 0 END AS LastWeek ,\n    CASE WHEN date_trunc('week',executed_at)  =  dateadd(week,-2, date_trunc('week','2022-06-13 11:01:47.183332-04:00'::date) )  THEN 1  ELSE 0 END AS PastLastWeek ,\n    CASE WHEN \n                date_trunc('month',executed_at) =  date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) \n                 AND executed_at <=   dateadd(day,-1,'2022-06-13 11:01:47.183332-04:00'::date)  THEN 1  ELSE 0 END AS ThisMonthtoday ,\n    CASE WHEN \n                date_trunc('month',executed_at) =  dateadd(month,-1, date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) )  AND \n                executed_at <= dateadd(month,-1, '2022-06-13 11:01:47.183332-04:00'::date) \n            THEN 1  ELSE 0 END AS LastMonthtoday ,\n    CASE WHEN date_trunc('month',executed_at) =  dateadd(month,-1, date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) ) \n            THEN 1  ELSE 0 END AS LastMonth ,\n    CASE WHEN date_trunc('month',executed_at) =  dateadd(month,-2, date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) ) \n            THEN 1  ELSE 0 END AS LasttwoMonth ,\n    CASE WHEN date_trunc('month',executed_at) =  dateadd(month,-3, date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) ) \n            THEN 1  ELSE 0 END AS LastthreeMonth\nFROM paid_media_cost\nORDER BY executed_at DESC", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_facts\".\"sales_buyer_metric_details_paid_media_cost\""}, "model.houm.sales_buyer_metric_details_paid_media_cost_sales": {"raw_sql": "{{ config(materialized='table') }}\n\nWITH paid_media_cost AS (\nSELECT *\nFROM  {{ ref('proc_marketing_paid_media') }} AS proc_marketing_paid_media \nWHERE TRUE\n    AND geo_id IS NOT NULL\n    AND business_marketing = 'Buyer Second Hand'\n    AND funnel_marketing = 'Demand'\n)\n\nSELECT    \n    26 AS orden ,\n    'Paid Media Cost SC'::TEXT AS metric ,\n    geo_id , \n    '{{ var(\"processed_time\") }}' AS processed_time ,\n    executed_at ,\n    day_cost ,\n    day_clicks , \n    day_impressions ,\n    CASE WHEN executed_at =  dateadd(day,-1,'{{ var(\"processed_time\") }}'::date) THEN 1  ELSE 0 END AS yesterday ,\n    CASE WHEN executed_at =  dateadd(day,-2,'{{ var(\"processed_time\") }}'::date)  THEN 1  ELSE 0 END AS daybeforeyesterday ,\n    CASE WHEN date_trunc('week',executed_at)  =  dateadd(week,-1, date_trunc('week','{{ var(\"processed_time\") }}'::date) )  THEN 1  ELSE 0 END AS LastWeek ,\n    CASE WHEN date_trunc('week',executed_at)  =  dateadd(week,-2, date_trunc('week','{{ var(\"processed_time\") }}'::date) )  THEN 1  ELSE 0 END AS PastLastWeek ,\n    CASE WHEN \n                date_trunc('month',executed_at) =  date_trunc('month','{{ var(\"processed_time\") }}'::date) \n                 AND executed_at <=   dateadd(day,-1,'{{ var(\"processed_time\") }}'::date)  THEN 1  ELSE 0 END AS ThisMonthtoday ,\n    CASE WHEN \n                date_trunc('month',executed_at) =  dateadd(month,-1, date_trunc('month','{{ var(\"processed_time\") }}'::date) )  AND \n                executed_at <= dateadd(month,-1, '{{ var(\"processed_time\") }}'::date) \n            THEN 1  ELSE 0 END AS LastMonthtoday ,\n    CASE WHEN date_trunc('month',executed_at) =  dateadd(month,-1, date_trunc('month','{{ var(\"processed_time\") }}'::date) ) \n            THEN 1  ELSE 0 END AS LastMonth ,\n    CASE WHEN date_trunc('month',executed_at) =  dateadd(month,-2, date_trunc('month','{{ var(\"processed_time\") }}'::date) ) \n            THEN 1  ELSE 0 END AS LasttwoMonth ,\n    CASE WHEN date_trunc('month',executed_at) =  dateadd(month,-3, date_trunc('month','{{ var(\"processed_time\") }}'::date) ) \n            THEN 1  ELSE 0 END AS LastthreeMonth\nFROM paid_media_cost\nORDER BY executed_at DESC", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_marketing_paid_media"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_facts", "database": null, "tags": ["dw", "facts", "demand"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_facts", "fqn": ["houm", "dwh", "facts", "demand", "sales_buyer_metric_details_paid_media_cost_sales"], "unique_id": "model.houm.sales_buyer_metric_details_paid_media_cost_sales", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "dwh/facts/demand/sales_buyer_metric_details_paid_media_cost_sales.sql", "original_file_path": "models/dwh/facts/demand/sales_buyer_metric_details_paid_media_cost_sales.sql", "name": "sales_buyer_metric_details_paid_media_cost_sales", "alias": "sales_buyer_metric_details_paid_media_cost_sales", "checksum": {"name": "sha256", "checksum": "c324ab505a3e865a71f37c9b32bc2e0b0463401f0a802b246e4163125ed31d0b"}, "tags": ["dw", "facts", "demand"], "refs": [["proc_marketing_paid_media"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/facts/demand/sales_buyer_metric_details_paid_media_cost_sales.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_facts", "tags": ["dw", "facts", "demand"], "materialized": "table"}, "created_at": 1654784475.2598028, "compiled_sql": "\n\nWITH paid_media_cost AS (\nSELECT *\nFROM  \"houmdw_prod\".\"dbt_processing\".\"proc_marketing_paid_media\" AS proc_marketing_paid_media \nWHERE TRUE\n    AND geo_id IS NOT NULL\n    AND business_marketing = 'Buyer Second Hand'\n    AND funnel_marketing = 'Demand'\n)\n\nSELECT    \n    26 AS orden ,\n    'Paid Media Cost SC'::TEXT AS metric ,\n    geo_id , \n    '2022-06-13 11:01:47.183332-04:00' AS processed_time ,\n    executed_at ,\n    day_cost ,\n    day_clicks , \n    day_impressions ,\n    CASE WHEN executed_at =  dateadd(day,-1,'2022-06-13 11:01:47.183332-04:00'::date) THEN 1  ELSE 0 END AS yesterday ,\n    CASE WHEN executed_at =  dateadd(day,-2,'2022-06-13 11:01:47.183332-04:00'::date)  THEN 1  ELSE 0 END AS daybeforeyesterday ,\n    CASE WHEN date_trunc('week',executed_at)  =  dateadd(week,-1, date_trunc('week','2022-06-13 11:01:47.183332-04:00'::date) )  THEN 1  ELSE 0 END AS LastWeek ,\n    CASE WHEN date_trunc('week',executed_at)  =  dateadd(week,-2, date_trunc('week','2022-06-13 11:01:47.183332-04:00'::date) )  THEN 1  ELSE 0 END AS PastLastWeek ,\n    CASE WHEN \n                date_trunc('month',executed_at) =  date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) \n                 AND executed_at <=   dateadd(day,-1,'2022-06-13 11:01:47.183332-04:00'::date)  THEN 1  ELSE 0 END AS ThisMonthtoday ,\n    CASE WHEN \n                date_trunc('month',executed_at) =  dateadd(month,-1, date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) )  AND \n                executed_at <= dateadd(month,-1, '2022-06-13 11:01:47.183332-04:00'::date) \n            THEN 1  ELSE 0 END AS LastMonthtoday ,\n    CASE WHEN date_trunc('month',executed_at) =  dateadd(month,-1, date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) ) \n            THEN 1  ELSE 0 END AS LastMonth ,\n    CASE WHEN date_trunc('month',executed_at) =  dateadd(month,-2, date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) ) \n            THEN 1  ELSE 0 END AS LasttwoMonth ,\n    CASE WHEN date_trunc('month',executed_at) =  dateadd(month,-3, date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) ) \n            THEN 1  ELSE 0 END AS LastthreeMonth\nFROM paid_media_cost\nORDER BY executed_at DESC", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_facts\".\"sales_buyer_metric_details_paid_media_cost_sales\""}, "model.houm.sales_investor_metrics_details_leads": {"raw_sql": "{{ config(materialized='table') }}\n\nWITH  demand_buyer_leads_clean as (\nSELECT *\nFROM  {{ ref('proc_demand_buyer_leads') }}\nWHERE  TRUE \nAND ( (lost_reason NOT LIKE '%Test%'  AND lost_reason != 'Pruebas'  AND lost_reason != 'Cotizaci\u00f3n Duplicada') OR lost_reason IS  NULL )\nAND (supply_relation = 'New Properties')\n)\n\nSELECT \n    11 AS orden , \n    'Created Unique NP Buyer Leads'::TEXT AS metric , \n    geo_id , \n    '{{ var(\"processed_time\") }}' AS processed_time ,\n    add_time ,\n    qualification ,\n    fecha_calificacion ,\n    person_id ,\n    email , \n    deal_id ,\n    CASE WHEN add_time =  dateadd(day,-1,'{{ var(\"processed_time\") }}'::date) THEN 1 ELSE 0 END AS yesterday ,\n    CASE WHEN add_time =  dateadd(day,-2,'{{ var(\"processed_time\") }}'::date)  THEN 1 ELSE 0 END AS daybeforeyesterday ,\n    CASE WHEN date_trunc('week',add_time)  =  dateadd(week,-1, date_trunc('week','{{ var(\"processed_time\") }}'::date) ) THEN 1 ELSE 0 END AS LastWeek ,\n    CASE WHEN date_trunc('week',add_time)  =  dateadd(week,-2, date_trunc('week','{{ var(\"processed_time\") }}'::date) ) THEN 1 ELSE 0 END AS PastLastWeek ,\n    CASE WHEN \n                date_trunc('month',add_time) =  date_trunc('month','{{ var(\"processed_time\") }}'::date) \n                 AND add_time <=   dateadd(day,-1,'{{ var(\"processed_time\") }}'::date)  THEN 1  ELSE 0 END AS ThisMonthtoday , \n    CASE WHEN \n                date_trunc('month',add_time) =  dateadd(month,-1, date_trunc('month','{{ var(\"processed_time\") }}'::date) )  AND  \n                add_time <= dateadd(month,-1, '{{ var(\"processed_time\") }}'::date) \n            THEN 1 ELSE 0 END AS LastMonthtoday , \n    CASE WHEN date_trunc('month',add_time) =  dateadd(month,-1, date_trunc('month','{{ var(\"processed_time\") }}'::date) ) \n            THEN 1 ELSE 0 END AS LastMonth ,\n    CASE WHEN date_trunc('month',add_time) =  dateadd(month,-2, date_trunc('month','{{ var(\"processed_time\") }}'::date) ) \n            THEN 1 ELSE 0 END AS LasttwoMonth , \n    CASE WHEN date_trunc('month',add_time) =  dateadd(month,-3, date_trunc('month','{{ var(\"processed_time\") }}'::date) ) \n            THEN 1 ELSE 0 END AS LastthreeMonth\nFROM demand_buyer_leads_clean\nORDER BY add_time DESC \n--group by 1 , 2, 3", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_demand_buyer_leads"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_facts", "database": null, "tags": ["dw", "facts", "demand"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_facts", "fqn": ["houm", "dwh", "facts", "demand", "sales_investor_metrics_details_leads"], "unique_id": "model.houm.sales_investor_metrics_details_leads", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "dwh/facts/demand/sales_investor_metrics_details_leads.sql", "original_file_path": "models/dwh/facts/demand/sales_investor_metrics_details_leads.sql", "name": "sales_investor_metrics_details_leads", "alias": "sales_investor_metrics_details_leads", "checksum": {"name": "sha256", "checksum": "4c38753c9c9e12dedc56892297e9cce44405078f6004963052b84bf64d87ff88"}, "tags": ["dw", "facts", "demand"], "refs": [["proc_demand_buyer_leads"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/facts/demand/sales_investor_metrics_details_leads.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_facts", "tags": ["dw", "facts", "demand"], "materialized": "table"}, "created_at": 1654784475.2734709, "compiled_sql": "\n\nWITH  demand_buyer_leads_clean as (\nSELECT *\nFROM  \"houmdw_prod\".\"dbt_processing\".\"proc_demand_buyer_leads\"\nWHERE  TRUE \nAND ( (lost_reason NOT LIKE '%Test%'  AND lost_reason != 'Pruebas'  AND lost_reason != 'Cotizaci\u00f3n Duplicada') OR lost_reason IS  NULL )\nAND (supply_relation = 'New Properties')\n)\n\nSELECT \n    11 AS orden , \n    'Created Unique NP Buyer Leads'::TEXT AS metric , \n    geo_id , \n    '2022-06-13 11:01:47.183332-04:00' AS processed_time ,\n    add_time ,\n    qualification ,\n    fecha_calificacion ,\n    person_id ,\n    email , \n    deal_id ,\n    CASE WHEN add_time =  dateadd(day,-1,'2022-06-13 11:01:47.183332-04:00'::date) THEN 1 ELSE 0 END AS yesterday ,\n    CASE WHEN add_time =  dateadd(day,-2,'2022-06-13 11:01:47.183332-04:00'::date)  THEN 1 ELSE 0 END AS daybeforeyesterday ,\n    CASE WHEN date_trunc('week',add_time)  =  dateadd(week,-1, date_trunc('week','2022-06-13 11:01:47.183332-04:00'::date) ) THEN 1 ELSE 0 END AS LastWeek ,\n    CASE WHEN date_trunc('week',add_time)  =  dateadd(week,-2, date_trunc('week','2022-06-13 11:01:47.183332-04:00'::date) ) THEN 1 ELSE 0 END AS PastLastWeek ,\n    CASE WHEN \n                date_trunc('month',add_time) =  date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) \n                 AND add_time <=   dateadd(day,-1,'2022-06-13 11:01:47.183332-04:00'::date)  THEN 1  ELSE 0 END AS ThisMonthtoday , \n    CASE WHEN \n                date_trunc('month',add_time) =  dateadd(month,-1, date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) )  AND  \n                add_time <= dateadd(month,-1, '2022-06-13 11:01:47.183332-04:00'::date) \n            THEN 1 ELSE 0 END AS LastMonthtoday , \n    CASE WHEN date_trunc('month',add_time) =  dateadd(month,-1, date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) ) \n            THEN 1 ELSE 0 END AS LastMonth ,\n    CASE WHEN date_trunc('month',add_time) =  dateadd(month,-2, date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) ) \n            THEN 1 ELSE 0 END AS LasttwoMonth , \n    CASE WHEN date_trunc('month',add_time) =  dateadd(month,-3, date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) ) \n            THEN 1 ELSE 0 END AS LastthreeMonth\nFROM demand_buyer_leads_clean\nORDER BY add_time DESC \n--group by 1 , 2, 3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_facts\".\"sales_investor_metrics_details_leads\""}, "model.houm.sales_buyer_metric_details_schedules_done": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nWITH schedules_salesvisit_clean AS (\r\nSELECT *\r\nFROM {{ ref('proc_demand_schedules') }}\r\nwhere schedule_type_name = 'SalesVisit' \r\nAND status = 'Done'\r\nAND (( email NOT LIKE '%test.test'  AND email NOT LIKE '%test.com')  OR applicant_id IS NULL ) \r\nAND (supply_relation != 'New Properties')\r\n)\r\n\r\nSELECT \r\n    50 orden\r\n    , 'SalesVisit Done'::TEXT metric\r\n    , geo_id\r\n    , '{{ var(\"processed_time\") }}'  processed_time\r\n    , begin_date\r\n    , schedule_id\r\n    , CASE WHEN begin_date =  dateadd(day,-1,'{{ var(\"processed_time\") }}'::date) THEN 1  ELSE 0 END yesterday\r\n    , CASE WHEN begin_date =  dateadd(day,-2,'{{ var(\"processed_time\") }}'::date)  THEN 1  ELSE 0 END daybeforeyesterday\r\n    , CASE WHEN date_trunc('week',begin_date)  =  dateadd(week,-1, date_trunc('week','{{ var(\"processed_time\") }}'::date) )  THEN 1  ELSE 0 END LastWeek\r\n    , CASE WHEN date_trunc('week',begin_date)  =  dateadd(week,-2, date_trunc('week','{{ var(\"processed_time\") }}'::date) )  THEN 1  ELSE 0 END PastLastWeek\r\n    , CASE WHEN \r\n                date_trunc('month',begin_date) =  date_trunc('month','{{ var(\"processed_time\") }}'::date) \r\n                 AND begin_date <=   dateadd(day,-1,'{{ var(\"processed_time\") }}'::date)  THEN 1  ELSE 0 END ThisMonthtoday\r\n    , CASE WHEN \r\n                date_trunc('month',begin_date) =  dateadd(month,-1, date_trunc('month','{{ var(\"processed_time\") }}'::date) )  AND  \r\n                begin_date <= dateadd(month,-1, '{{ var(\"processed_time\") }}'::date) \r\n            THEN 1  ELSE 0 END LastMonthtoday\r\n    , CASE WHEN date_trunc('month',begin_date) =  dateadd(month,-1, date_trunc('month','{{ var(\"processed_time\") }}'::date) ) \r\n            THEN 1  ELSE 0 END LastMonth\r\n    , CASE WHEN date_trunc('month',begin_date) =  dateadd(month,-2, date_trunc('month','{{ var(\"processed_time\") }}'::date) ) \r\n            THEN 1  ELSE 0 END LasttwoMonth\r\n    , CASE WHEN date_trunc('month',begin_date) =  dateadd(month,-3, date_trunc('month','{{ var(\"processed_time\") }}'::date) ) \r\n            THEN 1  ELSE 0 END LastthreeMonth\r\nFROM schedules_salesvisit_clean\r\nORDER BY begin_date desc\r\n--group by 1,2 , 3", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_demand_schedules"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_facts", "database": null, "tags": ["dw", "facts", "demand"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_facts", "fqn": ["houm", "dwh", "facts", "demand", "sales_buyer_metric_details_schedules_done"], "unique_id": "model.houm.sales_buyer_metric_details_schedules_done", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "dwh/facts/demand/sales_buyer_metric_details_schedules_done.sql", "original_file_path": "models/dwh/facts/demand/sales_buyer_metric_details_schedules_done.sql", "name": "sales_buyer_metric_details_schedules_done", "alias": "sales_buyer_metric_details_schedules_done", "checksum": {"name": "sha256", "checksum": "5c04e184d09d549177e1f33781d27153908534138d011b675578289e721e9242"}, "tags": ["dw", "facts", "demand"], "refs": [["proc_demand_schedules"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/facts/demand/sales_buyer_metric_details_schedules_done.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_facts", "tags": ["dw", "facts", "demand"], "materialized": "table"}, "created_at": 1654784475.2873511, "compiled_sql": "\n\nWITH schedules_salesvisit_clean AS (\nSELECT *\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_demand_schedules\"\nwhere schedule_type_name = 'SalesVisit' \nAND status = 'Done'\nAND (( email NOT LIKE '%test.test'  AND email NOT LIKE '%test.com')  OR applicant_id IS NULL ) \nAND (supply_relation != 'New Properties')\n)\n\nSELECT \n    50 orden\n    , 'SalesVisit Done'::TEXT metric\n    , geo_id\n    , '2022-06-13 11:01:47.183332-04:00'  processed_time\n    , begin_date\n    , schedule_id\n    , CASE WHEN begin_date =  dateadd(day,-1,'2022-06-13 11:01:47.183332-04:00'::date) THEN 1  ELSE 0 END yesterday\n    , CASE WHEN begin_date =  dateadd(day,-2,'2022-06-13 11:01:47.183332-04:00'::date)  THEN 1  ELSE 0 END daybeforeyesterday\n    , CASE WHEN date_trunc('week',begin_date)  =  dateadd(week,-1, date_trunc('week','2022-06-13 11:01:47.183332-04:00'::date) )  THEN 1  ELSE 0 END LastWeek\n    , CASE WHEN date_trunc('week',begin_date)  =  dateadd(week,-2, date_trunc('week','2022-06-13 11:01:47.183332-04:00'::date) )  THEN 1  ELSE 0 END PastLastWeek\n    , CASE WHEN \n                date_trunc('month',begin_date) =  date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) \n                 AND begin_date <=   dateadd(day,-1,'2022-06-13 11:01:47.183332-04:00'::date)  THEN 1  ELSE 0 END ThisMonthtoday\n    , CASE WHEN \n                date_trunc('month',begin_date) =  dateadd(month,-1, date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) )  AND  \n                begin_date <= dateadd(month,-1, '2022-06-13 11:01:47.183332-04:00'::date) \n            THEN 1  ELSE 0 END LastMonthtoday\n    , CASE WHEN date_trunc('month',begin_date) =  dateadd(month,-1, date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) ) \n            THEN 1  ELSE 0 END LastMonth\n    , CASE WHEN date_trunc('month',begin_date) =  dateadd(month,-2, date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) ) \n            THEN 1  ELSE 0 END LasttwoMonth\n    , CASE WHEN date_trunc('month',begin_date) =  dateadd(month,-3, date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) ) \n            THEN 1  ELSE 0 END LastthreeMonth\nFROM schedules_salesvisit_clean\nORDER BY begin_date desc\n--group by 1,2 , 3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_facts\".\"sales_buyer_metric_details_schedules_done\""}, "model.houm.sales_investor_metrics_details_leads_sales_qualified_date": {"raw_sql": "{{ config(materialized='table') }}\n\nWITH  demand_buyer_leads_clean AS (\nSELECT *\nFROM  {{ ref('proc_demand_buyer_leads') }}\nWHERE  TRUE \nAND ( (lost_reason NOT LIKE '%Test%'  AND lost_reason != 'Pruebas'  AND lost_reason != 'Cotizaci\u00f3n Duplicada') OR lost_reason IS NULL )\nAND (supply_relation != 'New Properties')\n)\n\nSELECT\n    21::INT AS orden ,\n     'Unique NP Buyer Hot Qualified Leads'::TEXT AS metric ,\n     geo_id ,\n     '{{ var(\"processed_time\") }}' AS processed_time ,\n     add_time ,\n     qualification ,\n     fecha_calificacion ,\n     person_id ,\n     email ,\n     deal_id ,\n     CASE WHEN fecha_calificacion =  dateadd(day,-1,'{{ var(\"processed_time\") }}'::date) THEN 1 ELSE 0 END AS yesterday ,\n     CASE WHEN fecha_calificacion =  dateadd(day,-2,'{{ var(\"processed_time\") }}'::date)  THEN 1 ELSE 0 END AS daybeforeyesterday ,\n     CASE WHEN date_trunc('week',fecha_calificacion)  =  dateadd(week,-1, date_trunc('week','{{ var(\"processed_time\") }}'::date) )  THEN 1 ELSE 0 END AS LastWeek ,\n     CASE WHEN date_trunc('week',fecha_calificacion)  =  dateadd(week,-2, date_trunc('week','{{ var(\"processed_time\") }}'::date) )  THEN 1 ELSE 0 END AS PastLastWeek ,\n     CASE WHEN \n                date_trunc('month',fecha_calificacion) =  date_trunc('month','{{ var(\"processed_time\") }}'::date) \n                 AND fecha_calificacion <=   dateadd(day,-1,'{{ var(\"processed_time\") }}'::date)  THEN 1 ELSE 0 END AS ThisMonthtoday ,\n     CASE WHEN \n                date_trunc('month',fecha_calificacion) =  dateadd(month,-1, date_trunc('month','{{ var(\"processed_time\") }}'::date) ) AND  \n                fecha_calificacion <= dateadd(month,-1, '{{ var(\"processed_time\") }}'::date) \n            THEN 1 ELSE 0 END AS LastMonthtoday ,\n     CASE WHEN date_trunc('month',fecha_calificacion) =  dateadd(month,-1, date_trunc('month','{{ var(\"processed_time\") }}'::date) ) \n            THEN 1 ELSE 0 END AS LastMonth ,\n     CASE WHEN date_trunc('month',fecha_calificacion) =  dateadd(month,-2, date_trunc('month','{{ var(\"processed_time\") }}'::date) ) \n            THEN 1 ELSE 0 END AS LasttwoMonth ,\n     CASE WHEN date_trunc('month',fecha_calificacion) =  dateadd(month,-3, date_trunc('month','{{ var(\"processed_time\") }}'::date) ) \n            THEN 1  ELSE 0 END AS LastthreeMonth\nFROM demand_buyer_leads_clean\nWHERE TRUE \n        AND qualification >= 3  AND qualification <= 5\n        AND fecha_calificacion IS NOT NULL\nORDER BY fecha_calificacion DESC \n--group by 1 , 2, 3", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_demand_buyer_leads"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_facts", "database": null, "tags": ["dw", "facts", "demand"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_facts", "fqn": ["houm", "dwh", "facts", "demand", "sales_investor_metrics_details_leads_sales_qualified_date"], "unique_id": "model.houm.sales_investor_metrics_details_leads_sales_qualified_date", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "dwh/facts/demand/sales_investor_metrics_details_leads_sales_qualified_date.sql", "original_file_path": "models/dwh/facts/demand/sales_investor_metrics_details_leads_sales_qualified_date.sql", "name": "sales_investor_metrics_details_leads_sales_qualified_date", "alias": "sales_investor_metrics_details_leads_sales_qualified_date", "checksum": {"name": "sha256", "checksum": "f0a8119f1e55b37324070ade8796e64b86ebdb2dd2e96c8fe175e550b968214e"}, "tags": ["dw", "facts", "demand"], "refs": [["proc_demand_buyer_leads"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/facts/demand/sales_investor_metrics_details_leads_sales_qualified_date.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_facts", "tags": ["dw", "facts", "demand"], "materialized": "table"}, "created_at": 1654784475.3017442, "compiled_sql": "\n\nWITH  demand_buyer_leads_clean AS (\nSELECT *\nFROM  \"houmdw_prod\".\"dbt_processing\".\"proc_demand_buyer_leads\"\nWHERE  TRUE \nAND ( (lost_reason NOT LIKE '%Test%'  AND lost_reason != 'Pruebas'  AND lost_reason != 'Cotizaci\u00f3n Duplicada') OR lost_reason IS NULL )\nAND (supply_relation != 'New Properties')\n)\n\nSELECT\n    21::INT AS orden ,\n     'Unique NP Buyer Hot Qualified Leads'::TEXT AS metric ,\n     geo_id ,\n     '2022-06-13 11:01:47.183332-04:00' AS processed_time ,\n     add_time ,\n     qualification ,\n     fecha_calificacion ,\n     person_id ,\n     email ,\n     deal_id ,\n     CASE WHEN fecha_calificacion =  dateadd(day,-1,'2022-06-13 11:01:47.183332-04:00'::date) THEN 1 ELSE 0 END AS yesterday ,\n     CASE WHEN fecha_calificacion =  dateadd(day,-2,'2022-06-13 11:01:47.183332-04:00'::date)  THEN 1 ELSE 0 END AS daybeforeyesterday ,\n     CASE WHEN date_trunc('week',fecha_calificacion)  =  dateadd(week,-1, date_trunc('week','2022-06-13 11:01:47.183332-04:00'::date) )  THEN 1 ELSE 0 END AS LastWeek ,\n     CASE WHEN date_trunc('week',fecha_calificacion)  =  dateadd(week,-2, date_trunc('week','2022-06-13 11:01:47.183332-04:00'::date) )  THEN 1 ELSE 0 END AS PastLastWeek ,\n     CASE WHEN \n                date_trunc('month',fecha_calificacion) =  date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) \n                 AND fecha_calificacion <=   dateadd(day,-1,'2022-06-13 11:01:47.183332-04:00'::date)  THEN 1 ELSE 0 END AS ThisMonthtoday ,\n     CASE WHEN \n                date_trunc('month',fecha_calificacion) =  dateadd(month,-1, date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) ) AND  \n                fecha_calificacion <= dateadd(month,-1, '2022-06-13 11:01:47.183332-04:00'::date) \n            THEN 1 ELSE 0 END AS LastMonthtoday ,\n     CASE WHEN date_trunc('month',fecha_calificacion) =  dateadd(month,-1, date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) ) \n            THEN 1 ELSE 0 END AS LastMonth ,\n     CASE WHEN date_trunc('month',fecha_calificacion) =  dateadd(month,-2, date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) ) \n            THEN 1 ELSE 0 END AS LasttwoMonth ,\n     CASE WHEN date_trunc('month',fecha_calificacion) =  dateadd(month,-3, date_trunc('month','2022-06-13 11:01:47.183332-04:00'::date) ) \n            THEN 1  ELSE 0 END AS LastthreeMonth\nFROM demand_buyer_leads_clean\nWHERE TRUE \n        AND qualification >= 3  AND qualification <= 5\n        AND fecha_calificacion IS NOT NULL\nORDER BY fecha_calificacion DESC \n--group by 1 , 2, 3", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_facts\".\"sales_investor_metrics_details_leads_sales_qualified_date\""}, "model.houm.stg_survicate_nps_tenant_satisfaction_24hrs": {"raw_sql": "SELECT \n    * \nFROM {{ source('survicate', 'nps_tenant_satisfaction_24hrs') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.survicate.nps_tenant_satisfaction_24hrs"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "survicate"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "survicate", "stg_survicate_nps_tenant_satisfaction_24hrs"], "unique_id": "model.houm.stg_survicate_nps_tenant_satisfaction_24hrs", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "staging/survicate/stg_survicate_nps_tenant_satisfaction_24hrs.sql", "original_file_path": "models/staging/survicate/stg_survicate_nps_tenant_satisfaction_24hrs.sql", "name": "stg_survicate_nps_tenant_satisfaction_24hrs", "alias": "stg_survicate_nps_tenant_satisfaction_24hrs", "checksum": {"name": "sha256", "checksum": "12509b13cd0be64a770b86024cfa346d0bba4d9dfa32f6c3cd60b04b9e1a5c4f"}, "tags": ["dw", "staging", "survicate"], "refs": [], "sources": [["survicate", "nps_tenant_satisfaction_24hrs"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/survicate/stg_survicate_nps_tenant_satisfaction_24hrs.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "survicate"]}, "created_at": 1654784475.315354, "compiled_sql": "SELECT \n    * \nFROM \"houmdw_prod\".\"survicate\".\"nps_tenant_satisfaction_24hrs\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_survicate_nps_tenant_satisfaction_24hrs\""}, "model.houm.stg_survicate_nps_landlord_satisfaction_6months_cl": {"raw_sql": "SELECT \n    * \nFROM {{ source('survicate', 'nps_landlord_satisfaction_6months_cl') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.survicate.nps_landlord_satisfaction_6months_cl"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "survicate"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "survicate", "stg_survicate_nps_landlord_satisfaction_6months_cl"], "unique_id": "model.houm.stg_survicate_nps_landlord_satisfaction_6months_cl", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "staging/survicate/stg_survicate_nps_landlord_satisfaction_6months_cl.sql", "original_file_path": "models/staging/survicate/stg_survicate_nps_landlord_satisfaction_6months_cl.sql", "name": "stg_survicate_nps_landlord_satisfaction_6months_cl", "alias": "stg_survicate_nps_landlord_satisfaction_6months_cl", "checksum": {"name": "sha256", "checksum": "7c42df9f6c10e766738c7bd482490d62e981e5381e9e2d85ebf45b7ef44ac117"}, "tags": ["dw", "staging", "survicate"], "refs": [], "sources": [["survicate", "nps_landlord_satisfaction_6months_cl"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/survicate/stg_survicate_nps_landlord_satisfaction_6months_cl.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "survicate"]}, "created_at": 1654784475.31702, "compiled_sql": "SELECT \n    * \nFROM \"houmdw_prod\".\"survicate\".\"nps_landlord_satisfaction_6months_cl\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_survicate_nps_landlord_satisfaction_6months_cl\""}, "model.houm.stg_survicate_nps_visit_done": {"raw_sql": "SELECT \n    * \nFROM {{ source('survicate', 'nps_visit_done') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.survicate.nps_visit_done"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "survicate"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "survicate", "stg_survicate_nps_visit_done"], "unique_id": "model.houm.stg_survicate_nps_visit_done", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "staging/survicate/stg_survicate_nps_visit_done.sql", "original_file_path": "models/staging/survicate/stg_survicate_nps_visit_done.sql", "name": "stg_survicate_nps_visit_done", "alias": "stg_survicate_nps_visit_done", "checksum": {"name": "sha256", "checksum": "447f548c14d5c1d6830dc152d26ce1bf3c5b48eb7d9f8d7764b7f07ca18f4bd4"}, "tags": ["dw", "staging", "survicate"], "refs": [], "sources": [["survicate", "nps_visit_done"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/survicate/stg_survicate_nps_visit_done.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "survicate"]}, "created_at": 1654784475.318829, "compiled_sql": "SELECT \n    * \nFROM \"houmdw_prod\".\"survicate\".\"nps_visit_done\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_survicate_nps_visit_done\""}, "model.houm.stg_survicate_nps_landlord_listing": {"raw_sql": "SELECT \n    * \nFROM {{ source('survicate', 'nps_landlord_listing') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.survicate.nps_landlord_listing"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "survicate"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "survicate", "stg_survicate_nps_landlord_listing"], "unique_id": "model.houm.stg_survicate_nps_landlord_listing", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "staging/survicate/stg_survicate_nps_landlord_listing.sql", "original_file_path": "models/staging/survicate/stg_survicate_nps_landlord_listing.sql", "name": "stg_survicate_nps_landlord_listing", "alias": "stg_survicate_nps_landlord_listing", "checksum": {"name": "sha256", "checksum": "b528f80e4cd31465438ee05a9b7a27c25851b9b83d9b86b7ffac33d64e734320"}, "tags": ["dw", "staging", "survicate"], "refs": [], "sources": [["survicate", "nps_landlord_listing"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/survicate/stg_survicate_nps_landlord_listing.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "survicate"]}, "created_at": 1654784475.320431, "compiled_sql": "SELECT \n    * \nFROM \"houmdw_prod\".\"survicate\".\"nps_landlord_listing\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_survicate_nps_landlord_listing\""}, "model.houm.stg_survicate_nps_landlord_new_sub": {"raw_sql": "SELECT \n    * \nFROM {{ source('survicate', 'nps_landlord_new_sub') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.survicate.nps_landlord_new_sub"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "survicate"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "survicate", "stg_survicate_nps_landlord_new_sub"], "unique_id": "model.houm.stg_survicate_nps_landlord_new_sub", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "staging/survicate/stg_survicate_nps_landlord_new_sub.sql", "original_file_path": "models/staging/survicate/stg_survicate_nps_landlord_new_sub.sql", "name": "stg_survicate_nps_landlord_new_sub", "alias": "stg_survicate_nps_landlord_new_sub", "checksum": {"name": "sha256", "checksum": "59ac285567d49bef771502bca4fc6ffac0ef45d0c87b256bc8c0c01e0b9b4083"}, "tags": ["dw", "staging", "survicate"], "refs": [], "sources": [["survicate", "nps_landlord_new_sub"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/survicate/stg_survicate_nps_landlord_new_sub.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "survicate"]}, "created_at": 1654784475.321971, "compiled_sql": "SELECT \n    * \nFROM \"houmdw_prod\".\"survicate\".\"nps_landlord_new_sub\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_survicate_nps_landlord_new_sub\""}, "model.houm.stg_survicate_nps_photo_done": {"raw_sql": "SELECT \n    * \nFROM {{ source('survicate', 'photo_done') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.survicate.photo_done"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "survicate"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "survicate", "stg_survicate_nps_photo_done"], "unique_id": "model.houm.stg_survicate_nps_photo_done", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "staging/survicate/stg_survicate_nps_photo_done.sql", "original_file_path": "models/staging/survicate/stg_survicate_nps_photo_done.sql", "name": "stg_survicate_nps_photo_done", "alias": "stg_survicate_nps_photo_done", "checksum": {"name": "sha256", "checksum": "b2d442157a0b5aeb36359c885a0fdf1c825d1125bfd25ed1a4bc6d6f928af521"}, "tags": ["dw", "staging", "survicate"], "refs": [], "sources": [["survicate", "photo_done"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/survicate/stg_survicate_nps_photo_done.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "survicate"]}, "created_at": 1654784475.3235168, "compiled_sql": "SELECT \n    * \nFROM \"houmdw_prod\".\"survicate\".\"photo_done\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_survicate_nps_photo_done\""}, "model.houm.stg_survicate_nps_tenant_new_sub": {"raw_sql": "SELECT \n    * \nFROM {{ source('survicate', 'nps_tennant_new_sub') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.survicate.nps_tennant_new_sub"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "survicate"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "survicate", "stg_survicate_nps_tenant_new_sub"], "unique_id": "model.houm.stg_survicate_nps_tenant_new_sub", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "staging/survicate/stg_survicate_nps_tenant_new_sub.sql", "original_file_path": "models/staging/survicate/stg_survicate_nps_tenant_new_sub.sql", "name": "stg_survicate_nps_tenant_new_sub", "alias": "stg_survicate_nps_tenant_new_sub", "checksum": {"name": "sha256", "checksum": "f58dafcc00ae37da28378affbc4e235e82d0e1680a00c91be2288b5cb0d133ff"}, "tags": ["dw", "staging", "survicate"], "refs": [], "sources": [["survicate", "nps_tennant_new_sub"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/survicate/stg_survicate_nps_tenant_new_sub.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "survicate"]}, "created_at": 1654784475.32526, "compiled_sql": "SELECT \n    * \nFROM \"houmdw_prod\".\"survicate\".\"nps_tennant_new_sub\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_survicate_nps_tenant_new_sub\""}, "model.houm.stg_whatsapp_nps_chile_visit_sales": {"raw_sql": "SELECT \n    * \nFROM {{ source('airbyte_gspread', 'nps_chile_sales') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.airbyte_gspread.nps_chile_sales"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "gspread", "nps"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "nps_whatsapp", "stg_whatsapp_nps_chile_visit_sales"], "unique_id": "model.houm.stg_whatsapp_nps_chile_visit_sales", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "staging/nps_whatsapp/stg_whatsapp_nps_chile_visit_sales.sql", "original_file_path": "models/staging/nps_whatsapp/stg_whatsapp_nps_chile_visit_sales.sql", "name": "stg_whatsapp_nps_chile_visit_sales", "alias": "stg_whatsapp_nps_chile_visit_sales", "checksum": {"name": "sha256", "checksum": "9dd9b1538d8285b4f28db47bf13f09708ed43df43df15d11f3a361d8ff277852"}, "tags": ["dw", "staging", "gspread", "nps"], "refs": [], "sources": [["airbyte_gspread", "nps_chile_sales"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/nps_whatsapp/stg_whatsapp_nps_chile_visit_sales.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "gspread", "nps"]}, "created_at": 1654784475.326808, "compiled_sql": "SELECT \n    * \nFROM \"houmdw_prod\".\"airbyte_gspread\".\"nps_chile_sales\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_whatsapp_nps_chile_visit_sales\""}, "model.houm.stg_whatsapp_nps_tenant_pc_cl": {"raw_sql": "SELECT \n    * \nFROM {{ source('airbyte_gspread', 'nps_rentas_tenant_pc_cl') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.airbyte_gspread.nps_rentas_tenant_pc_cl"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "gspread", "nps"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "nps_whatsapp", "stg_whatsapp_nps_tenant_pc_cl"], "unique_id": "model.houm.stg_whatsapp_nps_tenant_pc_cl", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "staging/nps_whatsapp/stg_whatsapp_nps_tenant_pc_cl.sql", "original_file_path": "models/staging/nps_whatsapp/stg_whatsapp_nps_tenant_pc_cl.sql", "name": "stg_whatsapp_nps_tenant_pc_cl", "alias": "stg_whatsapp_nps_tenant_pc_cl", "checksum": {"name": "sha256", "checksum": "5fcb756f5c416a3fb73b7c7b68a9af243e01861e16fe67fae4d7420f47b43650"}, "tags": ["dw", "staging", "gspread", "nps"], "refs": [], "sources": [["airbyte_gspread", "nps_rentas_tenant_pc_cl"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/nps_whatsapp/stg_whatsapp_nps_tenant_pc_cl.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "gspread", "nps"]}, "created_at": 1654784475.3284092, "compiled_sql": "SELECT \n    * \nFROM \"houmdw_prod\".\"airbyte_gspread\".\"nps_rentas_tenant_pc_cl\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_whatsapp_nps_tenant_pc_cl\""}, "model.houm.stg_whatsapp_nps_tenant_pc_co": {"raw_sql": "SELECT \n    * \nFROM {{ source('airbyte_gspread', 'nps_rentas_tenant_pc_co') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.airbyte_gspread.nps_rentas_tenant_pc_co"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "gspread", "nps"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "nps_whatsapp", "stg_whatsapp_nps_tenant_pc_co"], "unique_id": "model.houm.stg_whatsapp_nps_tenant_pc_co", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "staging/nps_whatsapp/stg_whatsapp_nps_tenant_pc_co.sql", "original_file_path": "models/staging/nps_whatsapp/stg_whatsapp_nps_tenant_pc_co.sql", "name": "stg_whatsapp_nps_tenant_pc_co", "alias": "stg_whatsapp_nps_tenant_pc_co", "checksum": {"name": "sha256", "checksum": "b37399fa96e7a57680094502d468f6ad4e7aff3bdec304b4c30ac6d583936939"}, "tags": ["dw", "staging", "gspread", "nps"], "refs": [], "sources": [["airbyte_gspread", "nps_rentas_tenant_pc_co"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/nps_whatsapp/stg_whatsapp_nps_tenant_pc_co.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "gspread", "nps"]}, "created_at": 1654784475.329998, "compiled_sql": "SELECT \n    * \nFROM \"houmdw_prod\".\"airbyte_gspread\".\"nps_rentas_tenant_pc_co\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_whatsapp_nps_tenant_pc_co\""}, "model.houm.stg_whatsapp_nps_sales_post_venta_selller": {"raw_sql": "SELECT \n    * \nFROM {{ source('airbyte_gspread', 'nps_sales_post_venta_seller') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.airbyte_gspread.nps_sales_post_venta_seller"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "gspread", "nps"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "nps_whatsapp", "stg_whatsapp_nps_sales_post_venta_selller"], "unique_id": "model.houm.stg_whatsapp_nps_sales_post_venta_selller", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "staging/nps_whatsapp/stg_whatsapp_nps_sales_post_venta_selller.sql", "original_file_path": "models/staging/nps_whatsapp/stg_whatsapp_nps_sales_post_venta_selller.sql", "name": "stg_whatsapp_nps_sales_post_venta_selller", "alias": "stg_whatsapp_nps_sales_post_venta_selller", "checksum": {"name": "sha256", "checksum": "15a24170b006558edca6d6569b85293ac4368e272a78d3d5e353baecca5605e2"}, "tags": ["dw", "staging", "gspread", "nps"], "refs": [], "sources": [["airbyte_gspread", "nps_sales_post_venta_seller"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/nps_whatsapp/stg_whatsapp_nps_sales_post_venta_selller.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "gspread", "nps"]}, "created_at": 1654784475.331733, "compiled_sql": "SELECT \n    * \nFROM \"houmdw_prod\".\"airbyte_gspread\".\"nps_sales_post_venta_seller\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_whatsapp_nps_sales_post_venta_selller\""}, "model.houm.stg_whatsapp_nps_cancel_visit": {"raw_sql": "SELECT \n    * \nFROM {{ source('airbyte_gspread', 'nps_cancel_visit') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.airbyte_gspread.nps_cancel_visit"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "gspread", "nps"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "nps_whatsapp", "stg_whatsapp_nps_cancel_visit"], "unique_id": "model.houm.stg_whatsapp_nps_cancel_visit", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "staging/nps_whatsapp/stg_whatsapp_nps_cancel_visit.sql", "original_file_path": "models/staging/nps_whatsapp/stg_whatsapp_nps_cancel_visit.sql", "name": "stg_whatsapp_nps_cancel_visit", "alias": "stg_whatsapp_nps_cancel_visit", "checksum": {"name": "sha256", "checksum": "25b275cd3be5e0566e25432bff3f831c606f34534a2fbd97cb513f809f22455c"}, "tags": ["dw", "staging", "gspread", "nps"], "refs": [], "sources": [["airbyte_gspread", "nps_cancel_visit"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/nps_whatsapp/stg_whatsapp_nps_cancel_visit.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "gspread", "nps"]}, "created_at": 1654784475.333295, "compiled_sql": "SELECT \n    * \nFROM \"houmdw_prod\".\"airbyte_gspread\".\"nps_cancel_visit\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_whatsapp_nps_cancel_visit\""}, "model.houm.stg_whatsapp_nps_mexico_visit_renta": {"raw_sql": "SELECT \n    * \nFROM {{ source('airbyte_gspread', 'nps_mexico_renta') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.airbyte_gspread.nps_mexico_renta"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "gspread", "nps"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "nps_whatsapp", "stg_whatsapp_nps_mexico_visit_renta"], "unique_id": "model.houm.stg_whatsapp_nps_mexico_visit_renta", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "staging/nps_whatsapp/stg_whatsapp_nps_mexico_visit_renta.sql", "original_file_path": "models/staging/nps_whatsapp/stg_whatsapp_nps_mexico_visit_renta.sql", "name": "stg_whatsapp_nps_mexico_visit_renta", "alias": "stg_whatsapp_nps_mexico_visit_renta", "checksum": {"name": "sha256", "checksum": "5f6dff5dd4ce5184982eeb251fd25c726a61c889519c9ec9017238d2735affc9"}, "tags": ["dw", "staging", "gspread", "nps"], "refs": [], "sources": [["airbyte_gspread", "nps_mexico_renta"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/nps_whatsapp/stg_whatsapp_nps_mexico_visit_renta.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "gspread", "nps"]}, "created_at": 1654784475.334822, "compiled_sql": "SELECT \n    * \nFROM \"houmdw_prod\".\"airbyte_gspread\".\"nps_mexico_renta\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_whatsapp_nps_mexico_visit_renta\""}, "model.houm.stg_whatsapp_nps_automatic_tenant_24_hrs": {"raw_sql": "SELECT \n    * \nFROM {{ source('airbyte_gspread', 'nps_automatic_tenant_24_hrs') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.airbyte_gspread.nps_automatic_tenant_24_hrs"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "gspread", "nps"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "nps_whatsapp", "stg_whatsapp_nps_automatic_tenant_24_hrs"], "unique_id": "model.houm.stg_whatsapp_nps_automatic_tenant_24_hrs", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "staging/nps_whatsapp/stg_whatsapp_nps_automatic_tenant_24_hrs.sql", "original_file_path": "models/staging/nps_whatsapp/stg_whatsapp_nps_automatic_tenant_24_hrs.sql", "name": "stg_whatsapp_nps_automatic_tenant_24_hrs", "alias": "stg_whatsapp_nps_automatic_tenant_24_hrs", "checksum": {"name": "sha256", "checksum": "863785dd10c4814f0f842c16002e60c4267f3ff52921b19d8b8d367587d2a814"}, "tags": ["dw", "staging", "gspread", "nps"], "refs": [], "sources": [["airbyte_gspread", "nps_automatic_tenant_24_hrs"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/nps_whatsapp/stg_whatsapp_nps_automatic_tenant_24_hrs.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "gspread", "nps"]}, "created_at": 1654784475.3363578, "compiled_sql": "SELECT \n    * \nFROM \"houmdw_prod\".\"airbyte_gspread\".\"nps_automatic_tenant_24_hrs\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_whatsapp_nps_automatic_tenant_24_hrs\""}, "model.houm.stg_whatsapp_nps_colombia_visit_sales": {"raw_sql": "SELECT \n    * \nFROM {{ source('airbyte_gspread', 'nps_colombia_sales') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.airbyte_gspread.nps_colombia_sales"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "gspread", "nps"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "nps_whatsapp", "stg_whatsapp_nps_colombia_visit_sales"], "unique_id": "model.houm.stg_whatsapp_nps_colombia_visit_sales", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "staging/nps_whatsapp/stg_whatsapp_nps_colombia_visit_sales.sql", "original_file_path": "models/staging/nps_whatsapp/stg_whatsapp_nps_colombia_visit_sales.sql", "name": "stg_whatsapp_nps_colombia_visit_sales", "alias": "stg_whatsapp_nps_colombia_visit_sales", "checksum": {"name": "sha256", "checksum": "a0a875fea6aeaa7c30b9b6783964dba995a558e454629d6deae1d3df6597a0fd"}, "tags": ["dw", "staging", "gspread", "nps"], "refs": [], "sources": [["airbyte_gspread", "nps_colombia_sales"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/nps_whatsapp/stg_whatsapp_nps_colombia_visit_sales.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "gspread", "nps"]}, "created_at": 1654784475.3381052, "compiled_sql": "SELECT \n    * \nFROM \"houmdw_prod\".\"airbyte_gspread\".\"nps_colombia_sales\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_whatsapp_nps_colombia_visit_sales\""}, "model.houm.stg_whatsapp_nps_sales_promesa_buyer": {"raw_sql": "SELECT \n    * \nFROM {{ source('airbyte_gspread', 'nps_sales_promesa_buyer') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.airbyte_gspread.nps_sales_promesa_buyer"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "gspread", "nps"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "nps_whatsapp", "stg_whatsapp_nps_sales_promesa_buyer"], "unique_id": "model.houm.stg_whatsapp_nps_sales_promesa_buyer", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "staging/nps_whatsapp/stg_whatsapp_nps_sales_promesa_buyer.sql", "original_file_path": "models/staging/nps_whatsapp/stg_whatsapp_nps_sales_promesa_buyer.sql", "name": "stg_whatsapp_nps_sales_promesa_buyer", "alias": "stg_whatsapp_nps_sales_promesa_buyer", "checksum": {"name": "sha256", "checksum": "3899ff968a95ad32d741aeebb90dde31e85e1f1dbde3ce42a06d82e20c0d2e24"}, "tags": ["dw", "staging", "gspread", "nps"], "refs": [], "sources": [["airbyte_gspread", "nps_sales_promesa_buyer"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/nps_whatsapp/stg_whatsapp_nps_sales_promesa_buyer.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "gspread", "nps"]}, "created_at": 1654784475.339626, "compiled_sql": "SELECT \n    * \nFROM \"houmdw_prod\".\"airbyte_gspread\".\"nps_sales_promesa_buyer\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_whatsapp_nps_sales_promesa_buyer\""}, "model.houm.stg_whatsapp_nps_automatic_landlord_3_meses": {"raw_sql": "SELECT \n    name,\n    role,\n    phone,\n    country,\n    prop_id,\n    \"timestamp\",\n    comentario AS comments,\n    \"\u00bfqu\u00e9 tan probable es que nos recomiendes a un amigo o conocido?\" AS recommendation,\n    \"en general, \u00bfqu\u00e9 tan satisfecho est\u00e1s con el servicio de administraci\u00f3n de houm?\" AS attention_satisfaction,\n    \"en tu \u00faltimo requerimiento, \u00bfqu\u00e9 tan satisfecho quedaste con la gesti\u00f3n de nuestros ejecutivos?\" AS problem_solving\nFROM {{ source('airbyte_gspread', 'nps_automatic_landlord_3_meses') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.airbyte_gspread.nps_automatic_landlord_3_meses"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "gspread", "nps"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "nps_whatsapp", "stg_whatsapp_nps_automatic_landlord_3_meses"], "unique_id": "model.houm.stg_whatsapp_nps_automatic_landlord_3_meses", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "staging/nps_whatsapp/stg_whatsapp_nps_automatic_landlord_3_meses.sql", "original_file_path": "models/staging/nps_whatsapp/stg_whatsapp_nps_automatic_landlord_3_meses.sql", "name": "stg_whatsapp_nps_automatic_landlord_3_meses", "alias": "stg_whatsapp_nps_automatic_landlord_3_meses", "checksum": {"name": "sha256", "checksum": "729d460dcce41b51fd02a4dad3ede66e4cd6998f34011adedc7730a4e58ec7ca"}, "tags": ["dw", "staging", "gspread", "nps"], "refs": [], "sources": [["airbyte_gspread", "nps_automatic_landlord_3_meses"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/nps_whatsapp/stg_whatsapp_nps_automatic_landlord_3_meses.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "gspread", "nps"]}, "created_at": 1654784475.341148, "compiled_sql": "SELECT \n    name,\n    role,\n    phone,\n    country,\n    prop_id,\n    \"timestamp\",\n    comentario AS comments,\n    \"\u00bfqu\u00e9 tan probable es que nos recomiendes a un amigo o conocido?\" AS recommendation,\n    \"en general, \u00bfqu\u00e9 tan satisfecho est\u00e1s con el servicio de administraci\u00f3n de houm?\" AS attention_satisfaction,\n    \"en tu \u00faltimo requerimiento, \u00bfqu\u00e9 tan satisfecho quedaste con la gesti\u00f3n de nuestros ejecutivos?\" AS problem_solving\nFROM \"houmdw_prod\".\"airbyte_gspread\".\"nps_automatic_landlord_3_meses\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_whatsapp_nps_automatic_landlord_3_meses\""}, "model.houm.stg_whatsapp_nps_automatic_tenant_6_meses": {"raw_sql": "SELECT \n    * \nFROM {{ source('airbyte_gspread', 'nps_automatic_tenant_6_meses') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.airbyte_gspread.nps_automatic_tenant_6_meses"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "gspread", "nps"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "nps_whatsapp", "stg_whatsapp_nps_automatic_tenant_6_meses"], "unique_id": "model.houm.stg_whatsapp_nps_automatic_tenant_6_meses", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "staging/nps_whatsapp/stg_whatsapp_nps_automatic_tenant_6_meses.sql", "original_file_path": "models/staging/nps_whatsapp/stg_whatsapp_nps_automatic_tenant_6_meses.sql", "name": "stg_whatsapp_nps_automatic_tenant_6_meses", "alias": "stg_whatsapp_nps_automatic_tenant_6_meses", "checksum": {"name": "sha256", "checksum": "12094ee699d8436972e1055d55c32470dc65e2c792a5037d0dbc38b80d585064"}, "tags": ["dw", "staging", "gspread", "nps"], "refs": [], "sources": [["airbyte_gspread", "nps_automatic_tenant_6_meses"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/nps_whatsapp/stg_whatsapp_nps_automatic_tenant_6_meses.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "gspread", "nps"]}, "created_at": 1654784475.342861, "compiled_sql": "SELECT \n    * \nFROM \"houmdw_prod\".\"airbyte_gspread\".\"nps_automatic_tenant_6_meses\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_whatsapp_nps_automatic_tenant_6_meses\""}, "model.houm.stg_whatsapp_nps_rentas_new_listing_cl": {"raw_sql": "SELECT \n    name,\n    role,\n    phone,\n    country,\n    \"timestamp\",\n    property_id::integer,\n    \"rapidez en el proceso\" as process_quickness,\n    \"\u00bftienes alg\u00fan comentario?\" as comments,\n    \"\u00bfc\u00f3mo te enteraste de houm y lo que hacemos?\" as source,\n    \"\u00bftengo claridad de la informaci\u00f3n del proceso?\" as process_clarity,\n    case \"\u00bfqu\u00e9 posibilidades hay de que recomiende nuestra empresa a un amigo o colega?\" \n        when '-' then null\n        else \"\u00bfqu\u00e9 posibilidades hay de que recomiende nuestra empresa a un amigo o colega?\"::integer\n    end as recommendation\nFROM {{ source('airbyte_gspread', 'nps_rentas_prop_new_listing_cl') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.airbyte_gspread.nps_rentas_prop_new_listing_cl"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "gspread", "nps"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "nps_whatsapp", "stg_whatsapp_nps_rentas_new_listing_cl"], "unique_id": "model.houm.stg_whatsapp_nps_rentas_new_listing_cl", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "staging/nps_whatsapp/stg_whatsapp_nps_rentas_new_listing_cl.sql", "original_file_path": "models/staging/nps_whatsapp/stg_whatsapp_nps_rentas_new_listing_cl.sql", "name": "stg_whatsapp_nps_rentas_new_listing_cl", "alias": "stg_whatsapp_nps_rentas_new_listing_cl", "checksum": {"name": "sha256", "checksum": "19e2934a6228af58bdea04054aeebbce5d940ba2f63486695eaf61a761961c9c"}, "tags": ["dw", "staging", "gspread", "nps"], "refs": [], "sources": [["airbyte_gspread", "nps_rentas_prop_new_listing_cl"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/nps_whatsapp/stg_whatsapp_nps_rentas_new_listing_cl.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "gspread", "nps"]}, "created_at": 1654784475.3444118, "compiled_sql": "SELECT \n    name,\n    role,\n    phone,\n    country,\n    \"timestamp\",\n    property_id::integer,\n    \"rapidez en el proceso\" as process_quickness,\n    \"\u00bftienes alg\u00fan comentario?\" as comments,\n    \"\u00bfc\u00f3mo te enteraste de houm y lo que hacemos?\" as source,\n    \"\u00bftengo claridad de la informaci\u00f3n del proceso?\" as process_clarity,\n    case \"\u00bfqu\u00e9 posibilidades hay de que recomiende nuestra empresa a un amigo o colega?\" \n        when '-' then null\n        else \"\u00bfqu\u00e9 posibilidades hay de que recomiende nuestra empresa a un amigo o colega?\"::integer\n    end as recommendation\nFROM \"houmdw_prod\".\"airbyte_gspread\".\"nps_rentas_prop_new_listing_cl\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_whatsapp_nps_rentas_new_listing_cl\""}, "model.houm.stg_whatsapp_nps_rentas_new_listing_co": {"raw_sql": "SELECT \n    name,\n    role,\n    phone,\n    country,\n    \"timestamp\",\n    property_id::integer,\n    \"rapidez en el proceso\" as process_quickness,\n    \"\u00bftienes alg\u00fan comentario?\" as comments,\n    \"\u00bfc\u00f3mo te enteraste de houm y lo que hacemos?\" as source,\n    \"\u00bftengo claridad de la informaci\u00f3n del proceso?\" as process_clarity,\n    case \"\u00bfqu\u00e9 posibilidades hay de que recomiende nuestra empresa a un amigo o colega?\" \n        when '-' then null\n        else \"\u00bfqu\u00e9 posibilidades hay de que recomiende nuestra empresa a un amigo o colega?\"::integer\n    end as recommendation\nFROM {{ source('airbyte_gspread', 'nps_rentas_prop_new_listing_co') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.airbyte_gspread.nps_rentas_prop_new_listing_co"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "gspread", "nps"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "nps_whatsapp", "stg_whatsapp_nps_rentas_new_listing_co"], "unique_id": "model.houm.stg_whatsapp_nps_rentas_new_listing_co", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "staging/nps_whatsapp/stg_whatsapp_nps_rentas_new_listing_co.sql", "original_file_path": "models/staging/nps_whatsapp/stg_whatsapp_nps_rentas_new_listing_co.sql", "name": "stg_whatsapp_nps_rentas_new_listing_co", "alias": "stg_whatsapp_nps_rentas_new_listing_co", "checksum": {"name": "sha256", "checksum": "183a109bce213d257b3245214b9eb0bf12fa169234af646550a3f9ccc64814f7"}, "tags": ["dw", "staging", "gspread", "nps"], "refs": [], "sources": [["airbyte_gspread", "nps_rentas_prop_new_listing_co"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/nps_whatsapp/stg_whatsapp_nps_rentas_new_listing_co.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "gspread", "nps"]}, "created_at": 1654784475.346001, "compiled_sql": "SELECT \n    name,\n    role,\n    phone,\n    country,\n    \"timestamp\",\n    property_id::integer,\n    \"rapidez en el proceso\" as process_quickness,\n    \"\u00bftienes alg\u00fan comentario?\" as comments,\n    \"\u00bfc\u00f3mo te enteraste de houm y lo que hacemos?\" as source,\n    \"\u00bftengo claridad de la informaci\u00f3n del proceso?\" as process_clarity,\n    case \"\u00bfqu\u00e9 posibilidades hay de que recomiende nuestra empresa a un amigo o colega?\" \n        when '-' then null\n        else \"\u00bfqu\u00e9 posibilidades hay de que recomiende nuestra empresa a un amigo o colega?\"::integer\n    end as recommendation\nFROM \"houmdw_prod\".\"airbyte_gspread\".\"nps_rentas_prop_new_listing_co\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_whatsapp_nps_rentas_new_listing_co\""}, "model.houm.stg_whatsapp_nps_chile_foto": {"raw_sql": "SELECT \n    \"date\",\n    \"time\",\n    \"prop id\" as property_id,\n    \"address\",\n    appraiser,\n    \"schedule id\"::integer as schedule_id,\n    \"\u00bfc\u00f3mo evaluar\u00edas el servicio de tu houmer?\" as houmer_service,\n    \"\u00bfc\u00f3mo fue la atenci\u00f3n del houmer previo a la visita?\" as houmer_knowledge,\n    \"\u00bfc\u00f3mo fue la simplicidad de la p\u00e1gina para agendar visitas?\" as schedule_easyness,\n    \"\u00bftienes alg\u00fan comentario que nos ayude a mejorar nuestro servicio?\" comments,\n    \"\u00bfc\u00f3mo fue tu experiencia en la toma de fotograf\u00edas de tu propiedad?\" as visit_success,\n    \"\u00bfqu\u00e9 posibilidades hay de que recomiende nuestro servicio a un amigo o colega?\" as recommendation\nFROM {{ source('airbyte_gspread', 'nps_chile_foto') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.airbyte_gspread.nps_chile_foto"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "gspread", "nps"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "nps_whatsapp", "stg_whatsapp_nps_chile_foto"], "unique_id": "model.houm.stg_whatsapp_nps_chile_foto", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "staging/nps_whatsapp/stg_whatsapp_nps_chile_foto.sql", "original_file_path": "models/staging/nps_whatsapp/stg_whatsapp_nps_chile_foto.sql", "name": "stg_whatsapp_nps_chile_foto", "alias": "stg_whatsapp_nps_chile_foto", "checksum": {"name": "sha256", "checksum": "94c3daefdcecc69bb1fd207d899a54def0ffa88a57c712b56f5c9f83cb9a4c4e"}, "tags": ["dw", "staging", "gspread", "nps"], "refs": [], "sources": [["airbyte_gspread", "nps_chile_foto"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/nps_whatsapp/stg_whatsapp_nps_chile_foto.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "gspread", "nps"]}, "created_at": 1654784475.347539, "compiled_sql": "SELECT \n    \"date\",\n    \"time\",\n    \"prop id\" as property_id,\n    \"address\",\n    appraiser,\n    \"schedule id\"::integer as schedule_id,\n    \"\u00bfc\u00f3mo evaluar\u00edas el servicio de tu houmer?\" as houmer_service,\n    \"\u00bfc\u00f3mo fue la atenci\u00f3n del houmer previo a la visita?\" as houmer_knowledge,\n    \"\u00bfc\u00f3mo fue la simplicidad de la p\u00e1gina para agendar visitas?\" as schedule_easyness,\n    \"\u00bftienes alg\u00fan comentario que nos ayude a mejorar nuestro servicio?\" comments,\n    \"\u00bfc\u00f3mo fue tu experiencia en la toma de fotograf\u00edas de tu propiedad?\" as visit_success,\n    \"\u00bfqu\u00e9 posibilidades hay de que recomiende nuestro servicio a un amigo o colega?\" as recommendation\nFROM \"houmdw_prod\".\"airbyte_gspread\".\"nps_chile_foto\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_whatsapp_nps_chile_foto\""}, "model.houm.stg_whatsapp_nps_sales_post_venta_buyer": {"raw_sql": "SELECT \n    * \nFROM {{ source('airbyte_gspread', 'nps_sales_post_venta_buyer') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.airbyte_gspread.nps_sales_post_venta_buyer"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "gspread", "nps"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "nps_whatsapp", "stg_whatsapp_nps_sales_post_venta_buyer"], "unique_id": "model.houm.stg_whatsapp_nps_sales_post_venta_buyer", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "staging/nps_whatsapp/stg_whatsapp_nps_sales_post_venta_buyer.sql", "original_file_path": "models/staging/nps_whatsapp/stg_whatsapp_nps_sales_post_venta_buyer.sql", "name": "stg_whatsapp_nps_sales_post_venta_buyer", "alias": "stg_whatsapp_nps_sales_post_venta_buyer", "checksum": {"name": "sha256", "checksum": "a29139c6110b4d41a62e962ca34f77fb6ea48bbdda4d178d47ea708801c6f0aa"}, "tags": ["dw", "staging", "gspread", "nps"], "refs": [], "sources": [["airbyte_gspread", "nps_sales_post_venta_buyer"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/nps_whatsapp/stg_whatsapp_nps_sales_post_venta_buyer.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "gspread", "nps"]}, "created_at": 1654784475.349279, "compiled_sql": "SELECT \n    * \nFROM \"houmdw_prod\".\"airbyte_gspread\".\"nps_sales_post_venta_buyer\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_whatsapp_nps_sales_post_venta_buyer\""}, "model.houm.stg_whatsapp_nps_mexico_foto": {"raw_sql": "SELECT \n    \"date\",\n    \"time\",\n    \"prop id\" as property_id,\n    \"address\",\n    appraiser,\n    \"schedule id\"::integer as schedule_id,\n    \"\u00bfc\u00f3mo evaluar\u00edas el servicio de tu houmer?\" as houmer_service,\n    \"\u00bfc\u00f3mo fue la atenci\u00f3n del houmer previo a la visita?\" as houmer_knowledge,\n    \"\u00bfc\u00f3mo fue la simplicidad de la p\u00e1gina para agendar visitas?\" as schedule_easyness,\n    \"\u00bftienes alg\u00fan comentario que nos ayude a mejorar nuestro servicio?\" comments,\n    \"\u00bfc\u00f3mo fue tu experiencia en la toma de fotograf\u00edas de tu propiedad?\" as visit_success,\n    \"\u00bfqu\u00e9 posibilidades hay de que recomiende nuestro servicio a un amigo o colega?\" as recommendation\nFROM {{ source('airbyte_gspread', 'nps_mexico_foto') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.airbyte_gspread.nps_mexico_foto"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "gspread", "nps"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "nps_whatsapp", "stg_whatsapp_nps_mexico_foto"], "unique_id": "model.houm.stg_whatsapp_nps_mexico_foto", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "staging/nps_whatsapp/stg_whatsapp_nps_mexico_foto.sql", "original_file_path": "models/staging/nps_whatsapp/stg_whatsapp_nps_mexico_foto.sql", "name": "stg_whatsapp_nps_mexico_foto", "alias": "stg_whatsapp_nps_mexico_foto", "checksum": {"name": "sha256", "checksum": "c34c55b7e0828eaacd36e8bba5022b69327c6ae480c0241892791bb3b22e46e7"}, "tags": ["dw", "staging", "gspread", "nps"], "refs": [], "sources": [["airbyte_gspread", "nps_mexico_foto"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/nps_whatsapp/stg_whatsapp_nps_mexico_foto.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "gspread", "nps"]}, "created_at": 1654784475.350892, "compiled_sql": "SELECT \n    \"date\",\n    \"time\",\n    \"prop id\" as property_id,\n    \"address\",\n    appraiser,\n    \"schedule id\"::integer as schedule_id,\n    \"\u00bfc\u00f3mo evaluar\u00edas el servicio de tu houmer?\" as houmer_service,\n    \"\u00bfc\u00f3mo fue la atenci\u00f3n del houmer previo a la visita?\" as houmer_knowledge,\n    \"\u00bfc\u00f3mo fue la simplicidad de la p\u00e1gina para agendar visitas?\" as schedule_easyness,\n    \"\u00bftienes alg\u00fan comentario que nos ayude a mejorar nuestro servicio?\" comments,\n    \"\u00bfc\u00f3mo fue tu experiencia en la toma de fotograf\u00edas de tu propiedad?\" as visit_success,\n    \"\u00bfqu\u00e9 posibilidades hay de que recomiende nuestro servicio a un amigo o colega?\" as recommendation\nFROM \"houmdw_prod\".\"airbyte_gspread\".\"nps_mexico_foto\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_whatsapp_nps_mexico_foto\""}, "model.houm.stg_whatsapp_nps_automatic_tenant_3_meses": {"raw_sql": "SELECT \n    * \nFROM {{ source('airbyte_gspread', 'nps_automatic_tenant_3_meses') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.airbyte_gspread.nps_automatic_tenant_3_meses"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "gspread", "nps"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "nps_whatsapp", "stg_whatsapp_nps_automatic_tenant_3_meses"], "unique_id": "model.houm.stg_whatsapp_nps_automatic_tenant_3_meses", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "staging/nps_whatsapp/stg_whatsapp_nps_automatic_tenant_3_meses.sql", "original_file_path": "models/staging/nps_whatsapp/stg_whatsapp_nps_automatic_tenant_3_meses.sql", "name": "stg_whatsapp_nps_automatic_tenant_3_meses", "alias": "stg_whatsapp_nps_automatic_tenant_3_meses", "checksum": {"name": "sha256", "checksum": "3d8ee05033f82aa869befb46c95d3db0a12fbf14faeebb0764343a34bda7cfe0"}, "tags": ["dw", "staging", "gspread", "nps"], "refs": [], "sources": [["airbyte_gspread", "nps_automatic_tenant_3_meses"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/nps_whatsapp/stg_whatsapp_nps_automatic_tenant_3_meses.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "gspread", "nps"]}, "created_at": 1654784475.352513, "compiled_sql": "SELECT \n    * \nFROM \"houmdw_prod\".\"airbyte_gspread\".\"nps_automatic_tenant_3_meses\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_whatsapp_nps_automatic_tenant_3_meses\""}, "model.houm.stg_whatsapp_nps_rentas_new_listing_mx": {"raw_sql": "SELECT \n    name,\n    role,\n    phone,\n    country,\n    \"timestamp\",\n    property_id::integer,\n    \"rapidez en el proceso\" as process_quickness,\n    \"\u00bftienes alg\u00fan comentario?\" as comments,\n    \"\u00bfc\u00f3mo te enteraste de houm y lo que hacemos?\" as source,\n    \"claridad de la informaci\u00f3n entregada por los ejecutivos\" as process_clarity,\n    case \"\u00bfqu\u00e9 posibilidades hay de que recomiende nuestra empresa a un amigo o colega?\" \n        when '-' then null\n        else \"\u00bfqu\u00e9 posibilidades hay de que recomiende nuestra empresa a un amigo o colega?\"::integer\n    end as recommendation\nFROM {{ source('airbyte_gspread', 'nps_rentas_prop_new_listing_mx') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.airbyte_gspread.nps_rentas_prop_new_listing_mx"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "gspread", "nps"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "nps_whatsapp", "stg_whatsapp_nps_rentas_new_listing_mx"], "unique_id": "model.houm.stg_whatsapp_nps_rentas_new_listing_mx", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "staging/nps_whatsapp/stg_whatsapp_nps_rentas_new_listing_mx.sql", "original_file_path": "models/staging/nps_whatsapp/stg_whatsapp_nps_rentas_new_listing_mx.sql", "name": "stg_whatsapp_nps_rentas_new_listing_mx", "alias": "stg_whatsapp_nps_rentas_new_listing_mx", "checksum": {"name": "sha256", "checksum": "e256ad1ec4468a7335d4ae499ee0df63fec7456b22d04c932008e4baa6872769"}, "tags": ["dw", "staging", "gspread", "nps"], "refs": [], "sources": [["airbyte_gspread", "nps_rentas_prop_new_listing_mx"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/nps_whatsapp/stg_whatsapp_nps_rentas_new_listing_mx.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "gspread", "nps"]}, "created_at": 1654784475.354064, "compiled_sql": "SELECT \n    name,\n    role,\n    phone,\n    country,\n    \"timestamp\",\n    property_id::integer,\n    \"rapidez en el proceso\" as process_quickness,\n    \"\u00bftienes alg\u00fan comentario?\" as comments,\n    \"\u00bfc\u00f3mo te enteraste de houm y lo que hacemos?\" as source,\n    \"claridad de la informaci\u00f3n entregada por los ejecutivos\" as process_clarity,\n    case \"\u00bfqu\u00e9 posibilidades hay de que recomiende nuestra empresa a un amigo o colega?\" \n        when '-' then null\n        else \"\u00bfqu\u00e9 posibilidades hay de que recomiende nuestra empresa a un amigo o colega?\"::integer\n    end as recommendation\nFROM \"houmdw_prod\".\"airbyte_gspread\".\"nps_rentas_prop_new_listing_mx\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_whatsapp_nps_rentas_new_listing_mx\""}, "model.houm.stg_whatsapp_nps_colombia_visit_renta": {"raw_sql": "SELECT \n    * \nFROM {{ source('airbyte_gspread', 'nps_colombia_renta') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.airbyte_gspread.nps_colombia_renta"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "gspread", "nps"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "nps_whatsapp", "stg_whatsapp_nps_colombia_visit_renta"], "unique_id": "model.houm.stg_whatsapp_nps_colombia_visit_renta", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "staging/nps_whatsapp/stg_whatsapp_nps_colombia_visit_renta.sql", "original_file_path": "models/staging/nps_whatsapp/stg_whatsapp_nps_colombia_visit_renta.sql", "name": "stg_whatsapp_nps_colombia_visit_renta", "alias": "stg_whatsapp_nps_colombia_visit_renta", "checksum": {"name": "sha256", "checksum": "1e953c1c65222a2718aecc1d00c0be091924164e38777778e00e409a39a36537"}, "tags": ["dw", "staging", "gspread", "nps"], "refs": [], "sources": [["airbyte_gspread", "nps_colombia_renta"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/nps_whatsapp/stg_whatsapp_nps_colombia_visit_renta.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "gspread", "nps"]}, "created_at": 1654784475.355829, "compiled_sql": "SELECT \n    * \nFROM \"houmdw_prod\".\"airbyte_gspread\".\"nps_colombia_renta\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_whatsapp_nps_colombia_visit_renta\""}, "model.houm.stg_whatsapp_nps_automatic_landlord_6_meses": {"raw_sql": "SELECT \n    name,\n    role,\n    phone,\n    country,\n    prop_id,\n    \"timestamp\",\n    comentario as comments,\n    \"\u00bfqu\u00e9 tan probable es que nos recomiendes a un amigo o conocido?\" as recommendation,\n    \"en general, \u00bfqu\u00e9 tan satisfecho est\u00e1s con el servicio de administraci\u00f3n de houm?\" as attention_satisfaction,\n    \"\u00bfqu\u00e9 tan satisfecho est\u00e1s con la comunicaci\u00f3n de houm?\" as problem_solving\nFROM {{ source('airbyte_gspread', 'nps_automatic_landlord_6_meses') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.airbyte_gspread.nps_automatic_landlord_6_meses"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "gspread", "nps"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "nps_whatsapp", "stg_whatsapp_nps_automatic_landlord_6_meses"], "unique_id": "model.houm.stg_whatsapp_nps_automatic_landlord_6_meses", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "staging/nps_whatsapp/stg_whatsapp_nps_automatic_landlord_6_meses.sql", "original_file_path": "models/staging/nps_whatsapp/stg_whatsapp_nps_automatic_landlord_6_meses.sql", "name": "stg_whatsapp_nps_automatic_landlord_6_meses", "alias": "stg_whatsapp_nps_automatic_landlord_6_meses", "checksum": {"name": "sha256", "checksum": "6b387818fe61aa130398891bdf74af7b2c47e7855566d72d12a22c6de5bb75a5"}, "tags": ["dw", "staging", "gspread", "nps"], "refs": [], "sources": [["airbyte_gspread", "nps_automatic_landlord_6_meses"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/nps_whatsapp/stg_whatsapp_nps_automatic_landlord_6_meses.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "gspread", "nps"]}, "created_at": 1654784475.3573818, "compiled_sql": "SELECT \n    name,\n    role,\n    phone,\n    country,\n    prop_id,\n    \"timestamp\",\n    comentario as comments,\n    \"\u00bfqu\u00e9 tan probable es que nos recomiendes a un amigo o conocido?\" as recommendation,\n    \"en general, \u00bfqu\u00e9 tan satisfecho est\u00e1s con el servicio de administraci\u00f3n de houm?\" as attention_satisfaction,\n    \"\u00bfqu\u00e9 tan satisfecho est\u00e1s con la comunicaci\u00f3n de houm?\" as problem_solving\nFROM \"houmdw_prod\".\"airbyte_gspread\".\"nps_automatic_landlord_6_meses\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_whatsapp_nps_automatic_landlord_6_meses\""}, "model.houm.stg_whatsapp_nps_colombia_foto": {"raw_sql": "SELECT \n    \"date\",\n    \"time\",\n    \"prop id\" as property_id,\n    \"address\",\n    appraiser,\n    \"schedule id\"::integer as schedule_id,\n    \"\u00bfc\u00f3mo evaluar\u00edas el servicio de tu houmer?\" as houmer_service,\n    \"\u00bfc\u00f3mo fue la atenci\u00f3n del houmer previo a la visita?\" as houmer_knowledge,\n    \"\u00bfc\u00f3mo fue la simplicidad de la p\u00e1gina para agendar visitas?\" as schedule_easyness,\n    \"\u00bftienes alg\u00fan comentario que nos ayude a mejorar nuestro servicio?\" comments,\n    \"\u00bfc\u00f3mo fue tu experiencia en la toma de fotograf\u00edas de tu propiedad?\" as visit_success,\n    \"\u00bfqu\u00e9 posibilidades hay de que recomiende nuestro servicio a un amigo o colega?\" as recommendation\nFROM {{ source('airbyte_gspread', 'nps_colombia_foto') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.airbyte_gspread.nps_colombia_foto"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "gspread", "nps"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "nps_whatsapp", "stg_whatsapp_nps_colombia_foto"], "unique_id": "model.houm.stg_whatsapp_nps_colombia_foto", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "staging/nps_whatsapp/stg_whatsapp_nps_colombia_foto.sql", "original_file_path": "models/staging/nps_whatsapp/stg_whatsapp_nps_colombia_foto.sql", "name": "stg_whatsapp_nps_colombia_foto", "alias": "stg_whatsapp_nps_colombia_foto", "checksum": {"name": "sha256", "checksum": "7529946c238ced6787aff36916cef4ac37493b2efddfe892ce6b6ab172d3f1ab"}, "tags": ["dw", "staging", "gspread", "nps"], "refs": [], "sources": [["airbyte_gspread", "nps_colombia_foto"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/nps_whatsapp/stg_whatsapp_nps_colombia_foto.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "gspread", "nps"]}, "created_at": 1654784475.358973, "compiled_sql": "SELECT \n    \"date\",\n    \"time\",\n    \"prop id\" as property_id,\n    \"address\",\n    appraiser,\n    \"schedule id\"::integer as schedule_id,\n    \"\u00bfc\u00f3mo evaluar\u00edas el servicio de tu houmer?\" as houmer_service,\n    \"\u00bfc\u00f3mo fue la atenci\u00f3n del houmer previo a la visita?\" as houmer_knowledge,\n    \"\u00bfc\u00f3mo fue la simplicidad de la p\u00e1gina para agendar visitas?\" as schedule_easyness,\n    \"\u00bftienes alg\u00fan comentario que nos ayude a mejorar nuestro servicio?\" comments,\n    \"\u00bfc\u00f3mo fue tu experiencia en la toma de fotograf\u00edas de tu propiedad?\" as visit_success,\n    \"\u00bfqu\u00e9 posibilidades hay de que recomiende nuestro servicio a un amigo o colega?\" as recommendation\nFROM \"houmdw_prod\".\"airbyte_gspread\".\"nps_colombia_foto\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_whatsapp_nps_colombia_foto\""}, "model.houm.stg_whatsapp_nps_tenant_pc_mx": {"raw_sql": "SELECT \n    * \nFROM {{ source('airbyte_gspread', 'nps_rentas_tenant_pc_mx') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.airbyte_gspread.nps_rentas_tenant_pc_mx"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "gspread", "nps"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "nps_whatsapp", "stg_whatsapp_nps_tenant_pc_mx"], "unique_id": "model.houm.stg_whatsapp_nps_tenant_pc_mx", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "staging/nps_whatsapp/stg_whatsapp_nps_tenant_pc_mx.sql", "original_file_path": "models/staging/nps_whatsapp/stg_whatsapp_nps_tenant_pc_mx.sql", "name": "stg_whatsapp_nps_tenant_pc_mx", "alias": "stg_whatsapp_nps_tenant_pc_mx", "checksum": {"name": "sha256", "checksum": "a142ef773606b5b3838a3a556900965e16f5056cc378fbcfd3cd0aa07f195b23"}, "tags": ["dw", "staging", "gspread", "nps"], "refs": [], "sources": [["airbyte_gspread", "nps_rentas_tenant_pc_mx"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/nps_whatsapp/stg_whatsapp_nps_tenant_pc_mx.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "gspread", "nps"]}, "created_at": 1654784475.3607612, "compiled_sql": "SELECT \n    * \nFROM \"houmdw_prod\".\"airbyte_gspread\".\"nps_rentas_tenant_pc_mx\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_whatsapp_nps_tenant_pc_mx\""}, "model.houm.stg_whatsapp_nps_sales_promesa_seller": {"raw_sql": "SELECT \n    * \nFROM {{ source('airbyte_gspread', 'nps_sales_promesa_seller') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.airbyte_gspread.nps_sales_promesa_seller"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "gspread", "nps"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "nps_whatsapp", "stg_whatsapp_nps_sales_promesa_seller"], "unique_id": "model.houm.stg_whatsapp_nps_sales_promesa_seller", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "staging/nps_whatsapp/stg_whatsapp_nps_sales_promesa_seller.sql", "original_file_path": "models/staging/nps_whatsapp/stg_whatsapp_nps_sales_promesa_seller.sql", "name": "stg_whatsapp_nps_sales_promesa_seller", "alias": "stg_whatsapp_nps_sales_promesa_seller", "checksum": {"name": "sha256", "checksum": "95df5dd8d5515c0740e0116a8e42b13be736bece24e57aaf7aa3a83a290391ea"}, "tags": ["dw", "staging", "gspread", "nps"], "refs": [], "sources": [["airbyte_gspread", "nps_sales_promesa_seller"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/nps_whatsapp/stg_whatsapp_nps_sales_promesa_seller.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "gspread", "nps"]}, "created_at": 1654784475.362556, "compiled_sql": "SELECT \n    * \nFROM \"houmdw_prod\".\"airbyte_gspread\".\"nps_sales_promesa_seller\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_whatsapp_nps_sales_promesa_seller\""}, "model.houm.stg_whatsapp_nps_mexico_visit_sales": {"raw_sql": "SELECT \n    * \nFROM {{ source('airbyte_gspread', 'nps_mexico_sales') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.airbyte_gspread.nps_mexico_sales"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "gspread", "nps"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "nps_whatsapp", "stg_whatsapp_nps_mexico_visit_sales"], "unique_id": "model.houm.stg_whatsapp_nps_mexico_visit_sales", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "staging/nps_whatsapp/stg_whatsapp_nps_mexico_visit_sales.sql", "original_file_path": "models/staging/nps_whatsapp/stg_whatsapp_nps_mexico_visit_sales.sql", "name": "stg_whatsapp_nps_mexico_visit_sales", "alias": "stg_whatsapp_nps_mexico_visit_sales", "checksum": {"name": "sha256", "checksum": "969ed9f5f3c3b3378f1d1daffe3f88413ed1d88450e98401742296700d40eb01"}, "tags": ["dw", "staging", "gspread", "nps"], "refs": [], "sources": [["airbyte_gspread", "nps_mexico_sales"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/nps_whatsapp/stg_whatsapp_nps_mexico_visit_sales.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "gspread", "nps"]}, "created_at": 1654784475.364141, "compiled_sql": "SELECT \n    * \nFROM \"houmdw_prod\".\"airbyte_gspread\".\"nps_mexico_sales\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_whatsapp_nps_mexico_visit_sales\""}, "model.houm.stg_whatsapp_nps_chile_visit_renta": {"raw_sql": "SELECT \n    * \nFROM {{ source('airbyte_gspread', 'nps_chile_renta') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.airbyte_gspread.nps_chile_renta"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "gspread", "nps"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "nps_whatsapp", "stg_whatsapp_nps_chile_visit_renta"], "unique_id": "model.houm.stg_whatsapp_nps_chile_visit_renta", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "staging/nps_whatsapp/stg_whatsapp_nps_chile_visit_renta.sql", "original_file_path": "models/staging/nps_whatsapp/stg_whatsapp_nps_chile_visit_renta.sql", "name": "stg_whatsapp_nps_chile_visit_renta", "alias": "stg_whatsapp_nps_chile_visit_renta", "checksum": {"name": "sha256", "checksum": "beb5218f6f737fef5ec7b852b698fe5168499be00c3135243c1c2a559947893e"}, "tags": ["dw", "staging", "gspread", "nps"], "refs": [], "sources": [["airbyte_gspread", "nps_chile_renta"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/nps_whatsapp/stg_whatsapp_nps_chile_visit_renta.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "gspread", "nps"]}, "created_at": 1654784475.3657112, "compiled_sql": "SELECT \n    * \nFROM \"houmdw_prod\".\"airbyte_gspread\".\"nps_chile_renta\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_whatsapp_nps_chile_visit_renta\""}, "model.houm.stg_activies": {"raw_sql": "Select \n   *\nFROM {{ source('pipedrive', 'activities') }} a", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.pipedrive.activities"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "pipedrive"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "pipedrive", "stg_activies"], "unique_id": "model.houm.stg_activies", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "staging/pipedrive/stg_activies.sql", "original_file_path": "models/staging/pipedrive/stg_activies.sql", "name": "stg_activies", "alias": "stg_activies", "checksum": {"name": "sha256", "checksum": "84f77faba98102b36104f7038ae31980086ca81309380d7f14f0078b17c653c3"}, "tags": ["dw", "staging", "pipedrive"], "refs": [], "sources": [["pipedrive", "activities"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/pipedrive/stg_activies.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "pipedrive"]}, "created_at": 1654784475.367292, "compiled_sql": "Select \n   *\nFROM \"houmdw_prod\".\"pipedrive\".\"activities\" a", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_activies\""}, "model.houm.stg_pipelines": {"raw_sql": "Select \n    *\nFROM {{ source('pipedrive', 'pipelines') }} a", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.pipedrive.pipelines"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "pipedrive"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "pipedrive", "stg_pipelines"], "unique_id": "model.houm.stg_pipelines", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "staging/pipedrive/stg_pipelines.sql", "original_file_path": "models/staging/pipedrive/stg_pipelines.sql", "name": "stg_pipelines", "alias": "stg_pipelines", "checksum": {"name": "sha256", "checksum": "a8a9d201a0c0660ebbeeb41cdf435c18ca6d82be86d9e2198c32381bb81a07bb"}, "tags": ["dw", "staging", "pipedrive"], "refs": [], "sources": [["pipedrive", "pipelines"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/pipedrive/stg_pipelines.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "pipedrive"]}, "created_at": 1654784475.369066, "compiled_sql": "Select \n    *\nFROM \"houmdw_prod\".\"pipedrive\".\"pipelines\" a", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_pipelines\""}, "model.houm.stg_bi_persons": {"raw_sql": "Select \n   *\nFROM {{ source('pipedrive', 'bi_persons') }} a", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.pipedrive.bi_persons"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "pipedrive"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "pipedrive", "stg_bi_persons"], "unique_id": "model.houm.stg_bi_persons", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "staging/pipedrive/stg_bi_persons.sql", "original_file_path": "models/staging/pipedrive/stg_bi_persons.sql", "name": "stg_bi_persons", "alias": "stg_bi_persons", "checksum": {"name": "sha256", "checksum": "84d1fbd469222ae9048eec7ad790124b627f742888b188357833a350e6f89782"}, "tags": ["dw", "staging", "pipedrive"], "refs": [], "sources": [["pipedrive", "bi_persons"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/pipedrive/stg_bi_persons.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "pipedrive"]}, "created_at": 1654784475.37061, "compiled_sql": "Select \n   *\nFROM \"houmdw_prod\".\"pipedrive\".\"bi_persons\" a", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_bi_persons\""}, "model.houm.stg_stages": {"raw_sql": "Select \n\t*\nFROM {{ source('pipedrive', 'stages') }} a", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.pipedrive.stages"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "pipedrive"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "pipedrive", "stg_stages"], "unique_id": "model.houm.stg_stages", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "staging/pipedrive/stg_stages.sql", "original_file_path": "models/staging/pipedrive/stg_stages.sql", "name": "stg_stages", "alias": "stg_stages", "checksum": {"name": "sha256", "checksum": "29fd945fd34245f4e024415dae4e5d0433dcc601260d6a36ac0bbaf68f81c28f"}, "tags": ["dw", "staging", "pipedrive"], "refs": [], "sources": [["pipedrive", "stages"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/pipedrive/stg_stages.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "pipedrive"]}, "created_at": 1654784475.3721678, "compiled_sql": "Select \n\t*\nFROM \"houmdw_prod\".\"pipedrive\".\"stages\" a", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_stages\""}, "model.houm.stg_bi_deals": {"raw_sql": "Select \n   *\nFROM {{ source('pipedrive', 'bi_deals') }} a", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.pipedrive.bi_deals"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "pipedrive"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "pipedrive", "stg_bi_deals"], "unique_id": "model.houm.stg_bi_deals", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "staging/pipedrive/stg_bi_deals.sql", "original_file_path": "models/staging/pipedrive/stg_bi_deals.sql", "name": "stg_bi_deals", "alias": "stg_bi_deals", "checksum": {"name": "sha256", "checksum": "b05c981d452590fb16c724dfafa3afa88f0ae267837efcfeaca8b5da7585bc89"}, "tags": ["dw", "staging", "pipedrive"], "refs": [], "sources": [["pipedrive", "bi_deals"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/pipedrive/stg_bi_deals.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "pipedrive"]}, "created_at": 1654784475.374243, "compiled_sql": "Select \n   *\nFROM \"houmdw_prod\".\"pipedrive\".\"bi_deals\" a", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_bi_deals\""}, "model.houm.stg_deals": {"raw_sql": "Select \n\t*\nFROM {{ source('pipedrive', 'deals') }} a", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.pipedrive.deals"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "pipedrive"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "pipedrive", "stg_deals"], "unique_id": "model.houm.stg_deals", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "staging/pipedrive/stg_deals.sql", "original_file_path": "models/staging/pipedrive/stg_deals.sql", "name": "stg_deals", "alias": "stg_deals", "checksum": {"name": "sha256", "checksum": "d7bb7297679a2ec699bb9510f888e6b7c33899a31790a3218f4ab87bf60fe36f"}, "tags": ["dw", "staging", "pipedrive"], "refs": [], "sources": [["pipedrive", "deals"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/pipedrive/stg_deals.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "pipedrive"]}, "created_at": 1654784475.37583, "compiled_sql": "Select \n\t*\nFROM \"houmdw_prod\".\"pipedrive\".\"deals\" a", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_deals\""}, "model.houm.stg_subscription_subscription": {"raw_sql": "select * \r\nfrom {{ source('raw_stage', 'subscription_subscription') }}\r\n--where audit_end_dt is null and audit_action != 'D'subscription_subscription", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.raw_stage.subscription_subscription"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "arriendoasegurado"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "arriendoasegurado", "stg_subscription_subscription"], "unique_id": "model.houm.stg_subscription_subscription", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "staging/arriendoasegurado/stg_subscription_subscription.sql", "original_file_path": "models/staging/arriendoasegurado/stg_subscription_subscription.sql", "name": "stg_subscription_subscription", "alias": "stg_subscription_subscription", "checksum": {"name": "sha256", "checksum": "b4ec74218084638aaa898e3644649e4f6e38f43d84f00b4f21c9fc74cd310a33"}, "tags": ["dw", "staging", "arriendoasegurado"], "refs": [], "sources": [["raw_stage", "subscription_subscription"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/arriendoasegurado/stg_subscription_subscription.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "arriendoasegurado"]}, "created_at": 1654784475.3773801, "compiled_sql": "select * \nfrom \"houmdw_prod\".\"raw_stage\".\"subscription_subscription\"\n--where audit_end_dt is null and audit_action != 'D'subscription_subscription", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_subscription_subscription\""}, "model.houm.stg_demand_portalhoum": {"raw_sql": "select * \nfrom {{ source('raw_stage', 'demand_portalhoum') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.raw_stage.demand_portalhoum"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "arriendoasegurado"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "arriendoasegurado", "stg_demand_portalhoum"], "unique_id": "model.houm.stg_demand_portalhoum", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "staging/arriendoasegurado/stg_demand_portalhoum.sql", "original_file_path": "models/staging/arriendoasegurado/stg_demand_portalhoum.sql", "name": "stg_demand_portalhoum", "alias": "stg_demand_portalhoum", "checksum": {"name": "sha256", "checksum": "29a8f75ae683f3f6d067875a0ce4e026575d969e2973de156b9e7705db80a62a"}, "tags": ["dw", "staging", "arriendoasegurado"], "refs": [], "sources": [["raw_stage", "demand_portalhoum"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/arriendoasegurado/stg_demand_portalhoum.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "arriendoasegurado"]}, "created_at": 1654784475.3789482, "compiled_sql": "select * \nfrom \"houmdw_prod\".\"raw_stage\".\"demand_portalhoum\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_demand_portalhoum\""}, "model.houm.stg_contracts": {"raw_sql": "select * \nfrom {{ source('historical', 'historical_contracts') }}\nwhere audit_end_dt is null  and audit_action != 'D'", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.historical.historical_contracts"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "arriendoasegurado"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "arriendoasegurado", "stg_contracts"], "unique_id": "model.houm.stg_contracts", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "staging/arriendoasegurado/stg_contracts.sql", "original_file_path": "models/staging/arriendoasegurado/stg_contracts.sql", "name": "stg_contracts", "alias": "stg_contracts", "checksum": {"name": "sha256", "checksum": "7c66dc18a7c028d71eff1c97e6b7534f2232854eec5365d909ae9c1b54cdf757"}, "tags": ["dw", "staging", "arriendoasegurado"], "refs": [], "sources": [["historical", "historical_contracts"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/arriendoasegurado/stg_contracts.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "arriendoasegurado"]}, "created_at": 1654784475.3806632, "compiled_sql": "select * \nfrom \"houmdw_prod\".\"historical\".\"historical_contracts\"\nwhere audit_end_dt is null  and audit_action != 'D'", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_contracts\""}, "model.houm.stg_arriendoasegurado_applicant": {"raw_sql": "select * \nfrom {{ source('raw_stage', 'arriendoasegurado_applicant') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.raw_stage.arriendoasegurado_applicant"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "arriendoasegurado"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "arriendoasegurado", "stg_arriendoasegurado_applicant"], "unique_id": "model.houm.stg_arriendoasegurado_applicant", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "staging/arriendoasegurado/stg_arriendoasegurado_applicant.sql", "original_file_path": "models/staging/arriendoasegurado/stg_arriendoasegurado_applicant.sql", "name": "stg_arriendoasegurado_applicant", "alias": "stg_arriendoasegurado_applicant", "checksum": {"name": "sha256", "checksum": "c4743fee425275f7488f74faaccd3ff7eabb81896f3ed4f82aaa7417a60e2199"}, "tags": ["dw", "staging", "arriendoasegurado"], "refs": [], "sources": [["raw_stage", "arriendoasegurado_applicant"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/arriendoasegurado/stg_arriendoasegurado_applicant.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "arriendoasegurado"]}, "created_at": 1654784475.3822222, "compiled_sql": "select * \nfrom \"houmdw_prod\".\"raw_stage\".\"arriendoasegurado_applicant\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_arriendoasegurado_applicant\""}, "model.houm.stg_scheduler_schedules": {"raw_sql": "select * \nfrom {{ source('raw_stage', 'scheduler_schedules') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.raw_stage.scheduler_schedules"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "arriendoasegurado"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "arriendoasegurado", "stg_scheduler_schedules"], "unique_id": "model.houm.stg_scheduler_schedules", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "staging/arriendoasegurado/stg_scheduler_schedules.sql", "original_file_path": "models/staging/arriendoasegurado/stg_scheduler_schedules.sql", "name": "stg_scheduler_schedules", "alias": "stg_scheduler_schedules", "checksum": {"name": "sha256", "checksum": "84801759fe3fa4ac9f7ad271fa8e6515255fe5ae978a5dde5e5858736bc9aa33"}, "tags": ["dw", "staging", "arriendoasegurado"], "refs": [], "sources": [["raw_stage", "scheduler_schedules"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/arriendoasegurado/stg_scheduler_schedules.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "arriendoasegurado"]}, "created_at": 1654784475.383744, "compiled_sql": "select * \nfrom \"houmdw_prod\".\"raw_stage\".\"scheduler_schedules\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_scheduler_schedules\""}, "model.houm.stg_demand_portalapplicant": {"raw_sql": "select * \nfrom {{ source('raw_stage', 'demand_portalapplicant') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.raw_stage.demand_portalapplicant"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "arriendoasegurado"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "arriendoasegurado", "stg_demand_portalapplicant"], "unique_id": "model.houm.stg_demand_portalapplicant", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "staging/arriendoasegurado/stg_demand_portalapplicant.sql", "original_file_path": "models/staging/arriendoasegurado/stg_demand_portalapplicant.sql", "name": "stg_demand_portalapplicant", "alias": "stg_demand_portalapplicant", "checksum": {"name": "sha256", "checksum": "ecc536601011cb9cac142757c01e2330ce37691d79b178ef75a5655f25ab9c55"}, "tags": ["dw", "staging", "arriendoasegurado"], "refs": [], "sources": [["raw_stage", "demand_portalapplicant"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/arriendoasegurado/stg_demand_portalapplicant.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "arriendoasegurado"]}, "created_at": 1654784475.3852742, "compiled_sql": "select * \nfrom \"houmdw_prod\".\"raw_stage\".\"demand_portalapplicant\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_demand_portalapplicant\""}, "model.houm.stg_users": {"raw_sql": "select * \r\nfrom {{ source('raw_stage', 'users') }}\r\n--where audit_end_dt is null and audit_action != 'D'", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.raw_stage.users"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "arriendoasegurado"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "arriendoasegurado", "stg_users"], "unique_id": "model.houm.stg_users", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "staging/arriendoasegurado/stg_users.sql", "original_file_path": "models/staging/arriendoasegurado/stg_users.sql", "name": "stg_users", "alias": "stg_users", "checksum": {"name": "sha256", "checksum": "92c0a358410b0ad7689347ed0513fc34ec94232fde85c260648e8b1d0db89b80"}, "tags": ["dw", "staging", "arriendoasegurado"], "refs": [], "sources": [["raw_stage", "users"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/arriendoasegurado/stg_users.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "arriendoasegurado"]}, "created_at": 1654784475.386977, "compiled_sql": "select * \nfrom \"houmdw_prod\".\"raw_stage\".\"users\"\n--where audit_end_dt is null and audit_action != 'D'", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_users\""}, "model.houm.stg_scheduler_scheduletypes": {"raw_sql": "select * \nfrom {{ source('raw_stage', 'scheduler_scheduletypes') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.raw_stage.scheduler_scheduletypes"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "arriendoasegurado"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "arriendoasegurado", "stg_scheduler_scheduletypes"], "unique_id": "model.houm.stg_scheduler_scheduletypes", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "staging/arriendoasegurado/stg_scheduler_scheduletypes.sql", "original_file_path": "models/staging/arriendoasegurado/stg_scheduler_scheduletypes.sql", "name": "stg_scheduler_scheduletypes", "alias": "stg_scheduler_scheduletypes", "checksum": {"name": "sha256", "checksum": "52fd20f1fe32e75e08e4ca0c0d00082630ac35c6f4849d71d7d2574f0ad26b5c"}, "tags": ["dw", "staging", "arriendoasegurado"], "refs": [], "sources": [["raw_stage", "scheduler_scheduletypes"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/arriendoasegurado/stg_scheduler_scheduletypes.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "arriendoasegurado"]}, "created_at": 1654784475.388509, "compiled_sql": "select * \nfrom \"houmdw_prod\".\"raw_stage\".\"scheduler_scheduletypes\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_scheduler_scheduletypes\""}, "model.houm.stg_properties_location": {"raw_sql": "select * \nfrom {{ source('raw_stage', 'properties_location') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.raw_stage.properties_location"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "arriendoasegurado"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "arriendoasegurado", "stg_properties_location"], "unique_id": "model.houm.stg_properties_location", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "staging/arriendoasegurado/stg_properties_location.sql", "original_file_path": "models/staging/arriendoasegurado/stg_properties_location.sql", "name": "stg_properties_location", "alias": "stg_properties_location", "checksum": {"name": "sha256", "checksum": "1b58c502f46fae77c60c3ffd3e7b1288013befa7caf12bb7a7ee7da409ee3b40"}, "tags": ["dw", "staging", "arriendoasegurado"], "refs": [], "sources": [["raw_stage", "properties_location"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/arriendoasegurado/stg_properties_location.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "arriendoasegurado"]}, "created_at": 1654784475.390034, "compiled_sql": "select * \nfrom \"houmdw_prod\".\"raw_stage\".\"properties_location\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_properties_location\""}, "model.houm.stg_scheduler_schedulehasapplicant": {"raw_sql": "select * \nfrom {{ source('raw_stage', 'scheduler_schedulehasapplicant') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.raw_stage.scheduler_schedulehasapplicant"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "arriendoasegurado"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "arriendoasegurado", "stg_scheduler_schedulehasapplicant"], "unique_id": "model.houm.stg_scheduler_schedulehasapplicant", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "staging/arriendoasegurado/stg_scheduler_schedulehasapplicant.sql", "original_file_path": "models/staging/arriendoasegurado/stg_scheduler_schedulehasapplicant.sql", "name": "stg_scheduler_schedulehasapplicant", "alias": "stg_scheduler_schedulehasapplicant", "checksum": {"name": "sha256", "checksum": "3602c96936bd833c4196b85d8c5b67df01c08fd790e0b5a06af957afc0b8aa68"}, "tags": ["dw", "staging", "arriendoasegurado"], "refs": [], "sources": [["raw_stage", "scheduler_schedulehasapplicant"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/arriendoasegurado/stg_scheduler_schedulehasapplicant.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "arriendoasegurado"]}, "created_at": 1654784475.391555, "compiled_sql": "select * \nfrom \"houmdw_prod\".\"raw_stage\".\"scheduler_schedulehasapplicant\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_scheduler_schedulehasapplicant\""}, "model.houm.stg_properties": {"raw_sql": "select * \nfrom {{ source('raw_stage', 'properties') }}\n--where audit_end_dt is null  and audit_action != 'D'", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.raw_stage.properties"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "arriendoasegurado"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "arriendoasegurado", "stg_properties"], "unique_id": "model.houm.stg_properties", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "staging/arriendoasegurado/stg_properties.sql", "original_file_path": "models/staging/arriendoasegurado/stg_properties.sql", "name": "stg_properties", "alias": "stg_properties", "checksum": {"name": "sha256", "checksum": "836609a5c877f6d12f094d49a2c4820bfb3e94dd5f6379107b9d5069b94e31cc"}, "tags": ["dw", "staging", "arriendoasegurado"], "refs": [], "sources": [["raw_stage", "properties"]], "description": "This informaton is collected by the Houm Backend. the database arriendoasegurado", "columns": {"id": {"name": "id", "description": "This is a unique identifier for the properties at Houm.", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "houm://models/staging/schema.yml", "compiled_path": "target/compiled/houm/models/staging/arriendoasegurado/stg_properties.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "arriendoasegurado"]}, "created_at": 1654784475.6589, "compiled_sql": "select * \nfrom \"houmdw_prod\".\"raw_stage\".\"properties\"\n--where audit_end_dt is null  and audit_action != 'D'", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_properties\""}, "model.houm.stg_demand_lead": {"raw_sql": "select *\nfrom {{ source('raw_stage', 'demand_lead') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.raw_stage.demand_lead"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "arriendoasegurado"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "arriendoasegurado", "stg_demand_lead"], "unique_id": "model.houm.stg_demand_lead", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "staging/arriendoasegurado/stg_demand_lead.sql", "original_file_path": "models/staging/arriendoasegurado/stg_demand_lead.sql", "name": "stg_demand_lead", "alias": "stg_demand_lead", "checksum": {"name": "sha256", "checksum": "223c057a04b62545e2a2a133429bb0d807ef9e9c479f18c0ab9c2ec55fc26044"}, "tags": ["dw", "staging", "arriendoasegurado"], "refs": [], "sources": [["raw_stage", "demand_lead"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/arriendoasegurado/stg_demand_lead.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "arriendoasegurado"]}, "created_at": 1654784475.3948438, "compiled_sql": "select *\nfrom \"houmdw_prod\".\"raw_stage\".\"demand_lead\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_demand_lead\""}, "model.houm.stg_property_salesdetails": {"raw_sql": "select * \nfrom {{ source('raw_stage', 'properties_salesdetails') }}\n--where audit_end_dt is null  and audit_action != 'D'", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.raw_stage.properties_salesdetails"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "arriendoasegurado"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "arriendoasegurado", "stg_property_salesdetails"], "unique_id": "model.houm.stg_property_salesdetails", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "staging/arriendoasegurado/stg_property_salesdetails.sql", "original_file_path": "models/staging/arriendoasegurado/stg_property_salesdetails.sql", "name": "stg_property_salesdetails", "alias": "stg_property_salesdetails", "checksum": {"name": "sha256", "checksum": "854815a0f2f90b20a9829ea35ae100cc42aa2b082c8c3f297c4c2085ecf61b89"}, "tags": ["dw", "staging", "arriendoasegurado"], "refs": [], "sources": [["raw_stage", "properties_salesdetails"]], "description": "This informaton is collected by the Houm Backend. the database arriendoasegurado", "columns": {"property_id": {"name": "property_id", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "houm://models/staging/schema.yml", "compiled_path": "target/compiled/houm/models/staging/arriendoasegurado/stg_property_salesdetails.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "arriendoasegurado"]}, "created_at": 1654784475.660289, "compiled_sql": "select * \nfrom \"houmdw_prod\".\"raw_stage\".\"properties_salesdetails\"\n--where audit_end_dt is null  and audit_action != 'D'", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_property_salesdetails\""}, "model.houm.stg_homecheckerdetails": {"raw_sql": "select * \nfrom {{ source('historical', 'historical_arriendoasegurado_homecheckerdetails') }}\nwhere audit_end_dt is null  and audit_action != 'D'", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.historical.historical_arriendoasegurado_homecheckerdetails"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "arriendoasegurado"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "arriendoasegurado", "stg_homecheckerdetails"], "unique_id": "model.houm.stg_homecheckerdetails", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "staging/arriendoasegurado/stg_homecheckerdetails.sql", "original_file_path": "models/staging/arriendoasegurado/stg_homecheckerdetails.sql", "name": "stg_homecheckerdetails", "alias": "stg_homecheckerdetails", "checksum": {"name": "sha256", "checksum": "a26fb651c6570e56778aff4db76eb3549b642d287227ceb3119a9631859128b5"}, "tags": ["dw", "staging", "arriendoasegurado"], "refs": [], "sources": [["historical", "historical_arriendoasegurado_homecheckerdetails"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/arriendoasegurado/stg_homecheckerdetails.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "arriendoasegurado"]}, "created_at": 1654784475.397919, "compiled_sql": "select * \nfrom \"houmdw_prod\".\"historical\".\"historical_arriendoasegurado_homecheckerdetails\"\nwhere audit_end_dt is null  and audit_action != 'D'", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_homecheckerdetails\""}, "model.houm.stg_macrozone": {"raw_sql": "Select \n    id  \n\t, created_at\n\t, updated_at\n\t, name\n\t, description\n    , country\n\t, city\n\t, city_marketplace_id\n    , polygon \n    , timezone\nFROM {{ source('raw_stage', 'scheduler_macrozone') }} a\nWhere country not like '_rasil'\n\n--WHERE audit_end_dt IS NULL and country not like '_rasil'\n--AND audit_action <> 'D'", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.raw_stage.scheduler_macrozone"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "arriendoasegurado"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "arriendoasegurado", "stg_macrozone"], "unique_id": "model.houm.stg_macrozone", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "staging/arriendoasegurado/stg_macrozone.sql", "original_file_path": "models/staging/arriendoasegurado/stg_macrozone.sql", "name": "stg_macrozone", "alias": "stg_macrozone", "checksum": {"name": "sha256", "checksum": "0d2395fc0ecd1dd13af37d3b345d7097ea132877ab13059884bba897057b19d1"}, "tags": ["dw", "staging", "arriendoasegurado"], "refs": [], "sources": [["raw_stage", "scheduler_macrozone"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/arriendoasegurado/stg_macrozone.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "arriendoasegurado"]}, "created_at": 1654784475.399632, "compiled_sql": "Select \n    id  \n\t, created_at\n\t, updated_at\n\t, name\n\t, description\n    , country\n\t, city\n\t, city_marketplace_id\n    , polygon \n    , timezone\nFROM \"houmdw_prod\".\"raw_stage\".\"scheduler_macrozone\" a\nWhere country not like '_rasil'\n\n--WHERE audit_end_dt IS NULL and country not like '_rasil'\n--AND audit_action <> 'D'", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_macrozone\""}, "model.houm.stg_plans": {"raw_sql": "select * \nfrom {{ source('historical', 'historical_plans') }}\nwhere audit_end_dt is null  and audit_action != 'D'", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.historical.historical_plans"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "arriendoasegurado"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "arriendoasegurado", "stg_plans"], "unique_id": "model.houm.stg_plans", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "staging/arriendoasegurado/stg_plans.sql", "original_file_path": "models/staging/arriendoasegurado/stg_plans.sql", "name": "stg_plans", "alias": "stg_plans", "checksum": {"name": "sha256", "checksum": "1864e5e50492b03ee4708dab95e3b3ad1c58615fbffc4d6228ceb9770009d7f7"}, "tags": ["dw", "staging", "arriendoasegurado"], "refs": [], "sources": [["historical", "historical_plans"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/arriendoasegurado/stg_plans.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "arriendoasegurado"]}, "created_at": 1654784475.401163, "compiled_sql": "select * \nfrom \"houmdw_prod\".\"historical\".\"historical_plans\"\nwhere audit_end_dt is null  and audit_action != 'D'", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_plans\""}, "model.houm.stg_propertydetails": {"raw_sql": "select * \nfrom {{ source('raw_stage', 'arriendoasegurado_propertydetails') }}\n--where audit_end_dt is null and audit_action != 'D'", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.raw_stage.arriendoasegurado_propertydetails"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "arriendoasegurado"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "arriendoasegurado", "stg_propertydetails"], "unique_id": "model.houm.stg_propertydetails", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "staging/arriendoasegurado/stg_propertydetails.sql", "original_file_path": "models/staging/arriendoasegurado/stg_propertydetails.sql", "name": "stg_propertydetails", "alias": "stg_propertydetails", "checksum": {"name": "sha256", "checksum": "625926357afc2e4655d69a27e1aadc6c2f27479e1cb56867a737f591af48fdbe"}, "tags": ["dw", "staging", "arriendoasegurado"], "refs": [], "sources": [["raw_stage", "arriendoasegurado_propertydetails"]], "description": "This informaton is collected by the Houm Backend. the database arriendoasegurado", "columns": {"property_id": {"name": "property_id", "description": "This is a unique identifier for the properties details at Houm.", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "houm://models/staging/schema.yml", "compiled_path": "target/compiled/houm/models/staging/arriendoasegurado/stg_propertydetails.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "arriendoasegurado"]}, "created_at": 1654784475.6595619, "compiled_sql": "select * \nfrom \"houmdw_prod\".\"raw_stage\".\"arriendoasegurado_propertydetails\"\n--where audit_end_dt is null and audit_action != 'D'", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_propertydetails\""}, "model.houm.stg_paid_media_google_campaign_keys": {"raw_sql": "select * \nfrom {{ source('airbyte_gspread', 'campaign_keys_gg') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.airbyte_gspread.campaign_keys_gg"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "gspread", "paid_media"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "paid_media", "stg_paid_media_google_campaign_keys"], "unique_id": "model.houm.stg_paid_media_google_campaign_keys", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "staging/paid_media/stg_paid_media_google_campaign_keys.sql", "original_file_path": "models/staging/paid_media/stg_paid_media_google_campaign_keys.sql", "name": "stg_paid_media_google_campaign_keys", "alias": "stg_paid_media_google_campaign_keys", "checksum": {"name": "sha256", "checksum": "4734248123c616a9eecfc4f4646dd02763484af5eed038633ad266b70579485e"}, "tags": ["dw", "staging", "gspread", "paid_media"], "refs": [], "sources": [["airbyte_gspread", "campaign_keys_gg"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/paid_media/stg_paid_media_google_campaign_keys.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "gspread", "paid_media"]}, "created_at": 1654784475.4042041, "compiled_sql": "select * \nfrom \"houmdw_prod\".\"airbyte_gspread\".\"campaign_keys_gg\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_paid_media_google_campaign_keys\""}, "model.houm.stg_tmp_marketing_pipedrive_data": {"raw_sql": "select * \nfrom {{ source('airbyte_gspread', 'data') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.airbyte_gspread.data"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "gspread", "paid_media"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "paid_media", "stg_tmp_marketing_pipedrive_data"], "unique_id": "model.houm.stg_tmp_marketing_pipedrive_data", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "staging/paid_media/stg_tmp_marketing_pipedrive_data.sql", "original_file_path": "models/staging/paid_media/stg_tmp_marketing_pipedrive_data.sql", "name": "stg_tmp_marketing_pipedrive_data", "alias": "stg_tmp_marketing_pipedrive_data", "checksum": {"name": "sha256", "checksum": "7900d159fc2daa338db88294137a473736f15f2057a0c56814ff6e1c03dd8c58"}, "tags": ["dw", "staging", "gspread", "paid_media"], "refs": [], "sources": [["airbyte_gspread", "data"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/paid_media/stg_tmp_marketing_pipedrive_data.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "gspread", "paid_media"]}, "created_at": 1654784475.4059432, "compiled_sql": "select * \nfrom \"houmdw_prod\".\"airbyte_gspread\".\"data\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_tmp_marketing_pipedrive_data\""}, "model.houm.stg_paid_media_facebook_campaigns": {"raw_sql": "select\n    *\nfrom\n    {{ source('airbyte_gspread','bb_fb')}}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.airbyte_gspread.bb_fb"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "gspread", "paid_media"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "paid_media", "stg_paid_media_facebook_campaigns"], "unique_id": "model.houm.stg_paid_media_facebook_campaigns", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "staging/paid_media/stg_paid_media_facebook_campaigns.sql", "original_file_path": "models/staging/paid_media/stg_paid_media_facebook_campaigns.sql", "name": "stg_paid_media_facebook_campaigns", "alias": "stg_paid_media_facebook_campaigns", "checksum": {"name": "sha256", "checksum": "d1a6e58b4fa573f624aaa6af34d7765e72352a2f1c72806aec448e848a7eb246"}, "tags": ["dw", "staging", "gspread", "paid_media"], "refs": [], "sources": [["airbyte_gspread", "bb_fb"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/paid_media/stg_paid_media_facebook_campaigns.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "gspread", "paid_media"]}, "created_at": 1654784475.4075048, "compiled_sql": "select\n    *\nfrom\n    \"houmdw_prod\".\"airbyte_gspread\".\"bb_fb\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_paid_media_facebook_campaigns\""}, "model.houm.stg_paid_media_google_campaigns_co_mx": {"raw_sql": "select\n    *\nfrom\n    {{ source('airbyte_gspread','gg_mxco')}}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.airbyte_gspread.gg_mxco"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "gspread", "paid_media"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "paid_media", "stg_paid_media_google_campaigns_co_mx"], "unique_id": "model.houm.stg_paid_media_google_campaigns_co_mx", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "staging/paid_media/stg_paid_media_google_campaigns_co_mx.sql", "original_file_path": "models/staging/paid_media/stg_paid_media_google_campaigns_co_mx.sql", "name": "stg_paid_media_google_campaigns_co_mx", "alias": "stg_paid_media_google_campaigns_co_mx", "checksum": {"name": "sha256", "checksum": "db1bb7879e36d234a72bad6c022408837abb5b438cf8f17357301d1373acdbca"}, "tags": ["dw", "staging", "gspread", "paid_media"], "refs": [], "sources": [["airbyte_gspread", "gg_mxco"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/paid_media/stg_paid_media_google_campaigns_co_mx.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "gspread", "paid_media"]}, "created_at": 1654784475.409048, "compiled_sql": "select\n    *\nfrom\n    \"houmdw_prod\".\"airbyte_gspread\".\"gg_mxco\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_paid_media_google_campaigns_co_mx\""}, "model.houm.stg_paid_media_ad_groups": {"raw_sql": "select\n    *\nfrom\n    {{ source('airbyte_gspread','anuncios')}}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.airbyte_gspread.anuncios"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "gspread", "paid_media"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "paid_media", "stg_paid_media_ad_groups"], "unique_id": "model.houm.stg_paid_media_ad_groups", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "staging/paid_media/stg_paid_media_ad_groups.sql", "original_file_path": "models/staging/paid_media/stg_paid_media_ad_groups.sql", "name": "stg_paid_media_ad_groups", "alias": "stg_paid_media_ad_groups", "checksum": {"name": "sha256", "checksum": "ebb26cf0dddec05b20b47ea665af59403c48660352fd34d87a255bedc6c3d1be"}, "tags": ["dw", "staging", "gspread", "paid_media"], "refs": [], "sources": [["airbyte_gspread", "anuncios"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/paid_media/stg_paid_media_ad_groups.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "gspread", "paid_media"]}, "created_at": 1654784475.410804, "compiled_sql": "select\n    *\nfrom\n    \"houmdw_prod\".\"airbyte_gspread\".\"anuncios\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_paid_media_ad_groups\""}, "model.houm.stg_paid_media_facebook_campaign_keys": {"raw_sql": "select * \nfrom {{ source('airbyte_gspread', 'campaign_keys_fb') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.airbyte_gspread.campaign_keys_fb"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "gspread", "paid_media"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "paid_media", "stg_paid_media_facebook_campaign_keys"], "unique_id": "model.houm.stg_paid_media_facebook_campaign_keys", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "staging/paid_media/stg_paid_media_facebook_campaign_keys.sql", "original_file_path": "models/staging/paid_media/stg_paid_media_facebook_campaign_keys.sql", "name": "stg_paid_media_facebook_campaign_keys", "alias": "stg_paid_media_facebook_campaign_keys", "checksum": {"name": "sha256", "checksum": "f81289c6cd6eb0fe5a3774d82c2c61d89cb9b6f091108fc56996ff6d47dfab93"}, "tags": ["dw", "staging", "gspread", "paid_media"], "refs": [], "sources": [["airbyte_gspread", "campaign_keys_fb"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/paid_media/stg_paid_media_facebook_campaign_keys.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "gspread", "paid_media"]}, "created_at": 1654784475.412352, "compiled_sql": "select * \nfrom \"houmdw_prod\".\"airbyte_gspread\".\"campaign_keys_fb\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_paid_media_facebook_campaign_keys\""}, "model.houm.stg_paid_media_google_campaigns_cl": {"raw_sql": "select\n    *\nfrom\n    {{ source('airbyte_gspread','gg_cl')}}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.airbyte_gspread.gg_cl"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "gspread", "paid_media"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "paid_media", "stg_paid_media_google_campaigns_cl"], "unique_id": "model.houm.stg_paid_media_google_campaigns_cl", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "staging/paid_media/stg_paid_media_google_campaigns_cl.sql", "original_file_path": "models/staging/paid_media/stg_paid_media_google_campaigns_cl.sql", "name": "stg_paid_media_google_campaigns_cl", "alias": "stg_paid_media_google_campaigns_cl", "checksum": {"name": "sha256", "checksum": "cad01e72b30e470f868dad71788b45054e606f38cac297d2b4bbbdd3532fd785"}, "tags": ["dw", "staging", "gspread", "paid_media"], "refs": [], "sources": [["airbyte_gspread", "gg_cl"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/paid_media/stg_paid_media_google_campaigns_cl.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "gspread", "paid_media"]}, "created_at": 1654784475.413898, "compiled_sql": "select\n    *\nfrom\n    \"houmdw_prod\".\"airbyte_gspread\".\"gg_cl\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_paid_media_google_campaigns_cl\""}, "model.houm.stg_zendesk_metrics": {"raw_sql": "SELECT id\n\t\t,created_at \n\t\t,updated_at \n\t\t,assigned_at \n\t\t,assignee_updated_at \n\t\t,url\n\t\t,\"time\"\n\t\t,\"type\"\n\t\t,metric\n\t\t,status\n\t\t,reopens\n\t\t,replies\n\t\t,solved_at\n\t\t,ticket_id\n\t\t,instance_id \n\t\t,group_stations \n\t\t,status_updated_at \n\t\t,requester_updated_at \n\t\t,initially_assigned_at\n\t\t,latest_comment_added_at\n\t\t,json_extract_path_text(reply_time_in_minutes, 'calendar') as reply_time_in_minutes \n\t\t,json_extract_path_text(on_hold_time_in_minutes, 'calendar') as on_hold_time_in_minutes \n\t\t,json_extract_path_text(agent_wait_time_in_minutes, 'calendar') as agent_wait_time_in_minutes \n\t\t,json_extract_path_text(requester_wait_time_in_minutes, 'calendar') as requester_wait_time_in_minutes \n\t\t,json_extract_path_text(full_resolution_time_in_minutes, 'calendar') as full_resolution_time_in_minutes\n\t\t,json_extract_path_text(first_resolution_time_in_minutes, 'calendar') as first_resolution_time_in_minutes\nFROM\n    {{ source('airbyte_zendesk','ticket_metrics') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.airbyte_zendesk.ticket_metrics"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "zendesk"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "zendesk", "stg_zendesk_metrics"], "unique_id": "model.houm.stg_zendesk_metrics", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "staging/zendesk/stg_zendesk_metrics.sql", "original_file_path": "models/staging/zendesk/stg_zendesk_metrics.sql", "name": "stg_zendesk_metrics", "alias": "stg_zendesk_metrics", "checksum": {"name": "sha256", "checksum": "9e756438ef0de00239e906f66afb1cfae117bc45d1a535a39f233783118f3393"}, "tags": ["dw", "staging", "zendesk"], "refs": [], "sources": [["airbyte_zendesk", "ticket_metrics"]], "description": "Table with commons metrics about the tickets, more info consult:\n\nhttps://developer.zendesk.com/api-reference/ticketing/tickets/ticket_metrics/\n\nThe important columns are:\n- assigned_at: *When the ticket was assigned*\n- created_at: *When the ticket was created*\n- first_resolution_time_in_minutes\n- full_resolution_time_in_minutes\n- latest_comment_added_at\n- initially_assigned_at: *When the ticket was initially assigned*\n- agent_wait_time_in_minutes: *Number of minutes the agent spent waiting during calendar and business hours* \n- solved_at: *When the ticket was solved*\n- ticket_id: unique id of the tickets. ** Can be related with the table tickets_audits or tickets.**", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": "houm://models/staging/schema.yml", "compiled_path": "target/compiled/houm/models/staging/zendesk/stg_zendesk_metrics.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "zendesk"]}, "created_at": 1654784475.668683, "compiled_sql": "SELECT id\n\t\t,created_at \n\t\t,updated_at \n\t\t,assigned_at \n\t\t,assignee_updated_at \n\t\t,url\n\t\t,\"time\"\n\t\t,\"type\"\n\t\t,metric\n\t\t,status\n\t\t,reopens\n\t\t,replies\n\t\t,solved_at\n\t\t,ticket_id\n\t\t,instance_id \n\t\t,group_stations \n\t\t,status_updated_at \n\t\t,requester_updated_at \n\t\t,initially_assigned_at\n\t\t,latest_comment_added_at\n\t\t,json_extract_path_text(reply_time_in_minutes, 'calendar') as reply_time_in_minutes \n\t\t,json_extract_path_text(on_hold_time_in_minutes, 'calendar') as on_hold_time_in_minutes \n\t\t,json_extract_path_text(agent_wait_time_in_minutes, 'calendar') as agent_wait_time_in_minutes \n\t\t,json_extract_path_text(requester_wait_time_in_minutes, 'calendar') as requester_wait_time_in_minutes \n\t\t,json_extract_path_text(full_resolution_time_in_minutes, 'calendar') as full_resolution_time_in_minutes\n\t\t,json_extract_path_text(first_resolution_time_in_minutes, 'calendar') as first_resolution_time_in_minutes\nFROM\n    \"houmdw_prod\".\"airbyte_zendesk\".\"ticket_metrics\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_zendesk_metrics\""}, "model.houm.stg_zendesk_tickets_audits_events": {"raw_sql": "select ta.id\n\t\t,ta.created_at \n\t\t,ta.ticket_id \n\t\t,ta.author_id \n\t\t--,ta.via \n\t\t--,ta.events \n\t\t--,ta._airbyte_ticket_audits_hashid\n\t\t,tae.id as event_id \n\t\t,tae.plain_body\n\t\t,tae.type\n\t\t,tae.value \n\t\t,tae.public\n\t\t,tae.subject\n\t\t,tae.trusted\n\t\t,tae.audit_id \n\t\t,tae.macro_id \n\t\t,tae.macro_title \n\t\t,tae.resource \n\t\t,tae.author_id as event_author_id\n\t\t,tae.recipients \n\t\t,tae.previous_value\nFROM\n    {{ source('airbyte_zendesk','ticket_audits') }} ta\nLEFT JOIN {{ source('airbyte_zendesk','ticket_audits_events') }} tae on ta.\"_airbyte_ticket_audits_hashid\"  = tae.\"_airbyte_ticket_audits_hashid\"\norder by ta.created_at,tae.id asc", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.airbyte_zendesk.ticket_audits", "source.houm.airbyte_zendesk.ticket_audits_events"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "zendesk"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "zendesk", "stg_zendesk_tickets_audits_events"], "unique_id": "model.houm.stg_zendesk_tickets_audits_events", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "staging/zendesk/stg_zendesk_tickets_audits_events.sql", "original_file_path": "models/staging/zendesk/stg_zendesk_tickets_audits_events.sql", "name": "stg_zendesk_tickets_audits_events", "alias": "stg_zendesk_tickets_audits_events", "checksum": {"name": "sha256", "checksum": "2b05986aea49d16042749d5bcee905ece998d5608050fb94ffe14cd54dc1882e"}, "tags": ["dw", "staging", "zendesk"], "refs": [], "sources": [["airbyte_zendesk", "ticket_audits"], ["airbyte_zendesk", "ticket_audits_events"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/zendesk/stg_zendesk_tickets_audits_events.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "zendesk"]}, "created_at": 1654784475.41714, "compiled_sql": "select ta.id\n\t\t,ta.created_at \n\t\t,ta.ticket_id \n\t\t,ta.author_id \n\t\t--,ta.via \n\t\t--,ta.events \n\t\t--,ta._airbyte_ticket_audits_hashid\n\t\t,tae.id as event_id \n\t\t,tae.plain_body\n\t\t,tae.type\n\t\t,tae.value \n\t\t,tae.public\n\t\t,tae.subject\n\t\t,tae.trusted\n\t\t,tae.audit_id \n\t\t,tae.macro_id \n\t\t,tae.macro_title \n\t\t,tae.resource \n\t\t,tae.author_id as event_author_id\n\t\t,tae.recipients \n\t\t,tae.previous_value\nFROM\n    \"houmdw_prod\".\"airbyte_zendesk\".\"ticket_audits\" ta\nLEFT JOIN \"houmdw_prod\".\"airbyte_zendesk\".\"ticket_audits_events\" tae on ta.\"_airbyte_ticket_audits_hashid\"  = tae.\"_airbyte_ticket_audits_hashid\"\norder by ta.created_at,tae.id asc", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_zendesk_tickets_audits_events\""}, "model.houm.stg_zendesk_users": {"raw_sql": "select \tid\n\t\t,created_at \n\t\t,updated_at \n\t\t,email\n\t\t,name\n\t\t,phone\n\t\t,time_zone \n\t\t,default_group_id \n\t\t,role\n\t\t,active\n\t\t,suspended \n\t\t,restricted_agent \n\t\t,verified \n\t\t,organization_id \n\t\t,signature \n\t\t,custom_role_id \n\t\t,tags \n\t\t,external_id \n\t\t,two_factor_auth_enabled \n\t\t,last_login_at \n\t\t,moderator  \n\t\t,json_extract_path_text(user_fields, 'nombre') as user_fields_nombre\n\t\t,json_extract_path_text(user_fields, 'id_de_propiedad') as user_fields_id_de_propiedad\n\t\t,json_extract_path_text(user_fields, 'tipo_de_usuario') as user_fields_tipo_de_usuario\n\t\t,json_extract_path_text(user_fields, 'whatsapp') as user_fields_whatsapp\n\t\t,json_extract_path_text(user_fields, 'rut') as user_fields_rut\n\t\t,json_extract_path_text(user_fields, 'id_suscripcin') as user_fields_id_suscripcin\n\t\t,json_extract_path_text(user_fields, 'social_messaging_user_info') as user_fields_social_messaging_user_info\n\t\t,concat('https://houm.zendesk.com/agent/users/',id) as url\nfrom {{ source('airbyte_zendesk','users') }} a\norder by updated_at  desc", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.airbyte_zendesk.users"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "zendesk"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "zendesk", "stg_zendesk_users"], "unique_id": "model.houm.stg_zendesk_users", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "staging/zendesk/stg_zendesk_users.sql", "original_file_path": "models/staging/zendesk/stg_zendesk_users.sql", "name": "stg_zendesk_users", "alias": "stg_zendesk_users", "checksum": {"name": "sha256", "checksum": "d3943e109d855792cb41b06904d02f5906cdbb741a6978f863308a0af8d2f940"}, "tags": ["dw", "staging", "zendesk"], "refs": [], "sources": [["airbyte_zendesk", "users"]], "description": "This is a processed model with information from zendesk. Consolidates the agents and customers. The more important columns are:\n- id: *unique user id at zendesk Houm*\n- email: *email of the user*\n- role: *the role of the user*\n- tags\n- user_fields_id_de_propiedad\n- user_fields_tipo_de_usuario\n- user_fields_id_suscripcin\n- user_fields_social_messaging_user_info\n- user_fields_nombre\n- user_fields_rut", "columns": {"id": {"name": "id", "description": "This is a unique identifier for the users at Houm Zendesk, related columns in ** zendesk_tickets ** table :\n- submitter_id\n- requester_id\n- assignee_id", "meta": {}, "data_type": null, "quote": null, "tags": []}, "created_at": {"name": "created_at", "description": "This is a timestamp for the created time of the user", "meta": {}, "data_type": null, "quote": null, "tags": []}, "updated_at": {"name": "updated_at", "description": "This is a timestamp for the last update of the user", "meta": {}, "data_type": null, "quote": null, "tags": []}, "email": {"name": "email", "description": "This is contact email of the users", "meta": {}, "data_type": null, "quote": null, "tags": []}, "name": {"name": "name", "description": "This is the name of the users", "meta": {}, "data_type": null, "quote": null, "tags": []}, "phone": {"name": "phone", "description": "This is contact phone of the users", "meta": {}, "data_type": null, "quote": null, "tags": []}, "timezone": {"name": "timezone", "description": "This the timezone setted in zendesk for the user", "meta": {}, "data_type": null, "quote": null, "tags": []}, "default_group_id": {"name": "default_group_id", "description": "this a identifier of the group the user is a member of", "meta": {}, "data_type": null, "quote": null, "tags": []}, "role": {"name": "role", "description": "This a identifier role of the user in me.houm, matches the user in the users houm tables", "meta": {}, "data_type": null, "quote": null, "tags": []}, "active": {"name": "active", "description": "Flag to know if it is active or not", "meta": {}, "data_type": null, "quote": null, "tags": []}, "tags": {"name": "tags", "description": "Array of the selected tags in the form ticket", "meta": {}, "data_type": null, "quote": null, "tags": []}, "user_fields_id_de_propiedad": {"name": "user_fields_id_de_propiedad", "description": "This is a custom field identify property_id", "meta": {}, "data_type": null, "quote": null, "tags": []}, "user_fields_tipo_de_usuario": {"name": "user_fields_tipo_de_usuario", "description": "This is a custom field identify role of the user", "meta": {}, "data_type": null, "quote": null, "tags": []}, "user_fields_whatsapp": {"name": "user_fields_whatsapp", "description": "This is a custom field identify contact phone", "meta": {}, "data_type": null, "quote": null, "tags": []}, "user_fields_id_suscripcin": {"name": "user_fields_id_suscripcin", "description": "This is a custom field identify suscription_id of the user", "meta": {}, "data_type": null, "quote": null, "tags": []}, "user_fields_nombre": {"name": "user_fields_nombre", "description": "This is a custom field identify name + property id", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "houm://models/staging/schema.yml", "compiled_path": "target/compiled/houm/models/staging/zendesk/stg_zendesk_users.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "zendesk"]}, "created_at": 1654784475.6650612, "compiled_sql": "select \tid\n\t\t,created_at \n\t\t,updated_at \n\t\t,email\n\t\t,name\n\t\t,phone\n\t\t,time_zone \n\t\t,default_group_id \n\t\t,role\n\t\t,active\n\t\t,suspended \n\t\t,restricted_agent \n\t\t,verified \n\t\t,organization_id \n\t\t,signature \n\t\t,custom_role_id \n\t\t,tags \n\t\t,external_id \n\t\t,two_factor_auth_enabled \n\t\t,last_login_at \n\t\t,moderator  \n\t\t,json_extract_path_text(user_fields, 'nombre') as user_fields_nombre\n\t\t,json_extract_path_text(user_fields, 'id_de_propiedad') as user_fields_id_de_propiedad\n\t\t,json_extract_path_text(user_fields, 'tipo_de_usuario') as user_fields_tipo_de_usuario\n\t\t,json_extract_path_text(user_fields, 'whatsapp') as user_fields_whatsapp\n\t\t,json_extract_path_text(user_fields, 'rut') as user_fields_rut\n\t\t,json_extract_path_text(user_fields, 'id_suscripcin') as user_fields_id_suscripcin\n\t\t,json_extract_path_text(user_fields, 'social_messaging_user_info') as user_fields_social_messaging_user_info\n\t\t,concat('https://houm.zendesk.com/agent/users/',id) as url\nfrom \"houmdw_prod\".\"airbyte_zendesk\".\"users\" a\norder by updated_at  desc", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_zendesk_users\""}, "model.houm.stg_zendesk_tickets_audits_via": {"raw_sql": "select ta.id\n\t\t,ta.created_at \n\t\t,ta.ticket_id \n\t\t,ta.author_id \n\t\t,tav.\"source\" \n\t\t,tav.channel \n\t\t,tavsf.name source_from_name\n\t\t,tavsf.address  source_from_address\n\t\t,tavst.name source_to_name\n\t\t,tavst.address  source_to_address\nfrom {{ source('airbyte_zendesk','ticket_audits') }} ta\nLEFT JOIN {{ source('airbyte_zendesk','ticket_audits_via') }} tav on ta.\"_airbyte_ticket_audits_hashid\"  = tav.\"_airbyte_ticket_audits_hashid\" \nLEFT JOIN {{ source('airbyte_zendesk','ticket_audits_via_source') }} tavs on tav.\"_airbyte_via_hashid\"  = tavs.\"_airbyte_via_hashid\"\nLEFT JOIN {{ source('airbyte_zendesk','ticket_audits_via_source_to') }} tavst on tavs.\"_airbyte_source_hashid\"  = tavst.\"_airbyte_source_hashid\" \nLEFT JOIN {{ source('airbyte_zendesk','ticket_audits_via_source_from') }} tavsf on tavs.\"_airbyte_source_hashid\"  = tavsf.\"_airbyte_source_hashid\" \nORDER BY ta.created_at--,tae.id asc", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.airbyte_zendesk.ticket_audits_via_source_to", "source.houm.airbyte_zendesk.ticket_audits", "source.houm.airbyte_zendesk.ticket_audits_via_source", "source.houm.airbyte_zendesk.ticket_audits_via_source_from", "source.houm.airbyte_zendesk.ticket_audits_via"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "zendesk"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "zendesk", "stg_zendesk_tickets_audits_via"], "unique_id": "model.houm.stg_zendesk_tickets_audits_via", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "staging/zendesk/stg_zendesk_tickets_audits_via.sql", "original_file_path": "models/staging/zendesk/stg_zendesk_tickets_audits_via.sql", "name": "stg_zendesk_tickets_audits_via", "alias": "stg_zendesk_tickets_audits_via", "checksum": {"name": "sha256", "checksum": "e95922e4131b90ce9dcab6132a061001be9d70e8566d66bb9de2d3b360f43725"}, "tags": ["dw", "staging", "zendesk"], "refs": [], "sources": [["airbyte_zendesk", "ticket_audits_via_source_to"], ["airbyte_zendesk", "ticket_audits"], ["airbyte_zendesk", "ticket_audits_via_source"], ["airbyte_zendesk", "ticket_audits_via_source_from"], ["airbyte_zendesk", "ticket_audits_via"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/zendesk/stg_zendesk_tickets_audits_via.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "zendesk"]}, "created_at": 1654784475.420715, "compiled_sql": "select ta.id\n\t\t,ta.created_at \n\t\t,ta.ticket_id \n\t\t,ta.author_id \n\t\t,tav.\"source\" \n\t\t,tav.channel \n\t\t,tavsf.name source_from_name\n\t\t,tavsf.address  source_from_address\n\t\t,tavst.name source_to_name\n\t\t,tavst.address  source_to_address\nfrom \"houmdw_prod\".\"airbyte_zendesk\".\"ticket_audits\" ta\nLEFT JOIN \"houmdw_prod\".\"airbyte_zendesk\".\"ticket_audits_via\" tav on ta.\"_airbyte_ticket_audits_hashid\"  = tav.\"_airbyte_ticket_audits_hashid\" \nLEFT JOIN \"houmdw_prod\".\"airbyte_zendesk\".\"ticket_audits_via_source\" tavs on tav.\"_airbyte_via_hashid\"  = tavs.\"_airbyte_via_hashid\"\nLEFT JOIN \"houmdw_prod\".\"airbyte_zendesk\".\"ticket_audits_via_source_to\" tavst on tavs.\"_airbyte_source_hashid\"  = tavst.\"_airbyte_source_hashid\" \nLEFT JOIN \"houmdw_prod\".\"airbyte_zendesk\".\"ticket_audits_via_source_from\" tavsf on tavs.\"_airbyte_source_hashid\"  = tavsf.\"_airbyte_source_hashid\" \nORDER BY ta.created_at--,tae.id asc", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_zendesk_tickets_audits_via\""}, "model.houm.stg_zendesk_tickets_comments": {"raw_sql": "select \t\n\tid,\n\tvia,\n\tjson_extract_path_text(via,'channel') as channel,\n\tjson_extract_path_text(json_extract_path_text(json_extract_path_text(via,'source'),'from'),'address') as requester,\n\tjson_extract_path_text(json_extract_path_text(json_extract_path_text(via,'source'),'to'),'address') as requested_to,\n\tbody,\n\taudit_id,\n\tauthor_id,\n\tticket_id,\n\tcreated_at,\n\tplain_body,\n\tattachments\nfrom {{ source('airbyte_zendesk','ticket_comments') }} a", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.airbyte_zendesk.ticket_comments"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "zendesk"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "zendesk", "stg_zendesk_tickets_comments"], "unique_id": "model.houm.stg_zendesk_tickets_comments", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "staging/zendesk/stg_zendesk_tickets_comments.sql", "original_file_path": "models/staging/zendesk/stg_zendesk_tickets_comments.sql", "name": "stg_zendesk_tickets_comments", "alias": "stg_zendesk_tickets_comments", "checksum": {"name": "sha256", "checksum": "07707f363459ef13fca4167dfc441f1623a18ecc5d4212e7672c945666a74a2a"}, "tags": ["dw", "staging", "zendesk"], "refs": [], "sources": [["airbyte_zendesk", "ticket_comments"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/zendesk/stg_zendesk_tickets_comments.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "zendesk"]}, "created_at": 1654784475.422411, "compiled_sql": "select \t\n\tid,\n\tvia,\n\tjson_extract_path_text(via,'channel') as channel,\n\tjson_extract_path_text(json_extract_path_text(json_extract_path_text(via,'source'),'from'),'address') as requester,\n\tjson_extract_path_text(json_extract_path_text(json_extract_path_text(via,'source'),'to'),'address') as requested_to,\n\tbody,\n\taudit_id,\n\tauthor_id,\n\tticket_id,\n\tcreated_at,\n\tplain_body,\n\tattachments\nfrom \"houmdw_prod\".\"airbyte_zendesk\".\"ticket_comments\" a", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_zendesk_tickets_comments\""}, "model.houm.stg_zendesk_tickets_audits": {"raw_sql": "select ta.id\n\t\t,ta.created_at \n\t\t,ta.ticket_id \n\t\t,ta.author_id \n\t\t--,ta.via \n\t\t--,ta.events \n\t\t,ta._airbyte_ticket_audits_hashid\nFROM\n    {{ source('airbyte_zendesk','ticket_audits') }} ta", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.airbyte_zendesk.ticket_audits"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "zendesk"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "zendesk", "stg_zendesk_tickets_audits"], "unique_id": "model.houm.stg_zendesk_tickets_audits", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "staging/zendesk/stg_zendesk_tickets_audits.sql", "original_file_path": "models/staging/zendesk/stg_zendesk_tickets_audits.sql", "name": "stg_zendesk_tickets_audits", "alias": "stg_zendesk_tickets_audits", "checksum": {"name": "sha256", "checksum": "a7ce1ebcf629ee50696edab50e4a4dd1a7c4da7cd13c5df764c71bbc152b7d73"}, "tags": ["dw", "staging", "zendesk"], "refs": [], "sources": [["airbyte_zendesk", "ticket_audits"]], "description": "Audits are a read-only history of all updates to a ticket. \n \t\t\t\tWhen a ticket is updated in Zendesk Support, an audit is stored. \n \t\t\t\tEach audit represents a single update to the ticket.\n  \t\t\t\tAn update can consist of one or more events, ex: \t\n  \t\t\t\t\t\t\t\t\t\t\t- The value of a ticket field was changed\n\t\t\t\t\t\t\t\t\t\t\t- A new comment was added\n\t\t\t\t\t\t\t\t\t\t\t- Tags were added or\t removed\n\t\t\t\t\t\t\t\t\t\t\t- A notification was sent\nThe more important columns are:\n - via = * Describes how the object was created. See the [Via object  reference](https://developer.zendesk.com/documentation/ticketing/reference-guides/ticket-audit-events-reference) * \n - events = * An array of the events that happened in this audit. See the [Ticket Audit events reference](https://developer.zendesk.com/documentation/ticketing/reference-guides/via-object-reference/)* \n - metadata = * Metadata for the audit, custom and system data, info acerca del navegador y SO que se ocup\u00f3 * \n - author_id = * The user who created the audit * \n - ticket_id = * The ID of the associated ticket *\n - created_at = * The time the audit was created *", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": "houm://models/staging/schema.yml", "compiled_path": "target/compiled/houm/models/staging/zendesk/stg_zendesk_tickets_audits.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "zendesk"]}, "created_at": 1654784475.668381, "compiled_sql": "select ta.id\n\t\t,ta.created_at \n\t\t,ta.ticket_id \n\t\t,ta.author_id \n\t\t--,ta.via \n\t\t--,ta.events \n\t\t,ta._airbyte_ticket_audits_hashid\nFROM\n    \"houmdw_prod\".\"airbyte_zendesk\".\"ticket_audits\" ta", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_zendesk_tickets_audits\""}, "model.houm.stg_zendesk_tickets": {"raw_sql": "SELECT \n         id\n\t\t,created_at \n\t\t,updated_at \n\t\t,status\n\t\t,priority\n\t\t,type\n\t\t,tags\n\t\t,subject \n\t\t,assignee_id \n\t\t,submitter_id \n\t\t,requester_id \n\t\t,collaborator_ids\n\t\t,external_id\n\t\t,group_id\n\t\t,brand_id\n\t\t,custom_fields \n\t\t,recipient\n\t\t,email_cc_ids\n\t\t,follower_ids\n\t\t,followup_ids\n\t\t,via \n\t\t,concat('https://houm.zendesk.com/agent/tickets/',id) as url\n\t\t,\"_airbyte_tickets_hashid\" \nFROM\n    {{ source('airbyte_zendesk','tickets') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.airbyte_zendesk.tickets"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "zendesk"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "zendesk", "stg_zendesk_tickets"], "unique_id": "model.houm.stg_zendesk_tickets", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "staging/zendesk/stg_zendesk_tickets.sql", "original_file_path": "models/staging/zendesk/stg_zendesk_tickets.sql", "name": "stg_zendesk_tickets", "alias": "stg_zendesk_tickets", "checksum": {"name": "sha256", "checksum": "ce1bc662afb9c5ff7dc956b16f825b0d58c0b3ad848b2427ea5a1c6534119598"}, "tags": ["dw", "staging", "zendesk"], "refs": [], "sources": [["airbyte_zendesk", "tickets"]], "description": "Tickets are the means through which your end users (customers) communicate with agents in Zendesk Support. Tickets can originate from a number of channels, including email, Help Center, chat, phone call, Twitter, Facebook, or the API. \n\nAll tickets have a core set of properties.\n source: https://developer.zendesk.com/api-reference/ticketing/tickets/tickets/\n\n\nThe more important columns are:\n- id: *unique ticket id at zendesk Houm*\n- created_at: * ticket creation timestamp *\n- updated_at: * ticket update timestamp *\n- status: * All tickets in Zendesk Support start out as New and progress through Open, Pending, Solved, and Closed states. A ticket must have an assignee in order to be solved. * \n- tags: array of tags \n- priority: this is a priority of the ticket, can be: [urgent, normal, high, low, null]\n- **submitter_id**: This is the agent id, The user who submitted the ticket. The submitter always becomes the author of the first comment on the ticket\n- **requester_id**: This is the customer id, The user who requested this ticket.\n- **assignee_id**: This is the agent id, that currently asigned to solve this ticket.", "columns": {"id": {"name": "id", "description": "This is a unique identifier for the tickets", "meta": {}, "data_type": null, "quote": null, "tags": []}, "created_at": {"name": "created_at", "description": "This is a timestamp for the created time of the ticket", "meta": {}, "data_type": null, "quote": null, "tags": []}, "updated_at": {"name": "updated_at", "description": "This is a timestamp for the last update of the ticket", "meta": {}, "data_type": null, "quote": null, "tags": []}, "status": {"name": "status", "description": "This is a represent of the state of the tickets, can be [solved,open,closed,deleted,pending,new]. All tickets in Zendesk Support start out as New and progress through Open, Pending, Solved, and Closed states. A ticket must have an assignee in order to be solved.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "prority": {"name": "prority", "description": "This is the priority ticket, can be urgent,normal,high,low. This come from the initial form", "meta": {}, "data_type": null, "quote": null, "tags": []}, "type": {"name": "type", "description": "This is type of the ticket is, can be null, problem, task, incident, question. This come from the initial form", "meta": {}, "data_type": null, "quote": null, "tags": []}, "tags": {"name": "tags", "description": "This is an array of the tags of the tickets. This come from the initial form", "meta": {}, "data_type": null, "quote": null, "tags": []}, "subject": {"name": "subject", "description": "This is description of the initial comment of the ticket", "meta": {}, "data_type": null, "quote": null, "tags": []}, "requester_id": {"name": "requester_id", "description": "This is the customer id, The user who requested this ticket.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "submitter_id": {"name": "submitter_id", "description": "This is the agent id, The user who submitted the ticket. The submitter always becomes the author of the first comment on the ticket", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "houm://models/staging/schema.yml", "compiled_path": "target/compiled/houm/models/staging/zendesk/stg_zendesk_tickets.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "zendesk"]}, "created_at": 1654784475.6679418, "compiled_sql": "SELECT \n         id\n\t\t,created_at \n\t\t,updated_at \n\t\t,status\n\t\t,priority\n\t\t,type\n\t\t,tags\n\t\t,subject \n\t\t,assignee_id \n\t\t,submitter_id \n\t\t,requester_id \n\t\t,collaborator_ids\n\t\t,external_id\n\t\t,group_id\n\t\t,brand_id\n\t\t,custom_fields \n\t\t,recipient\n\t\t,email_cc_ids\n\t\t,follower_ids\n\t\t,followup_ids\n\t\t,via \n\t\t,concat('https://houm.zendesk.com/agent/tickets/',id) as url\n\t\t,\"_airbyte_tickets_hashid\" \nFROM\n    \"houmdw_prod\".\"airbyte_zendesk\".\"tickets\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_zendesk_tickets\""}, "model.houm.stg_monthly_inflation_mx": {"raw_sql": "with table1 as ( --renaming columns and drop duplicates\nSELECT idserie\n\t\t,titulo\n\t\t,to_date(date, 'YYYY-DD-MM', FALSE) as date_formatted \n\t\t,value\nFROM {{ source('raw_stage', 'series_ipc_mx') }}\ngroup by idserie,titulo,date,value\n)\n, table2 as ( --get next period value\nSELECT *\n\t\t,lead(date_formatted,1) OVER(order by date_formatted ASC) as next_date\n\t\t,lead(value,1) OVER(order by date_formatted ASC) as next_value\nFROM table1\norder by date_formatted\n), table3 as ( -- get number of days per month\nSELECT \n\tmin(thedate) as  full_date\n\t,theyear\n\t,themonth\n\t,count(*) as n_days\nFROM dim_dates \ngroup by theyear,themonth \norder by theyear,themonth \n)\n, table4 as ( --calculate the monthly inflation\nSELECT a.date_formatted\n\t\t,((next_value-value)/next_value) as  monthly_inflation\n\t    ,b.n_days\nFROM table2 a\nleft join table3 b on a.date_formatted = b.full_date::date\n)\n\nSELECT * \nFROM table4", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.raw_stage.series_ipc_mx"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "ipc"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "economic_indicators", "stg_monthly_inflation_mx"], "unique_id": "model.houm.stg_monthly_inflation_mx", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "staging/economic_indicators/stg_monthly_inflation_mx.sql", "original_file_path": "models/staging/economic_indicators/stg_monthly_inflation_mx.sql", "name": "stg_monthly_inflation_mx", "alias": "stg_monthly_inflation_mx", "checksum": {"name": "sha256", "checksum": "7b92c9bc31b62869da1574d8bcd7b9bfb158bb8dcc3161178a00f4d17c4c26ea"}, "tags": ["dw", "staging", "ipc"], "refs": [], "sources": [["raw_stage", "series_ipc_mx"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/economic_indicators/stg_monthly_inflation_mx.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "ipc"]}, "created_at": 1654784475.427305, "compiled_sql": "with table1 as ( --renaming columns and drop duplicates\nSELECT idserie\n\t\t,titulo\n\t\t,to_date(date, 'YYYY-DD-MM', FALSE) as date_formatted \n\t\t,value\nFROM \"houmdw_prod\".\"raw_stage\".\"series_ipc_mx\"\ngroup by idserie,titulo,date,value\n)\n, table2 as ( --get next period value\nSELECT *\n\t\t,lead(date_formatted,1) OVER(order by date_formatted ASC) as next_date\n\t\t,lead(value,1) OVER(order by date_formatted ASC) as next_value\nFROM table1\norder by date_formatted\n), table3 as ( -- get number of days per month\nSELECT \n\tmin(thedate) as  full_date\n\t,theyear\n\t,themonth\n\t,count(*) as n_days\nFROM dim_dates \ngroup by theyear,themonth \norder by theyear,themonth \n)\n, table4 as ( --calculate the monthly inflation\nSELECT a.date_formatted\n\t\t,((next_value-value)/next_value) as  monthly_inflation\n\t    ,b.n_days\nFROM table2 a\nleft join table3 b on a.date_formatted = b.full_date::date\n)\n\nSELECT * \nFROM table4", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_monthly_inflation_mx\""}, "model.houm.stg_monthly_inflation_co": {"raw_sql": "with table1 as ( --renaming columns and drop duplicates\nSELECT \n\t\tdate_trunc('month',to_date(fecha, 'YYYY/MM/DD', FALSE))::date as date_formatted\n\t\t,\u00edndice as value\nFROM {{ source('raw_stage', 'series_ipc_co') }}\ngroup by date_formatted,value\n)\n, table2 as ( --get next period value\nSELECT *\n\t\t,lead(date_formatted,1) OVER(order by date_formatted ASC) as next_date\n\t\t,lead(value,1) OVER(order by date_formatted ASC) as next_value\nFROM table1\norder by date_formatted\n), table3 as ( -- get number of days per month\nSELECT \n\tmin(thedate) as  full_date\n\t,theyear\n\t,themonth\n\t,count(*) as n_days\nFROM dim_dates \ngroup by theyear,themonth \norder by theyear,themonth \n)\n, table4 as ( --calculate the monthly inflation\nSELECT a.date_formatted\n\t\t,((next_value-value)/next_value) as  monthly_inflation\n\t    ,b.n_days\nFROM table2 a\nleft join table3 b on a.date_formatted = b.full_date::date\n)\n\nSELECT * \nFROM table4", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.raw_stage.series_ipc_co"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "ipc"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "economic_indicators", "stg_monthly_inflation_co"], "unique_id": "model.houm.stg_monthly_inflation_co", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "staging/economic_indicators/stg_monthly_inflation_co.sql", "original_file_path": "models/staging/economic_indicators/stg_monthly_inflation_co.sql", "name": "stg_monthly_inflation_co", "alias": "stg_monthly_inflation_co", "checksum": {"name": "sha256", "checksum": "10b7644b4f61f58c0a284f0a84d29acf2712a1c1dfdba24f1720d0e7ee0e0327"}, "tags": ["dw", "staging", "ipc"], "refs": [], "sources": [["raw_stage", "series_ipc_co"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/economic_indicators/stg_monthly_inflation_co.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "ipc"]}, "created_at": 1654784475.428839, "compiled_sql": "with table1 as ( --renaming columns and drop duplicates\nSELECT \n\t\tdate_trunc('month',to_date(fecha, 'YYYY/MM/DD', FALSE))::date as date_formatted\n\t\t,\u00edndice as value\nFROM \"houmdw_prod\".\"raw_stage\".\"series_ipc_co\"\ngroup by date_formatted,value\n)\n, table2 as ( --get next period value\nSELECT *\n\t\t,lead(date_formatted,1) OVER(order by date_formatted ASC) as next_date\n\t\t,lead(value,1) OVER(order by date_formatted ASC) as next_value\nFROM table1\norder by date_formatted\n), table3 as ( -- get number of days per month\nSELECT \n\tmin(thedate) as  full_date\n\t,theyear\n\t,themonth\n\t,count(*) as n_days\nFROM dim_dates \ngroup by theyear,themonth \norder by theyear,themonth \n)\n, table4 as ( --calculate the monthly inflation\nSELECT a.date_formatted\n\t\t,((next_value-value)/next_value) as  monthly_inflation\n\t    ,b.n_days\nFROM table2 a\nleft join table3 b on a.date_formatted = b.full_date::date\n)\n\nSELECT * \nFROM table4", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_monthly_inflation_co\""}, "model.houm.stg_monthly_inflation_cl": {"raw_sql": "with table1 as ( --renaming columns and drop duplicates\nSELECT seriesid\n\t\t,descriping\n\t\t,to_date(date, 'YYYY-DD-MM', FALSE) as date_formatted \n\t\t,value\nFROM {{ source('raw_stage', 'series_ipc_cl') }}\ngroup by seriesid,descriping,date,value\n)\n, table2 as ( --get next period value\nSELECT *\n\t\t,lead(date_formatted,1) OVER(order by date_formatted ASC) as next_date\n\t\t,lead(value,1) OVER(order by date_formatted ASC) as next_value\nFROM table1\norder by date_formatted\n), table3 as ( -- get number of days per month\nSELECT \n\tmin(thedate) as  full_date\n\t,theyear\n\t,themonth\n\t,count(*) as n_days\nFROM dim_dates \ngroup by theyear,themonth \norder by theyear,themonth \n)\n, table4 as ( --calculate the monthly inflation\nSELECT a.date_formatted\n\t\t,((next_value-value)/next_value) as  monthly_inflation\n\t    ,b.n_days\nFROM table2 a\nleft join table3 b on a.date_formatted = b.full_date::date\n)\n\nSELECT * \nFROM table4", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.raw_stage.series_ipc_cl"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "ipc"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "economic_indicators", "stg_monthly_inflation_cl"], "unique_id": "model.houm.stg_monthly_inflation_cl", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "staging/economic_indicators/stg_monthly_inflation_cl.sql", "original_file_path": "models/staging/economic_indicators/stg_monthly_inflation_cl.sql", "name": "stg_monthly_inflation_cl", "alias": "stg_monthly_inflation_cl", "checksum": {"name": "sha256", "checksum": "7f9d3de1d3a430d6f314e1993ed2bf84b9e1f47d86a8a77b38b60cd78eb7af3c"}, "tags": ["dw", "staging", "ipc"], "refs": [], "sources": [["raw_stage", "series_ipc_cl"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/economic_indicators/stg_monthly_inflation_cl.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "ipc"]}, "created_at": 1654784475.430532, "compiled_sql": "with table1 as ( --renaming columns and drop duplicates\nSELECT seriesid\n\t\t,descriping\n\t\t,to_date(date, 'YYYY-DD-MM', FALSE) as date_formatted \n\t\t,value\nFROM \"houmdw_prod\".\"raw_stage\".\"series_ipc_cl\"\ngroup by seriesid,descriping,date,value\n)\n, table2 as ( --get next period value\nSELECT *\n\t\t,lead(date_formatted,1) OVER(order by date_formatted ASC) as next_date\n\t\t,lead(value,1) OVER(order by date_formatted ASC) as next_value\nFROM table1\norder by date_formatted\n), table3 as ( -- get number of days per month\nSELECT \n\tmin(thedate) as  full_date\n\t,theyear\n\t,themonth\n\t,count(*) as n_days\nFROM dim_dates \ngroup by theyear,themonth \norder by theyear,themonth \n)\n, table4 as ( --calculate the monthly inflation\nSELECT a.date_formatted\n\t\t,((next_value-value)/next_value) as  monthly_inflation\n\t    ,b.n_days\nFROM table2 a\nleft join table3 b on a.date_formatted = b.full_date::date\n)\n\nSELECT * \nFROM table4", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_monthly_inflation_cl\""}, "model.houm.stg_payments_cl_db_movements": {"raw_sql": "select * \nfrom {{ source('mongo_tables', 'payments_cl_db_movements') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.mongo_tables.payments_cl_db_movements"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "mongo_db", "payments"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "mongo_tables", "stg_payments_cl_db_movements"], "unique_id": "model.houm.stg_payments_cl_db_movements", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "staging/mongo_tables/stg_payments_cl_db_movements.sql", "original_file_path": "models/staging/mongo_tables/stg_payments_cl_db_movements.sql", "name": "stg_payments_cl_db_movements", "alias": "stg_payments_cl_db_movements", "checksum": {"name": "sha256", "checksum": "7a5bc9f3d7d5072423f94b37e00b496d38d0f49022d4da458209c12367645f95"}, "tags": ["dw", "staging", "mongo_db", "payments"], "refs": [], "sources": [["mongo_tables", "payments_cl_db_movements"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/mongo_tables/stg_payments_cl_db_movements.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "mongo_db", "payments"]}, "created_at": 1654784475.432278, "compiled_sql": "select * \nfrom \"houmdw_prod\".\"mongo_tables\".\"payments_cl_db_movements\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_payments_cl_db_movements\""}, "model.houm.stg_payments_mx_db_movements": {"raw_sql": "select * \nfrom {{ source('mongo_tables', 'payments_mx_db_movements') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.mongo_tables.payments_mx_db_movements"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "mongo_db", "payments"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "mongo_tables", "stg_payments_mx_db_movements"], "unique_id": "model.houm.stg_payments_mx_db_movements", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "staging/mongo_tables/stg_payments_mx_db_movements.sql", "original_file_path": "models/staging/mongo_tables/stg_payments_mx_db_movements.sql", "name": "stg_payments_mx_db_movements", "alias": "stg_payments_mx_db_movements", "checksum": {"name": "sha256", "checksum": "0c375f5cb84d43ec993db58bb0f9ef5048d1258904e4727d7a71a924a776de45"}, "tags": ["dw", "staging", "mongo_db", "payments"], "refs": [], "sources": [["mongo_tables", "payments_mx_db_movements"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/mongo_tables/stg_payments_mx_db_movements.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "mongo_db", "payments"]}, "created_at": 1654784475.4339101, "compiled_sql": "select * \nfrom \"houmdw_prod\".\"mongo_tables\".\"payments_mx_db_movements\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_payments_mx_db_movements\""}, "model.houm.stg_payments_co_db_movements": {"raw_sql": "select * \nfrom {{ source('mongo_tables', 'payments_co_db_movements') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.mongo_tables.payments_co_db_movements"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "mongo_db", "payments"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "mongo_tables", "stg_payments_co_db_movements"], "unique_id": "model.houm.stg_payments_co_db_movements", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "staging/mongo_tables/stg_payments_co_db_movements.sql", "original_file_path": "models/staging/mongo_tables/stg_payments_co_db_movements.sql", "name": "stg_payments_co_db_movements", "alias": "stg_payments_co_db_movements", "checksum": {"name": "sha256", "checksum": "18b83a48451e9dc9fd65ae956a36486484170daf515a2ecf05a5446b769b8dea"}, "tags": ["dw", "staging", "mongo_db", "payments"], "refs": [], "sources": [["mongo_tables", "payments_co_db_movements"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/mongo_tables/stg_payments_co_db_movements.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "mongo_db", "payments"]}, "created_at": 1654784475.43548, "compiled_sql": "select * \nfrom \"houmdw_prod\".\"mongo_tables\".\"payments_co_db_movements\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_payments_co_db_movements\""}, "model.houm.stg_departments": {"raw_sql": "SELECT\n    *,\n    id + 10000 AS dwh_department_id,\n    division_id + 10000 AS dwh_division_id,\n    'Chile' AS country\nFROM\n    {{ source(\n        'staging_buk',\n        'departments_chile'\n    ) }}\nUNION ALL\nSELECT\n    *,\n    id + 20000 AS dwh_department_id,\n    division_id + 20000 AS dwh_division_id,\n    'Colombia' AS country\nFROM\n    {{ source(\n        'staging_buk',\n        'departments_colombia'\n    ) }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.staging_buk.departments_colombia", "source.houm.staging_buk.departments_chile"]}, "config": {"enabled": true, "alias": null, "schema": "staging_finance", "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "staging_finance", "fqn": ["houm", "staging", "buk", "stg_departments"], "unique_id": "model.houm.stg_departments", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "staging/buk/stg_departments.sql", "original_file_path": "models/staging/buk/stg_departments.sql", "name": "stg_departments", "alias": "stg_departments", "checksum": {"name": "sha256", "checksum": "ff3be5bca1f7a8324d163d870b80455917e26511e788977971a955f85e39355c"}, "tags": [], "refs": [], "sources": [["staging_buk", "departments_colombia"], ["staging_buk", "departments_chile"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/buk/stg_departments.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "staging_finance"}, "created_at": 1654784475.4371982, "compiled_sql": "SELECT\n    *,\n    id + 10000 AS dwh_department_id,\n    division_id + 10000 AS dwh_division_id,\n    'Chile' AS country\nFROM\n    \"houmdw_prod\".\"staging_buk\".\"departments_chile\"\nUNION ALL\nSELECT\n    *,\n    id + 20000 AS dwh_department_id,\n    division_id + 20000 AS dwh_division_id,\n    'Colombia' AS country\nFROM\n    \"houmdw_prod\".\"staging_buk\".\"departments_colombia\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"staging_finance\".\"stg_departments\""}, "model.houm.stg_payrolls": {"raw_sql": "SELECT\n    *,\n    person_id + 10000 AS dwh_person_id,\n    'Chile' AS country,\n    TO_DATE(CAST(payroll_year AS text) + '-' + CAST(payroll_month AS text) + '-01', 'YYYY-MM-DD') AS pr_date,\n    'CLP' as currency\nFROM\n    {{ source(\n        'staging_buk',\n        'payrolls_chile'\n    ) }}\nUNION ALL\nSELECT\n    *,\n    person_id + 20000 AS dwh_person_id,\n    'Colombia' AS country,\n    TO_DATE(CAST(payroll_year AS text) + '-' + CAST(payroll_month AS text) + '-01', 'YYYY-MM-DD') AS pr_date,\n    'COP' as currency\nFROM\n    {{ source(\n        'staging_buk',\n        'payrolls_colombia'\n    ) }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.staging_buk.payrolls_chile", "source.houm.staging_buk.payrolls_colombia"]}, "config": {"enabled": true, "alias": null, "schema": "staging_finance", "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "staging_finance", "fqn": ["houm", "staging", "buk", "stg_payrolls"], "unique_id": "model.houm.stg_payrolls", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "staging/buk/stg_payrolls.sql", "original_file_path": "models/staging/buk/stg_payrolls.sql", "name": "stg_payrolls", "alias": "stg_payrolls", "checksum": {"name": "sha256", "checksum": "4991338cfd6d03f822862de6d9299e8060d86fed7151ca5ea5ec6af6fd0685b4"}, "tags": [], "refs": [], "sources": [["staging_buk", "payrolls_chile"], ["staging_buk", "payrolls_colombia"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/buk/stg_payrolls.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "staging_finance"}, "created_at": 1654784475.4387672, "compiled_sql": "SELECT\n    *,\n    person_id + 10000 AS dwh_person_id,\n    'Chile' AS country,\n    TO_DATE(CAST(payroll_year AS text) + '-' + CAST(payroll_month AS text) + '-01', 'YYYY-MM-DD') AS pr_date,\n    'CLP' as currency\nFROM\n    \"houmdw_prod\".\"staging_buk\".\"payrolls_chile\"\nUNION ALL\nSELECT\n    *,\n    person_id + 20000 AS dwh_person_id,\n    'Colombia' AS country,\n    TO_DATE(CAST(payroll_year AS text) + '-' + CAST(payroll_month AS text) + '-01', 'YYYY-MM-DD') AS pr_date,\n    'COP' as currency\nFROM\n    \"houmdw_prod\".\"staging_buk\".\"payrolls_colombia\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"staging_finance\".\"stg_payrolls\""}, "model.houm.stg_companies": {"raw_sql": "SELECT\n    *,\n    id + 10000 AS dwh_company_id,\n    'Chile' AS country\nFROM\n    {{ source(\n        'staging_buk',\n        'companies_chile'\n    ) }}\nUNION ALL\nSELECT\n    *,\n    id + 20000 AS dwh_company_id,\n    'Colombia' AS country\nFROM\n    {{ source(\n        'staging_buk',\n        'companies_colombia'\n    ) }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.staging_buk.companies_chile", "source.houm.staging_buk.companies_colombia"]}, "config": {"enabled": true, "alias": null, "schema": "staging_finance", "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "staging_finance", "fqn": ["houm", "staging", "buk", "stg_companies"], "unique_id": "model.houm.stg_companies", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "staging/buk/stg_companies.sql", "original_file_path": "models/staging/buk/stg_companies.sql", "name": "stg_companies", "alias": "stg_companies", "checksum": {"name": "sha256", "checksum": "2429f81e0c1eb864e08f3d5a893a92da047262124d9d0d25728029f9fe894183"}, "tags": [], "refs": [], "sources": [["staging_buk", "companies_chile"], ["staging_buk", "companies_colombia"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/buk/stg_companies.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "staging_finance"}, "created_at": 1654784475.44033, "compiled_sql": "SELECT\n    *,\n    id + 10000 AS dwh_company_id,\n    'Chile' AS country\nFROM\n    \"houmdw_prod\".\"staging_buk\".\"companies_chile\"\nUNION ALL\nSELECT\n    *,\n    id + 20000 AS dwh_company_id,\n    'Colombia' AS country\nFROM\n    \"houmdw_prod\".\"staging_buk\".\"companies_colombia\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"staging_finance\".\"stg_companies\""}, "model.houm.stg_accounting": {"raw_sql": "SELECT\n    *,\n    person_id + 10000 AS dwh_person_id,\n    'Chile' AS country,\n    'CLP' as currency\nFROM\n    {{ source(\n        'staging_buk',\n        'payrolls_chile'\n    ) }}\nUNION ALL\nSELECT\n    *,\n    person_id + 20000 AS dwh_person_id,\n    'Colombia' AS country,\n    'COP' as currency\nFROM\n    {{ source(\n        'staging_buk',\n        'payrolls_colombia'\n    ) }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.staging_buk.payrolls_chile", "source.houm.staging_buk.payrolls_colombia"]}, "config": {"enabled": true, "alias": null, "schema": "staging_finance", "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "staging_finance", "fqn": ["houm", "staging", "buk", "stg_accounting"], "unique_id": "model.houm.stg_accounting", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "staging/buk/stg_accounting.sql", "original_file_path": "models/staging/buk/stg_accounting.sql", "name": "stg_accounting", "alias": "stg_accounting", "checksum": {"name": "sha256", "checksum": "ae55e14999812b2ba673d5095554f725e2976f5086e005331b41980519d4d70b"}, "tags": [], "refs": [], "sources": [["staging_buk", "payrolls_chile"], ["staging_buk", "payrolls_colombia"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/buk/stg_accounting.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "staging_finance"}, "created_at": 1654784475.441854, "compiled_sql": "SELECT\n    *,\n    person_id + 10000 AS dwh_person_id,\n    'Chile' AS country,\n    'CLP' as currency\nFROM\n    \"houmdw_prod\".\"staging_buk\".\"payrolls_chile\"\nUNION ALL\nSELECT\n    *,\n    person_id + 20000 AS dwh_person_id,\n    'Colombia' AS country,\n    'COP' as currency\nFROM\n    \"houmdw_prod\".\"staging_buk\".\"payrolls_colombia\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"staging_finance\".\"stg_accounting\""}, "model.houm.stg_jobs": {"raw_sql": "SELECT\n    *,\n    company_id + 10000 AS dwh_company_id,\n    area_id + 10000 AS dwh_area_id,\n    person_id + 10000 AS dwh_person_id,\n    role_id + 10000 AS dwh_role_id,\n    employee_id + 10000 AS dwh_employee_id,\n    boss_id + 10000 AS dwh_boss_id,\n    'Chile' AS country\nFROM\n    {{ source(\n        'staging_buk',\n        'jobs_chile'\n    ) }}\nUNION ALL\nSELECT\n    *,\n    company_id + 20000 AS dwh_company_id,\n    area_id + 20000 AS dwh_area_id,\n    person_id + 20000 AS dwh_person_id,\n    role_id + 20000 AS dwh_role_id,\n    employee_id + 20000 AS dwh_employee_id,\n    boss_id + 20000 AS dwh_boss_id,\n    'Colombia' AS country\nFROM\n    {{ source(\n        'staging_buk',\n        'jobs_colombia'\n    ) }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.staging_buk.jobs_chile", "source.houm.staging_buk.jobs_colombia"]}, "config": {"enabled": true, "alias": null, "schema": "staging_finance", "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "staging_finance", "fqn": ["houm", "staging", "buk", "stg_jobs"], "unique_id": "model.houm.stg_jobs", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "staging/buk/stg_jobs.sql", "original_file_path": "models/staging/buk/stg_jobs.sql", "name": "stg_jobs", "alias": "stg_jobs", "checksum": {"name": "sha256", "checksum": "3aa78d1d9fda9877ae209a16a3ea6cf4a8b550fa4914c7182b05af373329fd59"}, "tags": [], "refs": [], "sources": [["staging_buk", "jobs_chile"], ["staging_buk", "jobs_colombia"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/buk/stg_jobs.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "staging_finance"}, "created_at": 1654784475.443696, "compiled_sql": "SELECT\n    *,\n    company_id + 10000 AS dwh_company_id,\n    area_id + 10000 AS dwh_area_id,\n    person_id + 10000 AS dwh_person_id,\n    role_id + 10000 AS dwh_role_id,\n    employee_id + 10000 AS dwh_employee_id,\n    boss_id + 10000 AS dwh_boss_id,\n    'Chile' AS country\nFROM\n    \"houmdw_prod\".\"staging_buk\".\"jobs_chile\"\nUNION ALL\nSELECT\n    *,\n    company_id + 20000 AS dwh_company_id,\n    area_id + 20000 AS dwh_area_id,\n    person_id + 20000 AS dwh_person_id,\n    role_id + 20000 AS dwh_role_id,\n    employee_id + 20000 AS dwh_employee_id,\n    boss_id + 20000 AS dwh_boss_id,\n    'Colombia' AS country\nFROM\n    \"houmdw_prod\".\"staging_buk\".\"jobs_colombia\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"staging_finance\".\"stg_jobs\""}, "model.houm.stg_areas": {"raw_sql": "SELECT\n    *,\n    id + 10000 AS dwh_area_id,\n    department_id + 10000 AS dwh_department_id,\n    'Chile' AS country\nFROM\n    {{ source(\n        'staging_buk',\n        'areas_chile'\n    ) }}\nUNION ALL\nSELECT\n    *,\n    id + 20000 AS dwh_area_id,\n    department_id + 20000 AS dwh_department_id,\n    'Colombia' AS country\nFROM\n    {{ source(\n        'staging_buk',\n        'areas_colombia'\n    ) }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.staging_buk.areas_colombia", "source.houm.staging_buk.areas_chile"]}, "config": {"enabled": true, "alias": null, "schema": "staging_finance", "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "staging_finance", "fqn": ["houm", "staging", "buk", "stg_areas"], "unique_id": "model.houm.stg_areas", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "staging/buk/stg_areas.sql", "original_file_path": "models/staging/buk/stg_areas.sql", "name": "stg_areas", "alias": "stg_areas", "checksum": {"name": "sha256", "checksum": "954ee9ddb188c04944a9d9ba8221e74bc2d267d8dbbc79835c65a90ba9283e39"}, "tags": [], "refs": [], "sources": [["staging_buk", "areas_colombia"], ["staging_buk", "areas_chile"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/buk/stg_areas.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "staging_finance"}, "created_at": 1654784475.4452748, "compiled_sql": "SELECT\n    *,\n    id + 10000 AS dwh_area_id,\n    department_id + 10000 AS dwh_department_id,\n    'Chile' AS country\nFROM\n    \"houmdw_prod\".\"staging_buk\".\"areas_chile\"\nUNION ALL\nSELECT\n    *,\n    id + 20000 AS dwh_area_id,\n    department_id + 20000 AS dwh_department_id,\n    'Colombia' AS country\nFROM\n    \"houmdw_prod\".\"staging_buk\".\"areas_colombia\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"staging_finance\".\"stg_areas\""}, "model.houm.stg_line_settlements": {"raw_sql": "SELECT\n    *,\n    person_id + 10000 AS dwh_person_id,\n    'Chile' AS country,\n    TO_DATE(CAST(YEAR AS text) + '-' + CAST(MONTH AS text) + '-01', 'YYYY-MM-DD') AS ls_date,\n    'CLP' AS currency\nFROM\n    {{ source(\n        'staging_buk',\n        'line_settlements_chile'\n    ) }}\nUNION ALL\nSELECT\n    *,\n    person_id + 20000 AS dwh_person_id,\n    'Colombia' AS country,\n    TO_DATE(CAST(YEAR AS text) + '-' + CAST(MONTH AS text) + '-01', 'YYYY-MM-DD') AS ls_date,\n    'COP' AS currency\nFROM\n    {{ source(\n        'staging_buk',\n        'line_settlements_colombia'\n    ) }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.staging_buk.line_settlements_chile", "source.houm.staging_buk.line_settlements_colombia"]}, "config": {"enabled": true, "alias": null, "schema": "staging_finance", "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "staging_finance", "fqn": ["houm", "staging", "buk", "stg_line_settlements"], "unique_id": "model.houm.stg_line_settlements", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "staging/buk/stg_line_settlements.sql", "original_file_path": "models/staging/buk/stg_line_settlements.sql", "name": "stg_line_settlements", "alias": "stg_line_settlements", "checksum": {"name": "sha256", "checksum": "ecefd56e99357acad2c09b9b7d22431c474bc1f9c3ca9a44585ff68db117d6f1"}, "tags": [], "refs": [], "sources": [["staging_buk", "line_settlements_chile"], ["staging_buk", "line_settlements_colombia"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/buk/stg_line_settlements.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "staging_finance"}, "created_at": 1654784475.4468338, "compiled_sql": "SELECT\n    *,\n    person_id + 10000 AS dwh_person_id,\n    'Chile' AS country,\n    TO_DATE(CAST(YEAR AS text) + '-' + CAST(MONTH AS text) + '-01', 'YYYY-MM-DD') AS ls_date,\n    'CLP' AS currency\nFROM\n    \"houmdw_prod\".\"staging_buk\".\"line_settlements_chile\"\nUNION ALL\nSELECT\n    *,\n    person_id + 20000 AS dwh_person_id,\n    'Colombia' AS country,\n    TO_DATE(CAST(YEAR AS text) + '-' + CAST(MONTH AS text) + '-01', 'YYYY-MM-DD') AS ls_date,\n    'COP' AS currency\nFROM\n    \"houmdw_prod\".\"staging_buk\".\"line_settlements_colombia\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"staging_finance\".\"stg_line_settlements\""}, "model.houm.stg_employees": {"raw_sql": "SELECT\n    *,\n    id + 10000 AS dwh_employee_id,\n    'Chile' AS country_at,\n    person_id + 10000 AS dwh_person_id\nFROM\n    {{ source(\n        'staging_buk',\n        'employees_chile'\n    ) }}\nUNION ALL\nSELECT\n    *,\n    id + 20000 AS dwh_employee_id,\n    'Colombia' AS country_at,\n    person_id + 20000 AS dwh_person_id\nFROM\n    {{ source(\n        'staging_buk',\n        'employees_colombia'\n    ) }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.staging_buk.employees_chile", "source.houm.staging_buk.employees_colombia"]}, "config": {"enabled": true, "alias": null, "schema": "staging_finance", "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "staging_finance", "fqn": ["houm", "staging", "buk", "stg_employees"], "unique_id": "model.houm.stg_employees", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "staging/buk/stg_employees.sql", "original_file_path": "models/staging/buk/stg_employees.sql", "name": "stg_employees", "alias": "stg_employees", "checksum": {"name": "sha256", "checksum": "ceb501d6e299e9bb3392965a61e048b9074173deecc995fc91c347a2b1fc68f9"}, "tags": [], "refs": [], "sources": [["staging_buk", "employees_chile"], ["staging_buk", "employees_colombia"]], "description": "This table contains information about all employees of Chile & Colombia working at Houm.\n\nThis information is collected by the current Human Resources System: BUK\nYou can read the docs of their API here: link", "columns": {"dwh_person_id": {"name": "dwh_person_id", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "houm://models/staging/schema.yml", "compiled_path": "target/compiled/houm/models/staging/buk/stg_employees.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "staging_finance"}, "created_at": 1654784475.660876, "compiled_sql": "SELECT\n    *,\n    id + 10000 AS dwh_employee_id,\n    'Chile' AS country_at,\n    person_id + 10000 AS dwh_person_id\nFROM\n    \"houmdw_prod\".\"staging_buk\".\"employees_chile\"\nUNION ALL\nSELECT\n    *,\n    id + 20000 AS dwh_employee_id,\n    'Colombia' AS country_at,\n    person_id + 20000 AS dwh_person_id\nFROM\n    \"houmdw_prod\".\"staging_buk\".\"employees_colombia\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"staging_finance\".\"stg_employees\""}, "model.houm.stg_roles": {"raw_sql": "SELECT\n    *,\n    id + 10000 AS dwh_id,\n    'Chile' AS country\nFROM\n    {{ source(\n        'staging_buk',\n        'roles_chile'\n    ) }}\nUNION ALL\nSELECT\n    *,\n    id + 20000 AS dwh_id,\n    'Colombia' AS country\nFROM\n    {{ source(\n        'staging_buk',\n        'roles_colombia'\n    ) }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.staging_buk.roles_chile", "source.houm.staging_buk.roles_colombia"]}, "config": {"enabled": true, "alias": null, "schema": "staging_finance", "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "staging_finance", "fqn": ["houm", "staging", "buk", "stg_roles"], "unique_id": "model.houm.stg_roles", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "staging/buk/stg_roles.sql", "original_file_path": "models/staging/buk/stg_roles.sql", "name": "stg_roles", "alias": "stg_roles", "checksum": {"name": "sha256", "checksum": "4a2edbed91f7133000879ebb9db1e554f57bf765b00fa8c40b2202858a0b45a6"}, "tags": [], "refs": [], "sources": [["staging_buk", "roles_chile"], ["staging_buk", "roles_colombia"]], "description": "This table contains information about employees roles at Houm.\n\nThis information is collected by the current Human Resources System: BUK", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": "houm://models/staging/schema.yml", "compiled_path": "target/compiled/houm/models/staging/buk/stg_roles.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "staging_finance"}, "created_at": 1654784475.661173, "compiled_sql": "SELECT\n    *,\n    id + 10000 AS dwh_id,\n    'Chile' AS country\nFROM\n    \"houmdw_prod\".\"staging_buk\".\"roles_chile\"\nUNION ALL\nSELECT\n    *,\n    id + 20000 AS dwh_id,\n    'Colombia' AS country\nFROM\n    \"houmdw_prod\".\"staging_buk\".\"roles_colombia\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"staging_finance\".\"stg_roles\""}, "model.houm.proc_closure_subs": {"raw_sql": "WITH plans_clean AS (\nSELECT \n   plans.id ,\n   plans.name ,\n   plans.description , \n   plans.has_management\nFROM {{ ref('proc_closure_plans') }} as plans\nWHERE TRUE \n   AND plans.name NOT LIKE '%(test)%'\n   AND plans.description NOT LIKE '% prueba'\n   AND plans.description NOT LIKE '% test' \n)\n, contracts_clean as (\nSELECT \n   contracts.id , \n   contracts.plan_id ,\n   contracts.management \nFROM {{ ref('proc_closure_contracts') }}  AS contracts\nWHERE contracts.management = TRUE -- \n)\n\nSELECT   \n   subscription.id AS sub_id ,\n   coalesce( (timezone( prop_mz.timezone, subscription.payment_date)::TIMESTAMP WITH TIME ZONE)::DATE, subscription.payment_date::DATE) AS payment_date_local , \n   (timezone( 'UTC', subscription.payment_date)::TIMESTAMP WITH TIME ZONE)::DATE AS payment_date_utc , \n   subscription.property_id , \n   prop_mz.geo_id , \n   subscription.init_reason as sub_init_reason ,\n   plans.id AS plan_id ,\n   plans.name AS plan_name , \n   plans.description AS plan_description , \n   plans.has_management  \nFROM {{ ref('stg_subscription_subscription') }} AS subscription \nLEFT JOIN contracts_clean AS contracts \n        ON contracts.id =  subscription.contract_id\nLEFT JOIN plans_clean AS plans\n        ON plans.id = contracts.plan_id\nLEFT JOIN {{ ref('proc_properties_mz') }} AS prop_mz \n        ON prop_mz.property_id = subscription.property_id\nWHERE TRUE", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_closure_plans", "model.houm.proc_closure_contracts", "model.houm.stg_subscription_subscription", "model.houm.proc_properties_mz"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "closure"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "closure", "proc_closure_subs"], "unique_id": "model.houm.proc_closure_subs", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "processing/closure/proc_closure_subs.sql", "original_file_path": "models/processing/closure/proc_closure_subs.sql", "name": "proc_closure_subs", "alias": "proc_closure_subs", "checksum": {"name": "sha256", "checksum": "6dab8d8dfb55bcbaa4853936f3b4de73dc9383fda3810ec8a70a475582aa7e7c"}, "tags": ["dw", "processing", "closure"], "refs": [["proc_closure_plans"], ["proc_closure_contracts"], ["stg_subscription_subscription"], ["proc_properties_mz"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/closure/proc_closure_subs.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "tags": ["dw", "processing", "closure"]}, "created_at": 1654784475.452042, "compiled_sql": "WITH plans_clean AS (\nSELECT \n   plans.id ,\n   plans.name ,\n   plans.description , \n   plans.has_management\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_closure_plans\" as plans\nWHERE TRUE \n   AND plans.name NOT LIKE '%(test)%'\n   AND plans.description NOT LIKE '% prueba'\n   AND plans.description NOT LIKE '% test' \n)\n, contracts_clean as (\nSELECT \n   contracts.id , \n   contracts.plan_id ,\n   contracts.management \nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_closure_contracts\"  AS contracts\nWHERE contracts.management = TRUE -- \n)\n\nSELECT   \n   subscription.id AS sub_id ,\n   coalesce( (timezone( prop_mz.timezone, subscription.payment_date)::TIMESTAMP WITH TIME ZONE)::DATE, subscription.payment_date::DATE) AS payment_date_local , \n   (timezone( 'UTC', subscription.payment_date)::TIMESTAMP WITH TIME ZONE)::DATE AS payment_date_utc , \n   subscription.property_id , \n   prop_mz.geo_id , \n   subscription.init_reason as sub_init_reason ,\n   plans.id AS plan_id ,\n   plans.name AS plan_name , \n   plans.description AS plan_description , \n   plans.has_management  \nFROM \"houmdw_prod\".\"dbt_staging\".\"stg_subscription_subscription\" AS subscription \nLEFT JOIN contracts_clean AS contracts \n        ON contracts.id =  subscription.contract_id\nLEFT JOIN plans_clean AS plans\n        ON plans.id = contracts.plan_id\nLEFT JOIN \"houmdw_prod\".\"dbt_processing\".\"proc_properties_mz\" AS prop_mz \n        ON prop_mz.property_id = subscription.property_id\nWHERE TRUE", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_closure_subs\""}, "model.houm.proc_closure_plans": {"raw_sql": "SELECT \n    id ,\n    price ,\n    description ,\n    type ,\n    created_at ,\n    updated_at ,\n    active ,\n    country ,\n    admin_commission ,\n    contract_static_file ,\n    contract_static_file_pdf ,\n    deleted_at ,\n    CASE \n        WHEN plans.id IN (29,32,33,46,47,58,59,66,67,68,94,109,110,118,121,122,123,128,129,130) THEN false \n\t\telse has_management end has_management ,\n    is_deleted ,\n    is_new ,\n    lessee_brokerage ,\n    lessee_brokerage_closing ,\n    lessor_brokerage ,\n    lessor_brokerage_closing ,\n    mandate_static_file ,\n    mandate_static_file_pdf ,\n    months_duration ,\n    name ,\n    payment_option_id \nFROM {{ ref('stg_plans') }} plans", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.stg_plans"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "closure"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "closure", "proc_closure_plans"], "unique_id": "model.houm.proc_closure_plans", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "processing/closure/proc_closure_plans.sql", "original_file_path": "models/processing/closure/proc_closure_plans.sql", "name": "proc_closure_plans", "alias": "proc_closure_plans", "checksum": {"name": "sha256", "checksum": "8d8708240b1e7cb1ec85e8375fc41212b16b06e5cf3bf2bbe340ba6f0cd0f9e4"}, "tags": ["dw", "processing", "closure"], "refs": [["stg_plans"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/closure/proc_closure_plans.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "tags": ["dw", "processing", "closure"]}, "created_at": 1654784475.45372, "compiled_sql": "SELECT \n    id ,\n    price ,\n    description ,\n    type ,\n    created_at ,\n    updated_at ,\n    active ,\n    country ,\n    admin_commission ,\n    contract_static_file ,\n    contract_static_file_pdf ,\n    deleted_at ,\n    CASE \n        WHEN plans.id IN (29,32,33,46,47,58,59,66,67,68,94,109,110,118,121,122,123,128,129,130) THEN false \n\t\telse has_management end has_management ,\n    is_deleted ,\n    is_new ,\n    lessee_brokerage ,\n    lessee_brokerage_closing ,\n    lessor_brokerage ,\n    lessor_brokerage_closing ,\n    mandate_static_file ,\n    mandate_static_file_pdf ,\n    months_duration ,\n    name ,\n    payment_option_id \nFROM \"houmdw_prod\".\"dbt_staging\".\"stg_plans\" plans", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_closure_plans\""}, "model.houm.proc_closure_contracts": {"raw_sql": "SELECT \n    id ,\n    init_date ,\n    months ,\n    pay_day ,\n    amount ,\n    type_money ,\n    penalty ,\n    penalty_type ,\n    automatic_renewal ,\n    penalty_mount ,\n    penalty_money_type ,\n    created_at ,\n    updated_at ,\n    lessor_email ,\n    propietary_email ,\n    first_payment_date ,\n    readjust ,\n    property_id ,\n    signature_date ,\n    main_tenant_id ,\n    owner_id ,\n    init_date_proposal ,\n    status ,\n    rent_application_id ,\n    parking_number ,\n    warehouse_number ,\n    habitants_description ,\n    document_url ,\n    max_people_quantity ,\n    observations ,\n    other_bans ,\n    pet_bans ,\n    property_delivery_date ,\n    renewal_period ,\n    rent_include_common_expenses ,\n    uid ,\n    warranty ,\n    lessee_legal_representative_id ,\n    lessor_legal_representative_id ,\n    lessee_aval_id ,\n    custom_contract ,\n    custom_mandate ,\n    files_id ,\n    plan_percentage ,\n    online_process_status ,\n    mandate_type ,\n    plan_discount ,\n    promotion_months ,\n    promotional_price ,\n    has_promotion ,\n    lessee_brokerage_commission ,\n    lessor_brokerage_commission ,\n    papers_id ,\n    evaluation_ids ,\n    billing_document ,\n    houmer_id ,\n    management ,\n    discard_author ,\n    discard_comment ,\n    discard_reason ,\n    ws_contract_id ,\n    ws_mandate_id ,\n    renewal_at ,\n    person_warranty ,\n    renewal_id ,\n    plan_id ,\n    is_transfer ,\n    amount_policy ,\n    is_common_expenses_included ,\n    end_notice_period ,\n    is_payment_simulation ,\n    has_brokerage ,\n    has_houm_cleaning ,\n    lessee_brokerage_discount ,\n    lessor_brokerage_discount \nFROM {{ ref('stg_contracts') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.stg_contracts"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "closure"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "closure", "proc_closure_contracts"], "unique_id": "model.houm.proc_closure_contracts", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "processing/closure/proc_closure_contracts.sql", "original_file_path": "models/processing/closure/proc_closure_contracts.sql", "name": "proc_closure_contracts", "alias": "proc_closure_contracts", "checksum": {"name": "sha256", "checksum": "b5f6549f2889b042a62418b210a2ec57c76d749c889cef0c59c1a9dd6e6cd608"}, "tags": ["dw", "processing", "closure"], "refs": [["stg_contracts"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/closure/proc_closure_contracts.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "tags": ["dw", "processing", "closure"]}, "created_at": 1654784475.481496, "compiled_sql": "SELECT \n    id ,\n    init_date ,\n    months ,\n    pay_day ,\n    amount ,\n    type_money ,\n    penalty ,\n    penalty_type ,\n    automatic_renewal ,\n    penalty_mount ,\n    penalty_money_type ,\n    created_at ,\n    updated_at ,\n    lessor_email ,\n    propietary_email ,\n    first_payment_date ,\n    readjust ,\n    property_id ,\n    signature_date ,\n    main_tenant_id ,\n    owner_id ,\n    init_date_proposal ,\n    status ,\n    rent_application_id ,\n    parking_number ,\n    warehouse_number ,\n    habitants_description ,\n    document_url ,\n    max_people_quantity ,\n    observations ,\n    other_bans ,\n    pet_bans ,\n    property_delivery_date ,\n    renewal_period ,\n    rent_include_common_expenses ,\n    uid ,\n    warranty ,\n    lessee_legal_representative_id ,\n    lessor_legal_representative_id ,\n    lessee_aval_id ,\n    custom_contract ,\n    custom_mandate ,\n    files_id ,\n    plan_percentage ,\n    online_process_status ,\n    mandate_type ,\n    plan_discount ,\n    promotion_months ,\n    promotional_price ,\n    has_promotion ,\n    lessee_brokerage_commission ,\n    lessor_brokerage_commission ,\n    papers_id ,\n    evaluation_ids ,\n    billing_document ,\n    houmer_id ,\n    management ,\n    discard_author ,\n    discard_comment ,\n    discard_reason ,\n    ws_contract_id ,\n    ws_mandate_id ,\n    renewal_at ,\n    person_warranty ,\n    renewal_id ,\n    plan_id ,\n    is_transfer ,\n    amount_policy ,\n    is_common_expenses_included ,\n    end_notice_period ,\n    is_payment_simulation ,\n    has_brokerage ,\n    has_houm_cleaning ,\n    lessee_brokerage_discount ,\n    lessor_brokerage_discount \nFROM \"houmdw_prod\".\"dbt_staging\".\"stg_contracts\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_closure_contracts\""}, "model.houm.proc_cx_zendesk_clean_comments": {"raw_sql": "{{ config(materialized='table') }}\n\nwith clean_comments as (\n    select\n        id,\n        channel,\n        requester,\n        requested_to,\n        created_at,\n        trim(translate(replace(regexp_replace(split_part(plain_body,'@houm.com',1), '(\\\\\\\\r|\\\\\\\\n)', ''),'&nbsp',''),'\u00e1\u00e9\u00ed\u00f3\u00fa;','aeiou')) as clean_body,\n        audit_id,\n        author_id,\n        ticket_id\n    from {{ref('stg_zendesk_tickets_comments')}}\n    where plain_body is not null\n    and channel != 'system'\n)\nselect\n    id,\n    channel,\n    requester,\n    requested_to,\n    created_at,\n    clean_body,\n    length(clean_body) as clean_body_characters,\n    audit_id,\n    author_id,\n    ticket_id\nfrom clean_comments", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.stg_zendesk_tickets_comments"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "async", "proc_cx_zendesk_clean_comments"], "unique_id": "model.houm.proc_cx_zendesk_clean_comments", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "processing/async/proc_cx_zendesk_clean_comments.sql", "original_file_path": "models/processing/async/proc_cx_zendesk_clean_comments.sql", "name": "proc_cx_zendesk_clean_comments", "alias": "proc_cx_zendesk_clean_comments", "checksum": {"name": "sha256", "checksum": "c72904a48e606daedc9fc1b061dfc50e48d692d0b9e4dc235ae329956c9bc9b1"}, "tags": [], "refs": [["stg_zendesk_tickets_comments"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/async/proc_cx_zendesk_clean_comments.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "materialized": "table"}, "created_at": 1654784475.4833999, "compiled_sql": "\n\nwith clean_comments as (\n    select\n        id,\n        channel,\n        requester,\n        requested_to,\n        created_at,\n        trim(translate(replace(regexp_replace(split_part(plain_body,'@houm.com',1), '(\\\\\\\\r|\\\\\\\\n)', ''),'&nbsp',''),'\u00e1\u00e9\u00ed\u00f3\u00fa;','aeiou')) as clean_body,\n        audit_id,\n        author_id,\n        ticket_id\n    from \"houmdw_prod\".\"dbt_staging\".\"stg_zendesk_tickets_comments\"\n    where plain_body is not null\n    and channel != 'system'\n)\nselect\n    id,\n    channel,\n    requester,\n    requested_to,\n    created_at,\n    clean_body,\n    length(clean_body) as clean_body_characters,\n    audit_id,\n    author_id,\n    ticket_id\nfrom clean_comments", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_cx_zendesk_clean_comments\""}, "model.houm.proc_cx_zendesk_first_clean_comments": {"raw_sql": "{{ config(materialized='table') }}\n\nwith comments as (\n    select\n        ROW_NUMBER() OVER (\n            partition by ticket_id\n            order by created_at asc\n        ) as row_number,\n        id,\n        channel,\n        requester,\n        requested_to,\n        created_at,\n        clean_body,\n        clean_body_characters,\n        audit_id,\n        author_id,\n        ticket_id\n    from {{ref('proc_cx_zendesk_clean_comments')}}\n)\nselect \n    id,\n    channel,\n    requester,\n    requested_to,\n    created_at,\n    clean_body,\n    clean_body_characters,\n    audit_id,\n    author_id,\n    ticket_id\nfrom comments\nwhere row_number = 1\norder by created_at desc", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_cx_zendesk_clean_comments"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "async", "proc_cx_zendesk_first_clean_comments"], "unique_id": "model.houm.proc_cx_zendesk_first_clean_comments", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "processing/async/proc_cx_zendesk_first_clean_comments.sql", "original_file_path": "models/processing/async/proc_cx_zendesk_first_clean_comments.sql", "name": "proc_cx_zendesk_first_clean_comments", "alias": "proc_cx_zendesk_first_clean_comments", "checksum": {"name": "sha256", "checksum": "9f41c0bc588030b224e050964b9e5c40b1df63c7252c6f02d2fbe660f93f1f97"}, "tags": [], "refs": [["proc_cx_zendesk_clean_comments"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/async/proc_cx_zendesk_first_clean_comments.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "materialized": "table"}, "created_at": 1654784475.4851232, "compiled_sql": "\n\nwith comments as (\n    select\n        ROW_NUMBER() OVER (\n            partition by ticket_id\n            order by created_at asc\n        ) as row_number,\n        id,\n        channel,\n        requester,\n        requested_to,\n        created_at,\n        clean_body,\n        clean_body_characters,\n        audit_id,\n        author_id,\n        ticket_id\n    from \"houmdw_prod\".\"dbt_processing\".\"proc_cx_zendesk_clean_comments\"\n)\nselect \n    id,\n    channel,\n    requester,\n    requested_to,\n    created_at,\n    clean_body,\n    clean_body_characters,\n    audit_id,\n    author_id,\n    ticket_id\nfrom comments\nwhere row_number = 1\norder by created_at desc", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_cx_zendesk_first_clean_comments\""}, "model.houm.proc_supply_seller_leads": {"raw_sql": "with sales_properties as (\nselect    \n    id as property_id\n    , supply_source\n    , supply_relation\n    ,country\n    ,for_sale\nfrom {{ ref('proc_properties') }}\nwhere for_sale = True\n)\n\nSelect     \n        bi_persons.id person_id\n        , bi_persons.email\n        , bi_deals.id deal_id\n        , bi_deals.add_time::date --as raw_add_time\n        --,(timezone( prop_mz.timezone, bi_deals.add_time)::timestamp with time zone)::date add_time\n        , case  when bi_deals.country_formated like '%_hile%' then 'Chile' \n            when bi_deals.country_formated like '%_olombia%' then 'Colombia'\n            when bi_deals.country_formated like '%__xico%' then 'Mexico'  \n            else sales_properties.country end country\n         , case  when geo_id is not null then geo_id::int\n            when bi_deals.country_formated like '%_hile%' then  79::int\n            when bi_deals.country_formated like '%_olombia%' then  14::int\n            when bi_deals.country_formated like '%__xico%' then 19::int\n            else null end geo_id\n        , bi_deals.funnel\n        , bi_deals.fecha_calificacion::date\n        , bi_deals.qualification\n        , bi_deals.property_id\n        , sales_properties.supply_source\n        , sales_properties.supply_relation\n        , bi_deals.lost_reason \n        , case when bi_deals.business in ('2. Sales','4.1 Rental/Sales Alianzas', '5. Sales Subsidio','5.1 Sales B2B' ) \n            or ((bi_deals.business is null OR bi_deals.business = '99. No Identificado') and sales_properties.for_sale ) \n            then true else false end for_sale_deal\nfrom {{ ref('stg_bi_deals') }} as bi_deals\nleft join {{ ref('stg_bi_persons') }} as bi_persons on bi_deals.person_id = bi_persons.id\nleft join sales_properties on sales_properties.property_id = bi_deals.property_id \nleft join {{ ref('proc_properties_mz') }} prop_mz on prop_mz.property_id = sales_properties.property_id \nwhere true  and funnel='1. Supply'  and bi_deals.business in ('2. Sales','4.1 Rental/Sales Alianzas', '5. Sales Subsidio','5.1 Sales B2B' )", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_properties", "model.houm.stg_bi_deals", "model.houm.stg_bi_persons", "model.houm.proc_properties_mz"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "supply"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "supply", "proc_supply_seller_leads"], "unique_id": "model.houm.proc_supply_seller_leads", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "processing/supply/proc_supply_seller_leads.sql", "original_file_path": "models/processing/supply/proc_supply_seller_leads.sql", "name": "proc_supply_seller_leads", "alias": "proc_supply_seller_leads", "checksum": {"name": "sha256", "checksum": "a74d4c56855894b70cfa8ef815e521d293ce45def4d0464fcb5be9e220f52bb3"}, "tags": ["dw", "processing", "supply"], "refs": [["proc_properties"], ["stg_bi_deals"], ["stg_bi_persons"], ["proc_properties_mz"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/supply/proc_supply_seller_leads.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "materialized": "table", "tags": ["dw", "processing", "supply"]}, "created_at": 1654784475.4869812, "compiled_sql": "with sales_properties as (\nselect    \n    id as property_id\n    , supply_source\n    , supply_relation\n    ,country\n    ,for_sale\nfrom \"houmdw_prod\".\"dbt_processing\".\"proc_properties\"\nwhere for_sale = True\n)\n\nSelect     \n        bi_persons.id person_id\n        , bi_persons.email\n        , bi_deals.id deal_id\n        , bi_deals.add_time::date --as raw_add_time\n        --,(timezone( prop_mz.timezone, bi_deals.add_time)::timestamp with time zone)::date add_time\n        , case  when bi_deals.country_formated like '%_hile%' then 'Chile' \n            when bi_deals.country_formated like '%_olombia%' then 'Colombia'\n            when bi_deals.country_formated like '%__xico%' then 'Mexico'  \n            else sales_properties.country end country\n         , case  when geo_id is not null then geo_id::int\n            when bi_deals.country_formated like '%_hile%' then  79::int\n            when bi_deals.country_formated like '%_olombia%' then  14::int\n            when bi_deals.country_formated like '%__xico%' then 19::int\n            else null end geo_id\n        , bi_deals.funnel\n        , bi_deals.fecha_calificacion::date\n        , bi_deals.qualification\n        , bi_deals.property_id\n        , sales_properties.supply_source\n        , sales_properties.supply_relation\n        , bi_deals.lost_reason \n        , case when bi_deals.business in ('2. Sales','4.1 Rental/Sales Alianzas', '5. Sales Subsidio','5.1 Sales B2B' ) \n            or ((bi_deals.business is null OR bi_deals.business = '99. No Identificado') and sales_properties.for_sale ) \n            then true else false end for_sale_deal\nfrom \"houmdw_prod\".\"dbt_staging\".\"stg_bi_deals\" as bi_deals\nleft join \"houmdw_prod\".\"dbt_staging\".\"stg_bi_persons\" as bi_persons on bi_deals.person_id = bi_persons.id\nleft join sales_properties on sales_properties.property_id = bi_deals.property_id \nleft join \"houmdw_prod\".\"dbt_processing\".\"proc_properties_mz\" prop_mz on prop_mz.property_id = sales_properties.property_id \nwhere true  and funnel='1. Supply'  and bi_deals.business in ('2. Sales','4.1 Rental/Sales Alianzas', '5. Sales Subsidio','5.1 Sales B2B' )", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_supply_seller_leads\""}, "model.houm.proc_property_salesdetails": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nselect property_id\r\n\t\t,updated_at\r\n\t\t,currency\r\n\t\t,description\r\n\t\t,price\r\n\t\t,status\r\n\t\t,first_publication_date\r\n\t\t,last_publication_date\r\n\t\t,brokerage_commission\r\n\t\t,recommended_price\r\n\t\t,recommended_price_max\r\n\t\t,recommended_price_min\r\n\t\t,currency_code\r\nfrom {{ ref('stg_property_salesdetails') }}\r\norder by updated_at desc", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.stg_property_salesdetails"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "supply"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "supply", "proc_property_salesdetails"], "unique_id": "model.houm.proc_property_salesdetails", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "processing/supply/proc_property_salesdetails.sql", "original_file_path": "models/processing/supply/proc_property_salesdetails.sql", "name": "proc_property_salesdetails", "alias": "proc_property_salesdetails", "checksum": {"name": "sha256", "checksum": "53208f1ef50f96a233f42cffa5f9ec79501acbccd946ed2f0d140bbdac59b9bc"}, "tags": ["dw", "processing", "supply"], "refs": [["stg_property_salesdetails"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/supply/proc_property_salesdetails.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "materialized": "table", "tags": ["dw", "processing", "supply"]}, "created_at": 1654784475.488735, "compiled_sql": "\n\nselect property_id\n\t\t,updated_at\n\t\t,currency\n\t\t,description\n\t\t,price\n\t\t,status\n\t\t,first_publication_date\n\t\t,last_publication_date\n\t\t,brokerage_commission\n\t\t,recommended_price\n\t\t,recommended_price_max\n\t\t,recommended_price_min\n\t\t,currency_code\nfrom \"houmdw_prod\".\"dbt_staging\".\"stg_property_salesdetails\"\norder by updated_at desc", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_property_salesdetails\""}, "model.houm.proc_tmp_supply_leads": {"raw_sql": "{{ config(materialized='table') }}\n\nwith first_clean as (\n\tselect\n\t\tid as deal_id,\n\t\tproc_deals.property_id,\n\t\tadd_time as original_date,\n\t\tcoalesce(proc_properties_macrozone.country,\n\t\t\t\t\tcase country_formated \n\t\t\t\t\t\twhen '1. Chile' then 'Chile'\n\t\t\t\t\t\twhen '2. Colombia' then 'Colombia'\n\t\t\t\t\t\twhen '3. M\u00e9xico' then 'Mexico'\n\t\t\t\t\tend) \n\t\tas country,\n\t\tcoalesce(proc_properties_macrozone.region) as region,\n\t\tcoalesce(proc_properties_macrozone.City_Houm,case \n\t\t\t\t\t\t\t\t\t\t\t\t\twhen proc_deals.city_2 = 'Envigado' then 'Medell\u00edn'\n\t\t\t\t\t\t\t\t\t\t\t\t\twhen proc_deals.city_2 = 'Regi\u00f3n Metropolitana' then 'Santiago'\n\t\t\t\t\t\t\t\t\t\t\t\t\twhen proc_deals.city_2 = 'Estado de M\u00e9xico' then 'Ciudad de M\u00e9xico'\n\t\t\t\t\t\t\t\t\t\t\t\t\twhen proc_deals.city_2 = 'Quilpue' then 'Vi\u00f1a del Mar'\n\t\t\t\t\t\t\t\t\t\t\t\t\twhen proc_deals.city_2 = 'Regi\u00f3n de Valparaiso' then 'V Regi\u00f3n Costa'\n\t\t\t\t\t\t\t\t\t\t\t\t\twhen proc_deals.city_2 = 'Buin' then 'Santiago'\n\t\t\t\t\t\t\t\t\t\t\t\t\twhen proc_deals.city_2 = 'Cundinamarca' then 'Bogot\u00e1'\n\t\t\t\t\t\t\t\t\t\t\t\t\twhen proc_deals.city_2 = 'Soacha' then 'Bogot\u00e1'\n\t\t\t\t\t\t\t\t\t\t\t\t\twhen proc_deals.city_2 = 'Otro' then null\n\t\t\t\t\t\t\t\t\t\t\t\t\twhen proc_deals.city_2 = 'Chicureo' then 'Santiago'\n\t\t\t\t\t\t\t\t\t\t\t\t\twhen proc_deals.city_2 = 'Bello' then 'Medell\u00edn'\n\t\t\t\t\t\t\t\t\t\t\t\t\twhen proc_deals.city_2 = 'Regi\u00f3n del Biob\u00edo' then 'Regi\u00f3n B\u00edo B\u00edo'\n\t\t\t\t\t\t\t\t\t\t\t\t\twhen proc_deals.city_2 = 'Paine' then 'Santiago'\n\t\t\t\t\t\t\t\t\t\t\t\t\twhen proc_deals.city_2 = 'Madrid' then 'Bogot\u00e1'\n\t\t\t\t\t\t\t\t\t\t\t\t\twhen proc_deals.city_2 = 'Calera de Tango' then 'Santiago'\n\t\t\t\t\t\t\t\t\t\t\t\t\twhen proc_deals.city_2 = 'Itag\u00fci' then 'Medell\u00edn'\n\t\t\t\t\t\t\t\t\t\t\t\t\twhen proc_deals.city_2 = 'Ch\u00eda' then 'Bogot\u00e1'\n\t\t\t\t\t\t\t\t\t\t\t\t\twhen proc_deals.city_2 = 'Limache' then 'Valparaiso'\n\t\t\t\t\t\t\t\t\t\t\t\t\twhen proc_deals.city_2 = 'Mosquera' then 'Bogot\u00e1'\n\t\t\t\t\t\t\t\t\t\t\t\t\twhen proc_deals.city_2 = 'Cajic\u00e1' then 'Bogot\u00e1'\n\t\t\t\t\t\t\t\t\t\t\t\t\twhen proc_deals.city_2 = 'Funza' then 'Bogot\u00e1'\n\t\t\t\t\t\t\t\t\t\t\t\t\twhen proc_deals.city_2 = 'Cota' then 'Bogot\u00e1'\n\t\t\t\t\t\t\t\t\t\t\t\t\twhen proc_deals.city_2 = 'Valparaiso' then 'V Region Costa'\n\t\t\t\t\t\t\t\t\t\t\t\t\twhen proc_deals.city_2 = 'Itag\u00fc\u00ed' then 'Medell\u00edn'\n\t\t\t\t\t\t\t\t\t\t\t\t\twhen proc_deals.city_2 = 'Concepci\u00f3n' then 'Regi\u00f3n B\u00edo B\u00edo'\n\t\t\t\t\t\t\t\t\t\t\t\telse proc_deals.city_2 end\n\t\t\t\t\t\t\t\t) as city,\n\t\tcoalesce(proc_properties_macrozone.supply_source, proc_deals.supply_source) as supply_source,\n\t\tcase\n\t\t\twhen funnel = '1. Supply' then qualification \n\t\t\twhen funnel = '2. Demand' then buyer_qualification \n\t\t\telse null\n\t\tend as lead_qualification,\n\t\tcoalesce(case when proc_deals.business like '%ianza%' then 'Brokers' else null end,\n\t\t\t\t\t\tproc_properties_macrozone.supply_relation) as supply_relation,\n\t\tproc_deals.business\n\tfrom {{ref('proc_tmp_supply_deals')}} proc_deals\n\tleft join {{ref('proc_tmp_supply_properties_macrozone')}} proc_properties_macrozone on proc_deals.property_id = proc_properties_macrozone.property_id\n)\n, second_clean as (\n\tselect \n\t\tfirst_clean.deal_id,\n\t\tfirst_clean.property_id,\n\t\tfirst_clean.original_date,\n\t\tfirst_clean.country,\n\t\tcase\n\t\t\twhen first_clean.region is null then\n\t\t\t\tcase\n\t\t\t\t\twhen first_clean.city is null then\n\t\t\t\t\t\tcase --Arreglo para asignar leads a regiones, necesario mejorar (TD) ya sea operacionalmente o con otra fuente de informaci\u00f3n.\n\t\t\t\t\t\t\twhen first_clean.country = 'Chile' then 'Regi\u00f3n Metropolitana'\n\t\t\t\t\t\t\twhen first_clean.country = 'Colombia' then 'Bogot\u00e1, D.C & Cundinamarca'\n\t\t\t\t\t\t\twhen first_clean.country = 'Mexico' then 'Ciudad de M\u00e9xico'\n\t\t\t\t\t\t\telse null\n\t\t\t\t\t\tend\n\t\t\t\t\telse dim_cities.region_houm\n\t\t\t\tend\n\t\t\telse first_clean.region\n\t\tend as region,\n\t\tcoalesce(first_clean.city,\tcase --Mismo punto anterior, Technical Debt por mejorar.\n\t\t\t\t\t\t\t\t\t\twhen country = 'Chile' then 'Santiago'\n\t\t\t\t\t\t\t\t\t\twhen country = 'Colombia' then 'Bogot\u00e1'\n\t\t\t\t\t\t\t\t\t\twhen country = 'Mexico' then 'Ciudad de M\u00e9xico'\n\t\t\t\t\t\t\t\t\t\telse null \n\t\t\t\t\t\t\t\t\tend) as city, \n\t\tbusiness,\n\t\tfirst_clean.supply_source,\n\t\tcase\n\t\t\twhen first_clean.country = 'Colombia' and lead_qualification = 6 then 'New Properties'\n\t\t\telse coalesce(first_clean.supply_relation,'Landlord') --Validar comercialmente si definicion es util\n\t\tend as supply_relation,\n\t\tfirst_clean.lead_qualification\n\tfrom first_clean\n\tleft join {{ref('proc_tmp_supply_cities')}} dim_cities on first_clean.city = dim_cities.City_Houm)\nselect\n\tsecond_clean.deal_id,\n\tsecond_clean.property_id,\n\tsecond_clean.original_date as original_time, --La hora original esta en UTC\n\ttimezone(dim_cities.timezone, timezone('UTC',second_clean.original_date)) as local_time,\n\tsecond_clean.country,\n\tsecond_clean.region,\n\tsecond_clean.city,\n\tsecond_clean.business,\n\tsecond_clean.supply_source,\n\tsecond_clean.supply_relation,\n\tsecond_clean.lead_qualification,\n\tproc_deals.person_id,\n\tproc_deals.qualification_date,\n\tproc_deals.funnel\nfrom second_clean\nleft join {{ref('proc_tmp_supply_cities')}} dim_cities on dim_cities.City_Houm = second_clean.city\nleft join {{ref('proc_tmp_supply_deals')}} proc_deals on proc_deals.id = second_clean.deal_id", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_tmp_supply_deals", "model.houm.proc_tmp_supply_properties_macrozone", "model.houm.proc_tmp_supply_cities", "model.houm.proc_tmp_supply_cities", "model.houm.proc_tmp_supply_deals"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "supply"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "supply", "proc_tmp_supply_leads"], "unique_id": "model.houm.proc_tmp_supply_leads", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "processing/supply/proc_tmp_supply_leads.sql", "original_file_path": "models/processing/supply/proc_tmp_supply_leads.sql", "name": "proc_tmp_supply_leads", "alias": "proc_tmp_supply_leads", "checksum": {"name": "sha256", "checksum": "1d2cb2a5988f83a1276b1eb958a399a5b9b08fdf87c064fb48040f99a3ca4d5d"}, "tags": ["dw", "processing", "supply"], "refs": [["proc_tmp_supply_deals"], ["proc_tmp_supply_properties_macrozone"], ["proc_tmp_supply_cities"], ["proc_tmp_supply_cities"], ["proc_tmp_supply_deals"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/supply/proc_tmp_supply_leads.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "materialized": "table", "tags": ["dw", "processing", "supply"]}, "created_at": 1654784475.490488, "compiled_sql": "\n\nwith first_clean as (\n\tselect\n\t\tid as deal_id,\n\t\tproc_deals.property_id,\n\t\tadd_time as original_date,\n\t\tcoalesce(proc_properties_macrozone.country,\n\t\t\t\t\tcase country_formated \n\t\t\t\t\t\twhen '1. Chile' then 'Chile'\n\t\t\t\t\t\twhen '2. Colombia' then 'Colombia'\n\t\t\t\t\t\twhen '3. M\u00e9xico' then 'Mexico'\n\t\t\t\t\tend) \n\t\tas country,\n\t\tcoalesce(proc_properties_macrozone.region) as region,\n\t\tcoalesce(proc_properties_macrozone.City_Houm,case \n\t\t\t\t\t\t\t\t\t\t\t\t\twhen proc_deals.city_2 = 'Envigado' then 'Medell\u00edn'\n\t\t\t\t\t\t\t\t\t\t\t\t\twhen proc_deals.city_2 = 'Regi\u00f3n Metropolitana' then 'Santiago'\n\t\t\t\t\t\t\t\t\t\t\t\t\twhen proc_deals.city_2 = 'Estado de M\u00e9xico' then 'Ciudad de M\u00e9xico'\n\t\t\t\t\t\t\t\t\t\t\t\t\twhen proc_deals.city_2 = 'Quilpue' then 'Vi\u00f1a del Mar'\n\t\t\t\t\t\t\t\t\t\t\t\t\twhen proc_deals.city_2 = 'Regi\u00f3n de Valparaiso' then 'V Regi\u00f3n Costa'\n\t\t\t\t\t\t\t\t\t\t\t\t\twhen proc_deals.city_2 = 'Buin' then 'Santiago'\n\t\t\t\t\t\t\t\t\t\t\t\t\twhen proc_deals.city_2 = 'Cundinamarca' then 'Bogot\u00e1'\n\t\t\t\t\t\t\t\t\t\t\t\t\twhen proc_deals.city_2 = 'Soacha' then 'Bogot\u00e1'\n\t\t\t\t\t\t\t\t\t\t\t\t\twhen proc_deals.city_2 = 'Otro' then null\n\t\t\t\t\t\t\t\t\t\t\t\t\twhen proc_deals.city_2 = 'Chicureo' then 'Santiago'\n\t\t\t\t\t\t\t\t\t\t\t\t\twhen proc_deals.city_2 = 'Bello' then 'Medell\u00edn'\n\t\t\t\t\t\t\t\t\t\t\t\t\twhen proc_deals.city_2 = 'Regi\u00f3n del Biob\u00edo' then 'Regi\u00f3n B\u00edo B\u00edo'\n\t\t\t\t\t\t\t\t\t\t\t\t\twhen proc_deals.city_2 = 'Paine' then 'Santiago'\n\t\t\t\t\t\t\t\t\t\t\t\t\twhen proc_deals.city_2 = 'Madrid' then 'Bogot\u00e1'\n\t\t\t\t\t\t\t\t\t\t\t\t\twhen proc_deals.city_2 = 'Calera de Tango' then 'Santiago'\n\t\t\t\t\t\t\t\t\t\t\t\t\twhen proc_deals.city_2 = 'Itag\u00fci' then 'Medell\u00edn'\n\t\t\t\t\t\t\t\t\t\t\t\t\twhen proc_deals.city_2 = 'Ch\u00eda' then 'Bogot\u00e1'\n\t\t\t\t\t\t\t\t\t\t\t\t\twhen proc_deals.city_2 = 'Limache' then 'Valparaiso'\n\t\t\t\t\t\t\t\t\t\t\t\t\twhen proc_deals.city_2 = 'Mosquera' then 'Bogot\u00e1'\n\t\t\t\t\t\t\t\t\t\t\t\t\twhen proc_deals.city_2 = 'Cajic\u00e1' then 'Bogot\u00e1'\n\t\t\t\t\t\t\t\t\t\t\t\t\twhen proc_deals.city_2 = 'Funza' then 'Bogot\u00e1'\n\t\t\t\t\t\t\t\t\t\t\t\t\twhen proc_deals.city_2 = 'Cota' then 'Bogot\u00e1'\n\t\t\t\t\t\t\t\t\t\t\t\t\twhen proc_deals.city_2 = 'Valparaiso' then 'V Region Costa'\n\t\t\t\t\t\t\t\t\t\t\t\t\twhen proc_deals.city_2 = 'Itag\u00fc\u00ed' then 'Medell\u00edn'\n\t\t\t\t\t\t\t\t\t\t\t\t\twhen proc_deals.city_2 = 'Concepci\u00f3n' then 'Regi\u00f3n B\u00edo B\u00edo'\n\t\t\t\t\t\t\t\t\t\t\t\telse proc_deals.city_2 end\n\t\t\t\t\t\t\t\t) as city,\n\t\tcoalesce(proc_properties_macrozone.supply_source, proc_deals.supply_source) as supply_source,\n\t\tcase\n\t\t\twhen funnel = '1. Supply' then qualification \n\t\t\twhen funnel = '2. Demand' then buyer_qualification \n\t\t\telse null\n\t\tend as lead_qualification,\n\t\tcoalesce(case when proc_deals.business like '%ianza%' then 'Brokers' else null end,\n\t\t\t\t\t\tproc_properties_macrozone.supply_relation) as supply_relation,\n\t\tproc_deals.business\n\tfrom \"houmdw_prod\".\"dbt_processing\".\"proc_tmp_supply_deals\" proc_deals\n\tleft join \"houmdw_prod\".\"dbt_processing\".\"proc_tmp_supply_properties_macrozone\" proc_properties_macrozone on proc_deals.property_id = proc_properties_macrozone.property_id\n)\n, second_clean as (\n\tselect \n\t\tfirst_clean.deal_id,\n\t\tfirst_clean.property_id,\n\t\tfirst_clean.original_date,\n\t\tfirst_clean.country,\n\t\tcase\n\t\t\twhen first_clean.region is null then\n\t\t\t\tcase\n\t\t\t\t\twhen first_clean.city is null then\n\t\t\t\t\t\tcase --Arreglo para asignar leads a regiones, necesario mejorar (TD) ya sea operacionalmente o con otra fuente de informaci\u00f3n.\n\t\t\t\t\t\t\twhen first_clean.country = 'Chile' then 'Regi\u00f3n Metropolitana'\n\t\t\t\t\t\t\twhen first_clean.country = 'Colombia' then 'Bogot\u00e1, D.C & Cundinamarca'\n\t\t\t\t\t\t\twhen first_clean.country = 'Mexico' then 'Ciudad de M\u00e9xico'\n\t\t\t\t\t\t\telse null\n\t\t\t\t\t\tend\n\t\t\t\t\telse dim_cities.region_houm\n\t\t\t\tend\n\t\t\telse first_clean.region\n\t\tend as region,\n\t\tcoalesce(first_clean.city,\tcase --Mismo punto anterior, Technical Debt por mejorar.\n\t\t\t\t\t\t\t\t\t\twhen country = 'Chile' then 'Santiago'\n\t\t\t\t\t\t\t\t\t\twhen country = 'Colombia' then 'Bogot\u00e1'\n\t\t\t\t\t\t\t\t\t\twhen country = 'Mexico' then 'Ciudad de M\u00e9xico'\n\t\t\t\t\t\t\t\t\t\telse null \n\t\t\t\t\t\t\t\t\tend) as city, \n\t\tbusiness,\n\t\tfirst_clean.supply_source,\n\t\tcase\n\t\t\twhen first_clean.country = 'Colombia' and lead_qualification = 6 then 'New Properties'\n\t\t\telse coalesce(first_clean.supply_relation,'Landlord') --Validar comercialmente si definicion es util\n\t\tend as supply_relation,\n\t\tfirst_clean.lead_qualification\n\tfrom first_clean\n\tleft join \"houmdw_prod\".\"dbt_processing\".\"proc_tmp_supply_cities\" dim_cities on first_clean.city = dim_cities.City_Houm)\nselect\n\tsecond_clean.deal_id,\n\tsecond_clean.property_id,\n\tsecond_clean.original_date as original_time, --La hora original esta en UTC\n\ttimezone(dim_cities.timezone, timezone('UTC',second_clean.original_date)) as local_time,\n\tsecond_clean.country,\n\tsecond_clean.region,\n\tsecond_clean.city,\n\tsecond_clean.business,\n\tsecond_clean.supply_source,\n\tsecond_clean.supply_relation,\n\tsecond_clean.lead_qualification,\n\tproc_deals.person_id,\n\tproc_deals.qualification_date,\n\tproc_deals.funnel\nfrom second_clean\nleft join \"houmdw_prod\".\"dbt_processing\".\"proc_tmp_supply_cities\" dim_cities on dim_cities.City_Houm = second_clean.city\nleft join \"houmdw_prod\".\"dbt_processing\".\"proc_tmp_supply_deals\" proc_deals on proc_deals.id = second_clean.deal_id", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_tmp_supply_leads\""}, "model.houm.proc_properties_mz": {"raw_sql": "Select  property.property_id, min(dim_geo.geo_id)   geo_id  , max(timezone) as timezone\nfrom {{ ref('proc_propertydetails') }} property\nleft join {{ ref('proc_macrozone') }} dim_geo\non (ST_Contains(dim_geo.polygon,ST_SetSRID(ST_Point(property.longitud, property.latitud), 4326)) = true)\ngroup by property_id", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_propertydetails", "model.houm.proc_macrozone"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "supply"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "supply", "proc_properties_mz"], "unique_id": "model.houm.proc_properties_mz", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "processing/supply/proc_properties_mz.sql", "original_file_path": "models/processing/supply/proc_properties_mz.sql", "name": "proc_properties_mz", "alias": "proc_properties_mz", "checksum": {"name": "sha256", "checksum": "c5de38d0cd2125728cf34b668d2faf36dfc9954e239d9eb32f7c1977b24dfbe9"}, "tags": ["dw", "processing", "supply"], "refs": [["proc_propertydetails"], ["proc_macrozone"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/supply/proc_properties_mz.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "materialized": "table", "tags": ["dw", "processing", "supply"]}, "created_at": 1654784475.492648, "compiled_sql": "Select  property.property_id, min(dim_geo.geo_id)   geo_id  , max(timezone) as timezone\nfrom \"houmdw_prod\".\"dbt_processing\".\"proc_propertydetails\" property\nleft join \"houmdw_prod\".\"dbt_processing\".\"proc_macrozone\" dim_geo\non (ST_Contains(dim_geo.polygon,ST_SetSRID(ST_Point(property.longitud, property.latitud), 4326)) = true)\ngroup by property_id", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_properties_mz\""}, "model.houm.proc_supply_schedules": {"raw_sql": "Select\n    schedules.id        schedule_id \n    , prop_mz.geo_id\n    , (timezone( prop_mz.timezone, schedules.created_at)::timestamp with time zone)::date created_at\n    , (timezone( prop_mz.timezone, schedules.begin_date)::timestamp with time zone)::date begin_date\n    , schedules.prop_id property_id \n    , properties.supply_source\n    , properties.supply_relation\n    , schedules.status\n    , scheduler_scheduletypes.name as schedule_type_name\n    , applicant.email\n    , applicant.id as  applicant_id \nfrom {{ ref('stg_scheduler_schedules') }} AS schedules\n    left join {{ ref('stg_scheduler_scheduletypes') }} AS scheduler_scheduletypes on scheduler_scheduletypes.id  = schedules.schedule_type_id\n    left join {{ ref('stg_scheduler_schedulehasapplicant') }} AS scheduler_schedulehasapplicant  on scheduler_schedulehasapplicant.schedule_id     = schedules.id \n    left join {{ ref('stg_arriendoasegurado_applicant') }} AS applicant on applicant.id = scheduler_schedulehasapplicant.applicant_id\n    left join {{ ref('proc_properties_mz') }} AS prop_mz  on prop_mz.property_id = schedules.prop_id \n    left join {{ ref('proc_properties') }} as properties on properties.id = schedules.prop_id\nwhere scheduler_scheduletypes.name in ('Photo','SalesPhoto')", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.stg_scheduler_schedules", "model.houm.stg_scheduler_scheduletypes", "model.houm.stg_scheduler_schedulehasapplicant", "model.houm.stg_arriendoasegurado_applicant", "model.houm.proc_properties_mz", "model.houm.proc_properties"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "supply"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "supply", "proc_supply_schedules"], "unique_id": "model.houm.proc_supply_schedules", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "processing/supply/proc_supply_schedules.sql", "original_file_path": "models/processing/supply/proc_supply_schedules.sql", "name": "proc_supply_schedules", "alias": "proc_supply_schedules", "checksum": {"name": "sha256", "checksum": "1d14c544c3987017cdd8e97ac18e4beff2076c08394c690fc2c3e5ec5a3b8397"}, "tags": ["dw", "processing", "supply"], "refs": [["stg_scheduler_schedules"], ["stg_scheduler_scheduletypes"], ["stg_scheduler_schedulehasapplicant"], ["stg_arriendoasegurado_applicant"], ["proc_properties_mz"], ["proc_properties"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/supply/proc_supply_schedules.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "materialized": "table", "tags": ["dw", "processing", "supply"]}, "created_at": 1654784475.4942741, "compiled_sql": "Select\n    schedules.id        schedule_id \n    , prop_mz.geo_id\n    , (timezone( prop_mz.timezone, schedules.created_at)::timestamp with time zone)::date created_at\n    , (timezone( prop_mz.timezone, schedules.begin_date)::timestamp with time zone)::date begin_date\n    , schedules.prop_id property_id \n    , properties.supply_source\n    , properties.supply_relation\n    , schedules.status\n    , scheduler_scheduletypes.name as schedule_type_name\n    , applicant.email\n    , applicant.id as  applicant_id \nfrom \"houmdw_prod\".\"dbt_staging\".\"stg_scheduler_schedules\" AS schedules\n    left join \"houmdw_prod\".\"dbt_staging\".\"stg_scheduler_scheduletypes\" AS scheduler_scheduletypes on scheduler_scheduletypes.id  = schedules.schedule_type_id\n    left join \"houmdw_prod\".\"dbt_staging\".\"stg_scheduler_schedulehasapplicant\" AS scheduler_schedulehasapplicant  on scheduler_schedulehasapplicant.schedule_id     = schedules.id \n    left join \"houmdw_prod\".\"dbt_staging\".\"stg_arriendoasegurado_applicant\" AS applicant on applicant.id = scheduler_schedulehasapplicant.applicant_id\n    left join \"houmdw_prod\".\"dbt_processing\".\"proc_properties_mz\" AS prop_mz  on prop_mz.property_id = schedules.prop_id \n    left join \"houmdw_prod\".\"dbt_processing\".\"proc_properties\" as properties on properties.id = schedules.prop_id\nwhere scheduler_scheduletypes.name in ('Photo','SalesPhoto')", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_supply_schedules\""}, "model.houm.proc_supply_landlord_leads": {"raw_sql": "with rental_properties as (\nselect \n    id as property_id\n    , supply_source\n    , supply_relation\n    ,country\n    ,for_sale\nfrom {{ ref('proc_properties') }}\nwhere for_rental\n)\n\nSelect \n    bi_persons.id person_id\n    , bi_persons.email\n    , bi_deals.id deal_id\n    , bi_deals.add_time::date --as raw_add_time\n    --,(timezone( prop_mz.timezone, bi_deals.add_time)::timestamp with time zone)::date add_time\n    , case  when bi_deals.country_formated like '%_hile%' then 'Chile' \n            when bi_deals.country_formated like '%_olombia%' then 'Colombia'\n            when bi_deals.country_formated like '%__xico%' then 'Mexico'  \n        else rental_properties.country end country\n    , case  when geo_id is not null then geo_id::int     --esta transformacion la hacemos para mapear casos de landlords que aun no tiene property id creadas        \n            when bi_deals.country_formated like '%_hile%' then  79::int\n            when bi_deals.country_formated like '%_olombia%' then  14::int\n            when bi_deals.country_formated like '%__xico%' then 19::int\n        else null end geo_id\n    , bi_deals.funnel\n    , bi_deals.fecha_calificacion::date\n    --, bi_deals.calificacion_buyer as qualification --este campo corresponde a buyer-demand\n    , bi_deals.qualification --este campo corresponde exclusivamente a landlords.\n    , bi_deals.property_id\n    , rental_properties.supply_source\n    , rental_properties.supply_relation\n    , bi_deals.lost_reason \n    --, case when bi_deals.business in ('1. Rentals','4.1 Rental/Sales Alianzas', '4. Rental/Sales','3. Rental Alianzas' ) \n    --      or ((bi_deals.business is null OR bi_deals.business = '99. No Identificado') and rental_properties.for_rental ) \n    --        then true else false end for_rental\nfrom {{ ref('stg_bi_deals') }} as bi_deals\nleft join \n{{ ref('stg_bi_persons') }} as bi_persons \n        on bi_deals.person_id = bi_persons.id\nleft join \nrental_properties \n        on rental_properties.property_id = bi_deals.property_id \nleft join \n{{ ref('proc_properties_mz') }} prop_mz \n        on prop_mz.property_id = rental_properties.property_id \nwhere true  \n        and funnel='1. Supply' \n        and bi_deals.business in ('1. Rentals','4.1 Rental/Sales Alianzas', '4. Rental/Sales','3. Rental Alianzas' )", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_properties", "model.houm.stg_bi_deals", "model.houm.stg_bi_persons", "model.houm.proc_properties_mz"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "supply"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "supply", "proc_supply_landlord_leads"], "unique_id": "model.houm.proc_supply_landlord_leads", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "processing/supply/proc_supply_landlord_leads.sql", "original_file_path": "models/processing/supply/proc_supply_landlord_leads.sql", "name": "proc_supply_landlord_leads", "alias": "proc_supply_landlord_leads", "checksum": {"name": "sha256", "checksum": "a9237514210228253f503bf3d5f46063846c884ef03ace9f3371e6b5a454a13d"}, "tags": ["dw", "processing", "supply"], "refs": [["proc_properties"], ["stg_bi_deals"], ["stg_bi_persons"], ["proc_properties_mz"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/supply/proc_supply_landlord_leads.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "materialized": "table", "tags": ["dw", "processing", "supply"]}, "created_at": 1654784475.496064, "compiled_sql": "with rental_properties as (\nselect \n    id as property_id\n    , supply_source\n    , supply_relation\n    ,country\n    ,for_sale\nfrom \"houmdw_prod\".\"dbt_processing\".\"proc_properties\"\nwhere for_rental\n)\n\nSelect \n    bi_persons.id person_id\n    , bi_persons.email\n    , bi_deals.id deal_id\n    , bi_deals.add_time::date --as raw_add_time\n    --,(timezone( prop_mz.timezone, bi_deals.add_time)::timestamp with time zone)::date add_time\n    , case  when bi_deals.country_formated like '%_hile%' then 'Chile' \n            when bi_deals.country_formated like '%_olombia%' then 'Colombia'\n            when bi_deals.country_formated like '%__xico%' then 'Mexico'  \n        else rental_properties.country end country\n    , case  when geo_id is not null then geo_id::int     --esta transformacion la hacemos para mapear casos de landlords que aun no tiene property id creadas        \n            when bi_deals.country_formated like '%_hile%' then  79::int\n            when bi_deals.country_formated like '%_olombia%' then  14::int\n            when bi_deals.country_formated like '%__xico%' then 19::int\n        else null end geo_id\n    , bi_deals.funnel\n    , bi_deals.fecha_calificacion::date\n    --, bi_deals.calificacion_buyer as qualification --este campo corresponde a buyer-demand\n    , bi_deals.qualification --este campo corresponde exclusivamente a landlords.\n    , bi_deals.property_id\n    , rental_properties.supply_source\n    , rental_properties.supply_relation\n    , bi_deals.lost_reason \n    --, case when bi_deals.business in ('1. Rentals','4.1 Rental/Sales Alianzas', '4. Rental/Sales','3. Rental Alianzas' ) \n    --      or ((bi_deals.business is null OR bi_deals.business = '99. No Identificado') and rental_properties.for_rental ) \n    --        then true else false end for_rental\nfrom \"houmdw_prod\".\"dbt_staging\".\"stg_bi_deals\" as bi_deals\nleft join \n\"houmdw_prod\".\"dbt_staging\".\"stg_bi_persons\" as bi_persons \n        on bi_deals.person_id = bi_persons.id\nleft join \nrental_properties \n        on rental_properties.property_id = bi_deals.property_id \nleft join \n\"houmdw_prod\".\"dbt_processing\".\"proc_properties_mz\" prop_mz \n        on prop_mz.property_id = rental_properties.property_id \nwhere true  \n        and funnel='1. Supply' \n        and bi_deals.business in ('1. Rentals','4.1 Rental/Sales Alianzas', '4. Rental/Sales','3. Rental Alianzas' )", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_supply_landlord_leads\""}, "model.houm.proc_propertydetails": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nselect id\r\n\t\t,property_id\r\n\t\t,created_at\r\n\t\t,updated_at\r\n\t\t,m_construidos\r\n\t\t,m_terreno\r\n\t\t,dormitorios\r\n\t\t,banos\r\n\t\t,servicios\r\n\t\t,latitud\r\n\t\t,longitud\r\n\t\t,amoblado\r\n\t\t,orientacion\r\n\t\t,gc\r\n\t\t,terraza\r\n\t\t,piscina\r\n\t\t,condominio\r\n\t\t,calefaccion\r\n\t\t,bodega\r\n\t\t,estacionamientos\r\n\t\t,gym\r\n\t\t,mascotas\r\n\t\t,status\r\nfrom {{ ref('stg_propertydetails') }}\r\norder by created_at desc", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.stg_propertydetails"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "supply"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "supply", "proc_propertydetails"], "unique_id": "model.houm.proc_propertydetails", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "processing/supply/proc_propertydetails.sql", "original_file_path": "models/processing/supply/proc_propertydetails.sql", "name": "proc_propertydetails", "alias": "proc_propertydetails", "checksum": {"name": "sha256", "checksum": "85f4b1f3098717c67862319536c98dd4273465cd1ca09e7d8b7a0d6a74074587"}, "tags": ["dw", "processing", "supply"], "refs": [["stg_propertydetails"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/supply/proc_propertydetails.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "materialized": "table", "tags": ["dw", "processing", "supply"]}, "created_at": 1654784475.497801, "compiled_sql": "\n\nselect id\n\t\t,property_id\n\t\t,created_at\n\t\t,updated_at\n\t\t,m_construidos\n\t\t,m_terreno\n\t\t,dormitorios\n\t\t,banos\n\t\t,servicios\n\t\t,latitud\n\t\t,longitud\n\t\t,amoblado\n\t\t,orientacion\n\t\t,gc\n\t\t,terraza\n\t\t,piscina\n\t\t,condominio\n\t\t,calefaccion\n\t\t,bodega\n\t\t,estacionamientos\n\t\t,gym\n\t\t,mascotas\n\t\t,status\nfrom \"houmdw_prod\".\"dbt_staging\".\"stg_propertydetails\"\norder by created_at desc", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_propertydetails\""}, "model.houm.proc_tmp_supply_persons_emails": {"raw_sql": "{{ config(materialized='table') }}\n\nwith emails as(\n\tSELECT \n\t\tDISTINCT deals.person_id.value::integer AS person_id, \n\t\te_email.value::text AS email, \n\t\te_email.primary::boolean AS primary_email \n\tFROM \n\t\t{{ref('stg_deals')}} AS deals, \n\t\tdeals.person_id.email AS e_email \n\tORDER BY 1\n)\nSELECT \n\tROW_NUMBER() OVER (ORDER BY emails.person_id ASC) AS id, \n\temails.person_id AS person_id, \n\tcase \n\t\twhen length(emails.email) < 1 then null\n\t\telse emails.email\n\tend AS email, \n\temails.primary_email AS primary_email \nFROM emails\nORDER BY 1", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.stg_deals"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "supply"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "supply", "proc_tmp_supply_persons_emails"], "unique_id": "model.houm.proc_tmp_supply_persons_emails", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "processing/supply/proc_tmp_supply_persons_emails.sql", "original_file_path": "models/processing/supply/proc_tmp_supply_persons_emails.sql", "name": "proc_tmp_supply_persons_emails", "alias": "proc_tmp_supply_persons_emails", "checksum": {"name": "sha256", "checksum": "6357189f1cda5a8d584fb2278b3d090b8794d2ec580840f6b2eb78c2d60fcd26"}, "tags": ["dw", "processing", "supply"], "refs": [["stg_deals"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/supply/proc_tmp_supply_persons_emails.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "materialized": "table", "tags": ["dw", "processing", "supply"]}, "created_at": 1654784475.4996521, "compiled_sql": "\n\nwith emails as(\n\tSELECT \n\t\tDISTINCT deals.person_id.value::integer AS person_id, \n\t\te_email.value::text AS email, \n\t\te_email.primary::boolean AS primary_email \n\tFROM \n\t\t\"houmdw_prod\".\"dbt_staging\".\"stg_deals\" AS deals, \n\t\tdeals.person_id.email AS e_email \n\tORDER BY 1\n)\nSELECT \n\tROW_NUMBER() OVER (ORDER BY emails.person_id ASC) AS id, \n\temails.person_id AS person_id, \n\tcase \n\t\twhen length(emails.email) < 1 then null\n\t\telse emails.email\n\tend AS email, \n\temails.primary_email AS primary_email \nFROM emails\nORDER BY 1", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_tmp_supply_persons_emails\""}, "model.houm.proc_tmp_supply_cities": {"raw_sql": "{{ config(materialized='table') }}\n\nselect distinct \n\tCity_Houm, \n\tregion_houm,\n\tmin(geo_id) as geo_id,\n\tmax(timezone) as timezone\nfrom {{ref('proc_macrozone')}}\ngroup by 1,2", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_macrozone"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "supply"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "supply", "proc_tmp_supply_cities"], "unique_id": "model.houm.proc_tmp_supply_cities", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "processing/supply/proc_tmp_supply_cities.sql", "original_file_path": "models/processing/supply/proc_tmp_supply_cities.sql", "name": "proc_tmp_supply_cities", "alias": "proc_tmp_supply_cities", "checksum": {"name": "sha256", "checksum": "b2d0f115acfcfeaf4da8889b97333a93c416e21fb4006f35e2572bbe8c107935"}, "tags": ["dw", "processing", "supply"], "refs": [["proc_macrozone"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/supply/proc_tmp_supply_cities.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "materialized": "table", "tags": ["dw", "processing", "supply"]}, "created_at": 1654784475.501278, "compiled_sql": "\n\nselect distinct \n\tCity_Houm, \n\tregion_houm,\n\tmin(geo_id) as geo_id,\n\tmax(timezone) as timezone\nfrom \"houmdw_prod\".\"dbt_processing\".\"proc_macrozone\"\ngroup by 1,2", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_tmp_supply_cities\""}, "model.houm.proc_tmp_supply_deals": {"raw_sql": "{{ config(materialized='table') }}\n\nwith deals as (SELECT deals.id, \n\t\t\t\t\t\tdeals.stage_id, \n\t\t\t\t\t\tdeals.title, \n\t\t\t\t\t\tdeals.person_id.value::integer as person_id,\n\t\t\t\t\t\tdeals.user_id.value::integer as user_id,\n\t\t\t\t\t\tdeals.value, \n\t\t\t\t\t\tdeals.currency, \n\t\t\t\t\t\tdeals.add_time, \n\t\t\t\t\t\tdeals.update_time, \n\t\t\t\t\t\tdeals.active, \n\t\t\t\t\t\tdeals.deleted, \n\t\t\t\t\t\tdeals.status, \n\t\t\t\t\t\tdeals.next_activity_date, \n\t\t\t\t\t\tdeals.next_activity_time, \n\t\t\t\t\t\tdeals.next_activity_id, \n\t\t\t\t\t\tdeals.last_activity_date, \n\t\t\t\t\t\tdeals.lost_reason, \n\t\t\t\t\t\tdeals.pipeline_id, \n\t\t\t\t\t\tdeals.won_time, \n\t\t\t\t\t\tdeals.first_won_time, \n\t\t\t\t\t\tdeals.lost_time, \n\t\t\t\t\t\tdeals.email_messages_count, \n\t\t\t\t\t\tdeals.activities_count, \n\t\t\t\t\t\tdeals.done_activities_count, \n\t\t\t\t\t\tdeals.undone_activities_count, \n\t\t\t\t\t\tdeals.expected_close_date, \n\t\t\t\t\t\tdeals.\"label\", \n\t\t\t\t\t\tdeals.person_name, \n\t\t\t\t\t\tdeals.org_name, \n\t\t\t\t\t\tdeals.owner_name, \n\t\t\t\t\t\tdeals.\"29983ea0d395dd72390c71a1bd76c80546609761\" AS property_link, \n\t\t\t\t\t\tdeals.\"79f08ab8c03c88c6bf3148119778d7f64f833a41\" AS property_address, \n\t\t\t\t\t\tcase deals.\"408ab88af9150b9bb785f1453bd42bc4a1eb5f07\"\n\t\t\t\t\t\t\twhen 81 then '0'\n\t\t\t\t\t\t\twhen 82 then '1'\n\t\t\t\t\t\t\twhen 83 then '2'\n\t\t\t\t\t\t\twhen 84 then '3'\n\t\t\t\t\t\t\twhen 85 then '4'\n\t\t\t\t\t\t\twhen 86 then '5'\n\t\t\t\t\t\t\telse \"408ab88af9150b9bb785f1453bd42bc4a1eb5f07\"\n\t\t\t\t\t\tend AS qualification, \n\t\t\t\t\t\tdeals.\"91ae7d54bd0239721db388ee0c0ffbee7a68d249\" AS email,\n\t\t\t\t\t\tdeals.\"b224b2df6dddae4a3f59d9ab92496c84fb81fcff\" AS phone, \n\t\t\t\t\t\tdeals.\"c116f72d816aa5ce9f2a925345b364775a3933ac\" AS property_type, \n\t\t\t\t\t\tdeals.\"76d94f6699c815a28f47ea500f2481fa7aede96c\" AS source, \n\t\t\t\t\t\tdeals.\"d5b32c860fba2502a7d0ef77db7f93985d5dbfbb\" AS city, \n\t\t\t\t\t\tcase deals.\"6dd9993bf1db83c740ad3bcffee5fd8143f5fad9\"\n\t\t\t\t\t\t\twhen 107 then 'Rental'\n\t\t\t\t\t\t\twhen 110 then 'Sales'\n\t\t\t\t\t\t\telse \"6dd9993bf1db83c740ad3bcffee5fd8143f5fad9\"::text\n\t\t\t\t\t\tend AS pipedrive_business, \n\t\t\t\t\t\tdeals.\"aebaba770d785ee2eb0847592ed4ee2cc468de21\" AS property_id, \n\t\t\t\t\t\tdeals.\"be6579db0f5918a46f43181eec54056ca8354a50\" AS able_for_ep, \n\t\t\t\t\t\tdeals.\"853838575c80f1c1f80117953412998c0ea935ad\" AS deal_country,\n\t\t\t\t\t\tdeals.\"16d9ee32ae9b3d34a0c69317871b2d3c612a69ed\" AS country,\n\t\t\t\t\t\tdeals.\"76eb4b457cf491efd1de1cfcaf9ea2da37c23b36\"::date AS qualification_date,\n\t\t\t\t\t\tcase deals.\"d94ddd002dfe910eb5a72673bcc54b1789d21384\" \n\t\t\t\t\t\t\twhen 116 then 'Cr\u00e9dito pre-aprobado' \n\t\t\t\t            when 114 then 'Todo al contado'\n\t\t\t\t            when 193 then 'Subsidio habitacional'\n\t\t\t\t            when '116,117' then 'Cr\u00e9dito pre-aprobado/Sin financiamiento'\n\t\t\t\t            when 115 then 'Cr\u00e9dito aprobado'\n\t\t\t\t            when 117 then 'Sin financiamiento'\n\t\t\t\t            when '114,115' then 'Todo al contado/Cr\u00e9dito aprobado'\n\t\t\t\t            when '114,117' then 'Todo al contado/Sin financiamiento'\n\t\t\t\t            when 207 then 'No quiere detallar'\n\t\t\t\t            when '114,193' then 'Todo al contado/Subsidio habitacional'\n\t\t\t\t            when '115,193' then 'Cr\u00e9dito aprobado/Subsidio habitacional'\n\t\t\t\t            when '116,193' then 'Cr\u00e9dito pre-aprobado/Subsidio habitacional'\n\t\t\t\t        \telse \"d94ddd002dfe910eb5a72673bcc54b1789d21384\"::text\n\t\t\t\t\t\tend AS funding,\n\t\t\t\t\t\tcase deals.\"285678337a5c71fc5ce67cb47fd0c983d5fd4576\" \n\t\t\t\t\t\t\twhen 118 then 'Inversi\u00f3n'\n\t\t\t\t            when '118,119' then 'Inversi\u00f3n/Vivienda'\n\t\t\t\t            when 119 then 'Vivienda'\n\t\t\t\t            else \"285678337a5c71fc5ce67cb47fd0c983d5fd4576\"::text\n\t\t\t\t\t\tend AS purchase_type,\n\t\t\t\t\t\tcase deals.\"f1a67717753baffcf8cbc01123a28b743d7cfd78\" \n\t\t\t\t\t\t\twhen '121' then 'Entre 1 y 3 meses'\n\t\t\t\t\t\t\twhen '121,122' then 'Entre 1 y 3 meses/M\u00e1s de 3 meses'\n\t\t\t\t\t\t\twhen '121,216' then 'Entre 1 y 3 meses/Entrega a 2 a\u00f1os'\n\t\t\t\t\t\t\twhen '122' then 'M\u00e1s de 3 meses'\n\t\t\t\t\t\t\twhen '122,215' then 'M\u00e1s de 3 meses/Entrega a 1 a\u00f1o'\n\t\t\t\t\t\t\twhen '166' then 'Menos de 1 mes'\n\t\t\t\t\t\t\twhen '166,121' then 'Menos de 1 mes/Entre 1 y 3 meses'\n\t\t\t\t\t\t\twhen '166,121,122' then 'Menos de 1 mes/Entre 1 y 3 meses/M\u00e1s de 3 meses'\n\t\t\t\t\t\t\twhen '166,122' then 'Menos de 1 mes/M\u00e1s de 3 meses'\n\t\t\t\t\t\t\twhen '166,215' then 'Menos de 1 mes/Entrega a 1 a\u00f1o'\n\t\t\t\t\t\t\twhen '166,216' then 'Menos de 1 mes/Entrega a 2 a\u00f1os'\n\t\t\t\t\t\t\twhen '215' then 'Entrega a 1 a\u00f1o'\n\t\t\t\t\t\t\twhen '215,216' then 'Entrega a 1 a\u00f1o/Entrega a 2 a\u00f1os'\n\t\t\t\t\t\t\twhen '216' then 'Entrega a 2 a\u00f1os'\n\t\t\t\t\t\t\telse \"f1a67717753baffcf8cbc01123a28b743d7cfd78\"::text\n\t\t\t\t\t\tend AS delivery,\n\t\t\t\t\t\tdeals.\"4969f67b76b583bb13772ba2aa782ca9560fa221\" AS income,\n\t\t\t\t\t\tdeals.\"d8c58d36b75bfff95289ea95bb00b88de23f56fb\" AS initial_investment,\n\t\t\t\t\t\tdeals.\"e549d3b4b2fab59b5346f76b41c480918a9d20a9\" AS decision_maker,\n\t\t\t\t\t\tdeals.\"678c6b4df5ea23b6181544bb2557b6007f79d64d\" AS property_type_2,\n\t\t\t\t\t\tdeals.\"e6ecf23add9799d0d76ddfb8ab5a75c9284a5bc7\" AS property_status,\n\t\t\t\t\t\tdeals.\"154c8c65282c122821d7b4ea4c32c3c9673021d9\" AS location,\n\t\t\t\t\t\tdeals.\"524aaeae64031ec2214f4b591c5001c0fdd72c65\" AS rooms,\n\t\t\t\t\t\tdeals.\"1fbab7b446ecd462dd104ad3bc7388981df44b22\" AS bathrooms,\n\t\t\t\t\t\tdeals.\"041efe4cab12a6cbcef331ce9ce52b2970a807dc\" AS parkings,\n\t\t\t\t\t\tdeals.\"9007a9793366afdfd11d087c71d5732a41eca3d0\" AS warehouse,\n\t\t\t\t\t\tdeals.\"da4f899b37f4a611ddc985f2ccb91a7acdcff9ca\" AS m_surface,\n\t\t\t\t\t\tdeals.\"0b89b89a1ac88228ef8b7f75ed3dc9623ab89b9d\" AS budget,\n\t\t\t\t\t\tdeals.\"73be236be81871bee3d221f721a3b56efa1662cf\" AS income_type,\n\t\t\t\t\t\tdeals.\"e9040bde77736c90c2fd16305f3696d8a4d4595e\" AS debt,\n\t\t\t\t\t\tdeals.\"5824fac0f9df05b659fd70cc055349394eb678ca\" AS occupation_type,\n\t\t\t\t\t\tdeals.\"717196be1dc95997d776f0ccee1bc64c3b3a56b2\" AS occupation,\n\t\t\t\t\t\tdeals.\"07947a7736355ed261aec09b66aaf2b790be5489\" AS income_complement,\n\t\t\t\t\t\tdeals.\"d8d3ec552ce2ec306fbd2f1a9142d81ed423c626\" AS saving_capacity,\n\t\t\t\t\t\tdeals.\"45f43c7c12a2158a414acc0026ad64d6de9d459a\" AS buyer_qualification,\n\t\t\t\t\t\tdeals.\"bb81b49027357cd5516ef5f2aa47d413ab00ed58\" as scheduler,\n\t\t\t\t\t\tdeals.\"c00ff6487084ced65ae133b319de9d84dac6b4ba\" as scheduled_by,\n\t\t\t\t\t\tdeals.\"af1c7beca1a4b5538315280d5a25c6ba812c8f02\"::date as one_sided_signatures_date,\n\t\t\t\t\t\tdeals.\"3b3401936f35bceddc0a70fbc8cb23fd52defec6\"::date as both_sided_signatures_date,\n\t\t\t\t\t\tdeals.\"957048bc161c4ad91d9da0c07b162bf18bc3acb9\"::date as reserves_date,\n\t\t\t\t\t\tdeals.\"993757a99b12ef09c142c4a6baf40526405fe8ab\"::date as new_properties_signatures_date,\n\t\t\t\t\t\tdeals.\"875c9fa683f11ff238f6bd334a82d88bc80bfb57\" as assigned_executive,\n\t\t\t\t\t\tcase deals.\"4067d32849ff63f793285b7df808200864a27834\"\n\t\t\t\t\t\t\twhen 241 then 'Regi\u00f3n Metropolitana'\n\t\t\t\t\t\t\twhen 242 then 'Regi\u00f3n de Valparaiso'\n\t\t\t\t\t\t\twhen 243 then 'Regi\u00f3n del Biob\u00edo'\n\t\t\t\t\t\t\twhen 244 then 'Estado de M\u00e9xico'\n\t\t\t\t\t\t\twhen 245 then 'Ciudad de M\u00e9xico'\n\t\t\t\t\t\t\twhen 246 then 'Guadalajara'\n\t\t\t\t\t\t\twhen 247 then 'Tijuana'\n\t\t\t\t\t\t\twhen 248 then 'Monterrey'\n\t\t\t\t\t\t\twhen 249 then 'Bogot\u00e1'\n\t\t\t\t\t\t\twhen 250 then 'Medell\u00edn'\n\t\t\t\t\t\t\twhen 251 then 'Ch\u00eda'\n\t\t\t\t\t\t\twhen 252 then 'Cajic\u00e1'\n\t\t\t\t\t\t\twhen 253 then 'Soacha'\n\t\t\t\t\t\t\twhen 254 then 'Madrid'\n\t\t\t\t\t\t\twhen 255 then 'Mosquera'\n\t\t\t\t\t\t\twhen 256 then 'Funza'\n\t\t\t\t\t\t\twhen 257 then 'Cota'\n\t\t\t\t\t\t\twhen 258 then 'Bello'\n\t\t\t\t\t\t\twhen 259 then 'Envigado'\n\t\t\t\t\t\t\twhen 260 then 'Itag\u00fc\u00ed'\n\t\t\t\t\t\t\twhen 261 then null\n\t\t\t\t\t\t\twhen 262 then 'Otro'\n\t\t\t\t\t\t\telse null\n\t\t\t\t\t\tend as city_2\n\t\t\t\tFROM {{ref('stg_deals')}} as deals)\nselect \n\tdeals.*, \t\n\tcase \n\t\twhen deals.label in (156,0) then '1. Rentals'\n\t    when deals.label in (96,181) or pipeline_id in (65,66,67,68,70,71,76) then '2. Sales'\n\t    when deals.label = 100 then '3. Rental Alianzas'\n\t    when deals.label = 206 then '4. Rental/Sales'\n\t    when deals.label = 102 then '4.1 Rental/Sales Alianzas'\n\t    when deals.label = 157 then '5. Sales Subsidio'\n\t    when deals.label = 101 then '5.1 Sales B2B'\n\t    when deals.pipeline_id in (59,79,60,61) then '1. Rentals'\n\t    when deals.pipeline_id in (64,74,55) then '1. Rentals'\n\t\telse '99. No Identificado'\n\tend as business,\n\tcase \n\t\twhen deals.pipeline_id in (38,59,65,66,63,64,65,66,76,77) then '1. Chile'\n        when deals.pipeline_id in (53,60,70,71,72,74,75) then '2. Colombia'\n        when deals.pipeline_id in (54,55,61,67,68,73,69) then '3. M\u00e9xico'\n        else '99. No Identificado'\n\tend as country_formated,\n\tcase\n\t\twhen pipeline_id in (59,60,61,64,74,55) then '1. Supply'\n\t\twhen pipeline_id in (38,53,54,63,65,66,67,68,69,70,71,72,73,75,76,77) then '2. Demand'\n\t\telse '99. No Identificado'\n\tend as funnel,\n\tcase\n\t\twhen deals.label in (100,101,102) then 'B2B'\n\t\telse 'B2C'\n\tend as supply_source\nfrom deals \norder by update_time desc", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.stg_deals"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "supply"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "supply", "proc_tmp_supply_deals"], "unique_id": "model.houm.proc_tmp_supply_deals", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "processing/supply/proc_tmp_supply_deals.sql", "original_file_path": "models/processing/supply/proc_tmp_supply_deals.sql", "name": "proc_tmp_supply_deals", "alias": "proc_tmp_supply_deals", "checksum": {"name": "sha256", "checksum": "f4437dbd6198697c8e533ffce5a51c55d4fd6a48ca9bbb2e1b9d4157b7ce2f9c"}, "tags": ["dw", "processing", "supply"], "refs": [["stg_deals"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/supply/proc_tmp_supply_deals.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "materialized": "table", "tags": ["dw", "processing", "supply"]}, "created_at": 1654784475.502867, "compiled_sql": "\n\nwith deals as (SELECT deals.id, \n\t\t\t\t\t\tdeals.stage_id, \n\t\t\t\t\t\tdeals.title, \n\t\t\t\t\t\tdeals.person_id.value::integer as person_id,\n\t\t\t\t\t\tdeals.user_id.value::integer as user_id,\n\t\t\t\t\t\tdeals.value, \n\t\t\t\t\t\tdeals.currency, \n\t\t\t\t\t\tdeals.add_time, \n\t\t\t\t\t\tdeals.update_time, \n\t\t\t\t\t\tdeals.active, \n\t\t\t\t\t\tdeals.deleted, \n\t\t\t\t\t\tdeals.status, \n\t\t\t\t\t\tdeals.next_activity_date, \n\t\t\t\t\t\tdeals.next_activity_time, \n\t\t\t\t\t\tdeals.next_activity_id, \n\t\t\t\t\t\tdeals.last_activity_date, \n\t\t\t\t\t\tdeals.lost_reason, \n\t\t\t\t\t\tdeals.pipeline_id, \n\t\t\t\t\t\tdeals.won_time, \n\t\t\t\t\t\tdeals.first_won_time, \n\t\t\t\t\t\tdeals.lost_time, \n\t\t\t\t\t\tdeals.email_messages_count, \n\t\t\t\t\t\tdeals.activities_count, \n\t\t\t\t\t\tdeals.done_activities_count, \n\t\t\t\t\t\tdeals.undone_activities_count, \n\t\t\t\t\t\tdeals.expected_close_date, \n\t\t\t\t\t\tdeals.\"label\", \n\t\t\t\t\t\tdeals.person_name, \n\t\t\t\t\t\tdeals.org_name, \n\t\t\t\t\t\tdeals.owner_name, \n\t\t\t\t\t\tdeals.\"29983ea0d395dd72390c71a1bd76c80546609761\" AS property_link, \n\t\t\t\t\t\tdeals.\"79f08ab8c03c88c6bf3148119778d7f64f833a41\" AS property_address, \n\t\t\t\t\t\tcase deals.\"408ab88af9150b9bb785f1453bd42bc4a1eb5f07\"\n\t\t\t\t\t\t\twhen 81 then '0'\n\t\t\t\t\t\t\twhen 82 then '1'\n\t\t\t\t\t\t\twhen 83 then '2'\n\t\t\t\t\t\t\twhen 84 then '3'\n\t\t\t\t\t\t\twhen 85 then '4'\n\t\t\t\t\t\t\twhen 86 then '5'\n\t\t\t\t\t\t\telse \"408ab88af9150b9bb785f1453bd42bc4a1eb5f07\"\n\t\t\t\t\t\tend AS qualification, \n\t\t\t\t\t\tdeals.\"91ae7d54bd0239721db388ee0c0ffbee7a68d249\" AS email,\n\t\t\t\t\t\tdeals.\"b224b2df6dddae4a3f59d9ab92496c84fb81fcff\" AS phone, \n\t\t\t\t\t\tdeals.\"c116f72d816aa5ce9f2a925345b364775a3933ac\" AS property_type, \n\t\t\t\t\t\tdeals.\"76d94f6699c815a28f47ea500f2481fa7aede96c\" AS source, \n\t\t\t\t\t\tdeals.\"d5b32c860fba2502a7d0ef77db7f93985d5dbfbb\" AS city, \n\t\t\t\t\t\tcase deals.\"6dd9993bf1db83c740ad3bcffee5fd8143f5fad9\"\n\t\t\t\t\t\t\twhen 107 then 'Rental'\n\t\t\t\t\t\t\twhen 110 then 'Sales'\n\t\t\t\t\t\t\telse \"6dd9993bf1db83c740ad3bcffee5fd8143f5fad9\"::text\n\t\t\t\t\t\tend AS pipedrive_business, \n\t\t\t\t\t\tdeals.\"aebaba770d785ee2eb0847592ed4ee2cc468de21\" AS property_id, \n\t\t\t\t\t\tdeals.\"be6579db0f5918a46f43181eec54056ca8354a50\" AS able_for_ep, \n\t\t\t\t\t\tdeals.\"853838575c80f1c1f80117953412998c0ea935ad\" AS deal_country,\n\t\t\t\t\t\tdeals.\"16d9ee32ae9b3d34a0c69317871b2d3c612a69ed\" AS country,\n\t\t\t\t\t\tdeals.\"76eb4b457cf491efd1de1cfcaf9ea2da37c23b36\"::date AS qualification_date,\n\t\t\t\t\t\tcase deals.\"d94ddd002dfe910eb5a72673bcc54b1789d21384\" \n\t\t\t\t\t\t\twhen 116 then 'Cr\u00e9dito pre-aprobado' \n\t\t\t\t            when 114 then 'Todo al contado'\n\t\t\t\t            when 193 then 'Subsidio habitacional'\n\t\t\t\t            when '116,117' then 'Cr\u00e9dito pre-aprobado/Sin financiamiento'\n\t\t\t\t            when 115 then 'Cr\u00e9dito aprobado'\n\t\t\t\t            when 117 then 'Sin financiamiento'\n\t\t\t\t            when '114,115' then 'Todo al contado/Cr\u00e9dito aprobado'\n\t\t\t\t            when '114,117' then 'Todo al contado/Sin financiamiento'\n\t\t\t\t            when 207 then 'No quiere detallar'\n\t\t\t\t            when '114,193' then 'Todo al contado/Subsidio habitacional'\n\t\t\t\t            when '115,193' then 'Cr\u00e9dito aprobado/Subsidio habitacional'\n\t\t\t\t            when '116,193' then 'Cr\u00e9dito pre-aprobado/Subsidio habitacional'\n\t\t\t\t        \telse \"d94ddd002dfe910eb5a72673bcc54b1789d21384\"::text\n\t\t\t\t\t\tend AS funding,\n\t\t\t\t\t\tcase deals.\"285678337a5c71fc5ce67cb47fd0c983d5fd4576\" \n\t\t\t\t\t\t\twhen 118 then 'Inversi\u00f3n'\n\t\t\t\t            when '118,119' then 'Inversi\u00f3n/Vivienda'\n\t\t\t\t            when 119 then 'Vivienda'\n\t\t\t\t            else \"285678337a5c71fc5ce67cb47fd0c983d5fd4576\"::text\n\t\t\t\t\t\tend AS purchase_type,\n\t\t\t\t\t\tcase deals.\"f1a67717753baffcf8cbc01123a28b743d7cfd78\" \n\t\t\t\t\t\t\twhen '121' then 'Entre 1 y 3 meses'\n\t\t\t\t\t\t\twhen '121,122' then 'Entre 1 y 3 meses/M\u00e1s de 3 meses'\n\t\t\t\t\t\t\twhen '121,216' then 'Entre 1 y 3 meses/Entrega a 2 a\u00f1os'\n\t\t\t\t\t\t\twhen '122' then 'M\u00e1s de 3 meses'\n\t\t\t\t\t\t\twhen '122,215' then 'M\u00e1s de 3 meses/Entrega a 1 a\u00f1o'\n\t\t\t\t\t\t\twhen '166' then 'Menos de 1 mes'\n\t\t\t\t\t\t\twhen '166,121' then 'Menos de 1 mes/Entre 1 y 3 meses'\n\t\t\t\t\t\t\twhen '166,121,122' then 'Menos de 1 mes/Entre 1 y 3 meses/M\u00e1s de 3 meses'\n\t\t\t\t\t\t\twhen '166,122' then 'Menos de 1 mes/M\u00e1s de 3 meses'\n\t\t\t\t\t\t\twhen '166,215' then 'Menos de 1 mes/Entrega a 1 a\u00f1o'\n\t\t\t\t\t\t\twhen '166,216' then 'Menos de 1 mes/Entrega a 2 a\u00f1os'\n\t\t\t\t\t\t\twhen '215' then 'Entrega a 1 a\u00f1o'\n\t\t\t\t\t\t\twhen '215,216' then 'Entrega a 1 a\u00f1o/Entrega a 2 a\u00f1os'\n\t\t\t\t\t\t\twhen '216' then 'Entrega a 2 a\u00f1os'\n\t\t\t\t\t\t\telse \"f1a67717753baffcf8cbc01123a28b743d7cfd78\"::text\n\t\t\t\t\t\tend AS delivery,\n\t\t\t\t\t\tdeals.\"4969f67b76b583bb13772ba2aa782ca9560fa221\" AS income,\n\t\t\t\t\t\tdeals.\"d8c58d36b75bfff95289ea95bb00b88de23f56fb\" AS initial_investment,\n\t\t\t\t\t\tdeals.\"e549d3b4b2fab59b5346f76b41c480918a9d20a9\" AS decision_maker,\n\t\t\t\t\t\tdeals.\"678c6b4df5ea23b6181544bb2557b6007f79d64d\" AS property_type_2,\n\t\t\t\t\t\tdeals.\"e6ecf23add9799d0d76ddfb8ab5a75c9284a5bc7\" AS property_status,\n\t\t\t\t\t\tdeals.\"154c8c65282c122821d7b4ea4c32c3c9673021d9\" AS location,\n\t\t\t\t\t\tdeals.\"524aaeae64031ec2214f4b591c5001c0fdd72c65\" AS rooms,\n\t\t\t\t\t\tdeals.\"1fbab7b446ecd462dd104ad3bc7388981df44b22\" AS bathrooms,\n\t\t\t\t\t\tdeals.\"041efe4cab12a6cbcef331ce9ce52b2970a807dc\" AS parkings,\n\t\t\t\t\t\tdeals.\"9007a9793366afdfd11d087c71d5732a41eca3d0\" AS warehouse,\n\t\t\t\t\t\tdeals.\"da4f899b37f4a611ddc985f2ccb91a7acdcff9ca\" AS m_surface,\n\t\t\t\t\t\tdeals.\"0b89b89a1ac88228ef8b7f75ed3dc9623ab89b9d\" AS budget,\n\t\t\t\t\t\tdeals.\"73be236be81871bee3d221f721a3b56efa1662cf\" AS income_type,\n\t\t\t\t\t\tdeals.\"e9040bde77736c90c2fd16305f3696d8a4d4595e\" AS debt,\n\t\t\t\t\t\tdeals.\"5824fac0f9df05b659fd70cc055349394eb678ca\" AS occupation_type,\n\t\t\t\t\t\tdeals.\"717196be1dc95997d776f0ccee1bc64c3b3a56b2\" AS occupation,\n\t\t\t\t\t\tdeals.\"07947a7736355ed261aec09b66aaf2b790be5489\" AS income_complement,\n\t\t\t\t\t\tdeals.\"d8d3ec552ce2ec306fbd2f1a9142d81ed423c626\" AS saving_capacity,\n\t\t\t\t\t\tdeals.\"45f43c7c12a2158a414acc0026ad64d6de9d459a\" AS buyer_qualification,\n\t\t\t\t\t\tdeals.\"bb81b49027357cd5516ef5f2aa47d413ab00ed58\" as scheduler,\n\t\t\t\t\t\tdeals.\"c00ff6487084ced65ae133b319de9d84dac6b4ba\" as scheduled_by,\n\t\t\t\t\t\tdeals.\"af1c7beca1a4b5538315280d5a25c6ba812c8f02\"::date as one_sided_signatures_date,\n\t\t\t\t\t\tdeals.\"3b3401936f35bceddc0a70fbc8cb23fd52defec6\"::date as both_sided_signatures_date,\n\t\t\t\t\t\tdeals.\"957048bc161c4ad91d9da0c07b162bf18bc3acb9\"::date as reserves_date,\n\t\t\t\t\t\tdeals.\"993757a99b12ef09c142c4a6baf40526405fe8ab\"::date as new_properties_signatures_date,\n\t\t\t\t\t\tdeals.\"875c9fa683f11ff238f6bd334a82d88bc80bfb57\" as assigned_executive,\n\t\t\t\t\t\tcase deals.\"4067d32849ff63f793285b7df808200864a27834\"\n\t\t\t\t\t\t\twhen 241 then 'Regi\u00f3n Metropolitana'\n\t\t\t\t\t\t\twhen 242 then 'Regi\u00f3n de Valparaiso'\n\t\t\t\t\t\t\twhen 243 then 'Regi\u00f3n del Biob\u00edo'\n\t\t\t\t\t\t\twhen 244 then 'Estado de M\u00e9xico'\n\t\t\t\t\t\t\twhen 245 then 'Ciudad de M\u00e9xico'\n\t\t\t\t\t\t\twhen 246 then 'Guadalajara'\n\t\t\t\t\t\t\twhen 247 then 'Tijuana'\n\t\t\t\t\t\t\twhen 248 then 'Monterrey'\n\t\t\t\t\t\t\twhen 249 then 'Bogot\u00e1'\n\t\t\t\t\t\t\twhen 250 then 'Medell\u00edn'\n\t\t\t\t\t\t\twhen 251 then 'Ch\u00eda'\n\t\t\t\t\t\t\twhen 252 then 'Cajic\u00e1'\n\t\t\t\t\t\t\twhen 253 then 'Soacha'\n\t\t\t\t\t\t\twhen 254 then 'Madrid'\n\t\t\t\t\t\t\twhen 255 then 'Mosquera'\n\t\t\t\t\t\t\twhen 256 then 'Funza'\n\t\t\t\t\t\t\twhen 257 then 'Cota'\n\t\t\t\t\t\t\twhen 258 then 'Bello'\n\t\t\t\t\t\t\twhen 259 then 'Envigado'\n\t\t\t\t\t\t\twhen 260 then 'Itag\u00fc\u00ed'\n\t\t\t\t\t\t\twhen 261 then null\n\t\t\t\t\t\t\twhen 262 then 'Otro'\n\t\t\t\t\t\t\telse null\n\t\t\t\t\t\tend as city_2\n\t\t\t\tFROM \"houmdw_prod\".\"dbt_staging\".\"stg_deals\" as deals)\nselect \n\tdeals.*, \t\n\tcase \n\t\twhen deals.label in (156,0) then '1. Rentals'\n\t    when deals.label in (96,181) or pipeline_id in (65,66,67,68,70,71,76) then '2. Sales'\n\t    when deals.label = 100 then '3. Rental Alianzas'\n\t    when deals.label = 206 then '4. Rental/Sales'\n\t    when deals.label = 102 then '4.1 Rental/Sales Alianzas'\n\t    when deals.label = 157 then '5. Sales Subsidio'\n\t    when deals.label = 101 then '5.1 Sales B2B'\n\t    when deals.pipeline_id in (59,79,60,61) then '1. Rentals'\n\t    when deals.pipeline_id in (64,74,55) then '1. Rentals'\n\t\telse '99. No Identificado'\n\tend as business,\n\tcase \n\t\twhen deals.pipeline_id in (38,59,65,66,63,64,65,66,76,77) then '1. Chile'\n        when deals.pipeline_id in (53,60,70,71,72,74,75) then '2. Colombia'\n        when deals.pipeline_id in (54,55,61,67,68,73,69) then '3. M\u00e9xico'\n        else '99. No Identificado'\n\tend as country_formated,\n\tcase\n\t\twhen pipeline_id in (59,60,61,64,74,55) then '1. Supply'\n\t\twhen pipeline_id in (38,53,54,63,65,66,67,68,69,70,71,72,73,75,76,77) then '2. Demand'\n\t\telse '99. No Identificado'\n\tend as funnel,\n\tcase\n\t\twhen deals.label in (100,101,102) then 'B2B'\n\t\telse 'B2C'\n\tend as supply_source\nfrom deals \norder by update_time desc", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_tmp_supply_deals\""}, "model.houm.proc_macrozone": {"raw_sql": "Select \n    id geo_id \n\t, created_at\n\t, updated_at\n\t, name\n\t, description\n    , country\n\t, city\n\t, city_marketplace_id\n    , polygon \n    , timezone\n    , case  when country = 'Chile' then 'CL' when country = 'Colombia' then 'CO' when country in ('Mexico', 'M\u00e9xico')  then 'MX'\n            else 'NA' \n    end country_sufix\n    --, city\n    , case \n    \twhen  a.city in ('Santiago','Buin','Calera de Tango','Chicureo','Paine')    then 'Regi\u00f3n Metropolitana'\n    \twhen  a.city in ('Valpara\u00edso','Vi\u00f1a del Mar','Limache','Quilpu\u00e9')   \t\tthen 'V Regi\u00f3n'\n    \twhen  a.city = 'Concepci\u00f3n'   \t\t\t\t\t\t\t\tthen 'Regi\u00f3n B\u00edo B\u00edo'\n    \twhen  a.city in ('Bogot\u00e1','Cundinamarca')   \t\t\t\tthen 'Bogot\u00e1, D.C & Cundinamarca' \n    \twhen  a.city in ('Medell\u00edn','Medellin Oriente') \t\t\tthen 'Provincia de Medell\u00edn'\n    \twhen  a.city = 'Ciudad de M\u00e9xico' \t\t\t\t\t\t\tthen 'Ciudad de M\u00e9xico'\n    \twhen  a.city = 'Guadalajara' \t\t\t\t\t\t\t\tthen 'Guadalajara'\n    \twhen  a.city = 'Monterrey' \t\t\t\t\t\t\t\t\tthen 'Monterrey'\n    \twhen  a.city = 'Tijuana' \t\t\t\t\t\t    \t\tthen 'Tijuana'\n    \telse 'Null'                                                 end Region_Houm\n    , case \n\t\t\t\twhen  a.city = 'Santiago' \t\t\t\t\t\t\t\t\t    then 'Santiago'\n\t\t\t\twhen  a.city in ('Buin','Calera de Tango','Chicureo','Paine')\tthen 'Santiago Periferia'\n\t\t\t\twhen  a.city in ('Valpara\u00edso','Vi\u00f1a del Mar')   \t\t\t\tthen 'V Regi\u00f3n Costa'\n\t\t\t\twhen  a.city in ('Limache','Quilpu\u00e9')   \t\t\t\t\t\tthen 'V Regi\u00f3n Interior'\n\t\t\t\twhen  a.city = 'Concepci\u00f3n'   \t\t\t\t\t\t\t\tthen 'Regi\u00f3n B\u00edo B\u00edo'\n\t\t\t\twhen  a.id in (14,15,16,17,18) \t\t\t\t\t\t\t\tthen 'Bogot\u00e1'\n\t\t\t\twhen  a.id in (24,25,61,66,65,63,62,64) \t\t\t\t\tthen 'Bogot\u00e1 Periferia'\n\t\t\t\twhen  a.city = 'Medell\u00edn' \t\t\t\t\t\t\t\t\tthen 'Medell\u00edn'\n\t\t\t\twhen  a.city = 'Medellin Oriente' \t\t\t\t\t\t\tthen 'Medellin Oriente'\n\t\t\t\twhen  a.city = 'Ciudad de M\u00e9xico' \t\t\t\t\t\t\tthen 'Ciudad de M\u00e9xico'\n\t\t\t\twhen  a.city = 'Guadalajara' \t\t\t\t\t\t\t\tthen 'Guadalajara'\n\t\t\t\twhen  a.city = 'Monterrey' \t\t\t\t\t\t\t\t\tthen 'Monterrey'\n\t\t\t\twhen  a.city = 'Tijuana' \t\t\t\t\t\t\t\t\tthen 'Tijuana'\n\t\t\t\telse 'Null'                                                 end City_Houm\nfrom {{ ref('stg_macrozone') }} as a", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.stg_macrozone"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "supply"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "supply", "proc_macrozone"], "unique_id": "model.houm.proc_macrozone", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "processing/supply/proc_macrozone.sql", "original_file_path": "models/processing/supply/proc_macrozone.sql", "name": "proc_macrozone", "alias": "proc_macrozone", "checksum": {"name": "sha256", "checksum": "11ab823751be2855c049187eb12701fd22d390861c7d037d3f08e04b7f110fcc"}, "tags": ["dw", "processing", "supply"], "refs": [["stg_macrozone"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/supply/proc_macrozone.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "materialized": "table", "tags": ["dw", "processing", "supply"]}, "created_at": 1654784475.504541, "compiled_sql": "Select \n    id geo_id \n\t, created_at\n\t, updated_at\n\t, name\n\t, description\n    , country\n\t, city\n\t, city_marketplace_id\n    , polygon \n    , timezone\n    , case  when country = 'Chile' then 'CL' when country = 'Colombia' then 'CO' when country in ('Mexico', 'M\u00e9xico')  then 'MX'\n            else 'NA' \n    end country_sufix\n    --, city\n    , case \n    \twhen  a.city in ('Santiago','Buin','Calera de Tango','Chicureo','Paine')    then 'Regi\u00f3n Metropolitana'\n    \twhen  a.city in ('Valpara\u00edso','Vi\u00f1a del Mar','Limache','Quilpu\u00e9')   \t\tthen 'V Regi\u00f3n'\n    \twhen  a.city = 'Concepci\u00f3n'   \t\t\t\t\t\t\t\tthen 'Regi\u00f3n B\u00edo B\u00edo'\n    \twhen  a.city in ('Bogot\u00e1','Cundinamarca')   \t\t\t\tthen 'Bogot\u00e1, D.C & Cundinamarca' \n    \twhen  a.city in ('Medell\u00edn','Medellin Oriente') \t\t\tthen 'Provincia de Medell\u00edn'\n    \twhen  a.city = 'Ciudad de M\u00e9xico' \t\t\t\t\t\t\tthen 'Ciudad de M\u00e9xico'\n    \twhen  a.city = 'Guadalajara' \t\t\t\t\t\t\t\tthen 'Guadalajara'\n    \twhen  a.city = 'Monterrey' \t\t\t\t\t\t\t\t\tthen 'Monterrey'\n    \twhen  a.city = 'Tijuana' \t\t\t\t\t\t    \t\tthen 'Tijuana'\n    \telse 'Null'                                                 end Region_Houm\n    , case \n\t\t\t\twhen  a.city = 'Santiago' \t\t\t\t\t\t\t\t\t    then 'Santiago'\n\t\t\t\twhen  a.city in ('Buin','Calera de Tango','Chicureo','Paine')\tthen 'Santiago Periferia'\n\t\t\t\twhen  a.city in ('Valpara\u00edso','Vi\u00f1a del Mar')   \t\t\t\tthen 'V Regi\u00f3n Costa'\n\t\t\t\twhen  a.city in ('Limache','Quilpu\u00e9')   \t\t\t\t\t\tthen 'V Regi\u00f3n Interior'\n\t\t\t\twhen  a.city = 'Concepci\u00f3n'   \t\t\t\t\t\t\t\tthen 'Regi\u00f3n B\u00edo B\u00edo'\n\t\t\t\twhen  a.id in (14,15,16,17,18) \t\t\t\t\t\t\t\tthen 'Bogot\u00e1'\n\t\t\t\twhen  a.id in (24,25,61,66,65,63,62,64) \t\t\t\t\tthen 'Bogot\u00e1 Periferia'\n\t\t\t\twhen  a.city = 'Medell\u00edn' \t\t\t\t\t\t\t\t\tthen 'Medell\u00edn'\n\t\t\t\twhen  a.city = 'Medellin Oriente' \t\t\t\t\t\t\tthen 'Medellin Oriente'\n\t\t\t\twhen  a.city = 'Ciudad de M\u00e9xico' \t\t\t\t\t\t\tthen 'Ciudad de M\u00e9xico'\n\t\t\t\twhen  a.city = 'Guadalajara' \t\t\t\t\t\t\t\tthen 'Guadalajara'\n\t\t\t\twhen  a.city = 'Monterrey' \t\t\t\t\t\t\t\t\tthen 'Monterrey'\n\t\t\t\twhen  a.city = 'Tijuana' \t\t\t\t\t\t\t\t\tthen 'Tijuana'\n\t\t\t\telse 'Null'                                                 end City_Houm\nfrom \"houmdw_prod\".\"dbt_staging\".\"stg_macrozone\" as a", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_macrozone\""}, "model.houm.proc_properties": {"raw_sql": "{{ config(materialized='table') }}\r\n\r\nselect a.id\r\n\t\t,a.created_at\r\n\t\t,a.updated_at\r\n\t\t,a.first_publication_date\r\n\t\t,a.last_publication_date\r\n        ,CASE   when for_rental = True and  for_sale = True then 'Rental & Sale'\r\n                        when for_rental = True and for_sale = False then 'Rental'\r\n                        when for_rental = False and for_sale = True then 'Sale'\r\n                        end as business_type\r\n\t\t, CASE  WHEN b.role::text in ('property_broker','real_estate_developer') or  b.id = 60441 THEN 'B2B'\r\n            \t\t\tELSE 'B2C'\r\n      \t\t\t\t\tEND AS supply_source \r\n    \t, CASE  WHEN b.role = 'property_broker' or  b.id = 60441 THEN 'Brokers'\r\n            \t\t\tWHEN b.role = 'real_estate_developer' then 'New Properties'\r\n           \t\t\t\tWHEN length( b.referral_id) = 5 then 'Partners'\r\n            \t\t\tELSE 'Landlord'\r\n      \t\t\t\t\tEND AS supply_relation\r\n\t\t,a.neighborhood_id\r\n\t\t,lower(a.address) as address\r\n\t\t,lower(a.second_line_address) as second_line_address\r\n\t\t,a.numero_depto\r\n\t\t,a.apartment_floor\r\n\t\t,a.street_number\r\n\t\t,lower(a.comuna) as comuna\r\n\t\t,a.region\r\n\t\t,a.state\r\n\t\t,a.city\r\n\t\t,a.country\r\n\t\t,a.user_id\r\n\t\t,a.type\r\n\t\t,a.stratus\r\n\t\t,a.lessor_id\r\n\t\t,a.uid\r\n\t\t,a.is_deleted\r\n\t\t,a.keys_info\r\n\t\t,a.lost\r\n\t\t,a.lost_reason\r\n\t\t,a.property_relation\r\n\t\t,a.available_from\r\n\t\t,a.pipedrive_owner_id\r\n\t\t,a.antiquity\r\n\t\t,a.year_built\r\n\t\t,a.for_rental\r\n\t\t,a.for_sale\r\n\t\t,a.lessor_brokerage_commission\r\nfrom {{ ref('stg_properties') }} a\r\nleft join {{ ref('stg_users') }} b on a.user_id = b.id  \r\norder by created_at desc", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.stg_properties", "model.houm.stg_users"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "supply"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "supply", "proc_properties"], "unique_id": "model.houm.proc_properties", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "processing/supply/proc_properties.sql", "original_file_path": "models/processing/supply/proc_properties.sql", "name": "proc_properties", "alias": "proc_properties", "checksum": {"name": "sha256", "checksum": "f890608eed4bee3a99ddd6951a240ac1b4825603f1250be01cea0b39fe69f97b"}, "tags": ["dw", "processing", "supply"], "refs": [["stg_properties"], ["stg_users"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/supply/proc_properties.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "materialized": "table", "tags": ["dw", "processing", "supply"]}, "created_at": 1654784475.506311, "compiled_sql": "\n\nselect a.id\n\t\t,a.created_at\n\t\t,a.updated_at\n\t\t,a.first_publication_date\n\t\t,a.last_publication_date\n        ,CASE   when for_rental = True and  for_sale = True then 'Rental & Sale'\n                        when for_rental = True and for_sale = False then 'Rental'\n                        when for_rental = False and for_sale = True then 'Sale'\n                        end as business_type\n\t\t, CASE  WHEN b.role::text in ('property_broker','real_estate_developer') or  b.id = 60441 THEN 'B2B'\n            \t\t\tELSE 'B2C'\n      \t\t\t\t\tEND AS supply_source \n    \t, CASE  WHEN b.role = 'property_broker' or  b.id = 60441 THEN 'Brokers'\n            \t\t\tWHEN b.role = 'real_estate_developer' then 'New Properties'\n           \t\t\t\tWHEN length( b.referral_id) = 5 then 'Partners'\n            \t\t\tELSE 'Landlord'\n      \t\t\t\t\tEND AS supply_relation\n\t\t,a.neighborhood_id\n\t\t,lower(a.address) as address\n\t\t,lower(a.second_line_address) as second_line_address\n\t\t,a.numero_depto\n\t\t,a.apartment_floor\n\t\t,a.street_number\n\t\t,lower(a.comuna) as comuna\n\t\t,a.region\n\t\t,a.state\n\t\t,a.city\n\t\t,a.country\n\t\t,a.user_id\n\t\t,a.type\n\t\t,a.stratus\n\t\t,a.lessor_id\n\t\t,a.uid\n\t\t,a.is_deleted\n\t\t,a.keys_info\n\t\t,a.lost\n\t\t,a.lost_reason\n\t\t,a.property_relation\n\t\t,a.available_from\n\t\t,a.pipedrive_owner_id\n\t\t,a.antiquity\n\t\t,a.year_built\n\t\t,a.for_rental\n\t\t,a.for_sale\n\t\t,a.lessor_brokerage_commission\nfrom \"houmdw_prod\".\"dbt_staging\".\"stg_properties\" a\nleft join \"houmdw_prod\".\"dbt_staging\".\"stg_users\" b on a.user_id = b.id  \norder by created_at desc", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_properties\""}, "model.houm.proc_tmp_supply_persons_phones": {"raw_sql": "{{ config(materialized='table') }}\n\nwith phones as (\nSELECT \n\tDISTINCT deals.person_id.value::integer AS person_id, \n\te_phone.value::text AS phone, \n\te_phone.primary::boolean AS primary_phone \nFROM \n\t{{ref('stg_deals')}} AS deals, \n\tdeals.person_id.phone AS e_phone \n)\nSELECT \n\tROW_NUMBER() OVER (ORDER BY phones.person_id ASC) AS id, \n\tphones.person_id AS person_id, \n\tcase \n\t\twhen length(phones.phone)<1 then null \n\t\telse phones.phone \n\tend AS phone, \n\tphones.primary_phone AS primary_phone \nFROM phones \nORDER BY 1 DESC", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.stg_deals"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "supply"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "supply", "proc_tmp_supply_persons_phones"], "unique_id": "model.houm.proc_tmp_supply_persons_phones", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "processing/supply/proc_tmp_supply_persons_phones.sql", "original_file_path": "models/processing/supply/proc_tmp_supply_persons_phones.sql", "name": "proc_tmp_supply_persons_phones", "alias": "proc_tmp_supply_persons_phones", "checksum": {"name": "sha256", "checksum": "71862b9961ed656132c7ae3e235828e3734bc0b9879cacd59388ba7668a87b15"}, "tags": ["dw", "processing", "supply"], "refs": [["stg_deals"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/supply/proc_tmp_supply_persons_phones.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "materialized": "table", "tags": ["dw", "processing", "supply"]}, "created_at": 1654784475.508168, "compiled_sql": "\n\nwith phones as (\nSELECT \n\tDISTINCT deals.person_id.value::integer AS person_id, \n\te_phone.value::text AS phone, \n\te_phone.primary::boolean AS primary_phone \nFROM \n\t\"houmdw_prod\".\"dbt_staging\".\"stg_deals\" AS deals, \n\tdeals.person_id.phone AS e_phone \n)\nSELECT \n\tROW_NUMBER() OVER (ORDER BY phones.person_id ASC) AS id, \n\tphones.person_id AS person_id, \n\tcase \n\t\twhen length(phones.phone)<1 then null \n\t\telse phones.phone \n\tend AS phone, \n\tphones.primary_phone AS primary_phone \nFROM phones \nORDER BY 1 DESC", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_tmp_supply_persons_phones\""}, "model.houm.proc_tmp_supply_deals_persons": {"raw_sql": "{{ config(materialized='table') }}\n\nwith phones as (\n\tselect * \n\tfrom {{ref('proc_tmp_supply_persons_phones')}}\n\twhere primary_phone is true\n),\nemails as (\n\tselect * \n\tfrom {{ref('proc_tmp_supply_persons_emails')}}\n\twhere primary_email is true\n),\npersons as (\n\tSELECT \n\t\tDISTINCT deals.person_id.value::integer AS id, \n\t\tREPLACE(deals.person_id.name::text, '\"','') AS name, \n\t\tdeals.person_id.active_flag AS active_flag \n\tFROM {{ref('stg_deals')}} AS deals\n\tWHERE deals.person_id.value IS NOT NULL \n)\nselect \n\tpersons.*, \n\temails.email, \n\tphones.phone \nfrom persons\nleft join emails on emails.person_id = persons.id\nleft join phones on phones.person_id = persons.id\norder by 1 desc", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_tmp_supply_persons_phones", "model.houm.proc_tmp_supply_persons_emails", "model.houm.stg_deals"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "supply"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "supply", "proc_tmp_supply_deals_persons"], "unique_id": "model.houm.proc_tmp_supply_deals_persons", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "processing/supply/proc_tmp_supply_deals_persons.sql", "original_file_path": "models/processing/supply/proc_tmp_supply_deals_persons.sql", "name": "proc_tmp_supply_deals_persons", "alias": "proc_tmp_supply_deals_persons", "checksum": {"name": "sha256", "checksum": "3056f8412f8f07941c196d9eebc1a923d217c0b00d9cdf1de552c8f9459b0c42"}, "tags": ["dw", "processing", "supply"], "refs": [["proc_tmp_supply_persons_phones"], ["proc_tmp_supply_persons_emails"], ["stg_deals"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/supply/proc_tmp_supply_deals_persons.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "materialized": "table", "tags": ["dw", "processing", "supply"]}, "created_at": 1654784475.509876, "compiled_sql": "\n\nwith phones as (\n\tselect * \n\tfrom \"houmdw_prod\".\"dbt_processing\".\"proc_tmp_supply_persons_phones\"\n\twhere primary_phone is true\n),\nemails as (\n\tselect * \n\tfrom \"houmdw_prod\".\"dbt_processing\".\"proc_tmp_supply_persons_emails\"\n\twhere primary_email is true\n),\npersons as (\n\tSELECT \n\t\tDISTINCT deals.person_id.value::integer AS id, \n\t\tREPLACE(deals.person_id.name::text, '\"','') AS name, \n\t\tdeals.person_id.active_flag AS active_flag \n\tFROM \"houmdw_prod\".\"dbt_staging\".\"stg_deals\" AS deals\n\tWHERE deals.person_id.value IS NOT NULL \n)\nselect \n\tpersons.*, \n\temails.email, \n\tphones.phone \nfrom persons\nleft join emails on emails.person_id = persons.id\nleft join phones on phones.person_id = persons.id\norder by 1 desc", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_tmp_supply_deals_persons\""}, "model.houm.proc_tmp_supply_properties_macrozone": {"raw_sql": "{{ config(materialized='table') }}\n\nwith macrozone as (\n    select\n        property_id,\n        min(proc_macrozone.geo_id) as geo_id,\n        max(proc_macrozone.timezone) as timezone\n    from\n        {{ref('proc_propertydetails')}}\n    left join\n        {{ref('proc_macrozone')}} on (ST_Contains(proc_macrozone.polygon,ST_SetSRID(ST_Point(proc_propertydetails.longitud, proc_propertydetails.latitud), 4326)) = true)\n    group by 1\n), first_clean as (\nselect \n    proc_properties.id as property_id,\n    proc_properties.created_at,\n    proc_properties.first_publication_date, \n    proc_macrozone.country,\n    proc_macrozone.Region_Houm as region, \n    proc_macrozone.City_Houm,\n    macrozone.timezone,\n    macrozone.geo_id,\n    proc_properties.business_type as business,\n    proc_properties.supply_source,\n    proc_properties.supply_relation\nfrom {{ ref('proc_properties') }}\nleft join macrozone on macrozone.property_id = proc_properties.id\nleft join {{ ref('proc_macrozone') }} on proc_macrozone.geo_id = macrozone.geo_id\norder by proc_properties.created_at desc\n)\nselect *,\n    timezone(first_clean.timezone,first_clean.first_publication_date) as local_first_publication_date\nfrom first_clean", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_propertydetails", "model.houm.proc_macrozone", "model.houm.proc_properties", "model.houm.proc_macrozone"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "supply"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "supply", "proc_tmp_supply_properties_macrozone"], "unique_id": "model.houm.proc_tmp_supply_properties_macrozone", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "processing/supply/proc_tmp_supply_properties_macrozone.sql", "original_file_path": "models/processing/supply/proc_tmp_supply_properties_macrozone.sql", "name": "proc_tmp_supply_properties_macrozone", "alias": "proc_tmp_supply_properties_macrozone", "checksum": {"name": "sha256", "checksum": "dc3d7ba6840989dc038ba948e2e64fc02c5b4b1c705dae10fb9b1147ee86bfe1"}, "tags": ["dw", "processing", "supply"], "refs": [["proc_propertydetails"], ["proc_macrozone"], ["proc_properties"], ["proc_macrozone"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/supply/proc_tmp_supply_properties_macrozone.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "materialized": "table", "tags": ["dw", "processing", "supply"]}, "created_at": 1654784475.511637, "compiled_sql": "\n\nwith macrozone as (\n    select\n        property_id,\n        min(proc_macrozone.geo_id) as geo_id,\n        max(proc_macrozone.timezone) as timezone\n    from\n        \"houmdw_prod\".\"dbt_processing\".\"proc_propertydetails\"\n    left join\n        \"houmdw_prod\".\"dbt_processing\".\"proc_macrozone\" on (ST_Contains(proc_macrozone.polygon,ST_SetSRID(ST_Point(proc_propertydetails.longitud, proc_propertydetails.latitud), 4326)) = true)\n    group by 1\n), first_clean as (\nselect \n    proc_properties.id as property_id,\n    proc_properties.created_at,\n    proc_properties.first_publication_date, \n    proc_macrozone.country,\n    proc_macrozone.Region_Houm as region, \n    proc_macrozone.City_Houm,\n    macrozone.timezone,\n    macrozone.geo_id,\n    proc_properties.business_type as business,\n    proc_properties.supply_source,\n    proc_properties.supply_relation\nfrom \"houmdw_prod\".\"dbt_processing\".\"proc_properties\"\nleft join macrozone on macrozone.property_id = proc_properties.id\nleft join \"houmdw_prod\".\"dbt_processing\".\"proc_macrozone\" on proc_macrozone.geo_id = macrozone.geo_id\norder by proc_properties.created_at desc\n)\nselect *,\n    timezone(first_clean.timezone,first_clean.first_publication_date) as local_first_publication_date\nfrom first_clean", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_tmp_supply_properties_macrozone\""}, "model.houm.proc_marketing_paid_media": {"raw_sql": "{{ config(materialized='table') }}\n\nWITH google_cl AS (\nSELECT \n    campaign_name , \n    executed_at , \n    'USD'::TEXT AS currency , \n    CASE  \n        WHEN executed_at BETWEEN '2022-01-01'::date AND '2022-04-30'::date THEN day_cost::float/850::float\n        WHEN executed_at BETWEEN '2022-05-01'::date AND '2022-05-31'::date THEN day_cost::float/860::float\n        WHEN executed_at BETWEEN '2022-06-01'::date AND '2022-08-01'::date THEN day_cost::float/890::float\n    ELSE day_cost::float/usd_cl.valor::float END day_cost ,\n    day_clicks , \n    day_impressions\nFROM {{ ref('proc_marketing_google_cl') }} proc_google_cl \nLEFT JOIN economic_indicator_dolar AS usd_cl \n    ON usd_cl.fecha  = proc_google_cl.executed_at \n)\n, google_co_mx as (\nSELECT *        \nFROM {{ ref('proc_marketing_google_co_mx') }} AS google_co_mx\n)\n, facebook as (\nSELECT *        \nFROM {{ ref('proc_marketing_facebook') }} AS facebook\n)\n, platforms as (\nSELECT \n    'Google' AS platform ,\n     *  \nFROM google_cl\nUNION ALL \nSELECT \n    'Google' AS platform ,\n     *  \nFROM google_co_mx \nUNION ALL \nSELECT \n    'Facebook' AS platform ,\n     *  \nFROM facebook \n)\n, paid_media as (\nSELECT \n    executed_at , \n    campaign_name , \n    CASE\n        WHEN campaign_name LIKE '%Sales%' THEN 'Seller'\n        WHEN campaign_name LIKE '%Rentals%' THEN 'Landlord'\n        WHEN campaign_name LIKE '%New Properties%' THEN 'Buyer New Properties'\n        WHEN campaign_name LIKE '%Buyers%' THEN 'Buyer Second Hand'\n        WHEN campaign_name LIKE '%Tenants%' THEN 'Tenant'\n        WHEN campaign_name LIKE '%Branding%' THEN 'Branding'\n        ELSE 'Branding' END AS business_marketing ,  \n    CASE\n        WHEN (campaign_name LIKE '%Sales%' OR campaign_name LIKE '%Rentals%') THEN 'Supply'\n        WHEN (campaign_name LIKE '%Buyers%' OR campaign_name LIKE '%Tenants%') THEN 'Demand'\n        WHEN campaign_name LIKE '%Branding%' THEN 'Branding'\n    ELSE 'Branding' END funnel_marketing, \n    CASE\n        WHEN campaign_name LIKE '%Medell\u00edn%' THEN 31::int\n        WHEN campaign_name LIKE '%Bogot\u00e1%' THEN 14::int \n        WHEN campaign_name LIKE '%Regi\u00f3n Metropolitana%' THEN 79::int\n        WHEN campaign_name LIKE '%Valpara\u00edso%' THEN  11::INT\n        WHEN campaign_name LIKE '%Concepci\u00f3n%' THEN 8::INT\n        WHEN campaign_name LIKE '%Ciudad de M\u00e9xico%' THEN 19::INT\n        WHEN campaign_name LIKE '%Monterrey%' THEN 54::INT\n        WHEN campaign_name LIKE '%Tijuana%' THEN 67::INT\n        WHEN campaign_name LIKE '%Guadalajara%' THEN 30::INT\n        WHEN campaign_name LIKE '%Puebla%' THEN 19::INT\n        WHEN campaign_name LIKE '%Quer\u00e9taro%' THEN 19::INT\n        WHEN campaign_name LIKE '%GDL%' THEN  30::INT\n        WHEN campaign_name LIKE '%CDMX%' THEN 19::INT\n        ELSE NULL END AS geo_id  , \n     day_cost , \n     day_clicks , \n     day_impressions\nFROM platforms \n)\nSELECT  \n    dim_geo.country , \n    dim_geo.country_sufix ,\n    dim_geo.Region_Houm ,\n    dim_geo.City_Houm ,\n    paid_media.* \nFROM paid_media\nLEFT JOIN {{ ref('dim_macrozones') }} AS dim_geo \nON dim_geo.geo_id = paid_media.geo_id", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_marketing_google_cl", "model.houm.proc_marketing_google_co_mx", "model.houm.proc_marketing_facebook", "model.houm.dim_macrozones"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "marketing"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "marketing", "proc_marketing_paid_media"], "unique_id": "model.houm.proc_marketing_paid_media", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "processing/marketing/proc_marketing_paid_media.sql", "original_file_path": "models/processing/marketing/proc_marketing_paid_media.sql", "name": "proc_marketing_paid_media", "alias": "proc_marketing_paid_media", "checksum": {"name": "sha256", "checksum": "caa8b6aa1802d660ccc1dcc5a92df847171487dfb61a3eabc87405fbed5bf4d2"}, "tags": ["dw", "processing", "marketing"], "refs": [["proc_marketing_google_cl"], ["proc_marketing_google_co_mx"], ["proc_marketing_facebook"], ["dim_macrozones"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/marketing/proc_marketing_paid_media.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "tags": ["dw", "processing", "marketing"], "materialized": "table"}, "created_at": 1654784475.5136929, "compiled_sql": "\n\nWITH google_cl AS (\nSELECT \n    campaign_name , \n    executed_at , \n    'USD'::TEXT AS currency , \n    CASE  \n        WHEN executed_at BETWEEN '2022-01-01'::date AND '2022-04-30'::date THEN day_cost::float/850::float\n        WHEN executed_at BETWEEN '2022-05-01'::date AND '2022-05-31'::date THEN day_cost::float/860::float\n        WHEN executed_at BETWEEN '2022-06-01'::date AND '2022-08-01'::date THEN day_cost::float/890::float\n    ELSE day_cost::float/usd_cl.valor::float END day_cost ,\n    day_clicks , \n    day_impressions\nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_marketing_google_cl\" proc_google_cl \nLEFT JOIN economic_indicator_dolar AS usd_cl \n    ON usd_cl.fecha  = proc_google_cl.executed_at \n)\n, google_co_mx as (\nSELECT *        \nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_marketing_google_co_mx\" AS google_co_mx\n)\n, facebook as (\nSELECT *        \nFROM \"houmdw_prod\".\"dbt_processing\".\"proc_marketing_facebook\" AS facebook\n)\n, platforms as (\nSELECT \n    'Google' AS platform ,\n     *  \nFROM google_cl\nUNION ALL \nSELECT \n    'Google' AS platform ,\n     *  \nFROM google_co_mx \nUNION ALL \nSELECT \n    'Facebook' AS platform ,\n     *  \nFROM facebook \n)\n, paid_media as (\nSELECT \n    executed_at , \n    campaign_name , \n    CASE\n        WHEN campaign_name LIKE '%Sales%' THEN 'Seller'\n        WHEN campaign_name LIKE '%Rentals%' THEN 'Landlord'\n        WHEN campaign_name LIKE '%New Properties%' THEN 'Buyer New Properties'\n        WHEN campaign_name LIKE '%Buyers%' THEN 'Buyer Second Hand'\n        WHEN campaign_name LIKE '%Tenants%' THEN 'Tenant'\n        WHEN campaign_name LIKE '%Branding%' THEN 'Branding'\n        ELSE 'Branding' END AS business_marketing ,  \n    CASE\n        WHEN (campaign_name LIKE '%Sales%' OR campaign_name LIKE '%Rentals%') THEN 'Supply'\n        WHEN (campaign_name LIKE '%Buyers%' OR campaign_name LIKE '%Tenants%') THEN 'Demand'\n        WHEN campaign_name LIKE '%Branding%' THEN 'Branding'\n    ELSE 'Branding' END funnel_marketing, \n    CASE\n        WHEN campaign_name LIKE '%Medell\u00edn%' THEN 31::int\n        WHEN campaign_name LIKE '%Bogot\u00e1%' THEN 14::int \n        WHEN campaign_name LIKE '%Regi\u00f3n Metropolitana%' THEN 79::int\n        WHEN campaign_name LIKE '%Valpara\u00edso%' THEN  11::INT\n        WHEN campaign_name LIKE '%Concepci\u00f3n%' THEN 8::INT\n        WHEN campaign_name LIKE '%Ciudad de M\u00e9xico%' THEN 19::INT\n        WHEN campaign_name LIKE '%Monterrey%' THEN 54::INT\n        WHEN campaign_name LIKE '%Tijuana%' THEN 67::INT\n        WHEN campaign_name LIKE '%Guadalajara%' THEN 30::INT\n        WHEN campaign_name LIKE '%Puebla%' THEN 19::INT\n        WHEN campaign_name LIKE '%Quer\u00e9taro%' THEN 19::INT\n        WHEN campaign_name LIKE '%GDL%' THEN  30::INT\n        WHEN campaign_name LIKE '%CDMX%' THEN 19::INT\n        ELSE NULL END AS geo_id  , \n     day_cost , \n     day_clicks , \n     day_impressions\nFROM platforms \n)\nSELECT  \n    dim_geo.country , \n    dim_geo.country_sufix ,\n    dim_geo.Region_Houm ,\n    dim_geo.City_Houm ,\n    paid_media.* \nFROM paid_media\nLEFT JOIN \"houmdw_prod\".\"dbt_dims\".\"dim_macrozones\" AS dim_geo \nON dim_geo.geo_id = paid_media.geo_id", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_marketing_paid_media\""}, "model.houm.proc_marketing_facebook": {"raw_sql": "{{ config(materialized='table') }}\n\nWITH proc_facebook AS (\nSELECT \n    \"campaign name\" AS campaign_name ,       \n     (date ::date)::timestamptz   AS executed_at , \n    'USD' AS currency ,\n    replace(cost, ',', '.')::double precision AS day_cost ,\n    impressions ::numeric AS day_clicks ,\n    \"link clicks\"::numeric AS day_impressions \nFROM {{ ref('stg_paid_media_facebook_campaigns') }} AS proc_facebook\nWHERE executed_at > '2022-01-01'::date\n)\nSELECT * FROM proc_facebook", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.stg_paid_media_facebook_campaigns"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "marketing"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "marketing", "proc_marketing_facebook"], "unique_id": "model.houm.proc_marketing_facebook", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "processing/marketing/proc_marketing_facebook.sql", "original_file_path": "models/processing/marketing/proc_marketing_facebook.sql", "name": "proc_marketing_facebook", "alias": "proc_marketing_facebook", "checksum": {"name": "sha256", "checksum": "a883f712bb3182c247c8e897d96a8e5e06274b1fbfd24e068a45ba584dc35eb7"}, "tags": ["dw", "processing", "marketing"], "refs": [["stg_paid_media_facebook_campaigns"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/marketing/proc_marketing_facebook.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "tags": ["dw", "processing", "marketing"], "materialized": "table"}, "created_at": 1654784475.515451, "compiled_sql": "\n\nWITH proc_facebook AS (\nSELECT \n    \"campaign name\" AS campaign_name ,       \n     (date ::date)::timestamptz   AS executed_at , \n    'USD' AS currency ,\n    replace(cost, ',', '.')::double precision AS day_cost ,\n    impressions ::numeric AS day_clicks ,\n    \"link clicks\"::numeric AS day_impressions \nFROM \"houmdw_prod\".\"dbt_staging\".\"stg_paid_media_facebook_campaigns\" AS proc_facebook\nWHERE executed_at > '2022-01-01'::date\n)\nSELECT * FROM proc_facebook", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_marketing_facebook\""}, "model.houm.proc_marketing_google_co_mx": {"raw_sql": "{{ config(materialized='table') }}\n\nWITH proc_google_co_mx AS (\nSELECT \n    \"campaign name\"  AS campaign_name ,   \n    to_date(date, 'DD/MM/YYYY HH24:MI:SS')::timestamptz AS executed_at , \n    'USD'::TEXT AS currency ,\n    replace(replace(split_part(cost, '$', '2'), '.', ''), ',', '.')::double precision AS day_cost , \n    replace(clicks, '.', '') ::numeric AS day_clicks, \n    replace(impressions, '.', '') ::numeric AS day_impressions\nFROM {{ ref('stg_paid_media_google_campaigns_co_mx') }} AS proc_google_co_mx\nWHERE executed_at > '2022-01-01'::date\n)\nSELECT * FROM proc_google_co_mx", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.stg_paid_media_google_campaigns_co_mx"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "marketing"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "marketing", "proc_marketing_google_co_mx"], "unique_id": "model.houm.proc_marketing_google_co_mx", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "processing/marketing/proc_marketing_google_co_mx.sql", "original_file_path": "models/processing/marketing/proc_marketing_google_co_mx.sql", "name": "proc_marketing_google_co_mx", "alias": "proc_marketing_google_co_mx", "checksum": {"name": "sha256", "checksum": "0aef80be40046bf2cf01b51c123fdd6ab41fe1d50a69040155ed2ff5aa575074"}, "tags": ["dw", "processing", "marketing"], "refs": [["stg_paid_media_google_campaigns_co_mx"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/marketing/proc_marketing_google_co_mx.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "tags": ["dw", "processing", "marketing"], "materialized": "table"}, "created_at": 1654784475.517231, "compiled_sql": "\n\nWITH proc_google_co_mx AS (\nSELECT \n    \"campaign name\"  AS campaign_name ,   \n    to_date(date, 'DD/MM/YYYY HH24:MI:SS')::timestamptz AS executed_at , \n    'USD'::TEXT AS currency ,\n    replace(replace(split_part(cost, '$', '2'), '.', ''), ',', '.')::double precision AS day_cost , \n    replace(clicks, '.', '') ::numeric AS day_clicks, \n    replace(impressions, '.', '') ::numeric AS day_impressions\nFROM \"houmdw_prod\".\"dbt_staging\".\"stg_paid_media_google_campaigns_co_mx\" AS proc_google_co_mx\nWHERE executed_at > '2022-01-01'::date\n)\nSELECT * FROM proc_google_co_mx", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_marketing_google_co_mx\""}, "model.houm.proc_marketing_google_cl": {"raw_sql": "{{ config(materialized='table') }}\n\nWITH proc_google_cl AS (\nSELECT \n    \"campaign name\" AS campaign_name ,   \n    to_date(date, 'DD/MM/YYYY HH24:MI:SS')::timestamptz AS executed_at , \n    'CLP' AS currency ,\n    replace(cost, '.', '')::numeric AS day_cost ,\n    replace(clicks, '.', '') ::numeric AS day_clicks ,                                                    \n    replace(impressions, '.', '') ::numeric AS day_impressions   \nFROM {{ ref('stg_paid_media_google_campaigns_cl') }} AS google_campaigns_cl\nWHERE executed_at > '2022-01-01'::date\n)\nSELECT * FROM proc_google_cl", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.stg_paid_media_google_campaigns_cl"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "marketing"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "marketing", "proc_marketing_google_cl"], "unique_id": "model.houm.proc_marketing_google_cl", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "processing/marketing/proc_marketing_google_cl.sql", "original_file_path": "models/processing/marketing/proc_marketing_google_cl.sql", "name": "proc_marketing_google_cl", "alias": "proc_marketing_google_cl", "checksum": {"name": "sha256", "checksum": "af030c816e8dac0a540969ddde8430ee7eb2f7ecdbe716604c96f3f0bcf3291b"}, "tags": ["dw", "processing", "marketing"], "refs": [["stg_paid_media_google_campaigns_cl"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/marketing/proc_marketing_google_cl.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "tags": ["dw", "processing", "marketing"], "materialized": "table"}, "created_at": 1654784475.519042, "compiled_sql": "\n\nWITH proc_google_cl AS (\nSELECT \n    \"campaign name\" AS campaign_name ,   \n    to_date(date, 'DD/MM/YYYY HH24:MI:SS')::timestamptz AS executed_at , \n    'CLP' AS currency ,\n    replace(cost, '.', '')::numeric AS day_cost ,\n    replace(clicks, '.', '') ::numeric AS day_clicks ,                                                    \n    replace(impressions, '.', '') ::numeric AS day_impressions   \nFROM \"houmdw_prod\".\"dbt_staging\".\"stg_paid_media_google_campaigns_cl\" AS google_campaigns_cl\nWHERE executed_at > '2022-01-01'::date\n)\nSELECT * FROM proc_google_cl", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_marketing_google_cl\""}, "model.houm.sales_local_revenue": {"raw_sql": "WITH localsalesrevenue AS (\n    SELECT\n        country,\n        DATE_TRUNC(\n            'month',\n            promise_date\n        ) :: DATE AS date_month,\n        SUM(\n            local_amount *(\n                sales_revenue.seller_commission + sales_revenue.buyer_commission\n            ) \n        ) as amount\n    FROM\n        payments.sales_revenue\n    GROUP BY\n        2,\n        country\n)\nSELECT\n        'sales_transactions' AS metric,'local_revenue' AS col,*\nFROM\n    localsalesrevenue", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": "processing_finance", "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "processing_finance", "fqn": ["houm", "processing", "finance", "sales_local_revenue"], "unique_id": "model.houm.sales_local_revenue", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "processing/finance/sales_local_revenue.sql", "original_file_path": "models/processing/finance/sales_local_revenue.sql", "name": "sales_local_revenue", "alias": "sales_local_revenue", "checksum": {"name": "sha256", "checksum": "8d8dbdb65ea95a5275a0aa200687fc26e4e04abbf661ef50285f3b69088f156b"}, "tags": [], "refs": [], "sources": [], "description": "Total Revenue amount of Sales", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": "houm://models/processing/schema.yml", "compiled_path": "target/compiled/houm/models/processing/finance/sales_local_revenue.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "processing_finance"}, "created_at": 1654784475.7421272, "compiled_sql": "WITH localsalesrevenue AS (\n    SELECT\n        country,\n        DATE_TRUNC(\n            'month',\n            promise_date\n        ) :: DATE AS date_month,\n        SUM(\n            local_amount *(\n                sales_revenue.seller_commission + sales_revenue.buyer_commission\n            ) \n        ) as amount\n    FROM\n        payments.sales_revenue\n    GROUP BY\n        2,\n        country\n)\nSELECT\n        'sales_transactions' AS metric,'local_revenue' AS col,*\nFROM\n    localsalesrevenue", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"processing_finance\".\"sales_local_revenue\""}, "model.houm.rentals_units": {"raw_sql": "WITH subscountry AS (\n    SELECT\n        *\n    FROM\n        historical.historical_subscription_subscription subs\n        INNER JOIN (\n            SELECT\n                *\n            FROM\n                historical.historical_properties\n            WHERE\n                audit_end_dt IS NULL\n        ) properties\n        ON properties.id = subs.property_id\n    WHERE\n        subs.audit_end_dt IS NULL\n        AND payment_date IS NOT NULL AND init_reason IN ('NEW_LEAD','NEW_LEAD_WITHOUT_BROKERAGE','REPUBLISHED','REPUBLISHED_DUE_TO_DEFAULTER_TENANT')\n),\nrentalsunits AS (\n    SELECT\n        country,\n        DATE_TRUNC(\n            'month',\n            payment_date\n        ) :: DATE AS date_month,\n        COUNT(1) AS total\n    FROM\n        subscountry\n    GROUP BY\n        1,\n        2\n)\nSELECT\n    'rentals_transactions' as metric, 'units' as col, *\nFROM\n    rentalsunits", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": "processing_finance", "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "processing_finance", "fqn": ["houm", "processing", "finance", "rentals_units"], "unique_id": "model.houm.rentals_units", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "processing/finance/rentals_units.sql", "original_file_path": "models/processing/finance/rentals_units.sql", "name": "rentals_units", "alias": "rentals_units", "checksum": {"name": "sha256", "checksum": "333ff51cbfa143e8049a65b50d0bdc18dca1780328be5255e3cb0bf1625e0f09"}, "tags": [], "refs": [], "sources": [], "description": "Number of rented units for each month", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": "houm://models/processing/schema.yml", "compiled_path": "target/compiled/houm/models/processing/finance/rentals_units.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "processing_finance"}, "created_at": 1654784475.741848, "compiled_sql": "WITH subscountry AS (\n    SELECT\n        *\n    FROM\n        historical.historical_subscription_subscription subs\n        INNER JOIN (\n            SELECT\n                *\n            FROM\n                historical.historical_properties\n            WHERE\n                audit_end_dt IS NULL\n        ) properties\n        ON properties.id = subs.property_id\n    WHERE\n        subs.audit_end_dt IS NULL\n        AND payment_date IS NOT NULL AND init_reason IN ('NEW_LEAD','NEW_LEAD_WITHOUT_BROKERAGE','REPUBLISHED','REPUBLISHED_DUE_TO_DEFAULTER_TENANT')\n),\nrentalsunits AS (\n    SELECT\n        country,\n        DATE_TRUNC(\n            'month',\n            payment_date\n        ) :: DATE AS date_month,\n        COUNT(1) AS total\n    FROM\n        subscountry\n    GROUP BY\n        1,\n        2\n)\nSELECT\n    'rentals_transactions' as metric, 'units' as col, *\nFROM\n    rentalsunits", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"processing_finance\".\"rentals_units\""}, "model.houm.eop_subs": {"raw_sql": "SELECT\n    'eop_under_mgmt' AS metric,'units' AS col,administration.subs_bop.country,administration.subs_bop.\"date\",administration.subs_bop.total\nFROM\n    administration.subs_bop", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": "processing_finance", "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "processing_finance", "fqn": ["houm", "processing", "finance", "eop_subs"], "unique_id": "model.houm.eop_subs", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "processing/finance/eop_subs.sql", "original_file_path": "models/processing/finance/eop_subs.sql", "name": "eop_subs", "alias": "eop_subs", "checksum": {"name": "sha256", "checksum": "15320a10bda8841ec4969ea2a30e886b10a2406b03adee53ae91c6f7cb90c230"}, "tags": [], "refs": [], "sources": [], "description": "Number of subscriptions at the beggining of period", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": "houm://models/processing/schema.yml", "compiled_path": "target/compiled/houm/models/processing/finance/eop_subs.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "processing_finance"}, "created_at": 1654784475.741566, "compiled_sql": "SELECT\n    'eop_under_mgmt' AS metric,'units' AS col,administration.subs_bop.country,administration.subs_bop.\"date\",administration.subs_bop.total\nFROM\n    administration.subs_bop", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"processing_finance\".\"eop_subs\""}, "model.houm.sales_units": {"raw_sql": "WITH salesunits AS (\n    SELECT\n        country,\n        DATE_TRUNC(\n            'month',\n            promise_date\n        ) :: DATE AS date_month,\n        COUNT(1) AS total\n    FROM\n        payments.sales_revenue\n    GROUP BY\n        2,\n        country\n)\nSELECT\n    'sales_transactions' AS metric,'units' AS col,*\nFROM\n    salesunits", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": "processing_finance", "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "processing_finance", "fqn": ["houm", "processing", "finance", "sales_units"], "unique_id": "model.houm.sales_units", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "processing/finance/sales_units.sql", "original_file_path": "models/processing/finance/sales_units.sql", "name": "sales_units", "alias": "sales_units", "checksum": {"name": "sha256", "checksum": "9e97d9697020e7b89d68c88e67e49ea425551c0a676d1ab5dc30c14f753632b7"}, "tags": [], "refs": [], "sources": [], "description": "Number of sold units for each month", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": "houm://models/processing/schema.yml", "compiled_path": "target/compiled/houm/models/processing/finance/sales_units.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "processing_finance"}, "created_at": 1654784475.741278, "compiled_sql": "WITH salesunits AS (\n    SELECT\n        country,\n        DATE_TRUNC(\n            'month',\n            promise_date\n        ) :: DATE AS date_month,\n        COUNT(1) AS total\n    FROM\n        payments.sales_revenue\n    GROUP BY\n        2,\n        country\n)\nSELECT\n    'sales_transactions' AS metric,'units' AS col,*\nFROM\n    salesunits", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"processing_finance\".\"sales_units\""}, "model.houm.proc_cx_nps_new_listing": {"raw_sql": "{{ config(materialized='table') }}\n\nWITH nps_whatsapp AS (\n    SELECT \n        CASE\n            WHEN nps.\"timestamp\" IS NULL OR nps.\"timestamp\"::text = ''::character varying::text THEN '2021-10-01'::date\n            ELSE \"left\"(nps.\"timestamp\"::text, 10)::date\n        END AS date,\n        CASE\n            WHEN nps.\"timestamp\" IS NULL OR nps.\"timestamp\"::text = ''::character varying::text THEN '00:00:00'::time without time zone\n            ELSE \"left\"(\"right\"(nps.\"timestamp\"::text, 9), 8)::time without time zone\n        END AS \"time\",\n        CASE\n            WHEN nps.recommendation IN (9,10) THEN 100::numeric(18, 0)\n               WHEN nps.recommendation IN (7,8) THEN 0.00\n               WHEN nps.recommendation IN (0,6) THEN - 100::numeric(18, 0)\n               ELSE NULL\n        END AS nps,\n        nps.name,\n        nps.phone,\n        nps.\"role\",\n        nps.country,\n        nps.\"timestamp\",\n        CASE\n            WHEN nps.source = 1 THEN '1.Publicidad'\n            WHEN nps.source = 2 THEN '2.Google'\n            WHEN nps.source = 3 THEN '3.Me lo recomendaron'\n            WHEN nps.source = 4 THEN '4.Redes sociales'\n            WHEN nps.source = 5 THEN '5.De un portal de propiedades'\n            WHEN nps.source = 6 THEN '6.Otro'\n            ELSE NULL\n        END AS source,\n           nps.process_quickness,\n           nps.process_clarity,\n           nps.recommendation,\n           nps.comments,\n           case when role like '%rent%' then 'Rentals'\n           \t\twhen role like '%sale%' then 'Sales'\n           \telse null end as business,\n           \tproperty_id\n    FROM {{ref('stg_whatsapp_nps_rentas_new_listing_cl')}} nps\n    UNION ALL\n        SELECT \n        CASE\n            WHEN nps.\"timestamp\" IS NULL OR nps.\"timestamp\"::text = ''::character varying::text THEN '2021-10-01'::date\n            ELSE \"left\"(nps.\"timestamp\"::text, 10)::date\n        END AS date,\n        CASE\n            WHEN nps.\"timestamp\" IS NULL OR nps.\"timestamp\"::text = ''::character varying::text THEN '00:00:00'::time without time zone\n            ELSE \"left\"(\"right\"(nps.\"timestamp\"::text, 9), 8)::time without time zone\n        END AS \"time\",\n        CASE\n            WHEN nps.recommendation IN (9,10) THEN 100::numeric(18, 0)\n               WHEN nps.recommendation IN (7,8) THEN 0.00\n               WHEN nps.recommendation IN (0,6) THEN - 100::numeric(18, 0)\n               ELSE NULL\n        END AS nps,\n        nps.name,\n        nps.phone,\n        nps.\"role\",\n        nps.country,\n        nps.\"timestamp\",\n        CASE\n            WHEN nps.source = 1 THEN '1.Publicidad'\n            WHEN nps.source = 2 THEN '2.Google'\n            WHEN nps.source = 3 THEN '3.Me lo recomendaron'\n            WHEN nps.source = 4 THEN '4.Redes sociales'\n            WHEN nps.source = 5 THEN '5.De un portal de propiedades'\n            WHEN nps.source = 6 THEN '6.Otro'\n            ELSE NULL\n        END AS source,\n           nps.process_quickness,\n           nps.process_clarity,\n           nps.recommendation,\n           nps.comments,\n           case when role like '%rent%' then 'Rentals'\n           \t\twhen role like '%sale%' then 'Sales'\n           \telse null end as business,\n           \tproperty_id\n    FROM {{ref('stg_whatsapp_nps_rentas_new_listing_co')}} nps\n    UNION ALL\n        SELECT \n        CASE\n            WHEN nps.\"timestamp\" IS NULL OR nps.\"timestamp\"::text = ''::character varying::text THEN '2021-10-01'::date\n            ELSE \"left\"(nps.\"timestamp\"::text, 10)::date\n        END AS date,\n        CASE\n            WHEN nps.\"timestamp\" IS NULL OR nps.\"timestamp\"::text = ''::character varying::text THEN '00:00:00'::time without time zone\n            ELSE \"left\"(\"right\"(nps.\"timestamp\"::text, 9), 8)::time without time zone\n        END AS \"time\",\n        CASE\n            WHEN nps.recommendation IN (9,10) THEN 100::numeric(18, 0)\n               WHEN nps.recommendation IN (7,8) THEN 0.00\n               WHEN nps.recommendation IN (0,6) THEN - 100::numeric(18, 0)\n               ELSE NULL\n        END AS nps,\n        nps.name,\n        nps.phone,\n        nps.\"role\",\n        nps.country,\n        nps.\"timestamp\",\n        CASE\n            WHEN nps.source = 1 THEN '1.Publicidad'\n            WHEN nps.source = 2 THEN '2.Google'\n            WHEN nps.source = 3 THEN '3.Me lo recomendaron'\n            WHEN nps.source = 4 THEN '4.Redes sociales'\n            WHEN nps.source = 5 THEN '5.De un portal de propiedades'\n            WHEN nps.source = 6 THEN '6.Otro'\n            ELSE NULL\n        END AS source,\n           nps.process_quickness,\n           nps.process_clarity,\n           nps.recommendation,\n           nps.comments,\n           case when role like '%rent%' then 'Rentals'\n           \t\twhen role like '%sale%' then 'Sales'\n           \telse null end as business,\n           \tproperty_id\n    FROM {{ref('stg_whatsapp_nps_rentas_new_listing_mx')}} nps\n    ),\nnps_survicate AS (\n    SELECT \n        left(first_response_date, 10)::date AS date,\n        right(first_response_date, 8)::time AS time,\n        nps * 100 AS nps,\n        '' AS name,\n        '' AS phone,\n        'rent_propietary_listing' AS role,\n        country,\n        first_response_date::character varying,\n        CASE\n            WHEN sc1_customer_source = 'Publicidad' THEN '1.Publicidad'\n            WHEN sc1_customer_source = 'Googleando' THEN '2.Google'\n            WHEN sc1_customer_source = 'Me lo recomendaron' THEN '3.Me lo recomendaron'\n            WHEN sc1_customer_source = 'Redes sociales' THEN '4.Redes sociales'\n            WHEN sc1_customer_source = 'De un portal de propiedades' THEN '5.De un portal de propiedades'\n            WHEN sc1_customer_source = 'Otro' THEN '6.Otro'\n            ELSE NULL\n        END AS source,\n        CASE m1_process_speed\n            WHEN 'Muy satisfecho' THEN '10'\n            WHEN 'Satisfecho' THEN '8'\n            WHEN 'Neutro' THEN '6'\n            WHEN 'Insatisfecho' THEN '4'\n            WHEN 'Muy insatisfecho' THEN '2'\n            ELSE null\n        END AS process_quickness,\n        CASE m1_information_clarity\n            WHEN 'Muy satisfecho' THEN '10'\n            WHEN 'Satisfecho' THEN '8'\n            WHEN 'Neutro' THEN '6'\n            WHEN 'Insatisfecho' THEN '4'\n            WHEN 'Muy insatisfecho' THEN '2'\n            ELSE null\n        END AS process_clarity,\n        nps_service_recommendation,\n        CASE\n            when text1_bad_answer = '' then\n                case\n                    when text1_neutral_answer = '' then\n                            case\n                                when text1_good_answer = '' then ''\n                                else 'Good: ' || text1_good_answer end\n                    else 'Neutral: ' || text1_neutral_answer end\n            else 'Bad: ' || text1_bad_answer || ' Neutral: ' || text1_neutral_answer || ' Good: ' || text1_good_answer \n        END AS comments,\n        null as business,\n        null as property_id\n    FROM {{ref('stg_survicate_nps_landlord_listing')}} AS nps\n    WHERE nps.first_response_date::date <= '2021-10-27'\n    )\nSELECT \n    * \nFROM \n    nps_whatsapp\nUNION ALL\nSELECT\n    * \nFROM \n    nps_survicate\nORDER BY 1 DESC, 2 DESC", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.stg_whatsapp_nps_rentas_new_listing_cl", "model.houm.stg_whatsapp_nps_rentas_new_listing_co", "model.houm.stg_whatsapp_nps_rentas_new_listing_mx", "model.houm.stg_survicate_nps_landlord_listing"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "cx"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "cx", "proc_cx_nps_new_listing"], "unique_id": "model.houm.proc_cx_nps_new_listing", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "processing/cx/proc_cx_nps_new_listing.sql", "original_file_path": "models/processing/cx/proc_cx_nps_new_listing.sql", "name": "proc_cx_nps_new_listing", "alias": "proc_cx_nps_new_listing", "checksum": {"name": "sha256", "checksum": "affc4e16d334a763eea764e3f1970dd6c2a9e1af70df186bcd5303d6c4182791"}, "tags": ["dw", "processing", "cx"], "refs": [["stg_whatsapp_nps_rentas_new_listing_cl"], ["stg_whatsapp_nps_rentas_new_listing_co"], ["stg_whatsapp_nps_rentas_new_listing_mx"], ["stg_survicate_nps_landlord_listing"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/cx/proc_cx_nps_new_listing.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "tags": ["dw", "processing", "cx"], "materialized": "table"}, "created_at": 1654784475.5268512, "compiled_sql": "\n\nWITH nps_whatsapp AS (\n    SELECT \n        CASE\n            WHEN nps.\"timestamp\" IS NULL OR nps.\"timestamp\"::text = ''::character varying::text THEN '2021-10-01'::date\n            ELSE \"left\"(nps.\"timestamp\"::text, 10)::date\n        END AS date,\n        CASE\n            WHEN nps.\"timestamp\" IS NULL OR nps.\"timestamp\"::text = ''::character varying::text THEN '00:00:00'::time without time zone\n            ELSE \"left\"(\"right\"(nps.\"timestamp\"::text, 9), 8)::time without time zone\n        END AS \"time\",\n        CASE\n            WHEN nps.recommendation IN (9,10) THEN 100::numeric(18, 0)\n               WHEN nps.recommendation IN (7,8) THEN 0.00\n               WHEN nps.recommendation IN (0,6) THEN - 100::numeric(18, 0)\n               ELSE NULL\n        END AS nps,\n        nps.name,\n        nps.phone,\n        nps.\"role\",\n        nps.country,\n        nps.\"timestamp\",\n        CASE\n            WHEN nps.source = 1 THEN '1.Publicidad'\n            WHEN nps.source = 2 THEN '2.Google'\n            WHEN nps.source = 3 THEN '3.Me lo recomendaron'\n            WHEN nps.source = 4 THEN '4.Redes sociales'\n            WHEN nps.source = 5 THEN '5.De un portal de propiedades'\n            WHEN nps.source = 6 THEN '6.Otro'\n            ELSE NULL\n        END AS source,\n           nps.process_quickness,\n           nps.process_clarity,\n           nps.recommendation,\n           nps.comments,\n           case when role like '%rent%' then 'Rentals'\n           \t\twhen role like '%sale%' then 'Sales'\n           \telse null end as business,\n           \tproperty_id\n    FROM \"houmdw_prod\".\"dbt_staging\".\"stg_whatsapp_nps_rentas_new_listing_cl\" nps\n    UNION ALL\n        SELECT \n        CASE\n            WHEN nps.\"timestamp\" IS NULL OR nps.\"timestamp\"::text = ''::character varying::text THEN '2021-10-01'::date\n            ELSE \"left\"(nps.\"timestamp\"::text, 10)::date\n        END AS date,\n        CASE\n            WHEN nps.\"timestamp\" IS NULL OR nps.\"timestamp\"::text = ''::character varying::text THEN '00:00:00'::time without time zone\n            ELSE \"left\"(\"right\"(nps.\"timestamp\"::text, 9), 8)::time without time zone\n        END AS \"time\",\n        CASE\n            WHEN nps.recommendation IN (9,10) THEN 100::numeric(18, 0)\n               WHEN nps.recommendation IN (7,8) THEN 0.00\n               WHEN nps.recommendation IN (0,6) THEN - 100::numeric(18, 0)\n               ELSE NULL\n        END AS nps,\n        nps.name,\n        nps.phone,\n        nps.\"role\",\n        nps.country,\n        nps.\"timestamp\",\n        CASE\n            WHEN nps.source = 1 THEN '1.Publicidad'\n            WHEN nps.source = 2 THEN '2.Google'\n            WHEN nps.source = 3 THEN '3.Me lo recomendaron'\n            WHEN nps.source = 4 THEN '4.Redes sociales'\n            WHEN nps.source = 5 THEN '5.De un portal de propiedades'\n            WHEN nps.source = 6 THEN '6.Otro'\n            ELSE NULL\n        END AS source,\n           nps.process_quickness,\n           nps.process_clarity,\n           nps.recommendation,\n           nps.comments,\n           case when role like '%rent%' then 'Rentals'\n           \t\twhen role like '%sale%' then 'Sales'\n           \telse null end as business,\n           \tproperty_id\n    FROM \"houmdw_prod\".\"dbt_staging\".\"stg_whatsapp_nps_rentas_new_listing_co\" nps\n    UNION ALL\n        SELECT \n        CASE\n            WHEN nps.\"timestamp\" IS NULL OR nps.\"timestamp\"::text = ''::character varying::text THEN '2021-10-01'::date\n            ELSE \"left\"(nps.\"timestamp\"::text, 10)::date\n        END AS date,\n        CASE\n            WHEN nps.\"timestamp\" IS NULL OR nps.\"timestamp\"::text = ''::character varying::text THEN '00:00:00'::time without time zone\n            ELSE \"left\"(\"right\"(nps.\"timestamp\"::text, 9), 8)::time without time zone\n        END AS \"time\",\n        CASE\n            WHEN nps.recommendation IN (9,10) THEN 100::numeric(18, 0)\n               WHEN nps.recommendation IN (7,8) THEN 0.00\n               WHEN nps.recommendation IN (0,6) THEN - 100::numeric(18, 0)\n               ELSE NULL\n        END AS nps,\n        nps.name,\n        nps.phone,\n        nps.\"role\",\n        nps.country,\n        nps.\"timestamp\",\n        CASE\n            WHEN nps.source = 1 THEN '1.Publicidad'\n            WHEN nps.source = 2 THEN '2.Google'\n            WHEN nps.source = 3 THEN '3.Me lo recomendaron'\n            WHEN nps.source = 4 THEN '4.Redes sociales'\n            WHEN nps.source = 5 THEN '5.De un portal de propiedades'\n            WHEN nps.source = 6 THEN '6.Otro'\n            ELSE NULL\n        END AS source,\n           nps.process_quickness,\n           nps.process_clarity,\n           nps.recommendation,\n           nps.comments,\n           case when role like '%rent%' then 'Rentals'\n           \t\twhen role like '%sale%' then 'Sales'\n           \telse null end as business,\n           \tproperty_id\n    FROM \"houmdw_prod\".\"dbt_staging\".\"stg_whatsapp_nps_rentas_new_listing_mx\" nps\n    ),\nnps_survicate AS (\n    SELECT \n        left(first_response_date, 10)::date AS date,\n        right(first_response_date, 8)::time AS time,\n        nps * 100 AS nps,\n        '' AS name,\n        '' AS phone,\n        'rent_propietary_listing' AS role,\n        country,\n        first_response_date::character varying,\n        CASE\n            WHEN sc1_customer_source = 'Publicidad' THEN '1.Publicidad'\n            WHEN sc1_customer_source = 'Googleando' THEN '2.Google'\n            WHEN sc1_customer_source = 'Me lo recomendaron' THEN '3.Me lo recomendaron'\n            WHEN sc1_customer_source = 'Redes sociales' THEN '4.Redes sociales'\n            WHEN sc1_customer_source = 'De un portal de propiedades' THEN '5.De un portal de propiedades'\n            WHEN sc1_customer_source = 'Otro' THEN '6.Otro'\n            ELSE NULL\n        END AS source,\n        CASE m1_process_speed\n            WHEN 'Muy satisfecho' THEN '10'\n            WHEN 'Satisfecho' THEN '8'\n            WHEN 'Neutro' THEN '6'\n            WHEN 'Insatisfecho' THEN '4'\n            WHEN 'Muy insatisfecho' THEN '2'\n            ELSE null\n        END AS process_quickness,\n        CASE m1_information_clarity\n            WHEN 'Muy satisfecho' THEN '10'\n            WHEN 'Satisfecho' THEN '8'\n            WHEN 'Neutro' THEN '6'\n            WHEN 'Insatisfecho' THEN '4'\n            WHEN 'Muy insatisfecho' THEN '2'\n            ELSE null\n        END AS process_clarity,\n        nps_service_recommendation,\n        CASE\n            when text1_bad_answer = '' then\n                case\n                    when text1_neutral_answer = '' then\n                            case\n                                when text1_good_answer = '' then ''\n                                else 'Good: ' || text1_good_answer end\n                    else 'Neutral: ' || text1_neutral_answer end\n            else 'Bad: ' || text1_bad_answer || ' Neutral: ' || text1_neutral_answer || ' Good: ' || text1_good_answer \n        END AS comments,\n        null as business,\n        null as property_id\n    FROM \"houmdw_prod\".\"dbt_staging\".\"stg_survicate_nps_landlord_listing\" AS nps\n    WHERE nps.first_response_date::date <= '2021-10-27'\n    )\nSELECT \n    * \nFROM \n    nps_whatsapp\nUNION ALL\nSELECT\n    * \nFROM \n    nps_survicate\nORDER BY 1 DESC, 2 DESC", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_cx_nps_new_listing\""}, "model.houm.proc_cx_nps_visit_cancel": {"raw_sql": "{{ config(materialized='table') }}\n\nwith nps_visits_cancelled as(\n\tselect \n        address,\n\t\tcountry,\n\t\tcomments,\n\t\tappraiser,\n\t\tvisit_type,\n\t\tschedule_id::integer,\n\t\tproperty_id::integer,\n\t\t(split_part(begin_date,'-',3)||'-'||split_part(begin_date,'-',2)||'-'||split_part(begin_date,'-',1))::date as begin_date,\n\t\tanswer_timestamp,\n\t\trecommendation \n\tfrom {{ref('stg_whatsapp_nps_cancel_visit')}} acv \n)\n,scheduler_schedules as (\n\tselect \n        id, \n        begin_date\n\tfrom historical.historical_scheduler_schedules\n\twhere \n        audit_end_dt is null \n\t    and audit_action <> 'D'\n\t\tand status = 'Cancelled'\t\n\t\tand begin_date between '2022-01-08' and current_date\n)\n,clean_nps as (\n\tselect \n        lower(nvc.country) as country,\n\t\tnvc.visit_type,\n\t\tnvc.schedule_id,\n\t\tnvc.property_id,\n\t\tnvc.begin_date,\n\t\tcoalesce(to_timestamp(nvc.answer_timestamp,'YYYY-MM-DDTHH:MI:SSZ'),scheduler_schedules.begin_date,nvc.begin_date) as formated_answer_timestamp,\n\t\tnvc.address,\n\t\tnvc.appraiser,\n\t\tnvc.recommendation::integer,\n\t\tnvc.comments\n\tfrom nps_visits_cancelled nvc \n\tleft join scheduler_schedules on scheduler_schedules.id = nvc.schedule_id \n)\nselect \n    clean_nps.*, \n\tformated_answer_timestamp::date as formated_answer_date,\n\tto_char(formated_answer_timestamp,'HH24:MI:SS') as formated_answer_time \n from clean_nps", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.stg_whatsapp_nps_cancel_visit"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "cx"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "cx", "proc_cx_nps_visit_cancel"], "unique_id": "model.houm.proc_cx_nps_visit_cancel", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "processing/cx/proc_cx_nps_visit_cancel.sql", "original_file_path": "models/processing/cx/proc_cx_nps_visit_cancel.sql", "name": "proc_cx_nps_visit_cancel", "alias": "proc_cx_nps_visit_cancel", "checksum": {"name": "sha256", "checksum": "b6b57874fe025538aa2c6f9fbb3931c29c5dcf63bbbf9be3b9850eb36ab372da"}, "tags": ["dw", "processing", "cx"], "refs": [["stg_whatsapp_nps_cancel_visit"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/cx/proc_cx_nps_visit_cancel.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "tags": ["dw", "processing", "cx"], "materialized": "table"}, "created_at": 1654784475.528673, "compiled_sql": "\n\nwith nps_visits_cancelled as(\n\tselect \n        address,\n\t\tcountry,\n\t\tcomments,\n\t\tappraiser,\n\t\tvisit_type,\n\t\tschedule_id::integer,\n\t\tproperty_id::integer,\n\t\t(split_part(begin_date,'-',3)||'-'||split_part(begin_date,'-',2)||'-'||split_part(begin_date,'-',1))::date as begin_date,\n\t\tanswer_timestamp,\n\t\trecommendation \n\tfrom \"houmdw_prod\".\"dbt_staging\".\"stg_whatsapp_nps_cancel_visit\" acv \n)\n,scheduler_schedules as (\n\tselect \n        id, \n        begin_date\n\tfrom historical.historical_scheduler_schedules\n\twhere \n        audit_end_dt is null \n\t    and audit_action <> 'D'\n\t\tand status = 'Cancelled'\t\n\t\tand begin_date between '2022-01-08' and current_date\n)\n,clean_nps as (\n\tselect \n        lower(nvc.country) as country,\n\t\tnvc.visit_type,\n\t\tnvc.schedule_id,\n\t\tnvc.property_id,\n\t\tnvc.begin_date,\n\t\tcoalesce(to_timestamp(nvc.answer_timestamp,'YYYY-MM-DDTHH:MI:SSZ'),scheduler_schedules.begin_date,nvc.begin_date) as formated_answer_timestamp,\n\t\tnvc.address,\n\t\tnvc.appraiser,\n\t\tnvc.recommendation::integer,\n\t\tnvc.comments\n\tfrom nps_visits_cancelled nvc \n\tleft join scheduler_schedules on scheduler_schedules.id = nvc.schedule_id \n)\nselect \n    clean_nps.*, \n\tformated_answer_timestamp::date as formated_answer_date,\n\tto_char(formated_answer_timestamp,'HH24:MI:SS') as formated_answer_time \n from clean_nps", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_cx_nps_visit_cancel\""}, "model.houm.proc_cx_nps_photo": {"raw_sql": "{{ config(materialized='table') }}\n\nwith nps_whatsapp_raw as (\n    select \n        appraiser, \n        schedule_id, \n\t\tcase trim(property_id)\n\t\t\twhen '-' then null\n\t\t\telse cast(property_id as integer) \n\t\tend as property_id,\n        to_date(np.\"date\",'DD/MM/YYYY') as date, \n        np.\"time\"::time, \n        address,\n\t\tcase trim(houmer_service)\n\t\t\twhen '-' then null\n\t\t\telse cast(houmer_service as integer) end as houmer_service,\n\t\tcase trim(houmer_knowledge)\n\t\t\twhen '-' then null\n\t\t\telse cast(houmer_knowledge as integer) end as houmer_knowledge,\n\t\tcase trim(schedule_easyness) \n\t\t\twhen '-' then null\n\t\t\telse cast(schedule_easyness as integer) end as schedule_easyness,\n\t\tcase trim(visit_success) \n\t\t\twhen '-' then null\n\t\t\telse cast(visit_success as integer) end as visit_success,\n\t\tcase trim(recommendation) \n\t\t\twhen '-' then null\n\t\t\telse cast(recommendation as integer) end as recommendation,\n\t\t'Chile' as country, \n\t\tcomments\n    from {{ref('stg_whatsapp_nps_chile_foto')}} np\n    union all\n    select\n        appraiser, \n        schedule_id, \n\t\tcase trim(property_id)\n\t\t\twhen '-' then null\n\t\t\telse cast(property_id as integer) \n\t\tend as property_id,\n        to_date(np.\"date\",'DD/MM/YYYY') as date, \n        np.\"time\"::time, \n        address,\n\t\tcase trim(houmer_service)\n\t\t\twhen '-' then null\n\t\t\telse cast(houmer_service as integer) end as houmer_service,\n\t\tcase trim(houmer_knowledge)\n\t\t\twhen '-' then null\n\t\t\telse cast(houmer_knowledge as integer) end as houmer_knowledge,\n\t\tcase trim(schedule_easyness) \n\t\t\twhen '-' then null\n\t\t\telse cast(schedule_easyness as integer) end as schedule_easyness,\n\t\tcase trim(visit_success) \n\t\t\twhen '-' then null\n\t\t\telse cast(visit_success as integer) end as visit_success,\n\t\tcase trim(recommendation) \n\t\t\twhen '-' then null\n\t\t\telse cast(recommendation as integer) end as recommendation,\n            'Colombia' as country, \n            comments\n    from {{ref('stg_whatsapp_nps_colombia_foto')}} np\n    union all\n    select\n        appraiser, \n        schedule_id, \n\t\tcase trim(property_id)\n\t\t\twhen '-' then null\n\t\t\telse cast(property_id as integer) \n\t\tend as property_id,\n        to_date(np.\"date\",'DD/MM/YYYY') as date, \n        np.\"time\"::time, \n        address,\n\t\tcase trim(houmer_service)\n\t\t\twhen '-' then null\n\t\t\telse cast(houmer_service as integer) end as houmer_service,\n\t\tcase trim(houmer_knowledge)\n\t\t\twhen '-' then null\n\t\t\telse cast(houmer_knowledge as integer) end as houmer_knowledge,\n\t\tcase trim(schedule_easyness) \n\t\t\twhen '-' then null\n\t\t\telse cast(schedule_easyness as integer) end as schedule_easyness,\n\t\tcase trim(visit_success) \n\t\t\twhen '-' then null\n\t\t\telse cast(visit_success as integer) end as visit_success,\n\t\tcase trim(recommendation) \n\t\t\twhen '-' then null\n\t\t\telse cast(recommendation as integer) end as recommendation,\n            'Mexico' as country, \n            comments\n    from {{ref('stg_whatsapp_nps_mexico_foto')}} np\n),\nnps_whatsapp as (\n    select \n        nps_whatsapp_raw.*,\n        hss.business,\n\t\tcase when recommendation in (9,10) then 100\n\t\t\twhen recommendation in (7,8) then 0.00\n\t\t\twhen recommendation in (1,2,3,4,5,6) then -100\n\t\t\telse null end as NPS\n    from nps_whatsapp_raw\n    left join {{ref('proc_tmp_demand_schedules_cleaned')}} hss on hss.schedule_id = nps_whatsapp_raw.schedule_id\n),\nnps_survicate as ( \n    select \n        null as appraiser, \n        null as schedule_id, \n        null as property_id,\n        left(first_response_date,10)::date as date, \n        right(first_response_date,8)::time as time,\n        null as address,\n        m1_houmer_during_visit*2 as houmer_service,\n        m1_houmer_before_visit*2 as houmer_knowledge,\n        m1_website_simplicity*2 as schedule_easyness,\n        case property_photos_experience when 'Extremely happy' then 10\n            when 'Happy' then 8\n            when 'Neutral' then 6\n            when 'Unsatisfied' then 4\n            when 'Extremely unsatisfied' then 2\n            else null\n        end as visit_success,\n        null as recommendation,\n        country,\n        case when text1_bad_answer = '' then case when text1_neutral_answer = '' then '' else text1_neutral_answer end else 'Bad:'||text1_bad_answer || ' Neutral: '|| text1_neutral_answer end as comments,\n        '' as business,\n        nps*100 as nps\n    from {{ref('stg_survicate_nps_photo_done')}} \n    where date < '2021-10-21'\n)\nSELECT \n    * \nFROM \n    nps_whatsapp\nUNION ALL\nSELECT\n    * \nFROM \n    nps_survicate\nORDER BY \"date\" DESC, \"time\" DESC", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.stg_whatsapp_nps_chile_foto", "model.houm.stg_whatsapp_nps_colombia_foto", "model.houm.stg_whatsapp_nps_mexico_foto", "model.houm.proc_tmp_demand_schedules_cleaned", "model.houm.stg_survicate_nps_photo_done"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "cx"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "cx", "proc_cx_nps_photo"], "unique_id": "model.houm.proc_cx_nps_photo", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "processing/cx/proc_cx_nps_photo.sql", "original_file_path": "models/processing/cx/proc_cx_nps_photo.sql", "name": "proc_cx_nps_photo", "alias": "proc_cx_nps_photo", "checksum": {"name": "sha256", "checksum": "21ffd63dbb2fbef4066d1993aa5c91f84b556746f5d15cb16f312ea6b9c73359"}, "tags": ["dw", "processing", "cx"], "refs": [["stg_whatsapp_nps_chile_foto"], ["stg_whatsapp_nps_colombia_foto"], ["stg_whatsapp_nps_mexico_foto"], ["proc_tmp_demand_schedules_cleaned"], ["stg_survicate_nps_photo_done"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/cx/proc_cx_nps_photo.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "tags": ["dw", "processing", "cx"], "materialized": "table"}, "created_at": 1654784475.53213, "compiled_sql": "\n\nwith nps_whatsapp_raw as (\n    select \n        appraiser, \n        schedule_id, \n\t\tcase trim(property_id)\n\t\t\twhen '-' then null\n\t\t\telse cast(property_id as integer) \n\t\tend as property_id,\n        to_date(np.\"date\",'DD/MM/YYYY') as date, \n        np.\"time\"::time, \n        address,\n\t\tcase trim(houmer_service)\n\t\t\twhen '-' then null\n\t\t\telse cast(houmer_service as integer) end as houmer_service,\n\t\tcase trim(houmer_knowledge)\n\t\t\twhen '-' then null\n\t\t\telse cast(houmer_knowledge as integer) end as houmer_knowledge,\n\t\tcase trim(schedule_easyness) \n\t\t\twhen '-' then null\n\t\t\telse cast(schedule_easyness as integer) end as schedule_easyness,\n\t\tcase trim(visit_success) \n\t\t\twhen '-' then null\n\t\t\telse cast(visit_success as integer) end as visit_success,\n\t\tcase trim(recommendation) \n\t\t\twhen '-' then null\n\t\t\telse cast(recommendation as integer) end as recommendation,\n\t\t'Chile' as country, \n\t\tcomments\n    from \"houmdw_prod\".\"dbt_staging\".\"stg_whatsapp_nps_chile_foto\" np\n    union all\n    select\n        appraiser, \n        schedule_id, \n\t\tcase trim(property_id)\n\t\t\twhen '-' then null\n\t\t\telse cast(property_id as integer) \n\t\tend as property_id,\n        to_date(np.\"date\",'DD/MM/YYYY') as date, \n        np.\"time\"::time, \n        address,\n\t\tcase trim(houmer_service)\n\t\t\twhen '-' then null\n\t\t\telse cast(houmer_service as integer) end as houmer_service,\n\t\tcase trim(houmer_knowledge)\n\t\t\twhen '-' then null\n\t\t\telse cast(houmer_knowledge as integer) end as houmer_knowledge,\n\t\tcase trim(schedule_easyness) \n\t\t\twhen '-' then null\n\t\t\telse cast(schedule_easyness as integer) end as schedule_easyness,\n\t\tcase trim(visit_success) \n\t\t\twhen '-' then null\n\t\t\telse cast(visit_success as integer) end as visit_success,\n\t\tcase trim(recommendation) \n\t\t\twhen '-' then null\n\t\t\telse cast(recommendation as integer) end as recommendation,\n            'Colombia' as country, \n            comments\n    from \"houmdw_prod\".\"dbt_staging\".\"stg_whatsapp_nps_colombia_foto\" np\n    union all\n    select\n        appraiser, \n        schedule_id, \n\t\tcase trim(property_id)\n\t\t\twhen '-' then null\n\t\t\telse cast(property_id as integer) \n\t\tend as property_id,\n        to_date(np.\"date\",'DD/MM/YYYY') as date, \n        np.\"time\"::time, \n        address,\n\t\tcase trim(houmer_service)\n\t\t\twhen '-' then null\n\t\t\telse cast(houmer_service as integer) end as houmer_service,\n\t\tcase trim(houmer_knowledge)\n\t\t\twhen '-' then null\n\t\t\telse cast(houmer_knowledge as integer) end as houmer_knowledge,\n\t\tcase trim(schedule_easyness) \n\t\t\twhen '-' then null\n\t\t\telse cast(schedule_easyness as integer) end as schedule_easyness,\n\t\tcase trim(visit_success) \n\t\t\twhen '-' then null\n\t\t\telse cast(visit_success as integer) end as visit_success,\n\t\tcase trim(recommendation) \n\t\t\twhen '-' then null\n\t\t\telse cast(recommendation as integer) end as recommendation,\n            'Mexico' as country, \n            comments\n    from \"houmdw_prod\".\"dbt_staging\".\"stg_whatsapp_nps_mexico_foto\" np\n),\nnps_whatsapp as (\n    select \n        nps_whatsapp_raw.*,\n        hss.business,\n\t\tcase when recommendation in (9,10) then 100\n\t\t\twhen recommendation in (7,8) then 0.00\n\t\t\twhen recommendation in (1,2,3,4,5,6) then -100\n\t\t\telse null end as NPS\n    from nps_whatsapp_raw\n    left join \"houmdw_prod\".\"dbt_processing\".\"proc_tmp_demand_schedules_cleaned\" hss on hss.schedule_id = nps_whatsapp_raw.schedule_id\n),\nnps_survicate as ( \n    select \n        null as appraiser, \n        null as schedule_id, \n        null as property_id,\n        left(first_response_date,10)::date as date, \n        right(first_response_date,8)::time as time,\n        null as address,\n        m1_houmer_during_visit*2 as houmer_service,\n        m1_houmer_before_visit*2 as houmer_knowledge,\n        m1_website_simplicity*2 as schedule_easyness,\n        case property_photos_experience when 'Extremely happy' then 10\n            when 'Happy' then 8\n            when 'Neutral' then 6\n            when 'Unsatisfied' then 4\n            when 'Extremely unsatisfied' then 2\n            else null\n        end as visit_success,\n        null as recommendation,\n        country,\n        case when text1_bad_answer = '' then case when text1_neutral_answer = '' then '' else text1_neutral_answer end else 'Bad:'||text1_bad_answer || ' Neutral: '|| text1_neutral_answer end as comments,\n        '' as business,\n        nps*100 as nps\n    from \"houmdw_prod\".\"dbt_staging\".\"stg_survicate_nps_photo_done\" \n    where date < '2021-10-21'\n)\nSELECT \n    * \nFROM \n    nps_whatsapp\nUNION ALL\nSELECT\n    * \nFROM \n    nps_survicate\nORDER BY \"date\" DESC, \"time\" DESC", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_cx_nps_photo\""}, "model.houm.proc_cx_nps_landlords": {"raw_sql": "{{ config(materialized='table') }}\n\nwith nps_whatsapp as(\n    SELECT \n        CASE\n            WHEN nps.\"timestamp\" IS NULL OR nps.\"timestamp\"::text = ''::text THEN '2021-10-01'::date\n            ELSE \"left\"(nps.\"timestamp\"::text, 10)::date\n        END AS date, \n        CASE\n            WHEN nps.\"timestamp\" IS NULL OR nps.\"timestamp\"::text = ''::text THEN '00:00:00'::time without time zone\n            ELSE \"left\"(\"right\"(nps.\"timestamp\"::text, 9), 8)::time without time zone\n        END AS \"time\", \n        CASE\n            WHEN nps.recommendation IN (9, 10) THEN 100::numeric\n            WHEN nps.recommendation IN (7, 8) THEN 0.00\n            WHEN nps.recommendation IN (0,1,2,3,4,5,6) THEN -100::numeric\n            ELSE null\n        END AS nps, \n        nps.name, \n        nps.phone, \n        nps.\"role\", \n        nps.prop_id AS property_id, \n        nps.country, \n        nps.\"timestamp\", \n        CASE \n            WHEN nps.attention_satisfaction = '-' THEN null\n            ELSE nps.attention_satisfaction::integer \n        END AS attention_satisfaction,\n        CASE \n            WHEN nps.problem_solving = '-' THEN null\n            ELSE nps.problem_solving::integer \n        END AS problem_solving,\n        CASE \n            WHEN nps.recommendation = '-' then null\n            ELSE nps.recommendation::integer \n        END AS recommendation,\n        nps.comments\n    FROM {{ ref('stg_whatsapp_nps_automatic_landlord_3_meses') }} AS nps\n    UNION ALL \n    SELECT \n        CASE\n            WHEN nps.\"timestamp\" IS NULL OR nps.\"timestamp\"::text = ''::text THEN '2021-10-01'::date\n            ELSE \"left\"(nps.\"timestamp\"::text, 10)::date\n        END AS date, \n        CASE\n            WHEN nps.\"timestamp\" IS NULL OR nps.\"timestamp\"::text = ''::text THEN '00:00:00'::time without time zone\n            ELSE \"left\"(\"right\"(nps.\"timestamp\"::text, 9), 8)::time without time zone\n        END AS \"time\", \n        CASE\n            WHEN nps.recommendation IN (9, 10) THEN 100::numeric\n            WHEN nps.recommendation IN (7, 8) THEN 0.00\n            WHEN nps.recommendation IN (0,1,2,3,4,5,6) THEN -100::numeric\n            ELSE NULL\n        END AS nps, \n        nps.name, \n        nps.phone, \n        nps.\"role\", \n        nps.prop_id AS property_id, \n        nps.country, \n        nps.\"timestamp\", \n        CASE \n            WHEN nps.attention_satisfaction = '-' THEN null\n            ELSE nps.attention_satisfaction::integer \n        END AS attention_satisfaction,\n        CASE \n            WHEN nps.problem_solving = '-' THEN null\n            ELSE nps.problem_solving::integer \n        END AS problem_solving,\n        CASE \n            WHEN nps.recommendation = '-' THEN null\n            ELSE nps.recommendation::integer \n        END AS recommendation,\n        nps.comments\n    FROM {{ ref('stg_whatsapp_nps_automatic_landlord_6_meses') }} AS nps\n   ), --Good luck have fun\nnps_survicate as (\n    SELECT \n        \"left\"(nps.first_response_date::text, 10)::date AS date, \n\t\t\"right\"(nps.first_response_date::text, 8)::time without time zone AS \"time\",\n\t\tCASE \n            WHEN nps.nps_service_recommendation <= 6 THEN -100.00::numeric \n\t\t\tWHEN nps.nps_service_recommendation <= 8 THEN 0.00::numeric\n\t\t\tWHEN nps.nps_service_recommendation <= 10 THEN 100.00::numeric \n\t\t    ELSE null::numeric \n        END AS nps,\n\t\t'' AS name,\n\t\t'' AS phone,\n\t\t'landlord_6_months' as role,\n\t\tnull as property_id,\n\t\t'Chile' as country,\n\t\tfirst_response_date::text as \"timestamp\",\n\t\tCASE\n            WHEN nps.houm_administration_satisfaction = 'Extremely happy' THEN 10\n            WHEN nps.houm_administration_satisfaction = 'Happy' THEN 8\n            WHEN nps.houm_administration_satisfaction = 'Neutro' THEN 6\n            WHEN nps.houm_administration_satisfaction = 'Unsatisfied' THEN 4\n            WHEN nps.houm_administration_satisfaction = 'Extremely unsatisfied' THEN 2\n            ELSE null\n        END AS attention_satisfaction,\n\t\tCASE\n            WHEN nps.executive_management_satisfaction = 'Extremely happy' THEN 10\n            WHEN nps.executive_management_satisfaction = 'Happy' THEN 8\n            WHEN nps.executive_management_satisfaction = 'Neutro' THEN 6\n            WHEN nps.executive_management_satisfaction = 'Unsatisfied' THEN 4\n            WHEN nps.executive_management_satisfaction = 'Extremely unsatisfied' THEN 2\n            ELSE null\n        END AS problem_solving,\n        nps.nps_service_recommendation AS recommendation,\n        nps.text1_suggestion_box AS comments\n\tFROM {{ ref('stg_survicate_nps_landlord_satisfaction_6months_cl') }} AS nps\n   )\nSELECT \n    * \nFROM \n    nps_whatsapp\nUNION ALL\nSELECT\n    * \nFROM \n    nps_survicate", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.stg_whatsapp_nps_automatic_landlord_3_meses", "model.houm.stg_whatsapp_nps_automatic_landlord_6_meses", "model.houm.stg_survicate_nps_landlord_satisfaction_6months_cl"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "cx"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "cx", "proc_cx_nps_landlords"], "unique_id": "model.houm.proc_cx_nps_landlords", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "processing/cx/proc_cx_nps_landlords.sql", "original_file_path": "models/processing/cx/proc_cx_nps_landlords.sql", "name": "proc_cx_nps_landlords", "alias": "proc_cx_nps_landlords", "checksum": {"name": "sha256", "checksum": "c249b770756cb30704c1cb45f435edba86dc7d18b43dc658edb53cba0e6ba2a2"}, "tags": ["dw", "processing", "cx"], "refs": [["stg_whatsapp_nps_automatic_landlord_3_meses"], ["stg_whatsapp_nps_automatic_landlord_6_meses"], ["stg_survicate_nps_landlord_satisfaction_6months_cl"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/cx/proc_cx_nps_landlords.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "tags": ["dw", "processing", "cx"], "materialized": "table"}, "created_at": 1654784475.5339782, "compiled_sql": "\n\nwith nps_whatsapp as(\n    SELECT \n        CASE\n            WHEN nps.\"timestamp\" IS NULL OR nps.\"timestamp\"::text = ''::text THEN '2021-10-01'::date\n            ELSE \"left\"(nps.\"timestamp\"::text, 10)::date\n        END AS date, \n        CASE\n            WHEN nps.\"timestamp\" IS NULL OR nps.\"timestamp\"::text = ''::text THEN '00:00:00'::time without time zone\n            ELSE \"left\"(\"right\"(nps.\"timestamp\"::text, 9), 8)::time without time zone\n        END AS \"time\", \n        CASE\n            WHEN nps.recommendation IN (9, 10) THEN 100::numeric\n            WHEN nps.recommendation IN (7, 8) THEN 0.00\n            WHEN nps.recommendation IN (0,1,2,3,4,5,6) THEN -100::numeric\n            ELSE null\n        END AS nps, \n        nps.name, \n        nps.phone, \n        nps.\"role\", \n        nps.prop_id AS property_id, \n        nps.country, \n        nps.\"timestamp\", \n        CASE \n            WHEN nps.attention_satisfaction = '-' THEN null\n            ELSE nps.attention_satisfaction::integer \n        END AS attention_satisfaction,\n        CASE \n            WHEN nps.problem_solving = '-' THEN null\n            ELSE nps.problem_solving::integer \n        END AS problem_solving,\n        CASE \n            WHEN nps.recommendation = '-' then null\n            ELSE nps.recommendation::integer \n        END AS recommendation,\n        nps.comments\n    FROM \"houmdw_prod\".\"dbt_staging\".\"stg_whatsapp_nps_automatic_landlord_3_meses\" AS nps\n    UNION ALL \n    SELECT \n        CASE\n            WHEN nps.\"timestamp\" IS NULL OR nps.\"timestamp\"::text = ''::text THEN '2021-10-01'::date\n            ELSE \"left\"(nps.\"timestamp\"::text, 10)::date\n        END AS date, \n        CASE\n            WHEN nps.\"timestamp\" IS NULL OR nps.\"timestamp\"::text = ''::text THEN '00:00:00'::time without time zone\n            ELSE \"left\"(\"right\"(nps.\"timestamp\"::text, 9), 8)::time without time zone\n        END AS \"time\", \n        CASE\n            WHEN nps.recommendation IN (9, 10) THEN 100::numeric\n            WHEN nps.recommendation IN (7, 8) THEN 0.00\n            WHEN nps.recommendation IN (0,1,2,3,4,5,6) THEN -100::numeric\n            ELSE NULL\n        END AS nps, \n        nps.name, \n        nps.phone, \n        nps.\"role\", \n        nps.prop_id AS property_id, \n        nps.country, \n        nps.\"timestamp\", \n        CASE \n            WHEN nps.attention_satisfaction = '-' THEN null\n            ELSE nps.attention_satisfaction::integer \n        END AS attention_satisfaction,\n        CASE \n            WHEN nps.problem_solving = '-' THEN null\n            ELSE nps.problem_solving::integer \n        END AS problem_solving,\n        CASE \n            WHEN nps.recommendation = '-' THEN null\n            ELSE nps.recommendation::integer \n        END AS recommendation,\n        nps.comments\n    FROM \"houmdw_prod\".\"dbt_staging\".\"stg_whatsapp_nps_automatic_landlord_6_meses\" AS nps\n   ), --Good luck have fun\nnps_survicate as (\n    SELECT \n        \"left\"(nps.first_response_date::text, 10)::date AS date, \n\t\t\"right\"(nps.first_response_date::text, 8)::time without time zone AS \"time\",\n\t\tCASE \n            WHEN nps.nps_service_recommendation <= 6 THEN -100.00::numeric \n\t\t\tWHEN nps.nps_service_recommendation <= 8 THEN 0.00::numeric\n\t\t\tWHEN nps.nps_service_recommendation <= 10 THEN 100.00::numeric \n\t\t    ELSE null::numeric \n        END AS nps,\n\t\t'' AS name,\n\t\t'' AS phone,\n\t\t'landlord_6_months' as role,\n\t\tnull as property_id,\n\t\t'Chile' as country,\n\t\tfirst_response_date::text as \"timestamp\",\n\t\tCASE\n            WHEN nps.houm_administration_satisfaction = 'Extremely happy' THEN 10\n            WHEN nps.houm_administration_satisfaction = 'Happy' THEN 8\n            WHEN nps.houm_administration_satisfaction = 'Neutro' THEN 6\n            WHEN nps.houm_administration_satisfaction = 'Unsatisfied' THEN 4\n            WHEN nps.houm_administration_satisfaction = 'Extremely unsatisfied' THEN 2\n            ELSE null\n        END AS attention_satisfaction,\n\t\tCASE\n            WHEN nps.executive_management_satisfaction = 'Extremely happy' THEN 10\n            WHEN nps.executive_management_satisfaction = 'Happy' THEN 8\n            WHEN nps.executive_management_satisfaction = 'Neutro' THEN 6\n            WHEN nps.executive_management_satisfaction = 'Unsatisfied' THEN 4\n            WHEN nps.executive_management_satisfaction = 'Extremely unsatisfied' THEN 2\n            ELSE null\n        END AS problem_solving,\n        nps.nps_service_recommendation AS recommendation,\n        nps.text1_suggestion_box AS comments\n\tFROM \"houmdw_prod\".\"dbt_staging\".\"stg_survicate_nps_landlord_satisfaction_6months_cl\" AS nps\n   )\nSELECT \n    * \nFROM \n    nps_whatsapp\nUNION ALL\nSELECT\n    * \nFROM \n    nps_survicate", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_cx_nps_landlords\""}, "model.houm.proc_monthly_daily_inflation_mx": {"raw_sql": "with table5 as (\nselect *\n\t,exp((ln(monthly_inflation+1)/n_days)) - 1 as daily_inflation\n\t--,(POW(daily_inflation+1,n_days)-1) as checking_conversion_daily_to_monthly\nfrom {{ ref('stg_monthly_inflation_mx') }}\nwhere n_days is not null\norder by date_formatted asc\n)\n\nSELECT * \nFROM table5", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.stg_monthly_inflation_mx"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "ipc"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "economic_indicators", "proc_monthly_daily_inflation_mx"], "unique_id": "model.houm.proc_monthly_daily_inflation_mx", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "processing/economic_indicators/proc_monthly_daily_inflation_mx.sql", "original_file_path": "models/processing/economic_indicators/proc_monthly_daily_inflation_mx.sql", "name": "proc_monthly_daily_inflation_mx", "alias": "proc_monthly_daily_inflation_mx", "checksum": {"name": "sha256", "checksum": "a0e46aeb50615f128eb111cbc1923708729639f05ba84ff98d007068472dc5ba"}, "tags": ["dw", "processing", "ipc"], "refs": [["stg_monthly_inflation_mx"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/economic_indicators/proc_monthly_daily_inflation_mx.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "tags": ["dw", "processing", "ipc"]}, "created_at": 1654784475.535739, "compiled_sql": "with table5 as (\nselect *\n\t,exp((ln(monthly_inflation+1)/n_days)) - 1 as daily_inflation\n\t--,(POW(daily_inflation+1,n_days)-1) as checking_conversion_daily_to_monthly\nfrom \"houmdw_prod\".\"dbt_staging\".\"stg_monthly_inflation_mx\"\nwhere n_days is not null\norder by date_formatted asc\n)\n\nSELECT * \nFROM table5", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_monthly_daily_inflation_mx\""}, "model.houm.proc_monthly_daily_inflation_co": {"raw_sql": "with table5 as (\nselect *\n\t,exp((ln(monthly_inflation+1)/n_days)) - 1 as daily_inflation\n\t--,(POW(daily_inflation+1,n_days)-1) as checking_conversion_daily_to_monthly\nfrom {{ ref('stg_monthly_inflation_co') }}\nwhere n_days is not null\norder by date_formatted asc\n)\n\nSELECT * \nFROM table5", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.stg_monthly_inflation_co"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "ipc"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "economic_indicators", "proc_monthly_daily_inflation_co"], "unique_id": "model.houm.proc_monthly_daily_inflation_co", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "processing/economic_indicators/proc_monthly_daily_inflation_co.sql", "original_file_path": "models/processing/economic_indicators/proc_monthly_daily_inflation_co.sql", "name": "proc_monthly_daily_inflation_co", "alias": "proc_monthly_daily_inflation_co", "checksum": {"name": "sha256", "checksum": "d75ca539417ee8ab0d909840ac4fb787fc086054928d01b35a53f8a766a48228"}, "tags": ["dw", "processing", "ipc"], "refs": [["stg_monthly_inflation_co"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/economic_indicators/proc_monthly_daily_inflation_co.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "tags": ["dw", "processing", "ipc"]}, "created_at": 1654784475.537309, "compiled_sql": "with table5 as (\nselect *\n\t,exp((ln(monthly_inflation+1)/n_days)) - 1 as daily_inflation\n\t--,(POW(daily_inflation+1,n_days)-1) as checking_conversion_daily_to_monthly\nfrom \"houmdw_prod\".\"dbt_staging\".\"stg_monthly_inflation_co\"\nwhere n_days is not null\norder by date_formatted asc\n)\n\nSELECT * \nFROM table5", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_monthly_daily_inflation_co\""}, "model.houm.proc_monthly_daily_inflation_cl": {"raw_sql": "with table5 as (\nselect *\n\t,exp((ln(monthly_inflation+1)/n_days)) - 1 as daily_inflation\n\t--,(POW(daily_inflation+1,n_days)-1) as checking_conversion_daily_to_monthly\nfrom {{ ref('stg_monthly_inflation_cl') }}\nwhere n_days is not null\norder by date_formatted asc\n)\n\nSELECT * \nFROM table5", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.stg_monthly_inflation_cl"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "ipc"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "economic_indicators", "proc_monthly_daily_inflation_cl"], "unique_id": "model.houm.proc_monthly_daily_inflation_cl", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "processing/economic_indicators/proc_monthly_daily_inflation_cl.sql", "original_file_path": "models/processing/economic_indicators/proc_monthly_daily_inflation_cl.sql", "name": "proc_monthly_daily_inflation_cl", "alias": "proc_monthly_daily_inflation_cl", "checksum": {"name": "sha256", "checksum": "ed0edaf66573068c5a527e893215298f9e897dfa7d0d2bba03e13e9f4defc7b9"}, "tags": ["dw", "processing", "ipc"], "refs": [["stg_monthly_inflation_cl"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/economic_indicators/proc_monthly_daily_inflation_cl.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "tags": ["dw", "processing", "ipc"]}, "created_at": 1654784475.5390239, "compiled_sql": "with table5 as (\nselect *\n\t,exp((ln(monthly_inflation+1)/n_days)) - 1 as daily_inflation\n\t--,(POW(daily_inflation+1,n_days)-1) as checking_conversion_daily_to_monthly\nfrom \"houmdw_prod\".\"dbt_staging\".\"stg_monthly_inflation_cl\"\nwhere n_days is not null\norder by date_formatted asc\n)\n\nSELECT * \nFROM table5", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_monthly_daily_inflation_cl\""}, "model.houm.proc_demand_schedules": {"raw_sql": "Select\n    schedules.id        schedule_id \n    , prop_mz.geo_id\n    , (timezone( prop_mz.timezone, schedules.created_at)::timestamp with time zone)::date created_at\n    , (timezone( prop_mz.timezone, schedules.begin_date)::timestamp with time zone)::date begin_date\n    , schedules.prop_id property_id \n    , properties.supply_source\n    , properties.supply_relation\n    , schedules.status\n    , scheduler_scheduletypes.name as schedule_type_name\n    , applicant.email\n    , applicant.id as  applicant_id \nfrom {{ ref('stg_scheduler_schedules') }} AS schedules\n    left join {{ ref('stg_scheduler_scheduletypes') }} AS scheduler_scheduletypes on scheduler_scheduletypes.id  = schedules.schedule_type_id\n    left join {{ ref('stg_scheduler_schedulehasapplicant') }} AS scheduler_schedulehasapplicant  on scheduler_schedulehasapplicant.schedule_id     = schedules.id \n    left join {{ ref('stg_arriendoasegurado_applicant') }} AS applicant on applicant.id = scheduler_schedulehasapplicant.applicant_id\n    left join {{ ref('proc_properties_mz') }} AS prop_mz  on prop_mz.property_id = schedules.prop_id \n    left join {{ ref('proc_properties') }} as properties on properties.id = schedules.prop_id\nwhere scheduler_scheduletypes.name in ('Visit','SalesVisit')", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.stg_scheduler_schedules", "model.houm.stg_scheduler_scheduletypes", "model.houm.stg_scheduler_schedulehasapplicant", "model.houm.stg_arriendoasegurado_applicant", "model.houm.proc_properties_mz", "model.houm.proc_properties"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "demand"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "demand", "proc_demand_schedules"], "unique_id": "model.houm.proc_demand_schedules", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "processing/demand/proc_demand_schedules.sql", "original_file_path": "models/processing/demand/proc_demand_schedules.sql", "name": "proc_demand_schedules", "alias": "proc_demand_schedules", "checksum": {"name": "sha256", "checksum": "78dce3005f0d1e577736c6bf77d7458b8a062c210b9da29cb80aacf9a9316627"}, "tags": ["dw", "processing", "demand"], "refs": [["stg_scheduler_schedules"], ["stg_scheduler_scheduletypes"], ["stg_scheduler_schedulehasapplicant"], ["stg_arriendoasegurado_applicant"], ["proc_properties_mz"], ["proc_properties"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/demand/proc_demand_schedules.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "materialized": "table", "tags": ["dw", "processing", "demand"]}, "created_at": 1654784475.540569, "compiled_sql": "Select\n    schedules.id        schedule_id \n    , prop_mz.geo_id\n    , (timezone( prop_mz.timezone, schedules.created_at)::timestamp with time zone)::date created_at\n    , (timezone( prop_mz.timezone, schedules.begin_date)::timestamp with time zone)::date begin_date\n    , schedules.prop_id property_id \n    , properties.supply_source\n    , properties.supply_relation\n    , schedules.status\n    , scheduler_scheduletypes.name as schedule_type_name\n    , applicant.email\n    , applicant.id as  applicant_id \nfrom \"houmdw_prod\".\"dbt_staging\".\"stg_scheduler_schedules\" AS schedules\n    left join \"houmdw_prod\".\"dbt_staging\".\"stg_scheduler_scheduletypes\" AS scheduler_scheduletypes on scheduler_scheduletypes.id  = schedules.schedule_type_id\n    left join \"houmdw_prod\".\"dbt_staging\".\"stg_scheduler_schedulehasapplicant\" AS scheduler_schedulehasapplicant  on scheduler_schedulehasapplicant.schedule_id     = schedules.id \n    left join \"houmdw_prod\".\"dbt_staging\".\"stg_arriendoasegurado_applicant\" AS applicant on applicant.id = scheduler_schedulehasapplicant.applicant_id\n    left join \"houmdw_prod\".\"dbt_processing\".\"proc_properties_mz\" AS prop_mz  on prop_mz.property_id = schedules.prop_id \n    left join \"houmdw_prod\".\"dbt_processing\".\"proc_properties\" as properties on properties.id = schedules.prop_id\nwhere scheduler_scheduletypes.name in ('Visit','SalesVisit')", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_demand_schedules\""}, "model.houm.proc_tmp_demand_schedules_cleaned": {"raw_sql": "{{ config(materialized='table') }}\n\nselect\n    *\nfrom {{ref('proc_tmp_demand_schedules')}} a\nwhere cancel_reason != '% test%' and schedule_type_name not like 'Manual%' and schedule_type_name not like 'Block%' and schedule_type_name not like 'Keys%'\n and (email not like '%test.test' or email not like '%test.com' or applicant_id is null)\n order by 3 desc", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_tmp_demand_schedules"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "demand"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "demand", "proc_tmp_demand_schedules_cleaned"], "unique_id": "model.houm.proc_tmp_demand_schedules_cleaned", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "processing/demand/proc_tmp_demand_schedules_cleaned.sql", "original_file_path": "models/processing/demand/proc_tmp_demand_schedules_cleaned.sql", "name": "proc_tmp_demand_schedules_cleaned", "alias": "proc_tmp_demand_schedules_cleaned", "checksum": {"name": "sha256", "checksum": "2a0842d0021619d7a42a90f43a48f379214bebba207841bb516af264a202f4f2"}, "tags": ["dw", "processing", "demand"], "refs": [["proc_tmp_demand_schedules"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/demand/proc_tmp_demand_schedules_cleaned.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "materialized": "table", "tags": ["dw", "processing", "demand"]}, "created_at": 1654784475.542442, "compiled_sql": "\n\nselect\n    *\nfrom \"houmdw_prod\".\"dbt_processing\".\"proc_tmp_demand_schedules\" a\nwhere cancel_reason != '% test%' and schedule_type_name not like 'Manual%' and schedule_type_name not like 'Block%' and schedule_type_name not like 'Keys%'\n and (email not like '%test.test' or email not like '%test.com' or applicant_id is null)\n order by 3 desc", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_tmp_demand_schedules_cleaned\""}, "model.houm.proc_tmp_demand_schedules": {"raw_sql": "{{ config(materialized='table') }}\n\nselect\n    a.id as schedule_id,\n    a.prop_id as property_id,\n    a.created_at,\n    a.begin_date,\n    timezone(e.timezone,timezone('UTC',a.created_at)) as local_created_at,\n    timezone(e.timezone,timezone('UTC',a.begin_date)) as local_begin_date,\n    b.name as schedule_type_name,\n    case \n        when lower(b.name) like 'salesv%' then 'Visit'\n        when lower(b.name) like 'salesp%' then 'Photo'\n        else b.name\n    end as schedule_name,\n    a.status,\n    case when lower(b.name) \n            like '%sales%' then 'Sales'\n            else 'Rentals' \n        end as business,\n    a.cancel_reason,\n    c.applicant_id,\n    d.email,\n    e.country,\n    e.City_Houm as city,\n    e.supply_source,\n    e.supply_relation\nfrom {{ref('stg_scheduler_schedules')}} a\nleft join {{ref('stg_scheduler_scheduletypes')}} b on b.id = a.schedule_type_id\nleft join {{ref('stg_scheduler_schedulehasapplicant')}} c on c.schedule_id = a.id\nleft join {{ref('stg_arriendoasegurado_applicant')}} d on c.applicant_id = d.id\nleft join {{ref('proc_tmp_supply_properties_macrozone')}} e on e.property_id = a.prop_id", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.stg_scheduler_schedules", "model.houm.stg_scheduler_scheduletypes", "model.houm.stg_scheduler_schedulehasapplicant", "model.houm.stg_arriendoasegurado_applicant", "model.houm.proc_tmp_supply_properties_macrozone"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "demand"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "demand", "proc_tmp_demand_schedules"], "unique_id": "model.houm.proc_tmp_demand_schedules", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "processing/demand/proc_tmp_demand_schedules.sql", "original_file_path": "models/processing/demand/proc_tmp_demand_schedules.sql", "name": "proc_tmp_demand_schedules", "alias": "proc_tmp_demand_schedules", "checksum": {"name": "sha256", "checksum": "95385310d64c3439b951d5d6ef78b96f419da5e2a9064423318a550066f9ba12"}, "tags": ["dw", "processing", "demand"], "refs": [["stg_scheduler_schedules"], ["stg_scheduler_scheduletypes"], ["stg_scheduler_schedulehasapplicant"], ["stg_arriendoasegurado_applicant"], ["proc_tmp_supply_properties_macrozone"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/demand/proc_tmp_demand_schedules.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "materialized": "table", "tags": ["dw", "processing", "demand"]}, "created_at": 1654784475.544289, "compiled_sql": "\n\nselect\n    a.id as schedule_id,\n    a.prop_id as property_id,\n    a.created_at,\n    a.begin_date,\n    timezone(e.timezone,timezone('UTC',a.created_at)) as local_created_at,\n    timezone(e.timezone,timezone('UTC',a.begin_date)) as local_begin_date,\n    b.name as schedule_type_name,\n    case \n        when lower(b.name) like 'salesv%' then 'Visit'\n        when lower(b.name) like 'salesp%' then 'Photo'\n        else b.name\n    end as schedule_name,\n    a.status,\n    case when lower(b.name) \n            like '%sales%' then 'Sales'\n            else 'Rentals' \n        end as business,\n    a.cancel_reason,\n    c.applicant_id,\n    d.email,\n    e.country,\n    e.City_Houm as city,\n    e.supply_source,\n    e.supply_relation\nfrom \"houmdw_prod\".\"dbt_staging\".\"stg_scheduler_schedules\" a\nleft join \"houmdw_prod\".\"dbt_staging\".\"stg_scheduler_scheduletypes\" b on b.id = a.schedule_type_id\nleft join \"houmdw_prod\".\"dbt_staging\".\"stg_scheduler_schedulehasapplicant\" c on c.schedule_id = a.id\nleft join \"houmdw_prod\".\"dbt_staging\".\"stg_arriendoasegurado_applicant\" d on c.applicant_id = d.id\nleft join \"houmdw_prod\".\"dbt_processing\".\"proc_tmp_supply_properties_macrozone\" e on e.property_id = a.prop_id", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_tmp_demand_schedules\""}, "model.houm.proc_tmp_demand_tenant_houm_leads": {"raw_sql": "{{ config(materialized='table') }}\n\nwith first_clean as (\nSELECT\n    stg_demand_portalhoum.id houm_applicant_id,\n    stg_demand_portalhoum.property_id as property_id,\n    stg_demand_portalhoum.lead_id,\n    stg_demand_portalhoum.created_at as created_at,\n    'Houm' origin,\n    coalesce(proc_properties_macrozone.geo_id, case left(phone,3)\n                                                    when '+56' then 79\n                                                    when '+57' then 14\n                                                    when '+52' then 19\n                                                    else null end) as geo_id\nfrom {{ref('stg_demand_portalhoum')}} \nLEFT JOIN {{ref('proc_tmp_supply_properties_macrozone')}} proc_properties_macrozone on proc_properties_macrozone.property_id = stg_demand_portalhoum.property_id\nWHERE stg_demand_portalhoum.created_at::date > '2022-03-10')\nselect\n\tfirst_clean.houm_applicant_id,\n\tfirst_clean.property_id,\n\tfirst_clean.lead_id,\n\tfirst_clean.created_at,\n\ttimezone(proc_tmp_supply_cities.timezone, timezone('UTC',first_clean.created_at)) as local_created_at,\n\tfirst_clean.origin,\n\tfirst_clean.geo_id\nfrom first_clean\nleft join {{ref('proc_tmp_supply_cities')}} on proc_tmp_supply_cities.geo_id = first_clean.geo_id", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.stg_demand_portalhoum", "model.houm.proc_tmp_supply_properties_macrozone", "model.houm.proc_tmp_supply_cities"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "demand"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "demand", "proc_tmp_demand_tenant_houm_leads"], "unique_id": "model.houm.proc_tmp_demand_tenant_houm_leads", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "processing/demand/proc_tmp_demand_tenant_houm_leads.sql", "original_file_path": "models/processing/demand/proc_tmp_demand_tenant_houm_leads.sql", "name": "proc_tmp_demand_tenant_houm_leads", "alias": "proc_tmp_demand_tenant_houm_leads", "checksum": {"name": "sha256", "checksum": "2ab21abec14d11a5aadb8f6632418f170f9be4ffd1ae24c120260d263dfb4911"}, "tags": ["dw", "processing", "demand"], "refs": [["stg_demand_portalhoum"], ["proc_tmp_supply_properties_macrozone"], ["proc_tmp_supply_cities"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/demand/proc_tmp_demand_tenant_houm_leads.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "materialized": "table", "tags": ["dw", "processing", "demand"]}, "created_at": 1654784475.546102, "compiled_sql": "\n\nwith first_clean as (\nSELECT\n    stg_demand_portalhoum.id houm_applicant_id,\n    stg_demand_portalhoum.property_id as property_id,\n    stg_demand_portalhoum.lead_id,\n    stg_demand_portalhoum.created_at as created_at,\n    'Houm' origin,\n    coalesce(proc_properties_macrozone.geo_id, case left(phone,3)\n                                                    when '+56' then 79\n                                                    when '+57' then 14\n                                                    when '+52' then 19\n                                                    else null end) as geo_id\nfrom \"houmdw_prod\".\"dbt_staging\".\"stg_demand_portalhoum\" \nLEFT JOIN \"houmdw_prod\".\"dbt_processing\".\"proc_tmp_supply_properties_macrozone\" proc_properties_macrozone on proc_properties_macrozone.property_id = stg_demand_portalhoum.property_id\nWHERE stg_demand_portalhoum.created_at::date > '2022-03-10')\nselect\n\tfirst_clean.houm_applicant_id,\n\tfirst_clean.property_id,\n\tfirst_clean.lead_id,\n\tfirst_clean.created_at,\n\ttimezone(proc_tmp_supply_cities.timezone, timezone('UTC',first_clean.created_at)) as local_created_at,\n\tfirst_clean.origin,\n\tfirst_clean.geo_id\nfrom first_clean\nleft join \"houmdw_prod\".\"dbt_processing\".\"proc_tmp_supply_cities\" on proc_tmp_supply_cities.geo_id = first_clean.geo_id", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_tmp_demand_tenant_houm_leads\""}, "model.houm.proc_demand_reservations": {"raw_sql": "with payments_cl as (\nselect \n    (timezone( prop_mz.timezone, a.date::date)::timestamp with time zone)::date thedate\n    , prop_mz.geo_id \n    , _id reservation_id -- 'CL-' || _id reservation_id\n    , status \nfrom {{ ref('stg_payments_cl_db_movements') }} a \nleft join {{ ref('proc_properties_mz') }} prop_mz on prop_mz.property_id = a.property_id\nwhere true and concept='RESERVATION' and type = 'INCOME' and status in ('PAID','REFUNDED') \n)\n, payments_co as (\nselect \n    (timezone( prop_mz.timezone, a.date)::timestamp with time zone)::date thedate\n    , prop_mz.geo_id \n    , _id reservation_id --'CO-' || _id reservation_id\n    , status \nfrom {{ ref('stg_payments_co_db_movements') }} a \nleft join {{ ref('proc_properties_mz') }} prop_mz on prop_mz.property_id = a.property_id\nwhere true and concept='RESERVATION' and type = 'INCOME' and status in ('PAID','REFUNDED') \n)\n, payments_mx as (\nselect \n    (timezone( prop_mz.timezone, a.date)::timestamp with time zone)::date thedate\n    , prop_mz.geo_id \n    , _id reservation_id --'MX - ' || _id reservation_id\n    , status \nfrom {{ ref('stg_payments_mx_db_movements') }}  a \nleft join {{ ref('proc_properties_mz') }} prop_mz on prop_mz.property_id = a.property_id\nwhere true and concept='RESERVATION' and type = 'INCOME' and status in ('PAID','REFUNDED') \n)\n\nselect * \nfrom payments_cl\nunion all \nselect * \nfrom payments_co\nunion all \nselect * \nfrom payments_mx", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.stg_payments_cl_db_movements", "model.houm.proc_properties_mz", "model.houm.stg_payments_co_db_movements", "model.houm.proc_properties_mz", "model.houm.stg_payments_mx_db_movements", "model.houm.proc_properties_mz"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "demand"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "demand", "proc_demand_reservations"], "unique_id": "model.houm.proc_demand_reservations", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "processing/demand/proc_demand_reservations.sql", "original_file_path": "models/processing/demand/proc_demand_reservations.sql", "name": "proc_demand_reservations", "alias": "proc_demand_reservations", "checksum": {"name": "sha256", "checksum": "b331cc416b0fff81f5a8b6e2ac8777fcd7796e6300b0e61fceef930c75b2efef"}, "tags": ["dw", "processing", "demand"], "refs": [["stg_payments_cl_db_movements"], ["proc_properties_mz"], ["stg_payments_co_db_movements"], ["proc_properties_mz"], ["stg_payments_mx_db_movements"], ["proc_properties_mz"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/demand/proc_demand_reservations.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "materialized": "table", "tags": ["dw", "processing", "demand"]}, "created_at": 1654784475.547799, "compiled_sql": "with payments_cl as (\nselect \n    (timezone( prop_mz.timezone, a.date::date)::timestamp with time zone)::date thedate\n    , prop_mz.geo_id \n    , _id reservation_id -- 'CL-' || _id reservation_id\n    , status \nfrom \"houmdw_prod\".\"dbt_staging\".\"stg_payments_cl_db_movements\" a \nleft join \"houmdw_prod\".\"dbt_processing\".\"proc_properties_mz\" prop_mz on prop_mz.property_id = a.property_id\nwhere true and concept='RESERVATION' and type = 'INCOME' and status in ('PAID','REFUNDED') \n)\n, payments_co as (\nselect \n    (timezone( prop_mz.timezone, a.date)::timestamp with time zone)::date thedate\n    , prop_mz.geo_id \n    , _id reservation_id --'CO-' || _id reservation_id\n    , status \nfrom \"houmdw_prod\".\"dbt_staging\".\"stg_payments_co_db_movements\" a \nleft join \"houmdw_prod\".\"dbt_processing\".\"proc_properties_mz\" prop_mz on prop_mz.property_id = a.property_id\nwhere true and concept='RESERVATION' and type = 'INCOME' and status in ('PAID','REFUNDED') \n)\n, payments_mx as (\nselect \n    (timezone( prop_mz.timezone, a.date)::timestamp with time zone)::date thedate\n    , prop_mz.geo_id \n    , _id reservation_id --'MX - ' || _id reservation_id\n    , status \nfrom \"houmdw_prod\".\"dbt_staging\".\"stg_payments_mx_db_movements\"  a \nleft join \"houmdw_prod\".\"dbt_processing\".\"proc_properties_mz\" prop_mz on prop_mz.property_id = a.property_id\nwhere true and concept='RESERVATION' and type = 'INCOME' and status in ('PAID','REFUNDED') \n)\n\nselect * \nfrom payments_cl\nunion all \nselect * \nfrom payments_co\nunion all \nselect * \nfrom payments_mx", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_demand_reservations\""}, "model.houm.proc_tmp_demand_tenant_pa_leads": {"raw_sql": "{{ config(materialized='table') }}\n\nSELECT  \n    stg_demand_portalapplicant.id as portal_applicant_id,\n    stg_demand_portalapplicant.property_id as property_id,\n    stg_demand_portalapplicant.lead_id,\n    stg_demand_portalapplicant.created_at as created_at,\n    coalesce((timezone(proc_properties_macrozone.timezone,timezone('UTC',stg_demand_portalapplicant.created_at))),stg_demand_portalapplicant.created_at) as local_created_at,\n    case \n        when length(stg_demand_portalapplicant.origin) < 1 then null\n        else stg_demand_portalapplicant.origin\n    end as origin,\n    coalesce(proc_properties_macrozone.geo_id,case left(phone,3)\n                                                    when '+56' then 79\n                                                    when '+57' then 14\n                                                    when '+52' then 19\n                                                    else null end) as geo_id\n    -- Falta agregar logica de cuando no tienen prop_id, por ejemplo incluir el pais en funcion al tipo de telefono.\n    -- No es necesario para las properties, es necesaria para las properties sin macrozona\n    -- Ademas eso deberia estar en un Test que cada portalapplicant tenga un Prop id\nFROM {{ref('stg_demand_portalapplicant')}}\nLEFT JOIN {{ref('proc_tmp_supply_properties_macrozone')}} proc_properties_macrozone on proc_properties_macrozone.property_id = stg_demand_portalapplicant.property_id\nWHERE stg_demand_portalapplicant.created_at::date > '2022-03-10'", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.stg_demand_portalapplicant", "model.houm.proc_tmp_supply_properties_macrozone"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "demand"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "demand", "proc_tmp_demand_tenant_pa_leads"], "unique_id": "model.houm.proc_tmp_demand_tenant_pa_leads", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "processing/demand/proc_tmp_demand_tenant_pa_leads.sql", "original_file_path": "models/processing/demand/proc_tmp_demand_tenant_pa_leads.sql", "name": "proc_tmp_demand_tenant_pa_leads", "alias": "proc_tmp_demand_tenant_pa_leads", "checksum": {"name": "sha256", "checksum": "35dde35bc41bb6bdf0a5feac3976baa26fa00810a58c1abbe922c3bfa48a91af"}, "tags": ["dw", "processing", "demand"], "refs": [["stg_demand_portalapplicant"], ["proc_tmp_supply_properties_macrozone"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/demand/proc_tmp_demand_tenant_pa_leads.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "materialized": "table", "tags": ["dw", "processing", "demand"]}, "created_at": 1654784475.549524, "compiled_sql": "\n\nSELECT  \n    stg_demand_portalapplicant.id as portal_applicant_id,\n    stg_demand_portalapplicant.property_id as property_id,\n    stg_demand_portalapplicant.lead_id,\n    stg_demand_portalapplicant.created_at as created_at,\n    coalesce((timezone(proc_properties_macrozone.timezone,timezone('UTC',stg_demand_portalapplicant.created_at))),stg_demand_portalapplicant.created_at) as local_created_at,\n    case \n        when length(stg_demand_portalapplicant.origin) < 1 then null\n        else stg_demand_portalapplicant.origin\n    end as origin,\n    coalesce(proc_properties_macrozone.geo_id,case left(phone,3)\n                                                    when '+56' then 79\n                                                    when '+57' then 14\n                                                    when '+52' then 19\n                                                    else null end) as geo_id\n    -- Falta agregar logica de cuando no tienen prop_id, por ejemplo incluir el pais en funcion al tipo de telefono.\n    -- No es necesario para las properties, es necesaria para las properties sin macrozona\n    -- Ademas eso deberia estar en un Test que cada portalapplicant tenga un Prop id\nFROM \"houmdw_prod\".\"dbt_staging\".\"stg_demand_portalapplicant\"\nLEFT JOIN \"houmdw_prod\".\"dbt_processing\".\"proc_tmp_supply_properties_macrozone\" proc_properties_macrozone on proc_properties_macrozone.property_id = stg_demand_portalapplicant.property_id\nWHERE stg_demand_portalapplicant.created_at::date > '2022-03-10'", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_tmp_demand_tenant_pa_leads\""}, "model.houm.proc_demand_leads": {"raw_sql": "with rental_properties as (\nselect id as property_id \nfrom {{ ref('proc_properties') }}\nwhere for_rental = True\n)\n\n, demand_leads_clean as (\nselect * \nfrom {{ ref('stg_demand_lead') }} demand_leads\nwhere ( email not like '%test.test' and email not like '%test.com') or email is null \n)\n\nSELECT     'PA -' || demand_portalapplicant.id activity_id \n\t\t\t, lead_id \n            , coalesce((timezone( prop_mz.timezone, demand_portalapplicant.created_at)::timestamp with time zone)::date,demand_portalapplicant.created_at::date) as created_at\n\t        , coalesce(origin, 'Portal No Identificado') origin\n\t\t\t, prop_mz.geo_id \n\t\t\t--Falta agregar logica de cuando no tienen prop_id, por ejemplo incluir el pais en funcion al tipo de telefono.\nFROM {{ ref('stg_demand_portalapplicant') }} demand_portalapplicant\nINNER JOIN demand_leads_clean on demand_leads_clean.id = demand_portalapplicant.lead_id  -- Con inner Eliminar leads Test\nINNER JOIN rental_properties on rental_properties.property_id = demand_portalapplicant.property_id  -- Con el inner join tengo los Lead de rentals ya que esta tabla de properties es solo de Rentals.  \nLEFT JOIN {{ ref('proc_properties_mz') }} prop_mz on prop_mz.property_id = rental_properties.property_id\nWHERE true and ( origin != 'Test' or origin is null) \nUNION ALL \nSELECT      'HOUM -' || demand_portalhoum.id activity_id\n\t\t\t, lead_id\n\t        , coalesce((timezone( prop_mz.timezone, demand_portalhoum.created_at)::timestamp with time zone)::date,demand_portalhoum.created_at::date) as created_at\n\t        , 'Houm' origin\n\t\t\t, prop_mz.geo_id \nFROM {{ ref('stg_demand_portalhoum') }} demand_portalhoum\nINNER JOIN demand_leads_clean on demand_leads_clean.id = demand_portalhoum.lead_id\nLEFT JOIN {{ ref('proc_properties_mz') }} prop_mz on prop_mz.property_id = demand_portalhoum.property_id\nWHERE business_type = 'rentals'", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_properties", "model.houm.stg_demand_lead", "model.houm.stg_demand_portalapplicant", "model.houm.proc_properties_mz", "model.houm.stg_demand_portalhoum", "model.houm.proc_properties_mz"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "demand"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "demand", "proc_demand_leads"], "unique_id": "model.houm.proc_demand_leads", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "processing/demand/proc_demand_leads.sql", "original_file_path": "models/processing/demand/proc_demand_leads.sql", "name": "proc_demand_leads", "alias": "proc_demand_leads", "checksum": {"name": "sha256", "checksum": "b35ade01d97c33897e18f5f7b9d1a63368870fee2536b45e2146d676a04841b8"}, "tags": ["dw", "processing", "demand"], "refs": [["proc_properties"], ["stg_demand_lead"], ["stg_demand_portalapplicant"], ["proc_properties_mz"], ["stg_demand_portalhoum"], ["proc_properties_mz"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/demand/proc_demand_leads.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "materialized": "table", "tags": ["dw", "processing", "demand"]}, "created_at": 1654784475.551489, "compiled_sql": "with rental_properties as (\nselect id as property_id \nfrom \"houmdw_prod\".\"dbt_processing\".\"proc_properties\"\nwhere for_rental = True\n)\n\n, demand_leads_clean as (\nselect * \nfrom \"houmdw_prod\".\"dbt_staging\".\"stg_demand_lead\" demand_leads\nwhere ( email not like '%test.test' and email not like '%test.com') or email is null \n)\n\nSELECT     'PA -' || demand_portalapplicant.id activity_id \n\t\t\t, lead_id \n            , coalesce((timezone( prop_mz.timezone, demand_portalapplicant.created_at)::timestamp with time zone)::date,demand_portalapplicant.created_at::date) as created_at\n\t        , coalesce(origin, 'Portal No Identificado') origin\n\t\t\t, prop_mz.geo_id \n\t\t\t--Falta agregar logica de cuando no tienen prop_id, por ejemplo incluir el pais en funcion al tipo de telefono.\nFROM \"houmdw_prod\".\"dbt_staging\".\"stg_demand_portalapplicant\" demand_portalapplicant\nINNER JOIN demand_leads_clean on demand_leads_clean.id = demand_portalapplicant.lead_id  -- Con inner Eliminar leads Test\nINNER JOIN rental_properties on rental_properties.property_id = demand_portalapplicant.property_id  -- Con el inner join tengo los Lead de rentals ya que esta tabla de properties es solo de Rentals.  \nLEFT JOIN \"houmdw_prod\".\"dbt_processing\".\"proc_properties_mz\" prop_mz on prop_mz.property_id = rental_properties.property_id\nWHERE true and ( origin != 'Test' or origin is null) \nUNION ALL \nSELECT      'HOUM -' || demand_portalhoum.id activity_id\n\t\t\t, lead_id\n\t        , coalesce((timezone( prop_mz.timezone, demand_portalhoum.created_at)::timestamp with time zone)::date,demand_portalhoum.created_at::date) as created_at\n\t        , 'Houm' origin\n\t\t\t, prop_mz.geo_id \nFROM \"houmdw_prod\".\"dbt_staging\".\"stg_demand_portalhoum\" demand_portalhoum\nINNER JOIN demand_leads_clean on demand_leads_clean.id = demand_portalhoum.lead_id\nLEFT JOIN \"houmdw_prod\".\"dbt_processing\".\"proc_properties_mz\" prop_mz on prop_mz.property_id = demand_portalhoum.property_id\nWHERE business_type = 'rentals'", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_demand_leads\""}, "model.houm.proc_demand_buyer_leads": {"raw_sql": "with sales_properties as (\nselect \n    id as property_id\n    , supply_source\n    , supply_relation\n    ,country\n    ,for_sale\nfrom {{ ref('proc_properties') }}\nwhere for_sale\n)\n\nSelect     \n    bi_persons.id person_id\n    , bi_persons.email\n    , bi_deals.id deal_id\n    , bi_deals.add_time::date --as raw_add_time\n    --,(timezone( prop_mz.timezone, bi_deals.add_time)::timestamp with time zone)::date add_time\n    , case  when bi_deals.country_formated like '%_hile%' then 'Chile' \n            when bi_deals.country_formated like '%_olombia%' then 'Colombia'\n            when bi_deals.country_formated like '%__xico%' then 'Mexico'  \n        else sales_properties.country end country\n    , case  when geo_id is not null then geo_id::int\n            when bi_deals.country_formated like '%_hile%' then  79::int\n            when bi_deals.country_formated like '%_olombia%' then  14::int\n            when bi_deals.country_formated like '%__xico%' then 19::int\n        else null end geo_id\n    , bi_deals.funnel\n    , bi_deals.fecha_calificacion::date\n    , bi_deals.calificacion_buyer as qualification --este campo corresponde a buyer-demand\n    --, bi_deals.qualification --este campo corresponde exclusivamente a landlords.\n    , bi_deals.property_id\n    , sales_properties.supply_source\n    , sales_properties.supply_relation\n    , bi_deals.lost_reason \n    --, case when bi_deals.business in ('2. Sales','4.1 Rental/Sales Alianzas', '5. Sales Subsidio','5.1 Sales B2B' ) \n    --,     or ((bi_deals.business is null OR bi_deals.business = '99. No Identificado') and sales_properties.for_sale ) \n    --,     then true else false end for_sale\nfrom {{ ref('stg_bi_deals') }} as bi_deals\nleft join \n    {{ ref('stg_bi_persons') }} as bi_persons\non bi_deals.person_id = bi_persons.id\nleft join \n    sales_properties \non sales_properties.property_id = bi_deals.property_id \nleft join \n    {{ ref('proc_properties_mz') }} prop_mz \non prop_mz.property_id = sales_properties.property_id \nwhere true  \n    and funnel = '2. Demand' \n    and bi_deals.business in ('2. Sales','4.1 Rental/Sales Alianzas', '5. Sales Subsidio','5.1 Sales B2B' )", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.houm.proc_properties", "model.houm.stg_bi_deals", "model.houm.stg_bi_persons", "model.houm.proc_properties_mz"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "demand"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "demand", "proc_demand_buyer_leads"], "unique_id": "model.houm.proc_demand_buyer_leads", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "processing/demand/proc_demand_buyer_leads.sql", "original_file_path": "models/processing/demand/proc_demand_buyer_leads.sql", "name": "proc_demand_buyer_leads", "alias": "proc_demand_buyer_leads", "checksum": {"name": "sha256", "checksum": "508c6c83059a3517336577f2a774a466ff20a4afe8ac3d99fbe4572736fbe6a6"}, "tags": ["dw", "processing", "demand"], "refs": [["proc_properties"], ["stg_bi_deals"], ["stg_bi_persons"], ["proc_properties_mz"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/demand/proc_demand_buyer_leads.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "materialized": "table", "tags": ["dw", "processing", "demand"]}, "created_at": 1654784475.55332, "compiled_sql": "with sales_properties as (\nselect \n    id as property_id\n    , supply_source\n    , supply_relation\n    ,country\n    ,for_sale\nfrom \"houmdw_prod\".\"dbt_processing\".\"proc_properties\"\nwhere for_sale\n)\n\nSelect     \n    bi_persons.id person_id\n    , bi_persons.email\n    , bi_deals.id deal_id\n    , bi_deals.add_time::date --as raw_add_time\n    --,(timezone( prop_mz.timezone, bi_deals.add_time)::timestamp with time zone)::date add_time\n    , case  when bi_deals.country_formated like '%_hile%' then 'Chile' \n            when bi_deals.country_formated like '%_olombia%' then 'Colombia'\n            when bi_deals.country_formated like '%__xico%' then 'Mexico'  \n        else sales_properties.country end country\n    , case  when geo_id is not null then geo_id::int\n            when bi_deals.country_formated like '%_hile%' then  79::int\n            when bi_deals.country_formated like '%_olombia%' then  14::int\n            when bi_deals.country_formated like '%__xico%' then 19::int\n        else null end geo_id\n    , bi_deals.funnel\n    , bi_deals.fecha_calificacion::date\n    , bi_deals.calificacion_buyer as qualification --este campo corresponde a buyer-demand\n    --, bi_deals.qualification --este campo corresponde exclusivamente a landlords.\n    , bi_deals.property_id\n    , sales_properties.supply_source\n    , sales_properties.supply_relation\n    , bi_deals.lost_reason \n    --, case when bi_deals.business in ('2. Sales','4.1 Rental/Sales Alianzas', '5. Sales Subsidio','5.1 Sales B2B' ) \n    --,     or ((bi_deals.business is null OR bi_deals.business = '99. No Identificado') and sales_properties.for_sale ) \n    --,     then true else false end for_sale\nfrom \"houmdw_prod\".\"dbt_staging\".\"stg_bi_deals\" as bi_deals\nleft join \n    \"houmdw_prod\".\"dbt_staging\".\"stg_bi_persons\" as bi_persons\non bi_deals.person_id = bi_persons.id\nleft join \n    sales_properties \non sales_properties.property_id = bi_deals.property_id \nleft join \n    \"houmdw_prod\".\"dbt_processing\".\"proc_properties_mz\" prop_mz \non prop_mz.property_id = sales_properties.property_id \nwhere true  \n    and funnel = '2. Demand' \n    and bi_deals.business in ('2. Sales','4.1 Rental/Sales Alianzas', '5. Sales Subsidio','5.1 Sales B2B' )", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_demand_buyer_leads\""}, "model.houm.processing_phase": {"raw_sql": "{{ config(materialized='incremental') }}\n\n\nselect 3 as job_phase_id\n    , 'processing' as phase_desc\n    , '{{ run_started_at.astimezone(modules.pytz.timezone(\"America/Santiago\")) }}' as processed_time", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": "dbt_audit", "database": null, "tags": [], "meta": {}, "materialized": "incremental", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_audit", "fqn": ["houm", "audit", "processing_phase"], "unique_id": "model.houm.processing_phase", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "audit/processing_phase.sql", "original_file_path": "models/audit/processing_phase.sql", "name": "processing_phase", "alias": "processing_phase", "checksum": {"name": "sha256", "checksum": "ae91d6d2a5f8b288784499471395a79ff569788ea64c61b1f6cac581821fee14"}, "tags": [], "refs": [], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/audit/processing_phase.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_audit", "materialized": "incremental"}, "created_at": 1654784475.554991, "compiled_sql": "\n\n\nselect 3 as job_phase_id\n    , 'processing' as phase_desc\n    , '2022-06-13 11:01:47.183332-04:00' as processed_time", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_audit\".\"processing_phase\""}, "model.houm.staging_phase": {"raw_sql": "{{ config(materialized='incremental') }}\n\n\nselect 2 as job_phase_id\n    , 'staging' as phase_desc\n    , '{{ run_started_at.astimezone(modules.pytz.timezone(\"America/Santiago\")) }}' as processed_time", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": "dbt_audit", "database": null, "tags": [], "meta": {}, "materialized": "incremental", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_audit", "fqn": ["houm", "audit", "staging_phase"], "unique_id": "model.houm.staging_phase", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "audit/staging_phase.sql", "original_file_path": "models/audit/staging_phase.sql", "name": "staging_phase", "alias": "staging_phase", "checksum": {"name": "sha256", "checksum": "77af671f108a3b96b2d55e2281247576de2ff93d0d7199f5c33670b8f0bad2a8"}, "tags": [], "refs": [], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/audit/staging_phase.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_audit", "materialized": "incremental"}, "created_at": 1654784475.5588841, "compiled_sql": "\n\n\nselect 2 as job_phase_id\n    , 'staging' as phase_desc\n    , '2022-06-13 11:01:47.183332-04:00' as processed_time", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_audit\".\"staging_phase\""}, "model.houm.freshness_phase": {"raw_sql": "{{ config(materialized='incremental') }}\n\n\nselect 1 as job_phase_id\n    , 'freshness' as phase_desc\n    , '{{ run_started_at.astimezone(modules.pytz.timezone(\"America/Santiago\")) }}' as processed_time", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": "dbt_audit", "database": null, "tags": [], "meta": {}, "materialized": "incremental", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_audit", "fqn": ["houm", "audit", "freshness_phase"], "unique_id": "model.houm.freshness_phase", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "audit/freshness_phase.sql", "original_file_path": "models/audit/freshness_phase.sql", "name": "freshness_phase", "alias": "freshness_phase", "checksum": {"name": "sha256", "checksum": "738568135da8a2e72a4fe5994a7d47264532e0b3c662efd6ebbe3394980b1288"}, "tags": [], "refs": [], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/audit/freshness_phase.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_audit", "materialized": "incremental"}, "created_at": 1654784475.5622668, "compiled_sql": "\n\n\nselect 1 as job_phase_id\n    , 'freshness' as phase_desc\n    , '2022-06-13 11:01:47.183332-04:00' as processed_time", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_audit\".\"freshness_phase\""}, "model.houm.dwh_phase": {"raw_sql": "{{ config(materialized='incremental') }}\n\n\nselect 4 as job_phase_id\n    , 'dw' as phase_desc\n    , '{{ run_started_at.astimezone(modules.pytz.timezone(\"America/Santiago\")) }}' as processed_time", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": "dbt_audit", "database": null, "tags": [], "meta": {}, "materialized": "incremental", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_audit", "fqn": ["houm", "audit", "dwh_phase"], "unique_id": "model.houm.dwh_phase", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "audit/dwh_phase.sql", "original_file_path": "models/audit/dwh_phase.sql", "name": "dwh_phase", "alias": "dwh_phase", "checksum": {"name": "sha256", "checksum": "05c0f61b5e87deff2708d3aad3b3c55c6fad3cbd55513cd8f435c886a764164c"}, "tags": [], "refs": [], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/audit/dwh_phase.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_audit", "materialized": "incremental"}, "created_at": 1654784475.565718, "compiled_sql": "\n\n\nselect 4 as job_phase_id\n    , 'dw' as phase_desc\n    , '2022-06-13 11:01:47.183332-04:00' as processed_time", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_audit\".\"dwh_phase\""}, "test.houm.assert_properties_rent_prices_chile": {"raw_sql": "-- Test if there are incorrect rent values\nselect\n    valor\nfrom {{ ref('stg_propertydetails' )}}  propertiesdetails\ninner join {{ref('stg_properties')}} properties on properties.id = propertiesdetails.property_id\nwhere valor >= 6000000 and propertiesdetails.status in ('published','republished') and properties.for_rental and  properties.country='Chile'", "compiled": true, "resource_type": "test", "depends_on": {"macros": [], "nodes": ["model.houm.stg_propertydetails", "model.houm.stg_properties"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "houmdw_prod", "schema": "dbt_test__audit", "fqn": ["houm", "staging", "assert_properties_rent_prices_chile"], "unique_id": "test.houm.assert_properties_rent_prices_chile", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "staging/assert_properties_rent_prices_chile.sql", "original_file_path": "tests/staging/assert_properties_rent_prices_chile.sql", "name": "assert_properties_rent_prices_chile", "alias": "assert_properties_rent_prices_chile", "checksum": {"name": "sha256", "checksum": "4ec2e33ef03374d3793a93f32671a95972e1c84f375e743e9b7a4dcfa981e093"}, "tags": [], "refs": [["stg_propertydetails"], ["stg_properties"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/tests/staging/assert_properties_rent_prices_chile.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1654784475.575965, "compiled_sql": "-- Test if there are incorrect rent values\nselect\n    valor\nfrom \"houmdw_prod\".\"dbt_staging\".\"stg_propertydetails\"  propertiesdetails\ninner join \"houmdw_prod\".\"dbt_staging\".\"stg_properties\" properties on properties.id = propertiesdetails.property_id\nwhere valor >= 6000000 and propertiesdetails.status in ('published','republished') and properties.for_rental and  properties.country='Chile'", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null}, "operation.houm.houm-on-run-end-0": {"raw_sql": "grant usage on schema analytics to metabase", "compiled": true, "resource_type": "operation", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "public", "fqn": ["houm", "hooks", "houm-on-run-end-0"], "unique_id": "operation.houm.houm-on-run-end-0", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "hooks/houm-on-run-end-0.sql", "original_file_path": "./dbt_project.yml", "name": "houm-on-run-end-0", "alias": "houm-on-run-end-0", "checksum": {"name": "sha256", "checksum": "ab76d6b65fa326f421445aa0d11642975186d5c13eaf00492b8e9c9607f58896"}, "tags": ["on-run-end"], "refs": [], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/./dbt_project.yml/hooks/houm-on-run-end-0.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1654784475.58612, "compiled_sql": "grant usage on schema analytics to metabase", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "index": 0}, "operation.houm.houm-on-run-end-1": {"raw_sql": "grant select on all tables in schema analytics to metabase", "compiled": true, "resource_type": "operation", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "public", "fqn": ["houm", "hooks", "houm-on-run-end-1"], "unique_id": "operation.houm.houm-on-run-end-1", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "hooks/houm-on-run-end-1.sql", "original_file_path": "./dbt_project.yml", "name": "houm-on-run-end-1", "alias": "houm-on-run-end-1", "checksum": {"name": "sha256", "checksum": "ab76d6b65fa326f421445aa0d11642975186d5c13eaf00492b8e9c9607f58896"}, "tags": ["on-run-end"], "refs": [], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/./dbt_project.yml/hooks/houm-on-run-end-1.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1654784475.588085, "compiled_sql": "grant select on all tables in schema analytics to metabase", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "index": 1}, "operation.houm.houm-on-run-end-2": {"raw_sql": "GRANT USAGE ON SCHEMA \"dbt_staging\" TO GROUP houm_analysts", "compiled": true, "resource_type": "operation", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "public", "fqn": ["houm", "hooks", "houm-on-run-end-2"], "unique_id": "operation.houm.houm-on-run-end-2", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "hooks/houm-on-run-end-2.sql", "original_file_path": "./dbt_project.yml", "name": "houm-on-run-end-2", "alias": "houm-on-run-end-2", "checksum": {"name": "sha256", "checksum": "ab76d6b65fa326f421445aa0d11642975186d5c13eaf00492b8e9c9607f58896"}, "tags": ["on-run-end"], "refs": [], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/./dbt_project.yml/hooks/houm-on-run-end-2.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1654784475.5898938, "compiled_sql": "GRANT USAGE ON SCHEMA \"dbt_staging\" TO GROUP houm_analysts", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "index": 2}, "operation.houm.houm-on-run-end-3": {"raw_sql": "GRANT USAGE ON SCHEMA \"dbt_marts\" TO GROUP houm_analysts", "compiled": true, "resource_type": "operation", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "public", "fqn": ["houm", "hooks", "houm-on-run-end-3"], "unique_id": "operation.houm.houm-on-run-end-3", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "hooks/houm-on-run-end-3.sql", "original_file_path": "./dbt_project.yml", "name": "houm-on-run-end-3", "alias": "houm-on-run-end-3", "checksum": {"name": "sha256", "checksum": "ab76d6b65fa326f421445aa0d11642975186d5c13eaf00492b8e9c9607f58896"}, "tags": ["on-run-end"], "refs": [], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/./dbt_project.yml/hooks/houm-on-run-end-3.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1654784475.59282, "compiled_sql": "GRANT USAGE ON SCHEMA \"dbt_marts\" TO GROUP houm_analysts", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "index": 3}, "operation.houm.houm-on-run-end-4": {"raw_sql": "GRANT USAGE ON SCHEMA \"dbt_dims\" TO GROUP houm_analysts", "compiled": true, "resource_type": "operation", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "public", "fqn": ["houm", "hooks", "houm-on-run-end-4"], "unique_id": "operation.houm.houm-on-run-end-4", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "hooks/houm-on-run-end-4.sql", "original_file_path": "./dbt_project.yml", "name": "houm-on-run-end-4", "alias": "houm-on-run-end-4", "checksum": {"name": "sha256", "checksum": "ab76d6b65fa326f421445aa0d11642975186d5c13eaf00492b8e9c9607f58896"}, "tags": ["on-run-end"], "refs": [], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/./dbt_project.yml/hooks/houm-on-run-end-4.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1654784475.5946019, "compiled_sql": "GRANT USAGE ON SCHEMA \"dbt_dims\" TO GROUP houm_analysts", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "index": 4}, "operation.houm.houm-on-run-end-5": {"raw_sql": "GRANT USAGE ON SCHEMA \"dbt_processing\" TO GROUP houm_analysts", "compiled": true, "resource_type": "operation", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "public", "fqn": ["houm", "hooks", "houm-on-run-end-5"], "unique_id": "operation.houm.houm-on-run-end-5", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "hooks/houm-on-run-end-5.sql", "original_file_path": "./dbt_project.yml", "name": "houm-on-run-end-5", "alias": "houm-on-run-end-5", "checksum": {"name": "sha256", "checksum": "ab76d6b65fa326f421445aa0d11642975186d5c13eaf00492b8e9c9607f58896"}, "tags": ["on-run-end"], "refs": [], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/./dbt_project.yml/hooks/houm-on-run-end-5.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1654784475.596384, "compiled_sql": "GRANT USAGE ON SCHEMA \"dbt_processing\" TO GROUP houm_analysts", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "index": 5}, "operation.houm.houm-on-run-end-6": {"raw_sql": "GRANT USAGE ON SCHEMA \"dbt_facts\" TO GROUP houm_analysts", "compiled": true, "resource_type": "operation", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "public", "fqn": ["houm", "hooks", "houm-on-run-end-6"], "unique_id": "operation.houm.houm-on-run-end-6", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "hooks/houm-on-run-end-6.sql", "original_file_path": "./dbt_project.yml", "name": "houm-on-run-end-6", "alias": "houm-on-run-end-6", "checksum": {"name": "sha256", "checksum": "ab76d6b65fa326f421445aa0d11642975186d5c13eaf00492b8e9c9607f58896"}, "tags": ["on-run-end"], "refs": [], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/./dbt_project.yml/hooks/houm-on-run-end-6.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1654784475.598187, "compiled_sql": "GRANT USAGE ON SCHEMA \"dbt_facts\" TO GROUP houm_analysts", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "index": 6}, "operation.houm.houm-on-run-end-7": {"raw_sql": "GRANT SELECT ON ALL TABLES IN SCHEMA \"dbt_staging\" TO GROUP houm_analysts", "compiled": true, "resource_type": "operation", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "public", "fqn": ["houm", "hooks", "houm-on-run-end-7"], "unique_id": "operation.houm.houm-on-run-end-7", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "hooks/houm-on-run-end-7.sql", "original_file_path": "./dbt_project.yml", "name": "houm-on-run-end-7", "alias": "houm-on-run-end-7", "checksum": {"name": "sha256", "checksum": "ab76d6b65fa326f421445aa0d11642975186d5c13eaf00492b8e9c9607f58896"}, "tags": ["on-run-end"], "refs": [], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/./dbt_project.yml/hooks/houm-on-run-end-7.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1654784475.6000068, "compiled_sql": "GRANT SELECT ON ALL TABLES IN SCHEMA \"dbt_staging\" TO GROUP houm_analysts", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "index": 7}, "operation.houm.houm-on-run-end-8": {"raw_sql": "GRANT SELECT ON ALL TABLES IN SCHEMA \"dbt_dims\" TO GROUP houm_analysts", "compiled": true, "resource_type": "operation", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "public", "fqn": ["houm", "hooks", "houm-on-run-end-8"], "unique_id": "operation.houm.houm-on-run-end-8", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "hooks/houm-on-run-end-8.sql", "original_file_path": "./dbt_project.yml", "name": "houm-on-run-end-8", "alias": "houm-on-run-end-8", "checksum": {"name": "sha256", "checksum": "ab76d6b65fa326f421445aa0d11642975186d5c13eaf00492b8e9c9607f58896"}, "tags": ["on-run-end"], "refs": [], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/./dbt_project.yml/hooks/houm-on-run-end-8.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1654784475.601881, "compiled_sql": "GRANT SELECT ON ALL TABLES IN SCHEMA \"dbt_dims\" TO GROUP houm_analysts", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "index": 8}, "operation.houm.houm-on-run-end-9": {"raw_sql": "GRANT SELECT ON ALL TABLES IN SCHEMA \"dbt_marts\" TO GROUP houm_analysts", "compiled": true, "resource_type": "operation", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "public", "fqn": ["houm", "hooks", "houm-on-run-end-9"], "unique_id": "operation.houm.houm-on-run-end-9", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "hooks/houm-on-run-end-9.sql", "original_file_path": "./dbt_project.yml", "name": "houm-on-run-end-9", "alias": "houm-on-run-end-9", "checksum": {"name": "sha256", "checksum": "ab76d6b65fa326f421445aa0d11642975186d5c13eaf00492b8e9c9607f58896"}, "tags": ["on-run-end"], "refs": [], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/./dbt_project.yml/hooks/houm-on-run-end-9.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1654784475.603721, "compiled_sql": "GRANT SELECT ON ALL TABLES IN SCHEMA \"dbt_marts\" TO GROUP houm_analysts", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "index": 9}, "operation.houm.houm-on-run-end-10": {"raw_sql": "GRANT SELECT ON ALL TABLES IN SCHEMA \"dbt_processing\" TO GROUP houm_analysts", "compiled": true, "resource_type": "operation", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "public", "fqn": ["houm", "hooks", "houm-on-run-end-10"], "unique_id": "operation.houm.houm-on-run-end-10", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "hooks/houm-on-run-end-10.sql", "original_file_path": "./dbt_project.yml", "name": "houm-on-run-end-10", "alias": "houm-on-run-end-10", "checksum": {"name": "sha256", "checksum": "ab76d6b65fa326f421445aa0d11642975186d5c13eaf00492b8e9c9607f58896"}, "tags": ["on-run-end"], "refs": [], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/./dbt_project.yml/hooks/houm-on-run-end-10.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1654784475.6055858, "compiled_sql": "GRANT SELECT ON ALL TABLES IN SCHEMA \"dbt_processing\" TO GROUP houm_analysts", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "index": 10}, "operation.houm.houm-on-run-end-11": {"raw_sql": "GRANT SELECT ON ALL TABLES IN SCHEMA \"dbt_facts\" TO GROUP houm_analysts", "compiled": true, "resource_type": "operation", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "public", "fqn": ["houm", "hooks", "houm-on-run-end-11"], "unique_id": "operation.houm.houm-on-run-end-11", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "hooks/houm-on-run-end-11.sql", "original_file_path": "./dbt_project.yml", "name": "houm-on-run-end-11", "alias": "houm-on-run-end-11", "checksum": {"name": "sha256", "checksum": "ab76d6b65fa326f421445aa0d11642975186d5c13eaf00492b8e9c9607f58896"}, "tags": ["on-run-end"], "refs": [], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/./dbt_project.yml/hooks/houm-on-run-end-11.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1654784475.607348, "compiled_sql": "GRANT SELECT ON ALL TABLES IN SCHEMA \"dbt_facts\" TO GROUP houm_analysts", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "index": 11}, "operation.houm.houm-on-run-end-12": {"raw_sql": "GRANT USAGE ON SCHEMA \"dbt_staging\" TO GROUP data_engineering", "compiled": true, "resource_type": "operation", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "public", "fqn": ["houm", "hooks", "houm-on-run-end-12"], "unique_id": "operation.houm.houm-on-run-end-12", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "hooks/houm-on-run-end-12.sql", "original_file_path": "./dbt_project.yml", "name": "houm-on-run-end-12", "alias": "houm-on-run-end-12", "checksum": {"name": "sha256", "checksum": "ab76d6b65fa326f421445aa0d11642975186d5c13eaf00492b8e9c9607f58896"}, "tags": ["on-run-end"], "refs": [], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/./dbt_project.yml/hooks/houm-on-run-end-12.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1654784475.6091468, "compiled_sql": "GRANT USAGE ON SCHEMA \"dbt_staging\" TO GROUP data_engineering", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "index": 12}, "operation.houm.houm-on-run-end-13": {"raw_sql": "GRANT USAGE ON SCHEMA \"dbt_marts\" TO GROUP data_engineering", "compiled": true, "resource_type": "operation", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "public", "fqn": ["houm", "hooks", "houm-on-run-end-13"], "unique_id": "operation.houm.houm-on-run-end-13", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "hooks/houm-on-run-end-13.sql", "original_file_path": "./dbt_project.yml", "name": "houm-on-run-end-13", "alias": "houm-on-run-end-13", "checksum": {"name": "sha256", "checksum": "ab76d6b65fa326f421445aa0d11642975186d5c13eaf00492b8e9c9607f58896"}, "tags": ["on-run-end"], "refs": [], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/./dbt_project.yml/hooks/houm-on-run-end-13.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1654784475.61094, "compiled_sql": "GRANT USAGE ON SCHEMA \"dbt_marts\" TO GROUP data_engineering", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "index": 13}, "operation.houm.houm-on-run-end-14": {"raw_sql": "GRANT USAGE ON SCHEMA \"dbt_dims\" TO GROUP data_engineering", "compiled": true, "resource_type": "operation", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "public", "fqn": ["houm", "hooks", "houm-on-run-end-14"], "unique_id": "operation.houm.houm-on-run-end-14", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "hooks/houm-on-run-end-14.sql", "original_file_path": "./dbt_project.yml", "name": "houm-on-run-end-14", "alias": "houm-on-run-end-14", "checksum": {"name": "sha256", "checksum": "ab76d6b65fa326f421445aa0d11642975186d5c13eaf00492b8e9c9607f58896"}, "tags": ["on-run-end"], "refs": [], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/./dbt_project.yml/hooks/houm-on-run-end-14.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1654784475.612732, "compiled_sql": "GRANT USAGE ON SCHEMA \"dbt_dims\" TO GROUP data_engineering", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "index": 14}, "operation.houm.houm-on-run-end-15": {"raw_sql": "GRANT USAGE ON SCHEMA \"dbt_processing\" TO GROUP data_engineering", "compiled": true, "resource_type": "operation", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "public", "fqn": ["houm", "hooks", "houm-on-run-end-15"], "unique_id": "operation.houm.houm-on-run-end-15", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "hooks/houm-on-run-end-15.sql", "original_file_path": "./dbt_project.yml", "name": "houm-on-run-end-15", "alias": "houm-on-run-end-15", "checksum": {"name": "sha256", "checksum": "ab76d6b65fa326f421445aa0d11642975186d5c13eaf00492b8e9c9607f58896"}, "tags": ["on-run-end"], "refs": [], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/./dbt_project.yml/hooks/houm-on-run-end-15.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1654784475.614521, "compiled_sql": "GRANT USAGE ON SCHEMA \"dbt_processing\" TO GROUP data_engineering", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "index": 15}, "operation.houm.houm-on-run-end-16": {"raw_sql": "GRANT USAGE ON SCHEMA \"dbt_facts\" TO GROUP data_engineering", "compiled": true, "resource_type": "operation", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "public", "fqn": ["houm", "hooks", "houm-on-run-end-16"], "unique_id": "operation.houm.houm-on-run-end-16", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "hooks/houm-on-run-end-16.sql", "original_file_path": "./dbt_project.yml", "name": "houm-on-run-end-16", "alias": "houm-on-run-end-16", "checksum": {"name": "sha256", "checksum": "ab76d6b65fa326f421445aa0d11642975186d5c13eaf00492b8e9c9607f58896"}, "tags": ["on-run-end"], "refs": [], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/./dbt_project.yml/hooks/houm-on-run-end-16.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1654784475.617301, "compiled_sql": "GRANT USAGE ON SCHEMA \"dbt_facts\" TO GROUP data_engineering", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "index": 16}, "operation.houm.houm-on-run-end-17": {"raw_sql": "GRANT SELECT ON ALL TABLES IN SCHEMA \"dbt_staging\" TO GROUP data_engineering", "compiled": true, "resource_type": "operation", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "public", "fqn": ["houm", "hooks", "houm-on-run-end-17"], "unique_id": "operation.houm.houm-on-run-end-17", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "hooks/houm-on-run-end-17.sql", "original_file_path": "./dbt_project.yml", "name": "houm-on-run-end-17", "alias": "houm-on-run-end-17", "checksum": {"name": "sha256", "checksum": "ab76d6b65fa326f421445aa0d11642975186d5c13eaf00492b8e9c9607f58896"}, "tags": ["on-run-end"], "refs": [], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/./dbt_project.yml/hooks/houm-on-run-end-17.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1654784475.6190689, "compiled_sql": "GRANT SELECT ON ALL TABLES IN SCHEMA \"dbt_staging\" TO GROUP data_engineering", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "index": 17}, "operation.houm.houm-on-run-end-18": {"raw_sql": "GRANT SELECT ON ALL TABLES IN SCHEMA \"dbt_dims\" TO GROUP data_engineering", "compiled": true, "resource_type": "operation", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "public", "fqn": ["houm", "hooks", "houm-on-run-end-18"], "unique_id": "operation.houm.houm-on-run-end-18", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "hooks/houm-on-run-end-18.sql", "original_file_path": "./dbt_project.yml", "name": "houm-on-run-end-18", "alias": "houm-on-run-end-18", "checksum": {"name": "sha256", "checksum": "ab76d6b65fa326f421445aa0d11642975186d5c13eaf00492b8e9c9607f58896"}, "tags": ["on-run-end"], "refs": [], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/./dbt_project.yml/hooks/houm-on-run-end-18.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1654784475.620835, "compiled_sql": "GRANT SELECT ON ALL TABLES IN SCHEMA \"dbt_dims\" TO GROUP data_engineering", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "index": 18}, "operation.houm.houm-on-run-end-19": {"raw_sql": "GRANT SELECT ON ALL TABLES IN SCHEMA \"dbt_marts\" TO GROUP data_engineering", "compiled": true, "resource_type": "operation", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "public", "fqn": ["houm", "hooks", "houm-on-run-end-19"], "unique_id": "operation.houm.houm-on-run-end-19", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "hooks/houm-on-run-end-19.sql", "original_file_path": "./dbt_project.yml", "name": "houm-on-run-end-19", "alias": "houm-on-run-end-19", "checksum": {"name": "sha256", "checksum": "ab76d6b65fa326f421445aa0d11642975186d5c13eaf00492b8e9c9607f58896"}, "tags": ["on-run-end"], "refs": [], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/./dbt_project.yml/hooks/houm-on-run-end-19.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1654784475.622588, "compiled_sql": "GRANT SELECT ON ALL TABLES IN SCHEMA \"dbt_marts\" TO GROUP data_engineering", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "index": 19}, "operation.houm.houm-on-run-end-20": {"raw_sql": "GRANT SELECT ON ALL TABLES IN SCHEMA \"dbt_processing\" TO GROUP data_engineering", "compiled": true, "resource_type": "operation", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "public", "fqn": ["houm", "hooks", "houm-on-run-end-20"], "unique_id": "operation.houm.houm-on-run-end-20", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "hooks/houm-on-run-end-20.sql", "original_file_path": "./dbt_project.yml", "name": "houm-on-run-end-20", "alias": "houm-on-run-end-20", "checksum": {"name": "sha256", "checksum": "ab76d6b65fa326f421445aa0d11642975186d5c13eaf00492b8e9c9607f58896"}, "tags": ["on-run-end"], "refs": [], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/./dbt_project.yml/hooks/houm-on-run-end-20.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1654784475.624365, "compiled_sql": "GRANT SELECT ON ALL TABLES IN SCHEMA \"dbt_processing\" TO GROUP data_engineering", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "index": 20}, "operation.houm.houm-on-run-end-21": {"raw_sql": "GRANT SELECT ON ALL TABLES IN SCHEMA \"dbt_facts\" TO GROUP data_engineering", "compiled": true, "resource_type": "operation", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "public", "fqn": ["houm", "hooks", "houm-on-run-end-21"], "unique_id": "operation.houm.houm-on-run-end-21", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "hooks/houm-on-run-end-21.sql", "original_file_path": "./dbt_project.yml", "name": "houm-on-run-end-21", "alias": "houm-on-run-end-21", "checksum": {"name": "sha256", "checksum": "ab76d6b65fa326f421445aa0d11642975186d5c13eaf00492b8e9c9607f58896"}, "tags": ["on-run-end"], "refs": [], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/./dbt_project.yml/hooks/houm-on-run-end-21.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1654784475.626177, "compiled_sql": "GRANT SELECT ON ALL TABLES IN SCHEMA \"dbt_facts\" TO GROUP data_engineering", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "index": 21}, "test.houm.unique_properties_published_property_id.3fc869c6e4": {"raw_sql": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "unique", "kwargs": {"column_name": "property_id", "model": "{{ get_where_subquery(ref('properties_published')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_unique", "macro.dbt.get_where_subquery"], "nodes": ["model.houm.properties_published"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "houmdw_prod", "schema": "dbt_test__audit", "fqn": ["houm", "dwh", "marts", "unique_properties_published_property_id"], "unique_id": "test.houm.unique_properties_published_property_id.3fc869c6e4", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "unique_properties_published_property_id.sql", "original_file_path": "models/dwh/marts/schema.yml", "name": "unique_properties_published_property_id", "alias": "unique_properties_published_property_id", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["properties_published"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/schema.yml/unique_properties_published_property_id.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1654784475.645192, "compiled_sql": "\n    \n    \n\nselect\n    property_id as unique_field,\n    count(*) as n_records\n\nfrom \"houmdw_prod\".\"dbt_marts\".\"properties_published\"\nwhere property_id is not null\ngroup by property_id\nhaving count(*) > 1\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "property_id", "file_key_name": "models.properties_published"}, "test.houm.not_null_properties_published_property_id.cfd67d7b86": {"raw_sql": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "property_id", "model": "{{ get_where_subquery(ref('properties_published')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.houm.properties_published"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "houmdw_prod", "schema": "dbt_test__audit", "fqn": ["houm", "dwh", "marts", "not_null_properties_published_property_id"], "unique_id": "test.houm.not_null_properties_published_property_id.cfd67d7b86", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "not_null_properties_published_property_id.sql", "original_file_path": "models/dwh/marts/schema.yml", "name": "not_null_properties_published_property_id", "alias": "not_null_properties_published_property_id", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["properties_published"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/marts/schema.yml/not_null_properties_published_property_id.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1654784475.646744, "compiled_sql": "\n    \n    \n\n\n\nselect property_id\nfrom \"houmdw_prod\".\"dbt_marts\".\"properties_published\"\nwhere property_id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "property_id", "file_key_name": "models.properties_published"}, "test.houm.unique_dim_macrozones_macrozone.99a7937a3d": {"raw_sql": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "unique", "kwargs": {"column_name": "macrozone", "model": "{{ get_where_subquery(ref('dim_macrozones')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_unique", "macro.dbt.get_where_subquery"], "nodes": ["model.houm.dim_macrozones"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "houmdw_prod", "schema": "dbt_test__audit", "fqn": ["houm", "dwh", "dims", "unique_dim_macrozones_macrozone"], "unique_id": "test.houm.unique_dim_macrozones_macrozone.99a7937a3d", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "unique_dim_macrozones_macrozone.sql", "original_file_path": "models/dwh/dims/schema.yml", "name": "unique_dim_macrozones_macrozone", "alias": "unique_dim_macrozones_macrozone", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["dim_macrozones"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/dims/schema.yml/unique_dim_macrozones_macrozone.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1654784475.648847, "compiled_sql": "\n    \n    \n\nselect\n    macrozone as unique_field,\n    count(*) as n_records\n\nfrom \"houmdw_prod\".\"dbt_dims\".\"dim_macrozones\"\nwhere macrozone is not null\ngroup by macrozone\nhaving count(*) > 1\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "macrozone", "file_key_name": "models.dim_macrozones"}, "test.houm.not_null_dim_macrozones_macrozone.5c78ef2445": {"raw_sql": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "macrozone", "model": "{{ get_where_subquery(ref('dim_macrozones')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.houm.dim_macrozones"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "houmdw_prod", "schema": "dbt_test__audit", "fqn": ["houm", "dwh", "dims", "not_null_dim_macrozones_macrozone"], "unique_id": "test.houm.not_null_dim_macrozones_macrozone.5c78ef2445", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "not_null_dim_macrozones_macrozone.sql", "original_file_path": "models/dwh/dims/schema.yml", "name": "not_null_dim_macrozones_macrozone", "alias": "not_null_dim_macrozones_macrozone", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["dim_macrozones"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/dwh/dims/schema.yml/not_null_dim_macrozones_macrozone.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1654784475.6500669, "compiled_sql": "\n    \n    \n\n\n\nselect macrozone\nfrom \"houmdw_prod\".\"dbt_dims\".\"dim_macrozones\"\nwhere macrozone is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "macrozone", "file_key_name": "models.dim_macrozones"}, "test.houm.unique_stg_properties_id.c012ce6a29": {"raw_sql": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "unique", "kwargs": {"column_name": "id", "model": "{{ get_where_subquery(ref('stg_properties')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_unique", "macro.dbt.get_where_subquery"], "nodes": ["model.houm.stg_properties"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "houmdw_prod", "schema": "dbt_test__audit", "fqn": ["houm", "staging", "unique_stg_properties_id"], "unique_id": "test.houm.unique_stg_properties_id.c012ce6a29", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "unique_stg_properties_id.sql", "original_file_path": "models/staging/schema.yml", "name": "unique_stg_properties_id", "alias": "unique_stg_properties_id", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["stg_properties"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/schema.yml/unique_stg_properties_id.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1654784475.669348, "compiled_sql": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"houmdw_prod\".\"dbt_staging\".\"stg_properties\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "id", "file_key_name": "models.stg_properties"}, "test.houm.not_null_stg_properties_id.d43465ee9b": {"raw_sql": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "id", "model": "{{ get_where_subquery(ref('stg_properties')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.houm.stg_properties"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "houmdw_prod", "schema": "dbt_test__audit", "fqn": ["houm", "staging", "not_null_stg_properties_id"], "unique_id": "test.houm.not_null_stg_properties_id.d43465ee9b", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "not_null_stg_properties_id.sql", "original_file_path": "models/staging/schema.yml", "name": "not_null_stg_properties_id", "alias": "not_null_stg_properties_id", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["stg_properties"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/schema.yml/not_null_stg_properties_id.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1654784475.67065, "compiled_sql": "\n    \n    \n\n\n\nselect id\nfrom \"houmdw_prod\".\"dbt_staging\".\"stg_properties\"\nwhere id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "id", "file_key_name": "models.stg_properties"}, "test.houm.unique_stg_propertydetails_property_id.3d72328240": {"raw_sql": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "unique", "kwargs": {"column_name": "property_id", "model": "{{ get_where_subquery(ref('stg_propertydetails')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_unique", "macro.dbt.get_where_subquery"], "nodes": ["model.houm.stg_propertydetails"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "houmdw_prod", "schema": "dbt_test__audit", "fqn": ["houm", "staging", "unique_stg_propertydetails_property_id"], "unique_id": "test.houm.unique_stg_propertydetails_property_id.3d72328240", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "unique_stg_propertydetails_property_id.sql", "original_file_path": "models/staging/schema.yml", "name": "unique_stg_propertydetails_property_id", "alias": "unique_stg_propertydetails_property_id", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["stg_propertydetails"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/schema.yml/unique_stg_propertydetails_property_id.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1654784475.671885, "compiled_sql": "\n    \n    \n\nselect\n    property_id as unique_field,\n    count(*) as n_records\n\nfrom \"houmdw_prod\".\"dbt_staging\".\"stg_propertydetails\"\nwhere property_id is not null\ngroup by property_id\nhaving count(*) > 1\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "property_id", "file_key_name": "models.stg_propertydetails"}, "test.houm.not_null_stg_propertydetails_property_id.e78288fade": {"raw_sql": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "property_id", "model": "{{ get_where_subquery(ref('stg_propertydetails')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.houm.stg_propertydetails"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "houmdw_prod", "schema": "dbt_test__audit", "fqn": ["houm", "staging", "not_null_stg_propertydetails_property_id"], "unique_id": "test.houm.not_null_stg_propertydetails_property_id.e78288fade", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "not_null_stg_propertydetails_property_id.sql", "original_file_path": "models/staging/schema.yml", "name": "not_null_stg_propertydetails_property_id", "alias": "not_null_stg_propertydetails_property_id", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["stg_propertydetails"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/schema.yml/not_null_stg_propertydetails_property_id.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1654784475.673253, "compiled_sql": "\n    \n    \n\n\n\nselect property_id\nfrom \"houmdw_prod\".\"dbt_staging\".\"stg_propertydetails\"\nwhere property_id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "property_id", "file_key_name": "models.stg_propertydetails"}, "test.houm.relationships_stg_propertydetails_property_id__id__ref_stg_properties_.2deb404575": {"raw_sql": "{{ test_relationships(**_dbt_generic_test_kwargs) }}{{ config(alias=\"relationships_stg_propertydeta_823fccffc25dae27e24a6947d14a5dd1\") }}", "test_metadata": {"name": "relationships", "kwargs": {"to": "ref('stg_properties')", "field": "id", "column_name": "property_id", "model": "{{ get_where_subquery(ref('stg_propertydetails')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_relationships", "macro.dbt.get_where_subquery"], "nodes": ["model.houm.stg_properties", "model.houm.stg_propertydetails"]}, "config": {"enabled": true, "alias": "relationships_stg_propertydeta_823fccffc25dae27e24a6947d14a5dd1", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "houmdw_prod", "schema": "dbt_test__audit", "fqn": ["houm", "staging", "relationships_stg_propertydetails_property_id__id__ref_stg_properties_"], "unique_id": "test.houm.relationships_stg_propertydetails_property_id__id__ref_stg_properties_.2deb404575", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "relationships_stg_propertydeta_823fccffc25dae27e24a6947d14a5dd1.sql", "original_file_path": "models/staging/schema.yml", "name": "relationships_stg_propertydetails_property_id__id__ref_stg_properties_", "alias": "relationships_stg_propertydeta_823fccffc25dae27e24a6947d14a5dd1", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["stg_properties"], ["stg_propertydetails"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/schema.yml/relationships_stg_propertydeta_823fccffc25dae27e24a6947d14a5dd1.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "relationships_stg_propertydeta_823fccffc25dae27e24a6947d14a5dd1"}, "created_at": 1654784475.6744478, "compiled_sql": "\n    \n    \n\nwith child as (\n    select property_id as from_field\n    from \"houmdw_prod\".\"dbt_staging\".\"stg_propertydetails\"\n    where property_id is not null\n),\n\nparent as (\n    select id as to_field\n    from \"houmdw_prod\".\"dbt_staging\".\"stg_properties\"\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "property_id", "file_key_name": "models.stg_propertydetails"}, "test.houm.unique_stg_property_salesdetails_property_id.6259827ab6": {"raw_sql": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "unique", "kwargs": {"column_name": "property_id", "model": "{{ get_where_subquery(ref('stg_property_salesdetails')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_unique", "macro.dbt.get_where_subquery"], "nodes": ["model.houm.stg_property_salesdetails"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "houmdw_prod", "schema": "dbt_test__audit", "fqn": ["houm", "staging", "unique_stg_property_salesdetails_property_id"], "unique_id": "test.houm.unique_stg_property_salesdetails_property_id.6259827ab6", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "unique_stg_property_salesdetails_property_id.sql", "original_file_path": "models/staging/schema.yml", "name": "unique_stg_property_salesdetails_property_id", "alias": "unique_stg_property_salesdetails_property_id", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["stg_property_salesdetails"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/schema.yml/unique_stg_property_salesdetails_property_id.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1654784475.68346, "compiled_sql": "\n    \n    \n\nselect\n    property_id as unique_field,\n    count(*) as n_records\n\nfrom \"houmdw_prod\".\"dbt_staging\".\"stg_property_salesdetails\"\nwhere property_id is not null\ngroup by property_id\nhaving count(*) > 1\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "property_id", "file_key_name": "models.stg_property_salesdetails"}, "test.houm.not_null_stg_property_salesdetails_property_id.a909208778": {"raw_sql": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "property_id", "model": "{{ get_where_subquery(ref('stg_property_salesdetails')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.houm.stg_property_salesdetails"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "houmdw_prod", "schema": "dbt_test__audit", "fqn": ["houm", "staging", "not_null_stg_property_salesdetails_property_id"], "unique_id": "test.houm.not_null_stg_property_salesdetails_property_id.a909208778", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "not_null_stg_property_salesdetails_property_id.sql", "original_file_path": "models/staging/schema.yml", "name": "not_null_stg_property_salesdetails_property_id", "alias": "not_null_stg_property_salesdetails_property_id", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["stg_property_salesdetails"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/schema.yml/not_null_stg_property_salesdetails_property_id.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1654784475.684659, "compiled_sql": "\n    \n    \n\n\n\nselect property_id\nfrom \"houmdw_prod\".\"dbt_staging\".\"stg_property_salesdetails\"\nwhere property_id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "property_id", "file_key_name": "models.stg_property_salesdetails"}, "test.houm.relationships_stg_property_salesdetails_property_id__id__ref_stg_properties_.576c9939c2": {"raw_sql": "{{ test_relationships(**_dbt_generic_test_kwargs) }}{{ config(alias=\"relationships_stg_property_sal_4ff81e4fe698f733fb3fa829187973ee\") }}", "test_metadata": {"name": "relationships", "kwargs": {"to": "ref('stg_properties')", "field": "id", "column_name": "property_id", "model": "{{ get_where_subquery(ref('stg_property_salesdetails')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_relationships", "macro.dbt.get_where_subquery"], "nodes": ["model.houm.stg_properties", "model.houm.stg_property_salesdetails"]}, "config": {"enabled": true, "alias": "relationships_stg_property_sal_4ff81e4fe698f733fb3fa829187973ee", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "houmdw_prod", "schema": "dbt_test__audit", "fqn": ["houm", "staging", "relationships_stg_property_salesdetails_property_id__id__ref_stg_properties_"], "unique_id": "test.houm.relationships_stg_property_salesdetails_property_id__id__ref_stg_properties_.576c9939c2", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "relationships_stg_property_sal_4ff81e4fe698f733fb3fa829187973ee.sql", "original_file_path": "models/staging/schema.yml", "name": "relationships_stg_property_salesdetails_property_id__id__ref_stg_properties_", "alias": "relationships_stg_property_sal_4ff81e4fe698f733fb3fa829187973ee", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["stg_properties"], ["stg_property_salesdetails"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/schema.yml/relationships_stg_property_sal_4ff81e4fe698f733fb3fa829187973ee.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "relationships_stg_property_sal_4ff81e4fe698f733fb3fa829187973ee"}, "created_at": 1654784475.68656, "compiled_sql": "\n    \n    \n\nwith child as (\n    select property_id as from_field\n    from \"houmdw_prod\".\"dbt_staging\".\"stg_property_salesdetails\"\n    where property_id is not null\n),\n\nparent as (\n    select id as to_field\n    from \"houmdw_prod\".\"dbt_staging\".\"stg_properties\"\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "property_id", "file_key_name": "models.stg_property_salesdetails"}, "test.houm.unique_stg_employees_dwh_person_id.0af0f11ced": {"raw_sql": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "unique", "kwargs": {"column_name": "dwh_person_id", "model": "{{ get_where_subquery(ref('stg_employees')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_unique", "macro.dbt.get_where_subquery"], "nodes": ["model.houm.stg_employees"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "houmdw_prod", "schema": "dbt_test__audit", "fqn": ["houm", "staging", "unique_stg_employees_dwh_person_id"], "unique_id": "test.houm.unique_stg_employees_dwh_person_id.0af0f11ced", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "unique_stg_employees_dwh_person_id.sql", "original_file_path": "models/staging/schema.yml", "name": "unique_stg_employees_dwh_person_id", "alias": "unique_stg_employees_dwh_person_id", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["stg_employees"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/schema.yml/unique_stg_employees_dwh_person_id.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1654784475.69036, "compiled_sql": "\n    \n    \n\nselect\n    dwh_person_id as unique_field,\n    count(*) as n_records\n\nfrom \"houmdw_prod\".\"staging_finance\".\"stg_employees\"\nwhere dwh_person_id is not null\ngroup by dwh_person_id\nhaving count(*) > 1\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "dwh_person_id", "file_key_name": "models.stg_employees"}, "test.houm.not_null_stg_employees_dwh_person_id.1123b1a608": {"raw_sql": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "dwh_person_id", "model": "{{ get_where_subquery(ref('stg_employees')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.houm.stg_employees"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "houmdw_prod", "schema": "dbt_test__audit", "fqn": ["houm", "staging", "not_null_stg_employees_dwh_person_id"], "unique_id": "test.houm.not_null_stg_employees_dwh_person_id.1123b1a608", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "not_null_stg_employees_dwh_person_id.sql", "original_file_path": "models/staging/schema.yml", "name": "not_null_stg_employees_dwh_person_id", "alias": "not_null_stg_employees_dwh_person_id", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["stg_employees"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/schema.yml/not_null_stg_employees_dwh_person_id.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1654784475.691778, "compiled_sql": "\n    \n    \n\n\n\nselect dwh_person_id\nfrom \"houmdw_prod\".\"staging_finance\".\"stg_employees\"\nwhere dwh_person_id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "dwh_person_id", "file_key_name": "models.stg_employees"}, "test.houm.unique_stg_zendesk_users_id.e79d686872": {"raw_sql": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "unique", "kwargs": {"column_name": "id", "model": "{{ get_where_subquery(ref('stg_zendesk_users')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_unique", "macro.dbt.get_where_subquery"], "nodes": ["model.houm.stg_zendesk_users"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "houmdw_prod", "schema": "dbt_test__audit", "fqn": ["houm", "staging", "unique_stg_zendesk_users_id"], "unique_id": "test.houm.unique_stg_zendesk_users_id.e79d686872", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "unique_stg_zendesk_users_id.sql", "original_file_path": "models/staging/schema.yml", "name": "unique_stg_zendesk_users_id", "alias": "unique_stg_zendesk_users_id", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["stg_zendesk_users"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/schema.yml/unique_stg_zendesk_users_id.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1654784475.692956, "compiled_sql": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"houmdw_prod\".\"dbt_staging\".\"stg_zendesk_users\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "id", "file_key_name": "models.stg_zendesk_users"}, "test.houm.not_null_stg_zendesk_users_id.52cc258f65": {"raw_sql": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "id", "model": "{{ get_where_subquery(ref('stg_zendesk_users')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.houm.stg_zendesk_users"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "houmdw_prod", "schema": "dbt_test__audit", "fqn": ["houm", "staging", "not_null_stg_zendesk_users_id"], "unique_id": "test.houm.not_null_stg_zendesk_users_id.52cc258f65", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "not_null_stg_zendesk_users_id.sql", "original_file_path": "models/staging/schema.yml", "name": "not_null_stg_zendesk_users_id", "alias": "not_null_stg_zendesk_users_id", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["stg_zendesk_users"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/schema.yml/not_null_stg_zendesk_users_id.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1654784475.694124, "compiled_sql": "\n    \n    \n\n\n\nselect id\nfrom \"houmdw_prod\".\"dbt_staging\".\"stg_zendesk_users\"\nwhere id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "id", "file_key_name": "models.stg_zendesk_users"}, "test.houm.not_null_stg_zendesk_users_created_at.a5d3a601e4": {"raw_sql": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "created_at", "model": "{{ get_where_subquery(ref('stg_zendesk_users')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.houm.stg_zendesk_users"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "houmdw_prod", "schema": "dbt_test__audit", "fqn": ["houm", "staging", "not_null_stg_zendesk_users_created_at"], "unique_id": "test.houm.not_null_stg_zendesk_users_created_at.a5d3a601e4", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "not_null_stg_zendesk_users_created_at.sql", "original_file_path": "models/staging/schema.yml", "name": "not_null_stg_zendesk_users_created_at", "alias": "not_null_stg_zendesk_users_created_at", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["stg_zendesk_users"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/schema.yml/not_null_stg_zendesk_users_created_at.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1654784475.695271, "compiled_sql": "\n    \n    \n\n\n\nselect created_at\nfrom \"houmdw_prod\".\"dbt_staging\".\"stg_zendesk_users\"\nwhere created_at is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "created_at", "file_key_name": "models.stg_zendesk_users"}, "test.houm.unique_stg_zendesk_tickets_id.ddc72a2d52": {"raw_sql": "{{ test_unique(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "unique", "kwargs": {"column_name": "id", "model": "{{ get_where_subquery(ref('stg_zendesk_tickets')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_unique", "macro.dbt.get_where_subquery"], "nodes": ["model.houm.stg_zendesk_tickets"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "houmdw_prod", "schema": "dbt_test__audit", "fqn": ["houm", "staging", "unique_stg_zendesk_tickets_id"], "unique_id": "test.houm.unique_stg_zendesk_tickets_id.ddc72a2d52", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "unique_stg_zendesk_tickets_id.sql", "original_file_path": "models/staging/schema.yml", "name": "unique_stg_zendesk_tickets_id", "alias": "unique_stg_zendesk_tickets_id", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["stg_zendesk_tickets"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/schema.yml/unique_stg_zendesk_tickets_id.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1654784475.696655, "compiled_sql": "\n    \n    \n\nselect\n    id as unique_field,\n    count(*) as n_records\n\nfrom \"houmdw_prod\".\"dbt_staging\".\"stg_zendesk_tickets\"\nwhere id is not null\ngroup by id\nhaving count(*) > 1\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "id", "file_key_name": "models.stg_zendesk_tickets"}, "test.houm.not_null_stg_zendesk_tickets_id.1eb8f4773c": {"raw_sql": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "id", "model": "{{ get_where_subquery(ref('stg_zendesk_tickets')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.houm.stg_zendesk_tickets"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "houmdw_prod", "schema": "dbt_test__audit", "fqn": ["houm", "staging", "not_null_stg_zendesk_tickets_id"], "unique_id": "test.houm.not_null_stg_zendesk_tickets_id.1eb8f4773c", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "not_null_stg_zendesk_tickets_id.sql", "original_file_path": "models/staging/schema.yml", "name": "not_null_stg_zendesk_tickets_id", "alias": "not_null_stg_zendesk_tickets_id", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["stg_zendesk_tickets"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/schema.yml/not_null_stg_zendesk_tickets_id.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1654784475.697811, "compiled_sql": "\n    \n    \n\n\n\nselect id\nfrom \"houmdw_prod\".\"dbt_staging\".\"stg_zendesk_tickets\"\nwhere id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "id", "file_key_name": "models.stg_zendesk_tickets"}, "test.houm.not_null_stg_zendesk_tickets_created_at.df19eaef06": {"raw_sql": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "created_at", "model": "{{ get_where_subquery(ref('stg_zendesk_tickets')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.houm.stg_zendesk_tickets"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "houmdw_prod", "schema": "dbt_test__audit", "fqn": ["houm", "staging", "not_null_stg_zendesk_tickets_created_at"], "unique_id": "test.houm.not_null_stg_zendesk_tickets_created_at.df19eaef06", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "not_null_stg_zendesk_tickets_created_at.sql", "original_file_path": "models/staging/schema.yml", "name": "not_null_stg_zendesk_tickets_created_at", "alias": "not_null_stg_zendesk_tickets_created_at", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["stg_zendesk_tickets"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/schema.yml/not_null_stg_zendesk_tickets_created_at.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1654784475.6989498, "compiled_sql": "\n    \n    \n\n\n\nselect created_at\nfrom \"houmdw_prod\".\"dbt_staging\".\"stg_zendesk_tickets\"\nwhere created_at is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "created_at", "file_key_name": "models.stg_zendesk_tickets"}, "test.houm.not_null_stg_zendesk_tickets_requester_id.b9b7c97459": {"raw_sql": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "requester_id", "model": "{{ get_where_subquery(ref('stg_zendesk_tickets')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.houm.stg_zendesk_tickets"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "houmdw_prod", "schema": "dbt_test__audit", "fqn": ["houm", "staging", "not_null_stg_zendesk_tickets_requester_id"], "unique_id": "test.houm.not_null_stg_zendesk_tickets_requester_id.b9b7c97459", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "not_null_stg_zendesk_tickets_requester_id.sql", "original_file_path": "models/staging/schema.yml", "name": "not_null_stg_zendesk_tickets_requester_id", "alias": "not_null_stg_zendesk_tickets_requester_id", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["stg_zendesk_tickets"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/schema.yml/not_null_stg_zendesk_tickets_requester_id.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1654784475.700077, "compiled_sql": "\n    \n    \n\n\n\nselect requester_id\nfrom \"houmdw_prod\".\"dbt_staging\".\"stg_zendesk_tickets\"\nwhere requester_id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "requester_id", "file_key_name": "models.stg_zendesk_tickets"}, "test.houm.relationships_stg_zendesk_tickets_requester_id__id__ref_stg_zendesk_users_.2db2d75048": {"raw_sql": "{{ test_relationships(**_dbt_generic_test_kwargs) }}{{ config(alias=\"relationships_stg_zendesk_tick_3e5c29861cdca5b52b5511230229c784\") }}", "test_metadata": {"name": "relationships", "kwargs": {"to": "ref('stg_zendesk_users')", "field": "id", "column_name": "requester_id", "model": "{{ get_where_subquery(ref('stg_zendesk_tickets')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_relationships", "macro.dbt.get_where_subquery"], "nodes": ["model.houm.stg_zendesk_users", "model.houm.stg_zendesk_tickets"]}, "config": {"enabled": true, "alias": "relationships_stg_zendesk_tick_3e5c29861cdca5b52b5511230229c784", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "houmdw_prod", "schema": "dbt_test__audit", "fqn": ["houm", "staging", "relationships_stg_zendesk_tickets_requester_id__id__ref_stg_zendesk_users_"], "unique_id": "test.houm.relationships_stg_zendesk_tickets_requester_id__id__ref_stg_zendesk_users_.2db2d75048", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "relationships_stg_zendesk_tick_3e5c29861cdca5b52b5511230229c784.sql", "original_file_path": "models/staging/schema.yml", "name": "relationships_stg_zendesk_tickets_requester_id__id__ref_stg_zendesk_users_", "alias": "relationships_stg_zendesk_tick_3e5c29861cdca5b52b5511230229c784", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["stg_zendesk_users"], ["stg_zendesk_tickets"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/schema.yml/relationships_stg_zendesk_tick_3e5c29861cdca5b52b5511230229c784.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "relationships_stg_zendesk_tick_3e5c29861cdca5b52b5511230229c784"}, "created_at": 1654784475.70141, "compiled_sql": "\n    \n    \n\nwith child as (\n    select requester_id as from_field\n    from \"houmdw_prod\".\"dbt_staging\".\"stg_zendesk_tickets\"\n    where requester_id is not null\n),\n\nparent as (\n    select id as to_field\n    from \"houmdw_prod\".\"dbt_staging\".\"stg_zendesk_users\"\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "requester_id", "file_key_name": "models.stg_zendesk_tickets"}, "test.houm.not_null_stg_zendesk_tickets_submitter_id.adeeee890f": {"raw_sql": "{{ test_not_null(**_dbt_generic_test_kwargs) }}", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "submitter_id", "model": "{{ get_where_subquery(ref('stg_zendesk_tickets')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.houm.stg_zendesk_tickets"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "houmdw_prod", "schema": "dbt_test__audit", "fqn": ["houm", "staging", "not_null_stg_zendesk_tickets_submitter_id"], "unique_id": "test.houm.not_null_stg_zendesk_tickets_submitter_id.adeeee890f", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "not_null_stg_zendesk_tickets_submitter_id.sql", "original_file_path": "models/staging/schema.yml", "name": "not_null_stg_zendesk_tickets_submitter_id", "alias": "not_null_stg_zendesk_tickets_submitter_id", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["stg_zendesk_tickets"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/schema.yml/not_null_stg_zendesk_tickets_submitter_id.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1654784475.705067, "compiled_sql": "\n    \n    \n\n\n\nselect submitter_id\nfrom \"houmdw_prod\".\"dbt_staging\".\"stg_zendesk_tickets\"\nwhere submitter_id is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "submitter_id", "file_key_name": "models.stg_zendesk_tickets"}, "test.houm.relationships_stg_zendesk_tickets_submitter_id__id__ref_stg_zendesk_users_.2140f23be2": {"raw_sql": "{{ test_relationships(**_dbt_generic_test_kwargs) }}{{ config(alias=\"relationships_stg_zendesk_tick_ec8d9d4369c1456a46615855ef50d651\") }}", "test_metadata": {"name": "relationships", "kwargs": {"to": "ref('stg_zendesk_users')", "field": "id", "column_name": "submitter_id", "model": "{{ get_where_subquery(ref('stg_zendesk_tickets')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_relationships", "macro.dbt.get_where_subquery"], "nodes": ["model.houm.stg_zendesk_users", "model.houm.stg_zendesk_tickets"]}, "config": {"enabled": true, "alias": "relationships_stg_zendesk_tick_ec8d9d4369c1456a46615855ef50d651", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "houmdw_prod", "schema": "dbt_test__audit", "fqn": ["houm", "staging", "relationships_stg_zendesk_tickets_submitter_id__id__ref_stg_zendesk_users_"], "unique_id": "test.houm.relationships_stg_zendesk_tickets_submitter_id__id__ref_stg_zendesk_users_.2140f23be2", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "relationships_stg_zendesk_tick_ec8d9d4369c1456a46615855ef50d651.sql", "original_file_path": "models/staging/schema.yml", "name": "relationships_stg_zendesk_tickets_submitter_id__id__ref_stg_zendesk_users_", "alias": "relationships_stg_zendesk_tick_ec8d9d4369c1456a46615855ef50d651", "checksum": {"name": "none", "checksum": ""}, "tags": [], "refs": [["stg_zendesk_users"], ["stg_zendesk_tickets"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/schema.yml/relationships_stg_zendesk_tick_ec8d9d4369c1456a46615855ef50d651.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "relationships_stg_zendesk_tick_ec8d9d4369c1456a46615855ef50d651"}, "created_at": 1654784475.706478, "compiled_sql": "\n    \n    \n\nwith child as (\n    select submitter_id as from_field\n    from \"houmdw_prod\".\"dbt_staging\".\"stg_zendesk_tickets\"\n    where submitter_id is not null\n),\n\nparent as (\n    select id as to_field\n    from \"houmdw_prod\".\"dbt_staging\".\"stg_zendesk_users\"\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "submitter_id", "file_key_name": "models.stg_zendesk_tickets"}, "model.houm.stg_whatsapp_nps_rentas_propietary_pc": {"raw_sql": "SELECT \n    * \nFROM {{ source('airbyte_gspread', 'nps_rentas_tenant_pc_mx') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["source.houm.airbyte_gspread.nps_rentas_tenant_pc_mx"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_staging", "database": null, "tags": ["dw", "staging", "gspread", "nps"], "meta": {}, "materialized": "view", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_staging", "fqn": ["houm", "staging", "nps_whatsapp", "stg_whatsapp_nps_rentas_propietary_pc"], "unique_id": "model.houm.stg_whatsapp_nps_rentas_propietary_pc", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "staging/nps_whatsapp/stg_whatsapp_nps_rentas_propietary_pc.sql", "original_file_path": "models/staging/nps_whatsapp/stg_whatsapp_nps_rentas_propietary_pc.sql", "name": "stg_whatsapp_nps_rentas_propietary_pc", "alias": "stg_whatsapp_nps_rentas_propietary_pc", "checksum": {"name": "sha256", "checksum": "a142ef773606b5b3838a3a556900965e16f5056cc378fbcfd3cd0aa07f195b23"}, "tags": ["dw", "staging", "gspread", "nps"], "refs": [], "sources": [["airbyte_gspread", "nps_rentas_tenant_pc_mx"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/staging/nps_whatsapp/stg_whatsapp_nps_rentas_propietary_pc.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_staging", "tags": ["dw", "staging", "gspread", "nps"]}, "created_at": 1655132507.519608, "compiled_sql": "SELECT \n    * \nFROM \"houmdw_prod\".\"airbyte_gspread\".\"nps_rentas_tenant_pc_mx\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_staging\".\"stg_whatsapp_nps_rentas_propietary_pc\""}, "model.houm.proc_cx_nps_landlords_pc": {"raw_sql": "{{ config(materialized='table') }}\n\nWITH nps_whatsapp AS (\n\tSELECT \n        CASE\n            WHEN nps.\"timestamp\" IS NULL OR nps.\"timestamp\" = '' THEN '2021-10-25'::date\n            ELSE left(nps.\"timestamp\", 10)::date\n        END AS \"date\", \n        CASE\n            WHEN nps.\"timestamp\" IS NULL OR nps.\"timestamp\" = '' THEN '00:00:00'::time without time zone\n            ELSE left(right(nps.\"timestamp\", 9), 8)::time without time zone\n        END AS \"time\", \n        CASE\n            WHEN nps.recommendation in (9,10) THEN 100\n            WHEN nps.recommendation in (7,8) THEN 0\n            WHEN nps.recommendation in (0,1,2,3,4,5,6) THEN - 100::numeric(18,0)\n            ELSE NULL\n        END AS nps, \n\t\tnps.name, \n\t\tnps.phone, \n\t\tnps.\"role\", \n\t\tnps.country, \n\t\tnps.\"timestamp\", \n\t\tCASE\n\t\t\tWHEN nps.property_id ='-' THEN '' \n\t\t\tELSE nps.property_id \n\t\tEND AS property_id, \n        CASE\n            WHEN nps.source = 1 THEN '1.Publicidad'\n            WHEN nps.source = 2 THEN '2.Google'\n            WHEN nps.source = 3 THEN '3.Me lo recomendaron'\n            WHEN nps.source = 4 THEN '4.Redes sociales'\n            WHEN nps.source = 5 THEN '5.De un portal de propiedades'\n            WHEN nps.source = 6 THEN '6.Otro'\n            ELSE NULL\n        END AS source, \n\t\tnps.contract_signature, \n\t\tnps.recommendation, \n\t\tnps.comments\n   FROM nps_raw_stage.nps_pc_landlord nps\n   ),\nnps_survicate AS (\n\tSELECT\n   \t\tleft(first_response_date,10)::date AS date, \n\t\tright(first_response_date,8)::time AS time,\n\t\tnps*100 AS nps,\n\t\t'' AS name,\n\t\t'' AS phone,\n\t\t'propietary_poscontract' AS role,\n\t\tcountry,\n\t\tfirst_response_date,\n\t\t'' AS property_id,\n\t\tCASE\n            WHEN sc1_customer_source = 'Publicidad' THEN '1.Publicidad'\n            WHEN sc1_customer_source = 'Googleando' THEN '2.Google'\n            WHEN sc1_customer_source = 'Me lo recomendaron' THEN '3.Me lo recomendaron'\n            WHEN sc1_customer_source = 'Redes sociales' THEN '4.Redes sociales'\n            WHEN sc1_customer_source = 'De un portal de propiedades' THEN '5.De un portal de propiedades'\n            WHEN sc1_customer_source = 'Otro' THEN '6.Otro'\n            ELSE NULL\n        END AS source,\n        CASE m1_contract_signing_easiness \n\t\t\tWHEN 'Muy de acuerdo' THEN 10\n        \tWHEN 'De acuerdo' THEN 8\n        \tWHEN 'Neutro' THEN 6\n        \tWHEN 'Desacuerdo' THEN 4\n        \tWHEN 'Muy en desacuerdo' THEN 2\n        \tELSE null\n        END AS contract_signature,\n        nps_service_recommendation,\n        CASE \n\t\t\tWHEN text1_bad_answer = '' THEN \n        \t\tCASE \n\t\t\t\t\tWHEN text1_neutral_answer = '' THEN \n        \t\t\t\tCASE \n\t\t\t\t\t\t\tWHEN text1_good_answer = '' THEN ''\n        \t\t\t\t\tELSE 'Good: '||text1_good_answer\n\t\t\t\t\t\tEND\n        \t\t\tELSE 'Neutral: '||text1_neutral_answer \n\t\t\t\tEND \n        \tELSE 'Bad: '||text1_bad_answer || ' Neutral: '|| text1_neutral_answer||' Good: '||text1_good_answer \n\t\tEND AS comments\n   \tFROM survicate.nps_landlord_new_sub nps\n   \tWHERE nps.first_response_date::date <= '2021-10-24'\n   )\nSELECT * \nFROM nps_whatsapp\nUNION ALL \nSELECT * \nFROM nps_survicate\nORDER BY DATE DESC", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": "dbt_processing", "database": null, "tags": ["dw", "processing", "cx"], "meta": {}, "materialized": "table", "persist_docs": {}, "quoting": {}, "column_types": {}, "full_refresh": null, "unique_key": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "houmdw_prod", "schema": "dbt_processing", "fqn": ["houm", "processing", "cx", "proc_cx_nps_landlords_pc"], "unique_id": "model.houm.proc_cx_nps_landlords_pc", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "processing/cx/proc_cx_nps_landlords_pc.sql", "original_file_path": "models/processing/cx/proc_cx_nps_landlords_pc.sql", "name": "proc_cx_nps_landlords_pc", "alias": "proc_cx_nps_landlords_pc", "checksum": {"name": "sha256", "checksum": "85b8e7c9a5260d18488c39912d1660770dc1500b65cbe19fafaba9920aa8fb9e"}, "tags": ["dw", "processing", "cx"], "refs": [], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/houm/models/processing/cx/proc_cx_nps_landlords_pc.sql", "build_path": null, "deferred": false, "unrendered_config": {"schema": "dbt_processing", "tags": ["dw", "processing", "cx"], "materialized": "table"}, "created_at": 1655132507.530405, "compiled_sql": "\n\nWITH nps_whatsapp AS (\n\tSELECT \n        CASE\n            WHEN nps.\"timestamp\" IS NULL OR nps.\"timestamp\" = '' THEN '2021-10-25'::date\n            ELSE left(nps.\"timestamp\", 10)::date\n        END AS \"date\", \n        CASE\n            WHEN nps.\"timestamp\" IS NULL OR nps.\"timestamp\" = '' THEN '00:00:00'::time without time zone\n            ELSE left(right(nps.\"timestamp\", 9), 8)::time without time zone\n        END AS \"time\", \n        CASE\n            WHEN nps.recommendation in (9,10) THEN 100\n            WHEN nps.recommendation in (7,8) THEN 0\n            WHEN nps.recommendation in (0,1,2,3,4,5,6) THEN - 100::numeric(18,0)\n            ELSE NULL\n        END AS nps, \n\t\tnps.name, \n\t\tnps.phone, \n\t\tnps.\"role\", \n\t\tnps.country, \n\t\tnps.\"timestamp\", \n\t\tCASE\n\t\t\tWHEN nps.property_id ='-' THEN '' \n\t\t\tELSE nps.property_id \n\t\tEND AS property_id, \n        CASE\n            WHEN nps.source = 1 THEN '1.Publicidad'\n            WHEN nps.source = 2 THEN '2.Google'\n            WHEN nps.source = 3 THEN '3.Me lo recomendaron'\n            WHEN nps.source = 4 THEN '4.Redes sociales'\n            WHEN nps.source = 5 THEN '5.De un portal de propiedades'\n            WHEN nps.source = 6 THEN '6.Otro'\n            ELSE NULL\n        END AS source, \n\t\tnps.contract_signature, \n\t\tnps.recommendation, \n\t\tnps.comments\n   FROM nps_raw_stage.nps_pc_landlord nps\n   ),\nnps_survicate AS (\n\tSELECT\n   \t\tleft(first_response_date,10)::date AS date, \n\t\tright(first_response_date,8)::time AS time,\n\t\tnps*100 AS nps,\n\t\t'' AS name,\n\t\t'' AS phone,\n\t\t'propietary_poscontract' AS role,\n\t\tcountry,\n\t\tfirst_response_date,\n\t\t'' AS property_id,\n\t\tCASE\n            WHEN sc1_customer_source = 'Publicidad' THEN '1.Publicidad'\n            WHEN sc1_customer_source = 'Googleando' THEN '2.Google'\n            WHEN sc1_customer_source = 'Me lo recomendaron' THEN '3.Me lo recomendaron'\n            WHEN sc1_customer_source = 'Redes sociales' THEN '4.Redes sociales'\n            WHEN sc1_customer_source = 'De un portal de propiedades' THEN '5.De un portal de propiedades'\n            WHEN sc1_customer_source = 'Otro' THEN '6.Otro'\n            ELSE NULL\n        END AS source,\n        CASE m1_contract_signing_easiness \n\t\t\tWHEN 'Muy de acuerdo' THEN 10\n        \tWHEN 'De acuerdo' THEN 8\n        \tWHEN 'Neutro' THEN 6\n        \tWHEN 'Desacuerdo' THEN 4\n        \tWHEN 'Muy en desacuerdo' THEN 2\n        \tELSE null\n        END AS contract_signature,\n        nps_service_recommendation,\n        CASE \n\t\t\tWHEN text1_bad_answer = '' THEN \n        \t\tCASE \n\t\t\t\t\tWHEN text1_neutral_answer = '' THEN \n        \t\t\t\tCASE \n\t\t\t\t\t\t\tWHEN text1_good_answer = '' THEN ''\n        \t\t\t\t\tELSE 'Good: '||text1_good_answer\n\t\t\t\t\t\tEND\n        \t\t\tELSE 'Neutral: '||text1_neutral_answer \n\t\t\t\tEND \n        \tELSE 'Bad: '||text1_bad_answer || ' Neutral: '|| text1_neutral_answer||' Good: '||text1_good_answer \n\t\tEND AS comments\n   \tFROM survicate.nps_landlord_new_sub nps\n   \tWHERE nps.first_response_date::date <= '2021-10-24'\n   )\nSELECT * \nFROM nps_whatsapp\nUNION ALL \nSELECT * \nFROM nps_survicate\nORDER BY DATE DESC", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"houmdw_prod\".\"dbt_processing\".\"proc_cx_nps_landlords_pc\""}}, "sources": {"source.houm.public.dim_polygons": {"fqn": ["houm", "dwh", "dims", "public", "dim_polygons"], "database": "houmdw_prod", "schema": "public", "unique_id": "source.houm.public.dim_polygons", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "models/dwh/dims/sources.yml", "original_file_path": "models/dwh/dims/sources.yml", "name": "dim_polygons", "source_name": "public", "source_description": "", "loader": "", "identifier": "dim_polygons", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"public\".\"dim_polygons\"", "created_at": 1654784475.742263}, "source.houm.historical.historical_scheduler_macrozone": {"fqn": ["houm", "dwh", "dims", "historical", "historical_scheduler_macrozone"], "database": "houmdw_prod", "schema": "historical", "unique_id": "source.houm.historical.historical_scheduler_macrozone", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "models/dwh/dims/sources.yml", "original_file_path": "models/dwh/dims/sources.yml", "name": "historical_scheduler_macrozone", "source_name": "historical", "source_description": "", "loader": "", "identifier": "historical_scheduler_macrozone", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"historical\".\"historical_scheduler_macrozone\"", "created_at": 1654784475.7423859}, "source.houm.public.dim_dates": {"fqn": ["houm", "staging", "public", "dim_dates"], "database": "houmdw_prod", "schema": "public", "unique_id": "source.houm.public.dim_dates", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "dim_dates", "source_name": "public", "source_description": "", "loader": "", "identifier": "dim_dates", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"public\".\"dim_dates\"", "created_at": 1654784475.742477}, "source.houm.historical.historical_properties": {"fqn": ["houm", "staging", "historical", "historical_properties"], "database": "houmdw_prod", "schema": "historical", "unique_id": "source.houm.historical.historical_properties", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "historical_properties", "source_name": "historical", "source_description": "This is a historical schema, that captures every changes in each columns for every table at database **Arriendo asegurado**.\n\nthe principal tables in this schema are:\n- historical_properties\n- historical_arriendoasegurado_propertydetails\n- historical_properties_salesdetails\n- historical_users\n\nthe principal key for read changes, in each table, is the following columns:\n- audit_end_dt\n- audit_start_dt", "loader": "", "identifier": "historical_properties", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "audit_start_dt", "freshness": {"warn_after": {"count": 12, "period": "hour"}, "error_after": {"count": 24, "period": "hour"}, "filter": "date_diff('week',convert_timezone('UTC', audit_start_dt::date),current_date) < 1"}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"historical\".\"historical_properties\"", "created_at": 1654784475.742562}, "source.houm.historical.historical_arriendoasegurado_propertydetails": {"fqn": ["houm", "staging", "historical", "historical_arriendoasegurado_propertydetails"], "database": "houmdw_prod", "schema": "historical", "unique_id": "source.houm.historical.historical_arriendoasegurado_propertydetails", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "historical_arriendoasegurado_propertydetails", "source_name": "historical", "source_description": "This is a historical schema, that captures every changes in each columns for every table at database **Arriendo asegurado**.\n\nthe principal tables in this schema are:\n- historical_properties\n- historical_arriendoasegurado_propertydetails\n- historical_properties_salesdetails\n- historical_users\n\nthe principal key for read changes, in each table, is the following columns:\n- audit_end_dt\n- audit_start_dt", "loader": "", "identifier": "historical_arriendoasegurado_propertydetails", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "audit_start_dt", "freshness": {"warn_after": {"count": 12, "period": "hour"}, "error_after": {"count": 24, "period": "hour"}, "filter": "date_diff('week',convert_timezone('UTC', audit_start_dt::date),current_date) < 1"}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"historical\".\"historical_arriendoasegurado_propertydetails\"", "created_at": 1654784475.742641}, "source.houm.historical.historical_properties_salesdetails": {"fqn": ["houm", "staging", "historical", "historical_properties_salesdetails"], "database": "houmdw_prod", "schema": "historical", "unique_id": "source.houm.historical.historical_properties_salesdetails", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "historical_properties_salesdetails", "source_name": "historical", "source_description": "This is a historical schema, that captures every changes in each columns for every table at database **Arriendo asegurado**.\n\nthe principal tables in this schema are:\n- historical_properties\n- historical_arriendoasegurado_propertydetails\n- historical_properties_salesdetails\n- historical_users\n\nthe principal key for read changes, in each table, is the following columns:\n- audit_end_dt\n- audit_start_dt", "loader": "", "identifier": "historical_properties_salesdetails", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "audit_start_dt", "freshness": {"warn_after": {"count": 12, "period": "hour"}, "error_after": {"count": 24, "period": "hour"}, "filter": "date_diff('week',convert_timezone('UTC', audit_start_dt::date),current_date) < 1"}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"historical\".\"historical_properties_salesdetails\"", "created_at": 1654784475.74272}, "source.houm.historical.historical_arriendoasegurado_homecheckerdetails": {"fqn": ["houm", "staging", "historical", "historical_arriendoasegurado_homecheckerdetails"], "database": "houmdw_prod", "schema": "historical", "unique_id": "source.houm.historical.historical_arriendoasegurado_homecheckerdetails", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "historical_arriendoasegurado_homecheckerdetails", "source_name": "historical", "source_description": "This is a historical schema, that captures every changes in each columns for every table at database **Arriendo asegurado**.\n\nthe principal tables in this schema are:\n- historical_properties\n- historical_arriendoasegurado_propertydetails\n- historical_properties_salesdetails\n- historical_users\n\nthe principal key for read changes, in each table, is the following columns:\n- audit_end_dt\n- audit_start_dt", "loader": "", "identifier": "historical_arriendoasegurado_homecheckerdetails", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "audit_start_dt", "freshness": {"warn_after": {"count": 12, "period": "hour"}, "error_after": {"count": 24, "period": "hour"}, "filter": "date_diff('week',convert_timezone('UTC', audit_start_dt::date),current_date) < 1"}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"historical\".\"historical_arriendoasegurado_homecheckerdetails\"", "created_at": 1654784475.742795}, "source.houm.historical.historical_users": {"fqn": ["houm", "staging", "historical", "historical_users"], "database": "houmdw_prod", "schema": "historical", "unique_id": "source.houm.historical.historical_users", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "historical_users", "source_name": "historical", "source_description": "This is a historical schema, that captures every changes in each columns for every table at database **Arriendo asegurado**.\n\nthe principal tables in this schema are:\n- historical_properties\n- historical_arriendoasegurado_propertydetails\n- historical_properties_salesdetails\n- historical_users\n\nthe principal key for read changes, in each table, is the following columns:\n- audit_end_dt\n- audit_start_dt", "loader": "", "identifier": "historical_users", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "audit_start_dt", "freshness": {"warn_after": {"count": 12, "period": "hour"}, "error_after": {"count": 24, "period": "hour"}, "filter": "date_diff('week',convert_timezone('UTC', audit_start_dt::date),current_date) < 1"}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"historical\".\"historical_users\"", "created_at": 1654784475.742871}, "source.houm.historical.historical_contracts": {"fqn": ["houm", "staging", "historical", "historical_contracts"], "database": "houmdw_prod", "schema": "historical", "unique_id": "source.houm.historical.historical_contracts", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "historical_contracts", "source_name": "historical", "source_description": "This is a historical schema, that captures every changes in each columns for every table at database **Arriendo asegurado**.\n\nthe principal tables in this schema are:\n- historical_properties\n- historical_arriendoasegurado_propertydetails\n- historical_properties_salesdetails\n- historical_users\n\nthe principal key for read changes, in each table, is the following columns:\n- audit_end_dt\n- audit_start_dt", "loader": "", "identifier": "historical_contracts", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "audit_start_dt", "freshness": {"warn_after": {"count": 12, "period": "hour"}, "error_after": {"count": 24, "period": "hour"}, "filter": "date_diff('week',convert_timezone('UTC', audit_start_dt::date),current_date) < 1"}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"historical\".\"historical_contracts\"", "created_at": 1654784475.742948}, "source.houm.historical.historical_plans": {"fqn": ["houm", "staging", "historical", "historical_plans"], "database": "houmdw_prod", "schema": "historical", "unique_id": "source.houm.historical.historical_plans", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "historical_plans", "source_name": "historical", "source_description": "This is a historical schema, that captures every changes in each columns for every table at database **Arriendo asegurado**.\n\nthe principal tables in this schema are:\n- historical_properties\n- historical_arriendoasegurado_propertydetails\n- historical_properties_salesdetails\n- historical_users\n\nthe principal key for read changes, in each table, is the following columns:\n- audit_end_dt\n- audit_start_dt", "loader": "", "identifier": "historical_plans", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "audit_start_dt", "freshness": {"warn_after": {"count": 12, "period": "hour"}, "error_after": {"count": 24, "period": "hour"}, "filter": "date_diff('week',convert_timezone('UTC', audit_start_dt::date),current_date) < 1"}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"historical\".\"historical_plans\"", "created_at": 1654784475.7430232}, "source.houm.raw_stage.scheduler_macrozone": {"fqn": ["houm", "staging", "raw_stage", "scheduler_macrozone"], "database": "houmdw_prod", "schema": "raw_stage", "unique_id": "source.houm.raw_stage.scheduler_macrozone", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "scheduler_macrozone", "source_name": "raw_stage", "source_description": "The raw schema, it's a direct copy of the arriendoasegurado's tables:\n- scheduler_macrozone\n- properties_location", "loader": "", "identifier": "scheduler_macrozone", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"raw_stage\".\"scheduler_macrozone\"", "created_at": 1654784475.743096}, "source.houm.raw_stage.properties_location": {"fqn": ["houm", "staging", "raw_stage", "properties_location"], "database": "houmdw_prod", "schema": "raw_stage", "unique_id": "source.houm.raw_stage.properties_location", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "properties_location", "source_name": "raw_stage", "source_description": "The raw schema, it's a direct copy of the arriendoasegurado's tables:\n- scheduler_macrozone\n- properties_location", "loader": "", "identifier": "properties_location", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"raw_stage\".\"properties_location\"", "created_at": 1654784475.74317}, "source.houm.raw_stage.series_ipc_cl": {"fqn": ["houm", "staging", "raw_stage", "series_ipc_cl"], "database": "houmdw_prod", "schema": "raw_stage", "unique_id": "source.houm.raw_stage.series_ipc_cl", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "series_ipc_cl", "source_name": "raw_stage", "source_description": "The raw schema, it's a direct copy of the arriendoasegurado's tables:\n- scheduler_macrozone\n- properties_location", "loader": "", "identifier": "series_ipc_cl", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"raw_stage\".\"series_ipc_cl\"", "created_at": 1654784475.743243}, "source.houm.raw_stage.series_ipc_mx": {"fqn": ["houm", "staging", "raw_stage", "series_ipc_mx"], "database": "houmdw_prod", "schema": "raw_stage", "unique_id": "source.houm.raw_stage.series_ipc_mx", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "series_ipc_mx", "source_name": "raw_stage", "source_description": "The raw schema, it's a direct copy of the arriendoasegurado's tables:\n- scheduler_macrozone\n- properties_location", "loader": "", "identifier": "series_ipc_mx", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"raw_stage\".\"series_ipc_mx\"", "created_at": 1654784475.743316}, "source.houm.raw_stage.series_ipc_co": {"fqn": ["houm", "staging", "raw_stage", "series_ipc_co"], "database": "houmdw_prod", "schema": "raw_stage", "unique_id": "source.houm.raw_stage.series_ipc_co", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "series_ipc_co", "source_name": "raw_stage", "source_description": "The raw schema, it's a direct copy of the arriendoasegurado's tables:\n- scheduler_macrozone\n- properties_location", "loader": "", "identifier": "series_ipc_co", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"raw_stage\".\"series_ipc_co\"", "created_at": 1654784475.7433898}, "source.houm.raw_stage.properties": {"fqn": ["houm", "staging", "raw_stage", "properties"], "database": "houmdw_prod", "schema": "raw_stage", "unique_id": "source.houm.raw_stage.properties", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "properties", "source_name": "raw_stage", "source_description": "The raw schema, it's a direct copy of the arriendoasegurado's tables:\n- scheduler_macrozone\n- properties_location", "loader": "", "identifier": "properties", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"raw_stage\".\"properties\"", "created_at": 1654784475.7434628}, "source.houm.raw_stage.properties_salesdetails": {"fqn": ["houm", "staging", "raw_stage", "properties_salesdetails"], "database": "houmdw_prod", "schema": "raw_stage", "unique_id": "source.houm.raw_stage.properties_salesdetails", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "properties_salesdetails", "source_name": "raw_stage", "source_description": "The raw schema, it's a direct copy of the arriendoasegurado's tables:\n- scheduler_macrozone\n- properties_location", "loader": "", "identifier": "properties_salesdetails", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"raw_stage\".\"properties_salesdetails\"", "created_at": 1654784475.7435362}, "source.houm.raw_stage.arriendoasegurado_propertydetails": {"fqn": ["houm", "staging", "raw_stage", "arriendoasegurado_propertydetails"], "database": "houmdw_prod", "schema": "raw_stage", "unique_id": "source.houm.raw_stage.arriendoasegurado_propertydetails", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "arriendoasegurado_propertydetails", "source_name": "raw_stage", "source_description": "The raw schema, it's a direct copy of the arriendoasegurado's tables:\n- scheduler_macrozone\n- properties_location", "loader": "", "identifier": "arriendoasegurado_propertydetails", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"raw_stage\".\"arriendoasegurado_propertydetails\"", "created_at": 1654784475.7436101}, "source.houm.raw_stage.users": {"fqn": ["houm", "staging", "raw_stage", "users"], "database": "houmdw_prod", "schema": "raw_stage", "unique_id": "source.houm.raw_stage.users", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "users", "source_name": "raw_stage", "source_description": "The raw schema, it's a direct copy of the arriendoasegurado's tables:\n- scheduler_macrozone\n- properties_location", "loader": "", "identifier": "users", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"raw_stage\".\"users\"", "created_at": 1654784475.743686}, "source.houm.raw_stage.demand_portalhoum": {"fqn": ["houm", "staging", "raw_stage", "demand_portalhoum"], "database": "houmdw_prod", "schema": "raw_stage", "unique_id": "source.houm.raw_stage.demand_portalhoum", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "demand_portalhoum", "source_name": "raw_stage", "source_description": "The raw schema, it's a direct copy of the arriendoasegurado's tables:\n- scheduler_macrozone\n- properties_location", "loader": "", "identifier": "demand_portalhoum", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"raw_stage\".\"demand_portalhoum\"", "created_at": 1654784475.743762}, "source.houm.raw_stage.demand_portalapplicant": {"fqn": ["houm", "staging", "raw_stage", "demand_portalapplicant"], "database": "houmdw_prod", "schema": "raw_stage", "unique_id": "source.houm.raw_stage.demand_portalapplicant", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "demand_portalapplicant", "source_name": "raw_stage", "source_description": "The raw schema, it's a direct copy of the arriendoasegurado's tables:\n- scheduler_macrozone\n- properties_location", "loader": "", "identifier": "demand_portalapplicant", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"raw_stage\".\"demand_portalapplicant\"", "created_at": 1654784475.743835}, "source.houm.raw_stage.scheduler_schedules": {"fqn": ["houm", "staging", "raw_stage", "scheduler_schedules"], "database": "houmdw_prod", "schema": "raw_stage", "unique_id": "source.houm.raw_stage.scheduler_schedules", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "scheduler_schedules", "source_name": "raw_stage", "source_description": "The raw schema, it's a direct copy of the arriendoasegurado's tables:\n- scheduler_macrozone\n- properties_location", "loader": "", "identifier": "scheduler_schedules", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"raw_stage\".\"scheduler_schedules\"", "created_at": 1654784475.7439098}, "source.houm.raw_stage.scheduler_scheduletypes": {"fqn": ["houm", "staging", "raw_stage", "scheduler_scheduletypes"], "database": "houmdw_prod", "schema": "raw_stage", "unique_id": "source.houm.raw_stage.scheduler_scheduletypes", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "scheduler_scheduletypes", "source_name": "raw_stage", "source_description": "The raw schema, it's a direct copy of the arriendoasegurado's tables:\n- scheduler_macrozone\n- properties_location", "loader": "", "identifier": "scheduler_scheduletypes", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"raw_stage\".\"scheduler_scheduletypes\"", "created_at": 1654784475.743989}, "source.houm.raw_stage.scheduler_schedulehasapplicant": {"fqn": ["houm", "staging", "raw_stage", "scheduler_schedulehasapplicant"], "database": "houmdw_prod", "schema": "raw_stage", "unique_id": "source.houm.raw_stage.scheduler_schedulehasapplicant", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "scheduler_schedulehasapplicant", "source_name": "raw_stage", "source_description": "The raw schema, it's a direct copy of the arriendoasegurado's tables:\n- scheduler_macrozone\n- properties_location", "loader": "", "identifier": "scheduler_schedulehasapplicant", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"raw_stage\".\"scheduler_schedulehasapplicant\"", "created_at": 1654784475.744061}, "source.houm.raw_stage.subscription_subscription": {"fqn": ["houm", "staging", "raw_stage", "subscription_subscription"], "database": "houmdw_prod", "schema": "raw_stage", "unique_id": "source.houm.raw_stage.subscription_subscription", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "subscription_subscription", "source_name": "raw_stage", "source_description": "The raw schema, it's a direct copy of the arriendoasegurado's tables:\n- scheduler_macrozone\n- properties_location", "loader": "", "identifier": "subscription_subscription", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"raw_stage\".\"subscription_subscription\"", "created_at": 1654784475.744134}, "source.houm.raw_stage.arriendoasegurado_applicant": {"fqn": ["houm", "staging", "raw_stage", "arriendoasegurado_applicant"], "database": "houmdw_prod", "schema": "raw_stage", "unique_id": "source.houm.raw_stage.arriendoasegurado_applicant", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "arriendoasegurado_applicant", "source_name": "raw_stage", "source_description": "The raw schema, it's a direct copy of the arriendoasegurado's tables:\n- scheduler_macrozone\n- properties_location", "loader": "", "identifier": "arriendoasegurado_applicant", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"raw_stage\".\"arriendoasegurado_applicant\"", "created_at": 1654784475.7442062}, "source.houm.raw_stage.demand_lead": {"fqn": ["houm", "staging", "raw_stage", "demand_lead"], "database": "houmdw_prod", "schema": "raw_stage", "unique_id": "source.houm.raw_stage.demand_lead", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "demand_lead", "source_name": "raw_stage", "source_description": "The raw schema, it's a direct copy of the arriendoasegurado's tables:\n- scheduler_macrozone\n- properties_location", "loader": "", "identifier": "demand_lead", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"raw_stage\".\"demand_lead\"", "created_at": 1654784475.744277}, "source.houm.staging_buk.employees_chile": {"fqn": ["houm", "staging", "staging_buk", "employees_chile"], "database": "houmdw_prod", "schema": "staging_buk", "unique_id": "source.houm.staging_buk.employees_chile", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "employees_chile", "source_name": "staging_buk", "source_description": "This information is collected by the current Human Resources System: BUK", "loader": "", "identifier": "employees_chile", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "load_timestamp", "freshness": {"warn_after": {"count": 24, "period": "hour"}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"staging_buk\".\"employees_chile\"", "created_at": 1654784475.744355}, "source.houm.staging_buk.employees_colombia": {"fqn": ["houm", "staging", "staging_buk", "employees_colombia"], "database": "houmdw_prod", "schema": "staging_buk", "unique_id": "source.houm.staging_buk.employees_colombia", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "employees_colombia", "source_name": "staging_buk", "source_description": "This information is collected by the current Human Resources System: BUK", "loader": "", "identifier": "employees_colombia", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "load_timestamp", "freshness": {"warn_after": {"count": 24, "period": "hour"}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"staging_buk\".\"employees_colombia\"", "created_at": 1654784475.744458}, "source.houm.staging_buk.roles_chile": {"fqn": ["houm", "staging", "staging_buk", "roles_chile"], "database": "houmdw_prod", "schema": "staging_buk", "unique_id": "source.houm.staging_buk.roles_chile", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "roles_chile", "source_name": "staging_buk", "source_description": "This information is collected by the current Human Resources System: BUK", "loader": "", "identifier": "roles_chile", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "load_timestamp", "freshness": {"warn_after": {"count": 24, "period": "hour"}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"staging_buk\".\"roles_chile\"", "created_at": 1654784475.74453}, "source.houm.staging_buk.roles_colombia": {"fqn": ["houm", "staging", "staging_buk", "roles_colombia"], "database": "houmdw_prod", "schema": "staging_buk", "unique_id": "source.houm.staging_buk.roles_colombia", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "roles_colombia", "source_name": "staging_buk", "source_description": "This information is collected by the current Human Resources System: BUK", "loader": "", "identifier": "roles_colombia", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "load_timestamp", "freshness": {"warn_after": {"count": 24, "period": "hour"}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"staging_buk\".\"roles_colombia\"", "created_at": 1654784475.744603}, "source.houm.staging_buk.accounting_chile": {"fqn": ["houm", "staging", "staging_buk", "accounting_chile"], "database": "houmdw_prod", "schema": "staging_buk", "unique_id": "source.houm.staging_buk.accounting_chile", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "accounting_chile", "source_name": "staging_buk", "source_description": "This information is collected by the current Human Resources System: BUK", "loader": "", "identifier": "accounting_chile", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "load_timestamp", "freshness": {"warn_after": {"count": 24, "period": "hour"}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"staging_buk\".\"accounting_chile\"", "created_at": 1654784475.744682}, "source.houm.staging_buk.accounting_colombia": {"fqn": ["houm", "staging", "staging_buk", "accounting_colombia"], "database": "houmdw_prod", "schema": "staging_buk", "unique_id": "source.houm.staging_buk.accounting_colombia", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "accounting_colombia", "source_name": "staging_buk", "source_description": "This information is collected by the current Human Resources System: BUK", "loader": "", "identifier": "accounting_colombia", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "load_timestamp", "freshness": {"warn_after": {"count": 24, "period": "hour"}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"staging_buk\".\"accounting_colombia\"", "created_at": 1654784475.744757}, "source.houm.staging_buk.areas_chile": {"fqn": ["houm", "staging", "staging_buk", "areas_chile"], "database": "houmdw_prod", "schema": "staging_buk", "unique_id": "source.houm.staging_buk.areas_chile", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "areas_chile", "source_name": "staging_buk", "source_description": "This information is collected by the current Human Resources System: BUK", "loader": "", "identifier": "areas_chile", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "load_timestamp", "freshness": {"warn_after": {"count": 24, "period": "hour"}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"staging_buk\".\"areas_chile\"", "created_at": 1654784475.744892}, "source.houm.staging_buk.areas_colombia": {"fqn": ["houm", "staging", "staging_buk", "areas_colombia"], "database": "houmdw_prod", "schema": "staging_buk", "unique_id": "source.houm.staging_buk.areas_colombia", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "areas_colombia", "source_name": "staging_buk", "source_description": "This information is collected by the current Human Resources System: BUK", "loader": "", "identifier": "areas_colombia", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "load_timestamp", "freshness": {"warn_after": {"count": 24, "period": "hour"}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"staging_buk\".\"areas_colombia\"", "created_at": 1654784475.744991}, "source.houm.staging_buk.companies_chile": {"fqn": ["houm", "staging", "staging_buk", "companies_chile"], "database": "houmdw_prod", "schema": "staging_buk", "unique_id": "source.houm.staging_buk.companies_chile", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "companies_chile", "source_name": "staging_buk", "source_description": "This information is collected by the current Human Resources System: BUK", "loader": "", "identifier": "companies_chile", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "load_timestamp", "freshness": {"warn_after": {"count": 24, "period": "hour"}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"staging_buk\".\"companies_chile\"", "created_at": 1654784475.74507}, "source.houm.staging_buk.companies_colombia": {"fqn": ["houm", "staging", "staging_buk", "companies_colombia"], "database": "houmdw_prod", "schema": "staging_buk", "unique_id": "source.houm.staging_buk.companies_colombia", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "companies_colombia", "source_name": "staging_buk", "source_description": "This information is collected by the current Human Resources System: BUK", "loader": "", "identifier": "companies_colombia", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "load_timestamp", "freshness": {"warn_after": {"count": 24, "period": "hour"}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"staging_buk\".\"companies_colombia\"", "created_at": 1654784475.745149}, "source.houm.staging_buk.departments_chile": {"fqn": ["houm", "staging", "staging_buk", "departments_chile"], "database": "houmdw_prod", "schema": "staging_buk", "unique_id": "source.houm.staging_buk.departments_chile", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "departments_chile", "source_name": "staging_buk", "source_description": "This information is collected by the current Human Resources System: BUK", "loader": "", "identifier": "departments_chile", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "load_timestamp", "freshness": {"warn_after": {"count": 24, "period": "hour"}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"staging_buk\".\"departments_chile\"", "created_at": 1654784475.745228}, "source.houm.staging_buk.departments_colombia": {"fqn": ["houm", "staging", "staging_buk", "departments_colombia"], "database": "houmdw_prod", "schema": "staging_buk", "unique_id": "source.houm.staging_buk.departments_colombia", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "departments_colombia", "source_name": "staging_buk", "source_description": "This information is collected by the current Human Resources System: BUK", "loader": "", "identifier": "departments_colombia", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "load_timestamp", "freshness": {"warn_after": {"count": 24, "period": "hour"}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"staging_buk\".\"departments_colombia\"", "created_at": 1654784475.745304}, "source.houm.staging_buk.jobs_chile": {"fqn": ["houm", "staging", "staging_buk", "jobs_chile"], "database": "houmdw_prod", "schema": "staging_buk", "unique_id": "source.houm.staging_buk.jobs_chile", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "jobs_chile", "source_name": "staging_buk", "source_description": "This information is collected by the current Human Resources System: BUK", "loader": "", "identifier": "jobs_chile", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "load_timestamp", "freshness": {"warn_after": {"count": 24, "period": "hour"}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"staging_buk\".\"jobs_chile\"", "created_at": 1654784475.745377}, "source.houm.staging_buk.jobs_colombia": {"fqn": ["houm", "staging", "staging_buk", "jobs_colombia"], "database": "houmdw_prod", "schema": "staging_buk", "unique_id": "source.houm.staging_buk.jobs_colombia", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "jobs_colombia", "source_name": "staging_buk", "source_description": "This information is collected by the current Human Resources System: BUK", "loader": "", "identifier": "jobs_colombia", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "load_timestamp", "freshness": {"warn_after": {"count": 24, "period": "hour"}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"staging_buk\".\"jobs_colombia\"", "created_at": 1654784475.745449}, "source.houm.staging_buk.payrolls_chile": {"fqn": ["houm", "staging", "staging_buk", "payrolls_chile"], "database": "houmdw_prod", "schema": "staging_buk", "unique_id": "source.houm.staging_buk.payrolls_chile", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "payrolls_chile", "source_name": "staging_buk", "source_description": "This information is collected by the current Human Resources System: BUK", "loader": "", "identifier": "payrolls_chile", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "load_timestamp", "freshness": {"warn_after": {"count": 24, "period": "hour"}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"staging_buk\".\"payrolls_chile\"", "created_at": 1654784475.745523}, "source.houm.staging_buk.payrolls_colombia": {"fqn": ["houm", "staging", "staging_buk", "payrolls_colombia"], "database": "houmdw_prod", "schema": "staging_buk", "unique_id": "source.houm.staging_buk.payrolls_colombia", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "payrolls_colombia", "source_name": "staging_buk", "source_description": "This information is collected by the current Human Resources System: BUK", "loader": "", "identifier": "payrolls_colombia", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "load_timestamp", "freshness": {"warn_after": {"count": 24, "period": "hour"}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"staging_buk\".\"payrolls_colombia\"", "created_at": 1654784475.745597}, "source.houm.staging_buk.line_settlements_chile": {"fqn": ["houm", "staging", "staging_buk", "line_settlements_chile"], "database": "houmdw_prod", "schema": "staging_buk", "unique_id": "source.houm.staging_buk.line_settlements_chile", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "line_settlements_chile", "source_name": "staging_buk", "source_description": "This information is collected by the current Human Resources System: BUK", "loader": "", "identifier": "line_settlements_chile", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "load_timestamp", "freshness": {"warn_after": {"count": 24, "period": "hour"}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"staging_buk\".\"line_settlements_chile\"", "created_at": 1654784475.745675}, "source.houm.staging_buk.line_settlements_colombia": {"fqn": ["houm", "staging", "staging_buk", "line_settlements_colombia"], "database": "houmdw_prod", "schema": "staging_buk", "unique_id": "source.houm.staging_buk.line_settlements_colombia", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "line_settlements_colombia", "source_name": "staging_buk", "source_description": "This information is collected by the current Human Resources System: BUK", "loader": "", "identifier": "line_settlements_colombia", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "load_timestamp", "freshness": {"warn_after": {"count": 24, "period": "hour"}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"staging_buk\".\"line_settlements_colombia\"", "created_at": 1654784475.7457778}, "source.houm.airbyte_zendesk.users": {"fqn": ["houm", "staging", "airbyte_zendesk", "users"], "database": "houmdw_prod", "schema": "airbyte_zendesk", "unique_id": "source.houm.airbyte_zendesk.users", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "users", "source_name": "airbyte_zendesk", "source_description": "This is a processed model with information from zendesk. Consolidates the agents and customers. The more important columns are:\n- id: *unique user id at zendesk Houm*\n- email: *email of the user*\n- role: *the role of the user*\n- tags\n- user_fields_id_de_propiedad\n- user_fields_tipo_de_usuario\n- user_fields_id_suscripcin\n- user_fields_social_messaging_user_info\n- user_fields_nombre\n- user_fields_rut", "loader": "", "identifier": "users", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_airbyte_emitted_at", "freshness": {"warn_after": {"count": 24, "period": "hour"}, "error_after": {"count": 48, "period": "hour"}, "filter": "date_diff('week',convert_timezone('UTC', _airbyte_emitted_at::date),current_date) < 1"}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"airbyte_zendesk\".\"users\"", "created_at": 1654784475.745852}, "source.houm.airbyte_zendesk.tickets": {"fqn": ["houm", "staging", "airbyte_zendesk", "tickets"], "database": "houmdw_prod", "schema": "airbyte_zendesk", "unique_id": "source.houm.airbyte_zendesk.tickets", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "tickets", "source_name": "airbyte_zendesk", "source_description": "This is a processed model with information from zendesk. Consolidates the agents and customers. The more important columns are:\n- id: *unique user id at zendesk Houm*\n- email: *email of the user*\n- role: *the role of the user*\n- tags\n- user_fields_id_de_propiedad\n- user_fields_tipo_de_usuario\n- user_fields_id_suscripcin\n- user_fields_social_messaging_user_info\n- user_fields_nombre\n- user_fields_rut", "loader": "", "identifier": "tickets", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_airbyte_emitted_at", "freshness": {"warn_after": {"count": 24, "period": "hour"}, "error_after": {"count": 48, "period": "hour"}, "filter": "date_diff('week',convert_timezone('UTC', _airbyte_emitted_at::date),current_date) < 1"}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"airbyte_zendesk\".\"tickets\"", "created_at": 1654784475.7459252}, "source.houm.airbyte_zendesk.ticket_audits": {"fqn": ["houm", "staging", "airbyte_zendesk", "ticket_audits"], "database": "houmdw_prod", "schema": "airbyte_zendesk", "unique_id": "source.houm.airbyte_zendesk.ticket_audits", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "ticket_audits", "source_name": "airbyte_zendesk", "source_description": "This is a processed model with information from zendesk. Consolidates the agents and customers. The more important columns are:\n- id: *unique user id at zendesk Houm*\n- email: *email of the user*\n- role: *the role of the user*\n- tags\n- user_fields_id_de_propiedad\n- user_fields_tipo_de_usuario\n- user_fields_id_suscripcin\n- user_fields_social_messaging_user_info\n- user_fields_nombre\n- user_fields_rut", "loader": "", "identifier": "ticket_audits", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_airbyte_emitted_at", "freshness": {"warn_after": {"count": 24, "period": "hour"}, "error_after": {"count": 48, "period": "hour"}, "filter": "date_diff('week',convert_timezone('UTC', _airbyte_emitted_at::date),current_date) < 1"}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"airbyte_zendesk\".\"ticket_audits\"", "created_at": 1654784475.7459981}, "source.houm.airbyte_zendesk.ticket_audits_events": {"fqn": ["houm", "staging", "airbyte_zendesk", "ticket_audits_events"], "database": "houmdw_prod", "schema": "airbyte_zendesk", "unique_id": "source.houm.airbyte_zendesk.ticket_audits_events", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "ticket_audits_events", "source_name": "airbyte_zendesk", "source_description": "This is a processed model with information from zendesk. Consolidates the agents and customers. The more important columns are:\n- id: *unique user id at zendesk Houm*\n- email: *email of the user*\n- role: *the role of the user*\n- tags\n- user_fields_id_de_propiedad\n- user_fields_tipo_de_usuario\n- user_fields_id_suscripcin\n- user_fields_social_messaging_user_info\n- user_fields_nombre\n- user_fields_rut", "loader": "", "identifier": "ticket_audits_events", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_airbyte_emitted_at", "freshness": {"warn_after": {"count": 24, "period": "hour"}, "error_after": {"count": 48, "period": "hour"}, "filter": "date_diff('week',convert_timezone('UTC', _airbyte_emitted_at::date),current_date) < 1"}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"airbyte_zendesk\".\"ticket_audits_events\"", "created_at": 1654784475.74607}, "source.houm.airbyte_zendesk.ticket_audits_via": {"fqn": ["houm", "staging", "airbyte_zendesk", "ticket_audits_via"], "database": "houmdw_prod", "schema": "airbyte_zendesk", "unique_id": "source.houm.airbyte_zendesk.ticket_audits_via", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "ticket_audits_via", "source_name": "airbyte_zendesk", "source_description": "This is a processed model with information from zendesk. Consolidates the agents and customers. The more important columns are:\n- id: *unique user id at zendesk Houm*\n- email: *email of the user*\n- role: *the role of the user*\n- tags\n- user_fields_id_de_propiedad\n- user_fields_tipo_de_usuario\n- user_fields_id_suscripcin\n- user_fields_social_messaging_user_info\n- user_fields_nombre\n- user_fields_rut", "loader": "", "identifier": "ticket_audits_via", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_airbyte_emitted_at", "freshness": {"warn_after": {"count": 24, "period": "hour"}, "error_after": {"count": 48, "period": "hour"}, "filter": "date_diff('week',convert_timezone('UTC', _airbyte_emitted_at::date),current_date) < 1"}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"airbyte_zendesk\".\"ticket_audits_via\"", "created_at": 1654784475.746142}, "source.houm.airbyte_zendesk.ticket_audits_via_source": {"fqn": ["houm", "staging", "airbyte_zendesk", "ticket_audits_via_source"], "database": "houmdw_prod", "schema": "airbyte_zendesk", "unique_id": "source.houm.airbyte_zendesk.ticket_audits_via_source", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "ticket_audits_via_source", "source_name": "airbyte_zendesk", "source_description": "This is a processed model with information from zendesk. Consolidates the agents and customers. The more important columns are:\n- id: *unique user id at zendesk Houm*\n- email: *email of the user*\n- role: *the role of the user*\n- tags\n- user_fields_id_de_propiedad\n- user_fields_tipo_de_usuario\n- user_fields_id_suscripcin\n- user_fields_social_messaging_user_info\n- user_fields_nombre\n- user_fields_rut", "loader": "", "identifier": "ticket_audits_via_source", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_airbyte_emitted_at", "freshness": {"warn_after": {"count": 24, "period": "hour"}, "error_after": {"count": 48, "period": "hour"}, "filter": "date_diff('week',convert_timezone('UTC', _airbyte_emitted_at::date),current_date) < 1"}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"airbyte_zendesk\".\"ticket_audits_via_source\"", "created_at": 1654784475.746231}, "source.houm.airbyte_zendesk.ticket_audits_via_source_from": {"fqn": ["houm", "staging", "airbyte_zendesk", "ticket_audits_via_source_from"], "database": "houmdw_prod", "schema": "airbyte_zendesk", "unique_id": "source.houm.airbyte_zendesk.ticket_audits_via_source_from", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "ticket_audits_via_source_from", "source_name": "airbyte_zendesk", "source_description": "This is a processed model with information from zendesk. Consolidates the agents and customers. The more important columns are:\n- id: *unique user id at zendesk Houm*\n- email: *email of the user*\n- role: *the role of the user*\n- tags\n- user_fields_id_de_propiedad\n- user_fields_tipo_de_usuario\n- user_fields_id_suscripcin\n- user_fields_social_messaging_user_info\n- user_fields_nombre\n- user_fields_rut", "loader": "", "identifier": "ticket_audits_via_source_from", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_airbyte_emitted_at", "freshness": {"warn_after": {"count": 24, "period": "hour"}, "error_after": {"count": 48, "period": "hour"}, "filter": "date_diff('week',convert_timezone('UTC', _airbyte_emitted_at::date),current_date) < 1"}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"airbyte_zendesk\".\"ticket_audits_via_source_from\"", "created_at": 1654784475.746306}, "source.houm.airbyte_zendesk.ticket_audits_via_source_to": {"fqn": ["houm", "staging", "airbyte_zendesk", "ticket_audits_via_source_to"], "database": "houmdw_prod", "schema": "airbyte_zendesk", "unique_id": "source.houm.airbyte_zendesk.ticket_audits_via_source_to", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "ticket_audits_via_source_to", "source_name": "airbyte_zendesk", "source_description": "This is a processed model with information from zendesk. Consolidates the agents and customers. The more important columns are:\n- id: *unique user id at zendesk Houm*\n- email: *email of the user*\n- role: *the role of the user*\n- tags\n- user_fields_id_de_propiedad\n- user_fields_tipo_de_usuario\n- user_fields_id_suscripcin\n- user_fields_social_messaging_user_info\n- user_fields_nombre\n- user_fields_rut", "loader": "", "identifier": "ticket_audits_via_source_to", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_airbyte_emitted_at", "freshness": {"warn_after": {"count": 24, "period": "hour"}, "error_after": {"count": 48, "period": "hour"}, "filter": "date_diff('week',convert_timezone('UTC', _airbyte_emitted_at::date),current_date) < 1"}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"airbyte_zendesk\".\"ticket_audits_via_source_to\"", "created_at": 1654784475.746378}, "source.houm.airbyte_zendesk.ticket_metrics": {"fqn": ["houm", "staging", "airbyte_zendesk", "ticket_metrics"], "database": "houmdw_prod", "schema": "airbyte_zendesk", "unique_id": "source.houm.airbyte_zendesk.ticket_metrics", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "ticket_metrics", "source_name": "airbyte_zendesk", "source_description": "This is a processed model with information from zendesk. Consolidates the agents and customers. The more important columns are:\n- id: *unique user id at zendesk Houm*\n- email: *email of the user*\n- role: *the role of the user*\n- tags\n- user_fields_id_de_propiedad\n- user_fields_tipo_de_usuario\n- user_fields_id_suscripcin\n- user_fields_social_messaging_user_info\n- user_fields_nombre\n- user_fields_rut", "loader": "", "identifier": "ticket_metrics", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_airbyte_emitted_at", "freshness": {"warn_after": {"count": 24, "period": "hour"}, "error_after": {"count": 48, "period": "hour"}, "filter": "date_diff('week',convert_timezone('UTC', _airbyte_emitted_at::date),current_date) < 1"}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"airbyte_zendesk\".\"ticket_metrics\"", "created_at": 1654784475.746453}, "source.houm.airbyte_zendesk.ticket_comments": {"fqn": ["houm", "staging", "airbyte_zendesk", "ticket_comments"], "database": "houmdw_prod", "schema": "airbyte_zendesk", "unique_id": "source.houm.airbyte_zendesk.ticket_comments", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "ticket_comments", "source_name": "airbyte_zendesk", "source_description": "This is a processed model with information from zendesk. Consolidates the agents and customers. The more important columns are:\n- id: *unique user id at zendesk Houm*\n- email: *email of the user*\n- role: *the role of the user*\n- tags\n- user_fields_id_de_propiedad\n- user_fields_tipo_de_usuario\n- user_fields_id_suscripcin\n- user_fields_social_messaging_user_info\n- user_fields_nombre\n- user_fields_rut", "loader": "", "identifier": "ticket_comments", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "_airbyte_emitted_at", "freshness": {"warn_after": {"count": 24, "period": "hour"}, "error_after": {"count": 48, "period": "hour"}, "filter": "date_diff('week',convert_timezone('UTC', _airbyte_emitted_at::date),current_date) < 1"}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"airbyte_zendesk\".\"ticket_comments\"", "created_at": 1654784475.746529}, "source.houm.pipedrive.activities": {"fqn": ["houm", "staging", "pipedrive", "activities"], "database": "houmdw_prod", "schema": "pipedrive", "unique_id": "source.houm.pipedrive.activities", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "activities", "source_name": "pipedrive", "source_description": "pipedrive source", "loader": "", "identifier": "activities", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"pipedrive\".\"activities\"", "created_at": 1654784475.7466052}, "source.houm.pipedrive.deals": {"fqn": ["houm", "staging", "pipedrive", "deals"], "database": "houmdw_prod", "schema": "pipedrive", "unique_id": "source.houm.pipedrive.deals", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "deals", "source_name": "pipedrive", "source_description": "pipedrive source", "loader": "", "identifier": "deals", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"pipedrive\".\"deals\"", "created_at": 1654784475.746679}, "source.houm.pipedrive.pipelines": {"fqn": ["houm", "staging", "pipedrive", "pipelines"], "database": "houmdw_prod", "schema": "pipedrive", "unique_id": "source.houm.pipedrive.pipelines", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "pipelines", "source_name": "pipedrive", "source_description": "pipedrive source", "loader": "", "identifier": "pipelines", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"pipedrive\".\"pipelines\"", "created_at": 1654784475.746751}, "source.houm.pipedrive.stages": {"fqn": ["houm", "staging", "pipedrive", "stages"], "database": "houmdw_prod", "schema": "pipedrive", "unique_id": "source.houm.pipedrive.stages", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "stages", "source_name": "pipedrive", "source_description": "pipedrive source", "loader": "", "identifier": "stages", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"pipedrive\".\"stages\"", "created_at": 1654784475.746824}, "source.houm.pipedrive.bi_persons": {"fqn": ["houm", "staging", "pipedrive", "bi_persons"], "database": "houmdw_prod", "schema": "pipedrive", "unique_id": "source.houm.pipedrive.bi_persons", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "bi_persons", "source_name": "pipedrive", "source_description": "pipedrive source", "loader": "", "identifier": "bi_persons", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"pipedrive\".\"bi_persons\"", "created_at": 1654784475.746898}, "source.houm.pipedrive.bi_deals": {"fqn": ["houm", "staging", "pipedrive", "bi_deals"], "database": "houmdw_prod", "schema": "pipedrive", "unique_id": "source.houm.pipedrive.bi_deals", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "bi_deals", "source_name": "pipedrive", "source_description": "pipedrive source", "loader": "", "identifier": "bi_deals", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"pipedrive\".\"bi_deals\"", "created_at": 1654784475.7469718}, "source.houm.mongo_tables.payments_cl_db_movements": {"fqn": ["houm", "staging", "mongo_tables", "payments_cl_db_movements"], "database": "houmdw_prod", "schema": "mongo_tables", "unique_id": "source.houm.mongo_tables.payments_cl_db_movements", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "payments_cl_db_movements", "source_name": "mongo_tables", "source_description": "payments database in mongodb", "loader": "", "identifier": "payments_cl_db_movements", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "created_at", "freshness": {"warn_after": {"count": 12, "period": "hour"}, "error_after": {"count": 24, "period": "hour"}, "filter": "date_diff('week',convert_timezone('UTC', created_at::date),current_date) < 1"}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"mongo_tables\".\"payments_cl_db_movements\"", "created_at": 1654784475.747047}, "source.houm.mongo_tables.payments_co_db_movements": {"fqn": ["houm", "staging", "mongo_tables", "payments_co_db_movements"], "database": "houmdw_prod", "schema": "mongo_tables", "unique_id": "source.houm.mongo_tables.payments_co_db_movements", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "payments_co_db_movements", "source_name": "mongo_tables", "source_description": "payments database in mongodb", "loader": "", "identifier": "payments_co_db_movements", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "created_at", "freshness": {"warn_after": {"count": 12, "period": "hour"}, "error_after": {"count": 24, "period": "hour"}, "filter": "date_diff('week',convert_timezone('UTC', created_at::date),current_date) < 1"}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"mongo_tables\".\"payments_co_db_movements\"", "created_at": 1654784475.7471201}, "source.houm.mongo_tables.payments_mx_db_movements": {"fqn": ["houm", "staging", "mongo_tables", "payments_mx_db_movements"], "database": "houmdw_prod", "schema": "mongo_tables", "unique_id": "source.houm.mongo_tables.payments_mx_db_movements", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "payments_mx_db_movements", "source_name": "mongo_tables", "source_description": "payments database in mongodb", "loader": "", "identifier": "payments_mx_db_movements", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": "created_at", "freshness": {"warn_after": {"count": 12, "period": "hour"}, "error_after": {"count": 24, "period": "hour"}, "filter": "date_diff('week',convert_timezone('UTC', created_at::date),current_date) < 1"}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"mongo_tables\".\"payments_mx_db_movements\"", "created_at": 1654784475.747193}, "source.houm.airbyte_gspread.bb_fb": {"fqn": ["houm", "staging", "airbyte_gspread", "bb_fb"], "database": "houmdw_prod", "schema": "airbyte_gspread", "unique_id": "source.houm.airbyte_gspread.bb_fb", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "bb_fb", "source_name": "airbyte_gspread", "source_description": "Tables maintained in Google Spreadsheet", "loader": "", "identifier": "bb_fb", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"airbyte_gspread\".\"bb_fb\"", "created_at": 1654784475.747265}, "source.houm.airbyte_gspread.gg_cl": {"fqn": ["houm", "staging", "airbyte_gspread", "gg_cl"], "database": "houmdw_prod", "schema": "airbyte_gspread", "unique_id": "source.houm.airbyte_gspread.gg_cl", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "gg_cl", "source_name": "airbyte_gspread", "source_description": "Tables maintained in Google Spreadsheet", "loader": "", "identifier": "gg_cl", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"airbyte_gspread\".\"gg_cl\"", "created_at": 1654784475.747342}, "source.houm.airbyte_gspread.gg_mxco": {"fqn": ["houm", "staging", "airbyte_gspread", "gg_mxco"], "database": "houmdw_prod", "schema": "airbyte_gspread", "unique_id": "source.houm.airbyte_gspread.gg_mxco", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "gg_mxco", "source_name": "airbyte_gspread", "source_description": "Tables maintained in Google Spreadsheet", "loader": "", "identifier": "gg_mxco", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"airbyte_gspread\".\"gg_mxco\"", "created_at": 1654784475.747416}, "source.houm.airbyte_gspread.campaign_keys_fb": {"fqn": ["houm", "staging", "airbyte_gspread", "campaign_keys_fb"], "database": "houmdw_prod", "schema": "airbyte_gspread", "unique_id": "source.houm.airbyte_gspread.campaign_keys_fb", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "campaign_keys_fb", "source_name": "airbyte_gspread", "source_description": "Tables maintained in Google Spreadsheet", "loader": "", "identifier": "campaign_keys_fb", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"airbyte_gspread\".\"campaign_keys_fb\"", "created_at": 1654784475.747488}, "source.houm.airbyte_gspread.campaign_keys_gg": {"fqn": ["houm", "staging", "airbyte_gspread", "campaign_keys_gg"], "database": "houmdw_prod", "schema": "airbyte_gspread", "unique_id": "source.houm.airbyte_gspread.campaign_keys_gg", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "campaign_keys_gg", "source_name": "airbyte_gspread", "source_description": "Tables maintained in Google Spreadsheet", "loader": "", "identifier": "campaign_keys_gg", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"airbyte_gspread\".\"campaign_keys_gg\"", "created_at": 1654784475.747561}, "source.houm.airbyte_gspread.data": {"fqn": ["houm", "staging", "airbyte_gspread", "data"], "database": "houmdw_prod", "schema": "airbyte_gspread", "unique_id": "source.houm.airbyte_gspread.data", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "data", "source_name": "airbyte_gspread", "source_description": "Tables maintained in Google Spreadsheet", "loader": "", "identifier": "data", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"airbyte_gspread\".\"data\"", "created_at": 1654784475.747634}, "source.houm.airbyte_gspread.nps_automatic_landlord_3_meses": {"fqn": ["houm", "staging", "airbyte_gspread", "nps_automatic_landlord_3_meses"], "database": "houmdw_prod", "schema": "airbyte_gspread", "unique_id": "source.houm.airbyte_gspread.nps_automatic_landlord_3_meses", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "nps_automatic_landlord_3_meses", "source_name": "airbyte_gspread", "source_description": "Tables maintained in Google Spreadsheet", "loader": "", "identifier": "nps_automatic_landlord_3_meses", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"airbyte_gspread\".\"nps_automatic_landlord_3_meses\"", "created_at": 1654784475.7477062}, "source.houm.airbyte_gspread.nps_automatic_landlord_6_meses": {"fqn": ["houm", "staging", "airbyte_gspread", "nps_automatic_landlord_6_meses"], "database": "houmdw_prod", "schema": "airbyte_gspread", "unique_id": "source.houm.airbyte_gspread.nps_automatic_landlord_6_meses", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "nps_automatic_landlord_6_meses", "source_name": "airbyte_gspread", "source_description": "Tables maintained in Google Spreadsheet", "loader": "", "identifier": "nps_automatic_landlord_6_meses", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"airbyte_gspread\".\"nps_automatic_landlord_6_meses\"", "created_at": 1654784475.7477849}, "source.houm.airbyte_gspread.nps_automatic_tenant_24_hrs": {"fqn": ["houm", "staging", "airbyte_gspread", "nps_automatic_tenant_24_hrs"], "database": "houmdw_prod", "schema": "airbyte_gspread", "unique_id": "source.houm.airbyte_gspread.nps_automatic_tenant_24_hrs", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "nps_automatic_tenant_24_hrs", "source_name": "airbyte_gspread", "source_description": "Tables maintained in Google Spreadsheet", "loader": "", "identifier": "nps_automatic_tenant_24_hrs", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"airbyte_gspread\".\"nps_automatic_tenant_24_hrs\"", "created_at": 1654784475.7478578}, "source.houm.airbyte_gspread.nps_automatic_tenant_3_meses": {"fqn": ["houm", "staging", "airbyte_gspread", "nps_automatic_tenant_3_meses"], "database": "houmdw_prod", "schema": "airbyte_gspread", "unique_id": "source.houm.airbyte_gspread.nps_automatic_tenant_3_meses", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "nps_automatic_tenant_3_meses", "source_name": "airbyte_gspread", "source_description": "Tables maintained in Google Spreadsheet", "loader": "", "identifier": "nps_automatic_tenant_3_meses", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"airbyte_gspread\".\"nps_automatic_tenant_3_meses\"", "created_at": 1654784475.747929}, "source.houm.airbyte_gspread.nps_automatic_tenant_6_meses": {"fqn": ["houm", "staging", "airbyte_gspread", "nps_automatic_tenant_6_meses"], "database": "houmdw_prod", "schema": "airbyte_gspread", "unique_id": "source.houm.airbyte_gspread.nps_automatic_tenant_6_meses", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "nps_automatic_tenant_6_meses", "source_name": "airbyte_gspread", "source_description": "Tables maintained in Google Spreadsheet", "loader": "", "identifier": "nps_automatic_tenant_6_meses", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"airbyte_gspread\".\"nps_automatic_tenant_6_meses\"", "created_at": 1654784475.748}, "source.houm.airbyte_gspread.nps_cancel_visit": {"fqn": ["houm", "staging", "airbyte_gspread", "nps_cancel_visit"], "database": "houmdw_prod", "schema": "airbyte_gspread", "unique_id": "source.houm.airbyte_gspread.nps_cancel_visit", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "nps_cancel_visit", "source_name": "airbyte_gspread", "source_description": "Tables maintained in Google Spreadsheet", "loader": "", "identifier": "nps_cancel_visit", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"airbyte_gspread\".\"nps_cancel_visit\"", "created_at": 1654784475.748071}, "source.houm.airbyte_gspread.nps_chile_foto": {"fqn": ["houm", "staging", "airbyte_gspread", "nps_chile_foto"], "database": "houmdw_prod", "schema": "airbyte_gspread", "unique_id": "source.houm.airbyte_gspread.nps_chile_foto", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "nps_chile_foto", "source_name": "airbyte_gspread", "source_description": "Tables maintained in Google Spreadsheet", "loader": "", "identifier": "nps_chile_foto", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"airbyte_gspread\".\"nps_chile_foto\"", "created_at": 1654784475.7481651}, "source.houm.airbyte_gspread.nps_chile_renta": {"fqn": ["houm", "staging", "airbyte_gspread", "nps_chile_renta"], "database": "houmdw_prod", "schema": "airbyte_gspread", "unique_id": "source.houm.airbyte_gspread.nps_chile_renta", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "nps_chile_renta", "source_name": "airbyte_gspread", "source_description": "Tables maintained in Google Spreadsheet", "loader": "", "identifier": "nps_chile_renta", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"airbyte_gspread\".\"nps_chile_renta\"", "created_at": 1654784475.748239}, "source.houm.airbyte_gspread.nps_chile_sales": {"fqn": ["houm", "staging", "airbyte_gspread", "nps_chile_sales"], "database": "houmdw_prod", "schema": "airbyte_gspread", "unique_id": "source.houm.airbyte_gspread.nps_chile_sales", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "nps_chile_sales", "source_name": "airbyte_gspread", "source_description": "Tables maintained in Google Spreadsheet", "loader": "", "identifier": "nps_chile_sales", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"airbyte_gspread\".\"nps_chile_sales\"", "created_at": 1654784475.748312}, "source.houm.airbyte_gspread.nps_colombia_foto": {"fqn": ["houm", "staging", "airbyte_gspread", "nps_colombia_foto"], "database": "houmdw_prod", "schema": "airbyte_gspread", "unique_id": "source.houm.airbyte_gspread.nps_colombia_foto", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "nps_colombia_foto", "source_name": "airbyte_gspread", "source_description": "Tables maintained in Google Spreadsheet", "loader": "", "identifier": "nps_colombia_foto", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"airbyte_gspread\".\"nps_colombia_foto\"", "created_at": 1654784475.748384}, "source.houm.airbyte_gspread.nps_colombia_renta": {"fqn": ["houm", "staging", "airbyte_gspread", "nps_colombia_renta"], "database": "houmdw_prod", "schema": "airbyte_gspread", "unique_id": "source.houm.airbyte_gspread.nps_colombia_renta", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "nps_colombia_renta", "source_name": "airbyte_gspread", "source_description": "Tables maintained in Google Spreadsheet", "loader": "", "identifier": "nps_colombia_renta", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"airbyte_gspread\".\"nps_colombia_renta\"", "created_at": 1654784475.748456}, "source.houm.airbyte_gspread.nps_colombia_sales": {"fqn": ["houm", "staging", "airbyte_gspread", "nps_colombia_sales"], "database": "houmdw_prod", "schema": "airbyte_gspread", "unique_id": "source.houm.airbyte_gspread.nps_colombia_sales", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "nps_colombia_sales", "source_name": "airbyte_gspread", "source_description": "Tables maintained in Google Spreadsheet", "loader": "", "identifier": "nps_colombia_sales", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"airbyte_gspread\".\"nps_colombia_sales\"", "created_at": 1654784475.7485309}, "source.houm.airbyte_gspread.nps_mexico_foto": {"fqn": ["houm", "staging", "airbyte_gspread", "nps_mexico_foto"], "database": "houmdw_prod", "schema": "airbyte_gspread", "unique_id": "source.houm.airbyte_gspread.nps_mexico_foto", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "nps_mexico_foto", "source_name": "airbyte_gspread", "source_description": "Tables maintained in Google Spreadsheet", "loader": "", "identifier": "nps_mexico_foto", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"airbyte_gspread\".\"nps_mexico_foto\"", "created_at": 1654784475.7486029}, "source.houm.airbyte_gspread.nps_mexico_renta": {"fqn": ["houm", "staging", "airbyte_gspread", "nps_mexico_renta"], "database": "houmdw_prod", "schema": "airbyte_gspread", "unique_id": "source.houm.airbyte_gspread.nps_mexico_renta", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "nps_mexico_renta", "source_name": "airbyte_gspread", "source_description": "Tables maintained in Google Spreadsheet", "loader": "", "identifier": "nps_mexico_renta", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"airbyte_gspread\".\"nps_mexico_renta\"", "created_at": 1654784475.7486742}, "source.houm.airbyte_gspread.nps_mexico_sales": {"fqn": ["houm", "staging", "airbyte_gspread", "nps_mexico_sales"], "database": "houmdw_prod", "schema": "airbyte_gspread", "unique_id": "source.houm.airbyte_gspread.nps_mexico_sales", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "nps_mexico_sales", "source_name": "airbyte_gspread", "source_description": "Tables maintained in Google Spreadsheet", "loader": "", "identifier": "nps_mexico_sales", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"airbyte_gspread\".\"nps_mexico_sales\"", "created_at": 1654784475.748746}, "source.houm.airbyte_gspread.nps_sales_post_venta_buyer": {"fqn": ["houm", "staging", "airbyte_gspread", "nps_sales_post_venta_buyer"], "database": "houmdw_prod", "schema": "airbyte_gspread", "unique_id": "source.houm.airbyte_gspread.nps_sales_post_venta_buyer", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "nps_sales_post_venta_buyer", "source_name": "airbyte_gspread", "source_description": "Tables maintained in Google Spreadsheet", "loader": "", "identifier": "nps_sales_post_venta_buyer", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"airbyte_gspread\".\"nps_sales_post_venta_buyer\"", "created_at": 1654784475.748817}, "source.houm.airbyte_gspread.nps_sales_post_venta_seller": {"fqn": ["houm", "staging", "airbyte_gspread", "nps_sales_post_venta_seller"], "database": "houmdw_prod", "schema": "airbyte_gspread", "unique_id": "source.houm.airbyte_gspread.nps_sales_post_venta_seller", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "nps_sales_post_venta_seller", "source_name": "airbyte_gspread", "source_description": "Tables maintained in Google Spreadsheet", "loader": "", "identifier": "nps_sales_post_venta_seller", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"airbyte_gspread\".\"nps_sales_post_venta_seller\"", "created_at": 1654784475.748889}, "source.houm.airbyte_gspread.nps_sales_promesa_buyer": {"fqn": ["houm", "staging", "airbyte_gspread", "nps_sales_promesa_buyer"], "database": "houmdw_prod", "schema": "airbyte_gspread", "unique_id": "source.houm.airbyte_gspread.nps_sales_promesa_buyer", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "nps_sales_promesa_buyer", "source_name": "airbyte_gspread", "source_description": "Tables maintained in Google Spreadsheet", "loader": "", "identifier": "nps_sales_promesa_buyer", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"airbyte_gspread\".\"nps_sales_promesa_buyer\"", "created_at": 1654784475.748961}, "source.houm.airbyte_gspread.nps_sales_promesa_seller": {"fqn": ["houm", "staging", "airbyte_gspread", "nps_sales_promesa_seller"], "database": "houmdw_prod", "schema": "airbyte_gspread", "unique_id": "source.houm.airbyte_gspread.nps_sales_promesa_seller", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "nps_sales_promesa_seller", "source_name": "airbyte_gspread", "source_description": "Tables maintained in Google Spreadsheet", "loader": "", "identifier": "nps_sales_promesa_seller", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"airbyte_gspread\".\"nps_sales_promesa_seller\"", "created_at": 1654784475.749033}, "source.houm.airbyte_gspread.nps_rentas_prop_new_listing_cl": {"fqn": ["houm", "staging", "airbyte_gspread", "nps_rentas_prop_new_listing_cl"], "database": "houmdw_prod", "schema": "airbyte_gspread", "unique_id": "source.houm.airbyte_gspread.nps_rentas_prop_new_listing_cl", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "nps_rentas_prop_new_listing_cl", "source_name": "airbyte_gspread", "source_description": "Tables maintained in Google Spreadsheet", "loader": "", "identifier": "nps_rentas_prop_new_listing_cl", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"airbyte_gspread\".\"nps_rentas_prop_new_listing_cl\"", "created_at": 1654784475.749105}, "source.houm.airbyte_gspread.nps_rentas_prop_new_listing_co": {"fqn": ["houm", "staging", "airbyte_gspread", "nps_rentas_prop_new_listing_co"], "database": "houmdw_prod", "schema": "airbyte_gspread", "unique_id": "source.houm.airbyte_gspread.nps_rentas_prop_new_listing_co", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "nps_rentas_prop_new_listing_co", "source_name": "airbyte_gspread", "source_description": "Tables maintained in Google Spreadsheet", "loader": "", "identifier": "nps_rentas_prop_new_listing_co", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"airbyte_gspread\".\"nps_rentas_prop_new_listing_co\"", "created_at": 1654784475.749179}, "source.houm.airbyte_gspread.nps_rentas_prop_new_listing_mx": {"fqn": ["houm", "staging", "airbyte_gspread", "nps_rentas_prop_new_listing_mx"], "database": "houmdw_prod", "schema": "airbyte_gspread", "unique_id": "source.houm.airbyte_gspread.nps_rentas_prop_new_listing_mx", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "nps_rentas_prop_new_listing_mx", "source_name": "airbyte_gspread", "source_description": "Tables maintained in Google Spreadsheet", "loader": "", "identifier": "nps_rentas_prop_new_listing_mx", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"airbyte_gspread\".\"nps_rentas_prop_new_listing_mx\"", "created_at": 1654784475.7492511}, "source.houm.airbyte_gspread.nps_rentas_propietary_pc_cl": {"fqn": ["houm", "staging", "airbyte_gspread", "nps_rentas_propietary_pc_cl"], "database": "houmdw_prod", "schema": "airbyte_gspread", "unique_id": "source.houm.airbyte_gspread.nps_rentas_propietary_pc_cl", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "nps_rentas_propietary_pc_cl", "source_name": "airbyte_gspread", "source_description": "Tables maintained in Google Spreadsheet", "loader": "", "identifier": "nps_rentas_propietary_pc_cl", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"airbyte_gspread\".\"nps_rentas_propietary_pc_cl\"", "created_at": 1654784475.749324}, "source.houm.airbyte_gspread.nps_rentas_propietary_pc_co": {"fqn": ["houm", "staging", "airbyte_gspread", "nps_rentas_propietary_pc_co"], "database": "houmdw_prod", "schema": "airbyte_gspread", "unique_id": "source.houm.airbyte_gspread.nps_rentas_propietary_pc_co", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "nps_rentas_propietary_pc_co", "source_name": "airbyte_gspread", "source_description": "Tables maintained in Google Spreadsheet", "loader": "", "identifier": "nps_rentas_propietary_pc_co", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"airbyte_gspread\".\"nps_rentas_propietary_pc_co\"", "created_at": 1654784475.749397}, "source.houm.airbyte_gspread.nps_rentas_propietary_pc_mx": {"fqn": ["houm", "staging", "airbyte_gspread", "nps_rentas_propietary_pc_mx"], "database": "houmdw_prod", "schema": "airbyte_gspread", "unique_id": "source.houm.airbyte_gspread.nps_rentas_propietary_pc_mx", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "nps_rentas_propietary_pc_mx", "source_name": "airbyte_gspread", "source_description": "Tables maintained in Google Spreadsheet", "loader": "", "identifier": "nps_rentas_propietary_pc_mx", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"airbyte_gspread\".\"nps_rentas_propietary_pc_mx\"", "created_at": 1654784475.7494678}, "source.houm.airbyte_gspread.nps_rentas_tenant_pc_cl": {"fqn": ["houm", "staging", "airbyte_gspread", "nps_rentas_tenant_pc_cl"], "database": "houmdw_prod", "schema": "airbyte_gspread", "unique_id": "source.houm.airbyte_gspread.nps_rentas_tenant_pc_cl", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "nps_rentas_tenant_pc_cl", "source_name": "airbyte_gspread", "source_description": "Tables maintained in Google Spreadsheet", "loader": "", "identifier": "nps_rentas_tenant_pc_cl", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"airbyte_gspread\".\"nps_rentas_tenant_pc_cl\"", "created_at": 1654784475.74954}, "source.houm.airbyte_gspread.nps_rentas_tenant_pc_co": {"fqn": ["houm", "staging", "airbyte_gspread", "nps_rentas_tenant_pc_co"], "database": "houmdw_prod", "schema": "airbyte_gspread", "unique_id": "source.houm.airbyte_gspread.nps_rentas_tenant_pc_co", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "nps_rentas_tenant_pc_co", "source_name": "airbyte_gspread", "source_description": "Tables maintained in Google Spreadsheet", "loader": "", "identifier": "nps_rentas_tenant_pc_co", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"airbyte_gspread\".\"nps_rentas_tenant_pc_co\"", "created_at": 1654784475.749611}, "source.houm.airbyte_gspread.nps_rentas_tenant_pc_mx": {"fqn": ["houm", "staging", "airbyte_gspread", "nps_rentas_tenant_pc_mx"], "database": "houmdw_prod", "schema": "airbyte_gspread", "unique_id": "source.houm.airbyte_gspread.nps_rentas_tenant_pc_mx", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "nps_rentas_tenant_pc_mx", "source_name": "airbyte_gspread", "source_description": "Tables maintained in Google Spreadsheet", "loader": "", "identifier": "nps_rentas_tenant_pc_mx", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"airbyte_gspread\".\"nps_rentas_tenant_pc_mx\"", "created_at": 1654784475.7496839}, "source.houm.airbyte_gspread.anuncios": {"fqn": ["houm", "staging", "airbyte_gspread", "anuncios"], "database": "houmdw_prod", "schema": "airbyte_gspread", "unique_id": "source.houm.airbyte_gspread.anuncios", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "anuncios", "source_name": "airbyte_gspread", "source_description": "Tables maintained in Google Spreadsheet", "loader": "", "identifier": "anuncios", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"airbyte_gspread\".\"anuncios\"", "created_at": 1654784475.7497559}, "source.houm.survicate.nps_landlord_satisfaction_6months_cl": {"fqn": ["houm", "staging", "survicate", "nps_landlord_satisfaction_6months_cl"], "database": "houmdw_prod", "schema": "survicate", "unique_id": "source.houm.survicate.nps_landlord_satisfaction_6months_cl", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "nps_landlord_satisfaction_6months_cl", "source_name": "survicate", "source_description": "NPS answers from survicate. Just for historical purposes", "loader": "", "identifier": "nps_landlord_satisfaction_6months_cl", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"survicate\".\"nps_landlord_satisfaction_6months_cl\"", "created_at": 1654784475.749829}, "source.houm.survicate.nps_landlord_listing": {"fqn": ["houm", "staging", "survicate", "nps_landlord_listing"], "database": "houmdw_prod", "schema": "survicate", "unique_id": "source.houm.survicate.nps_landlord_listing", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "nps_landlord_listing", "source_name": "survicate", "source_description": "NPS answers from survicate. Just for historical purposes", "loader": "", "identifier": "nps_landlord_listing", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"survicate\".\"nps_landlord_listing\"", "created_at": 1654784475.7499}, "source.houm.survicate.nps_landlord_new_sub": {"fqn": ["houm", "staging", "survicate", "nps_landlord_new_sub"], "database": "houmdw_prod", "schema": "survicate", "unique_id": "source.houm.survicate.nps_landlord_new_sub", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "nps_landlord_new_sub", "source_name": "survicate", "source_description": "NPS answers from survicate. Just for historical purposes", "loader": "", "identifier": "nps_landlord_new_sub", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"survicate\".\"nps_landlord_new_sub\"", "created_at": 1654784475.749978}, "source.houm.survicate.nps_tennant_new_sub": {"fqn": ["houm", "staging", "survicate", "nps_tennant_new_sub"], "database": "houmdw_prod", "schema": "survicate", "unique_id": "source.houm.survicate.nps_tennant_new_sub", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "nps_tennant_new_sub", "source_name": "survicate", "source_description": "NPS answers from survicate. Just for historical purposes", "loader": "", "identifier": "nps_tennant_new_sub", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"survicate\".\"nps_tennant_new_sub\"", "created_at": 1654784475.750051}, "source.houm.survicate.photo_done": {"fqn": ["houm", "staging", "survicate", "photo_done"], "database": "houmdw_prod", "schema": "survicate", "unique_id": "source.houm.survicate.photo_done", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "photo_done", "source_name": "survicate", "source_description": "NPS answers from survicate. Just for historical purposes", "loader": "", "identifier": "photo_done", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"survicate\".\"photo_done\"", "created_at": 1654784475.750122}, "source.houm.survicate.nps_tenant_satisfaction_24hrs": {"fqn": ["houm", "staging", "survicate", "nps_tenant_satisfaction_24hrs"], "database": "houmdw_prod", "schema": "survicate", "unique_id": "source.houm.survicate.nps_tenant_satisfaction_24hrs", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "nps_tenant_satisfaction_24hrs", "source_name": "survicate", "source_description": "NPS answers from survicate. Just for historical purposes", "loader": "", "identifier": "nps_tenant_satisfaction_24hrs", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"survicate\".\"nps_tenant_satisfaction_24hrs\"", "created_at": 1654784475.7501938}, "source.houm.survicate.nps_visit_done": {"fqn": ["houm", "staging", "survicate", "nps_visit_done"], "database": "houmdw_prod", "schema": "survicate", "unique_id": "source.houm.survicate.nps_visit_done", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "models/staging/sources.yml", "original_file_path": "models/staging/sources.yml", "name": "nps_visit_done", "source_name": "survicate", "source_description": "NPS answers from survicate. Just for historical purposes", "loader": "", "identifier": "nps_visit_done", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": {"count": null, "period": null}, "error_after": {"count": null, "period": null}, "filter": null}, "external": null, "description": "", "columns": {}, "meta": {}, "source_meta": {}, "tags": ["source"], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"houmdw_prod\".\"survicate\".\"nps_visit_done\"", "created_at": 1654784475.7502651}}, "macros": {"macro.houm.generate_schema_name": {"unique_id": "macro.houm.generate_schema_name", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "macros/generate_schema_name.sql", "original_file_path": "macros/generate_schema_name.sql", "name": "generate_schema_name", "macro_sql": "{% macro generate_schema_name(custom_schema_name, node) -%}\n\n    {%- set default_schema = target.schema -%}\n\n    {%- if target.name[-3:] == 'dev' -%}\n\n        {{ target.schema }}_{{ custom_schema_name | trim }}\n\n    {%- elif target.schema[:9] == 'dbt_cloud' -%}\n\n        {{ target.schema }}_{{ custom_schema_name | trim }}\n\n    {%- elif custom_schema_name is none -%}\n\n        {{ default_schema }}\n\n    {%- else -%}\n\n        {{ custom_schema_name | trim }}\n\n    {%- endif -%}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1654784474.192099}, "macro.dbt_redshift.redshift__get_base_catalog": {"unique_id": "macro.dbt_redshift.redshift__get_base_catalog", "package_name": "dbt_redshift", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.1.0/libexec/lib/python3.9/site-packages/dbt/include/redshift", "path": "macros/catalog.sql", "original_file_path": "macros/catalog.sql", "name": "redshift__get_base_catalog", "macro_sql": "{% macro redshift__get_base_catalog(information_schema, schemas) -%}\n  {%- call statement('base_catalog', fetch_result=True) -%}\n    {% set database = information_schema.database %}\n    {{ adapter.verify_database(database) }}\n\n    with late_binding as (\n      select\n        '{{ database }}'::varchar as table_database,\n        table_schema,\n        table_name,\n        'LATE BINDING VIEW'::varchar as table_type,\n        null::text as table_comment,\n\n        column_name,\n        column_index,\n        column_type,\n        null::text as column_comment\n      from pg_get_late_binding_view_cols()\n        cols(table_schema name, table_name name, column_name name,\n             column_type varchar,\n             column_index int)\n        order by \"column_index\"\n    ),\n\n    early_binding as (\n        select\n            '{{ database }}'::varchar as table_database,\n            sch.nspname as table_schema,\n            tbl.relname as table_name,\n            case tbl.relkind\n                when 'v' then 'VIEW'\n                else 'BASE TABLE'\n            end as table_type,\n            tbl_desc.description as table_comment,\n            col.attname as column_name,\n            col.attnum as column_index,\n            pg_catalog.format_type(col.atttypid, col.atttypmod) as column_type,\n            col_desc.description as column_comment\n\n        from pg_catalog.pg_namespace sch\n        join pg_catalog.pg_class tbl on tbl.relnamespace = sch.oid\n        join pg_catalog.pg_attribute col on col.attrelid = tbl.oid\n        left outer join pg_catalog.pg_description tbl_desc on (tbl_desc.objoid = tbl.oid and tbl_desc.objsubid = 0)\n        left outer join pg_catalog.pg_description col_desc on (col_desc.objoid = tbl.oid and col_desc.objsubid = col.attnum)\n        where (\n            {%- for schema in schemas -%}\n              upper(sch.nspname) = upper('{{ schema }}'){%- if not loop.last %} or {% endif -%}\n            {%- endfor -%}\n          )\n            and tbl.relkind in ('r', 'v', 'f', 'p')\n            and col.attnum > 0\n            and not col.attisdropped\n    ),\n\n    table_owners as (\n\n        select\n            '{{ database }}'::varchar as table_database,\n            schemaname as table_schema,\n            tablename as table_name,\n            tableowner as table_owner\n\n        from pg_tables\n\n        union all\n\n        select\n            '{{ database }}'::varchar as table_database,\n            schemaname as table_schema,\n            viewname as table_name,\n            viewowner as table_owner\n\n        from pg_views\n\n    ),\n\n    unioned as (\n\n        select *\n        from early_binding\n\n        union all\n\n        select *\n        from late_binding\n\n    )\n\n    select *,\n        table_database || '.' || table_schema || '.' || table_name as table_id\n\n    from unioned\n    join table_owners using (table_database, table_schema, table_name)\n\n    where (\n        {%- for schema in schemas -%}\n          upper(table_schema) = upper('{{ schema }}'){%- if not loop.last %} or {% endif -%}\n        {%- endfor -%}\n      )\n\n    order by \"column_index\"\n  {%- endcall -%}\n\n  {{ return(load_result('base_catalog').table) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1654784474.199856}, "macro.dbt_redshift.redshift__get_extended_catalog": {"unique_id": "macro.dbt_redshift.redshift__get_extended_catalog", "package_name": "dbt_redshift", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.1.0/libexec/lib/python3.9/site-packages/dbt/include/redshift", "path": "macros/catalog.sql", "original_file_path": "macros/catalog.sql", "name": "redshift__get_extended_catalog", "macro_sql": "{% macro redshift__get_extended_catalog(schemas) %}\n  {%- call statement('extended_catalog', fetch_result=True) -%}\n\n    select\n        \"database\" || '.' || \"schema\" || '.' || \"table\" as table_id,\n\n        'Encoded'::text as \"stats:encoded:label\",\n        encoded as \"stats:encoded:value\",\n        'Indicates whether any column in the table has compression encoding defined.'::text as \"stats:encoded:description\",\n        true as \"stats:encoded:include\",\n\n        'Dist Style' as \"stats:diststyle:label\",\n        diststyle as \"stats:diststyle:value\",\n        'Distribution style or distribution key column, if key distribution is defined.'::text as \"stats:diststyle:description\",\n        true as \"stats:diststyle:include\",\n\n        'Sort Key 1' as \"stats:sortkey1:label\",\n        -- handle 0xFF byte in response for interleaved sort styles\n        case\n            when sortkey1 like 'INTERLEAVED%' then 'INTERLEAVED'::text\n            else sortkey1\n        end as \"stats:sortkey1:value\",\n        'First column in the sort key.'::text as \"stats:sortkey1:description\",\n        (sortkey1 is not null) as \"stats:sortkey1:include\",\n\n        'Max Varchar' as \"stats:max_varchar:label\",\n        max_varchar as \"stats:max_varchar:value\",\n        'Size of the largest column that uses a VARCHAR data type.'::text as \"stats:max_varchar:description\",\n        true as \"stats:max_varchar:include\",\n\n        -- exclude this, as the data is strangely returned with null-byte characters\n        'Sort Key 1 Encoding' as \"stats:sortkey1_enc:label\",\n        sortkey1_enc as \"stats:sortkey1_enc:value\",\n        'Compression encoding of the first column in the sort key.' as \"stats:sortkey1_enc:description\",\n        false as \"stats:sortkey1_enc:include\",\n\n        '# Sort Keys' as \"stats:sortkey_num:label\",\n        sortkey_num as \"stats:sortkey_num:value\",\n        'Number of columns defined as sort keys.' as \"stats:sortkey_num:description\",\n        (sortkey_num > 0) as \"stats:sortkey_num:include\",\n\n        'Approximate Size' as \"stats:size:label\",\n        size * 1000000 as \"stats:size:value\",\n        'Approximate size of the table, calculated from a count of 1MB blocks'::text as \"stats:size:description\",\n        true as \"stats:size:include\",\n\n        'Disk Utilization' as \"stats:pct_used:label\",\n        pct_used / 100.0 as \"stats:pct_used:value\",\n        'Percent of available space that is used by the table.'::text as \"stats:pct_used:description\",\n        true as \"stats:pct_used:include\",\n\n        'Unsorted %' as \"stats:unsorted:label\",\n        unsorted / 100.0 as \"stats:unsorted:value\",\n        'Percent of unsorted rows in the table.'::text as \"stats:unsorted:description\",\n        (unsorted is not null) as \"stats:unsorted:include\",\n\n        'Stats Off' as \"stats:stats_off:label\",\n        stats_off as \"stats:stats_off:value\",\n        'Number that indicates how stale the table statistics are; 0 is current, 100 is out of date.'::text as \"stats:stats_off:description\",\n        true as \"stats:stats_off:include\",\n\n        'Approximate Row Count' as \"stats:rows:label\",\n        tbl_rows as \"stats:rows:value\",\n        'Approximate number of rows in the table. This value includes rows marked for deletion, but not yet vacuumed.'::text as \"stats:rows:description\",\n        true as \"stats:rows:include\",\n\n        'Sort Key Skew' as \"stats:skew_sortkey1:label\",\n        skew_sortkey1 as \"stats:skew_sortkey1:value\",\n        'Ratio of the size of the largest non-sort key column to the size of the first column of the sort key.'::text as \"stats:skew_sortkey1:description\",\n        (skew_sortkey1 is not null) as \"stats:skew_sortkey1:include\",\n\n        'Skew Rows' as \"stats:skew_rows:label\",\n        skew_rows as \"stats:skew_rows:value\",\n        'Ratio of the number of rows in the slice with the most rows to the number of rows in the slice with the fewest rows.'::text as \"stats:skew_rows:description\",\n        (skew_rows is not null) as \"stats:skew_rows:include\"\n\n    from svv_table_info\n    where (\n        {%- for schema in schemas -%}\n          upper(schema) = upper('{{ schema }}'){%- if not loop.last %} or {% endif -%}\n        {%- endfor -%}\n    )\n\n  {%- endcall -%}\n\n  {{ return(load_result('extended_catalog').table) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1654784474.20081}, "macro.dbt_redshift.redshift__can_select_from": {"unique_id": "macro.dbt_redshift.redshift__can_select_from", "package_name": "dbt_redshift", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.1.0/libexec/lib/python3.9/site-packages/dbt/include/redshift", "path": "macros/catalog.sql", "original_file_path": "macros/catalog.sql", "name": "redshift__can_select_from", "macro_sql": "{% macro redshift__can_select_from(table_name) %}\n\n  {%- call statement('has_table_privilege', fetch_result=True) -%}\n\n    select has_table_privilege(current_user, '{{ table_name }}', 'SELECT') as can_select\n\n  {%- endcall -%}\n\n  {% set can_select = load_result('has_table_privilege').table[0]['can_select'] %}\n  {{ return(can_select) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1654784474.201379}, "macro.dbt_redshift.redshift__no_svv_table_info_warning": {"unique_id": "macro.dbt_redshift.redshift__no_svv_table_info_warning", "package_name": "dbt_redshift", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.1.0/libexec/lib/python3.9/site-packages/dbt/include/redshift", "path": "macros/catalog.sql", "original_file_path": "macros/catalog.sql", "name": "redshift__no_svv_table_info_warning", "macro_sql": "{% macro redshift__no_svv_table_info_warning() %}\n\n    {% set msg %}\n\n    Warning: The database user \"{{ target.user }}\" has insufficient permissions to\n    query the \"svv_table_info\" table. Please grant SELECT permissions on this table\n    to the \"{{ target.user }}\" user to fetch extended table details from Redshift.\n\n    {% endset %}\n\n    {{ log(msg, info=True) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1654784474.201804}, "macro.dbt_redshift.redshift__get_catalog": {"unique_id": "macro.dbt_redshift.redshift__get_catalog", "package_name": "dbt_redshift", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.1.0/libexec/lib/python3.9/site-packages/dbt/include/redshift", "path": "macros/catalog.sql", "original_file_path": "macros/catalog.sql", "name": "redshift__get_catalog", "macro_sql": "{% macro redshift__get_catalog(information_schema, schemas) %}\n\n    {#-- Compute a left-outer join in memory. Some Redshift queries are\n      -- leader-only, and cannot be joined to other compute-based queries #}\n\n    {% set catalog = redshift__get_base_catalog(information_schema, schemas) %}\n\n    {% set select_extended =  redshift__can_select_from('svv_table_info') %}\n    {% if select_extended %}\n        {% set extended_catalog = redshift__get_extended_catalog(schemas) %}\n        {% set catalog = catalog.join(extended_catalog, 'table_id') %}\n    {% else %}\n        {{ redshift__no_svv_table_info_warning() }}\n    {% endif %}\n\n    {{ return(catalog.exclude(['table_id'])) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_redshift.redshift__get_base_catalog", "macro.dbt_redshift.redshift__can_select_from", "macro.dbt_redshift.redshift__get_extended_catalog", "macro.dbt_redshift.redshift__no_svv_table_info_warning"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1654784474.202722}, "macro.dbt_redshift.redshift__get_relations": {"unique_id": "macro.dbt_redshift.redshift__get_relations", "package_name": "dbt_redshift", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.1.0/libexec/lib/python3.9/site-packages/dbt/include/redshift", "path": "macros/relations.sql", "original_file_path": "macros/relations.sql", "name": "redshift__get_relations", "macro_sql": "{% macro redshift__get_relations () -%}\n  {{ return(dbt.postgres__get_relations()) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1654784474.203226}, "macro.dbt_redshift.dist": {"unique_id": "macro.dbt_redshift.dist", "package_name": "dbt_redshift", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.1.0/libexec/lib/python3.9/site-packages/dbt/include/redshift", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "dist", "macro_sql": "{% macro dist(dist) %}\n  {%- if dist is not none -%}\n      {%- set dist = dist.strip().lower() -%}\n\n      {%- if dist in ['all', 'even'] -%}\n        diststyle {{ dist }}\n      {%- elif dist == \"auto\" -%}\n      {%- else -%}\n        diststyle key distkey ({{ dist }})\n      {%- endif -%}\n\n  {%- endif -%}\n{%- endmacro -%}\n\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1654784474.2179399}, "macro.dbt_redshift.sort": {"unique_id": "macro.dbt_redshift.sort", "package_name": "dbt_redshift", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.1.0/libexec/lib/python3.9/site-packages/dbt/include/redshift", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "sort", "macro_sql": "{% macro sort(sort_type, sort) %}\n  {%- if sort is not none %}\n      {{ sort_type | default('compound', boolean=true) }} sortkey(\n      {%- if sort is string -%}\n        {%- set sort = [sort] -%}\n      {%- endif -%}\n      {%- for item in sort -%}\n        {{ item }}\n        {%- if not loop.last -%},{%- endif -%}\n      {%- endfor -%}\n      )\n  {%- endif %}\n{%- endmacro -%}\n\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1654784474.218708}, "macro.dbt_redshift.redshift__create_table_as": {"unique_id": "macro.dbt_redshift.redshift__create_table_as", "package_name": "dbt_redshift", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.1.0/libexec/lib/python3.9/site-packages/dbt/include/redshift", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "redshift__create_table_as", "macro_sql": "{% macro redshift__create_table_as(temporary, relation, sql) -%}\n\n  {%- set _dist = config.get('dist') -%}\n  {%- set _sort_type = config.get(\n          'sort_type',\n          validator=validation.any['compound', 'interleaved']) -%}\n  {%- set _sort = config.get(\n          'sort',\n          validator=validation.any[list, basestring]) -%}\n  {%- set sql_header = config.get('sql_header', none) -%}\n  {%- set backup = config.get('backup') -%}\n\n  {{ sql_header if sql_header is not none }}\n\n  create {% if temporary -%}temporary{%- endif %} table\n    {{ relation.include(database=(not temporary), schema=(not temporary)) }}\n    {% if backup == false -%}backup no{%- endif %}\n    {{ dist(_dist) }}\n    {{ sort(_sort_type, _sort) }}\n  as (\n    {{ sql }}\n  );\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_redshift.dist", "macro.dbt_redshift.sort"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1654784474.2202911}, "macro.dbt_redshift.redshift__create_view_as": {"unique_id": "macro.dbt_redshift.redshift__create_view_as", "package_name": "dbt_redshift", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.1.0/libexec/lib/python3.9/site-packages/dbt/include/redshift", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "redshift__create_view_as", "macro_sql": "{% macro redshift__create_view_as(relation, sql) -%}\n  {%- set binding = config.get('bind', default=True) -%}\n\n  {% set bind_qualifier = '' if binding else 'with no schema binding' %}\n  {%- set sql_header = config.get('sql_header', none) -%}\n\n  {{ sql_header if sql_header is not none }}\n\n  create view {{ relation }} as (\n    {{ sql }}\n  ) {{ bind_qualifier }};\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1654784474.221007}, "macro.dbt_redshift.redshift__create_schema": {"unique_id": "macro.dbt_redshift.redshift__create_schema", "package_name": "dbt_redshift", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.1.0/libexec/lib/python3.9/site-packages/dbt/include/redshift", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "redshift__create_schema", "macro_sql": "{% macro redshift__create_schema(relation) -%}\n  {{ postgres__create_schema(relation) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_postgres.postgres__create_schema"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1654784474.221202}, "macro.dbt_redshift.redshift__drop_schema": {"unique_id": "macro.dbt_redshift.redshift__drop_schema", "package_name": "dbt_redshift", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.1.0/libexec/lib/python3.9/site-packages/dbt/include/redshift", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "redshift__drop_schema", "macro_sql": "{% macro redshift__drop_schema(relation) -%}\n  {{ postgres__drop_schema(relation) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_postgres.postgres__drop_schema"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1654784474.221387}, "macro.dbt_redshift.redshift__get_columns_in_relation": {"unique_id": "macro.dbt_redshift.redshift__get_columns_in_relation", "package_name": "dbt_redshift", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.1.0/libexec/lib/python3.9/site-packages/dbt/include/redshift", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "redshift__get_columns_in_relation", "macro_sql": "{% macro redshift__get_columns_in_relation(relation) -%}\n  {% call statement('get_columns_in_relation', fetch_result=True) %}\n      with bound_views as (\n        select\n          ordinal_position,\n          table_schema,\n          column_name,\n          data_type,\n          character_maximum_length,\n          numeric_precision,\n          numeric_scale\n\n        from information_schema.\"columns\"\n        where table_name = '{{ relation.identifier }}'\n    ),\n\n    unbound_views as (\n      select\n        ordinal_position,\n        view_schema,\n        col_name,\n        case\n          when col_type ilike 'character varying%' then\n            'character varying'\n          when col_type ilike 'numeric%' then 'numeric'\n          else col_type\n        end as col_type,\n        case\n          when col_type like 'character%'\n          then nullif(REGEXP_SUBSTR(col_type, '[0-9]+'), '')::int\n          else null\n        end as character_maximum_length,\n        case\n          when col_type like 'numeric%'\n          then nullif(\n            SPLIT_PART(REGEXP_SUBSTR(col_type, '[0-9,]+'), ',', 1),\n            '')::int\n          else null\n        end as numeric_precision,\n        case\n          when col_type like 'numeric%'\n          then nullif(\n            SPLIT_PART(REGEXP_SUBSTR(col_type, '[0-9,]+'), ',', 2),\n            '')::int\n          else null\n        end as numeric_scale\n\n      from pg_get_late_binding_view_cols()\n      cols(view_schema name, view_name name, col_name name,\n           col_type varchar, ordinal_position int)\n      where view_name = '{{ relation.identifier }}'\n    ),\n\n    external_views as (\n      select\n        columnnum,\n        schemaname,\n        columnname,\n        case\n          when external_type ilike 'character varying%' or external_type ilike 'varchar%'\n          then 'character varying'\n          when external_type ilike 'numeric%' then 'numeric'\n          else external_type\n        end as external_type,\n        case\n          when external_type like 'character%' or external_type like 'varchar%'\n          then nullif(\n            REGEXP_SUBSTR(external_type, '[0-9]+'),\n            '')::int\n          else null\n        end as character_maximum_length,\n        case\n          when external_type like 'numeric%'\n          then nullif(\n            SPLIT_PART(REGEXP_SUBSTR(external_type, '[0-9,]+'), ',', 1),\n            '')::int\n          else null\n        end as numeric_precision,\n        case\n          when external_type like 'numeric%'\n          then nullif(\n            SPLIT_PART(REGEXP_SUBSTR(external_type, '[0-9,]+'), ',', 2),\n            '')::int\n          else null\n        end as numeric_scale\n      from\n        pg_catalog.svv_external_columns\n      where\n        schemaname = '{{ relation.schema }}'\n        and tablename = '{{ relation.identifier }}'\n\n    ),\n\n    unioned as (\n      select * from bound_views\n      union all\n      select * from unbound_views\n      union all\n      select * from external_views\n    )\n\n    select\n      column_name,\n      data_type,\n      character_maximum_length,\n      numeric_precision,\n      numeric_scale\n\n    from unioned\n    {% if relation.schema %}\n    where table_schema = '{{ relation.schema }}'\n    {% endif %}\n    order by ordinal_position\n  {% endcall %}\n  {% set table = load_result('get_columns_in_relation').table %}\n  {{ return(sql_convert_columns_in_relation(table)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement", "macro.dbt.sql_convert_columns_in_relation"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1654784474.222411}, "macro.dbt_redshift.redshift__list_relations_without_caching": {"unique_id": "macro.dbt_redshift.redshift__list_relations_without_caching", "package_name": "dbt_redshift", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.1.0/libexec/lib/python3.9/site-packages/dbt/include/redshift", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "redshift__list_relations_without_caching", "macro_sql": "{% macro redshift__list_relations_without_caching(schema_relation) %}\n  {{ return(postgres__list_relations_without_caching(schema_relation)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_postgres.postgres__list_relations_without_caching"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1654784474.222643}, "macro.dbt_redshift.redshift__information_schema_name": {"unique_id": "macro.dbt_redshift.redshift__information_schema_name", "package_name": "dbt_redshift", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.1.0/libexec/lib/python3.9/site-packages/dbt/include/redshift", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "redshift__information_schema_name", "macro_sql": "{% macro redshift__information_schema_name(database) -%}\n  {{ return(postgres__information_schema_name(database)) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_postgres.postgres__information_schema_name"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1654784474.222859}, "macro.dbt_redshift.redshift__list_schemas": {"unique_id": "macro.dbt_redshift.redshift__list_schemas", "package_name": "dbt_redshift", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.1.0/libexec/lib/python3.9/site-packages/dbt/include/redshift", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "redshift__list_schemas", "macro_sql": "{% macro redshift__list_schemas(database) -%}\n  {{ return(postgres__list_schemas(database)) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_postgres.postgres__list_schemas"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1654784474.223069}, "macro.dbt_redshift.redshift__check_schema_exists": {"unique_id": "macro.dbt_redshift.redshift__check_schema_exists", "package_name": "dbt_redshift", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.1.0/libexec/lib/python3.9/site-packages/dbt/include/redshift", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "redshift__check_schema_exists", "macro_sql": "{% macro redshift__check_schema_exists(information_schema, schema) -%}\n  {{ return(postgres__check_schema_exists(information_schema, schema)) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_postgres.postgres__check_schema_exists"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1654784474.223325}, "macro.dbt_redshift.redshift__current_timestamp": {"unique_id": "macro.dbt_redshift.redshift__current_timestamp", "package_name": "dbt_redshift", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.1.0/libexec/lib/python3.9/site-packages/dbt/include/redshift", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "redshift__current_timestamp", "macro_sql": "{% macro redshift__current_timestamp() -%}\n  getdate()\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1654784474.22344}, "macro.dbt_redshift.redshift__snapshot_get_time": {"unique_id": "macro.dbt_redshift.redshift__snapshot_get_time", "package_name": "dbt_redshift", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.1.0/libexec/lib/python3.9/site-packages/dbt/include/redshift", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "redshift__snapshot_get_time", "macro_sql": "{% macro redshift__snapshot_get_time() -%}\n  {{ current_timestamp() }}::timestamp\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.current_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1654784474.223595}, "macro.dbt_redshift.redshift__snapshot_string_as_time": {"unique_id": "macro.dbt_redshift.redshift__snapshot_string_as_time", "package_name": "dbt_redshift", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.1.0/libexec/lib/python3.9/site-packages/dbt/include/redshift", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "redshift__snapshot_string_as_time", "macro_sql": "{% macro redshift__snapshot_string_as_time(timestamp) -%}\n    {%- set result = \"'\" ~ timestamp ~ \"'::timestamp\" -%}\n    {{ return(result) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1654784474.2238789}, "macro.dbt_redshift.redshift__make_temp_relation": {"unique_id": "macro.dbt_redshift.redshift__make_temp_relation", "package_name": "dbt_redshift", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.1.0/libexec/lib/python3.9/site-packages/dbt/include/redshift", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "redshift__make_temp_relation", "macro_sql": "{% macro redshift__make_temp_relation(base_relation, suffix) %}\n    {% do return(postgres__make_temp_relation(base_relation, suffix)) %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_postgres.postgres__make_temp_relation"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1654784474.224276}, "macro.dbt_redshift.redshift__persist_docs": {"unique_id": "macro.dbt_redshift.redshift__persist_docs", "package_name": "dbt_redshift", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.1.0/libexec/lib/python3.9/site-packages/dbt/include/redshift", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "redshift__persist_docs", "macro_sql": "{% macro redshift__persist_docs(relation, model, for_relation, for_columns) -%}\n  {% if for_relation and config.persist_relation_docs() and model.description %}\n    {% do run_query(alter_relation_comment(relation, model.description)) %}\n  {% endif %}\n\n  {# Override: do not set column comments for LBVs #}\n  {% set is_lbv = config.get('materialized') == 'view' and config.get('bind') == false %}\n  {% if for_columns and config.persist_column_docs() and model.columns and not is_lbv %}\n    {% do run_query(alter_column_comment(relation, model.columns)) %}\n  {% endif %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.run_query", "macro.dbt.alter_relation_comment", "macro.dbt.alter_column_comment"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1654784474.2253492}, "macro.dbt_redshift.redshift__alter_relation_comment": {"unique_id": "macro.dbt_redshift.redshift__alter_relation_comment", "package_name": "dbt_redshift", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.1.0/libexec/lib/python3.9/site-packages/dbt/include/redshift", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "redshift__alter_relation_comment", "macro_sql": "{% macro redshift__alter_relation_comment(relation, comment) %}\n  {% do return(postgres__alter_relation_comment(relation, comment)) %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_postgres.postgres__alter_relation_comment"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1654784474.2256398}, "macro.dbt_redshift.redshift__alter_column_comment": {"unique_id": "macro.dbt_redshift.redshift__alter_column_comment", "package_name": "dbt_redshift", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.1.0/libexec/lib/python3.9/site-packages/dbt/include/redshift", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "redshift__alter_column_comment", "macro_sql": "{% macro redshift__alter_column_comment(relation, column_dict) %}\n  {% do return(postgres__alter_column_comment(relation, column_dict)) %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_postgres.postgres__alter_column_comment"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1654784474.225913}, "macro.dbt_redshift.redshift__alter_relation_add_remove_columns": {"unique_id": "macro.dbt_redshift.redshift__alter_relation_add_remove_columns", "package_name": "dbt_redshift", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.1.0/libexec/lib/python3.9/site-packages/dbt/include/redshift", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "redshift__alter_relation_add_remove_columns", "macro_sql": "{% macro redshift__alter_relation_add_remove_columns(relation, add_columns, remove_columns) %}\n  \n  {% if add_columns %}\n  \n    {% for column in add_columns %}\n      {% set sql -%}\n          alter {{ relation.type }} {{ relation }} add column {{ column.name }} {{ column.data_type }}\n      {% endset %}\n      {% do run_query(sql) %}\n    {% endfor %}\n\n  {% endif %}\n  \n  {% if remove_columns %}\n  \n    {% for column in remove_columns %}\n      {% set sql -%}\n          alter {{ relation.type }} {{ relation }} drop column {{ column.name }}\n      {% endset %}\n      {% do run_query(sql) %}\n    {% endfor %}\n    \n  {% endif %}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1654784474.227037}, "macro.dbt_redshift.redshift__snapshot_merge_sql": {"unique_id": "macro.dbt_redshift.redshift__snapshot_merge_sql", "package_name": "dbt_redshift", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.1.0/libexec/lib/python3.9/site-packages/dbt/include/redshift", "path": "macros/materializations/snapshot_merge.sql", "original_file_path": "macros/materializations/snapshot_merge.sql", "name": "redshift__snapshot_merge_sql", "macro_sql": "{% macro redshift__snapshot_merge_sql(target, source, insert_cols) -%}\n    {{ postgres__snapshot_merge_sql(target, source, insert_cols) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_postgres.postgres__snapshot_merge_sql"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1654784474.2275681}, "macro.dbt_postgres.postgres__get_catalog": {"unique_id": "macro.dbt_postgres.postgres__get_catalog", "package_name": "dbt_postgres", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.1.0/libexec/lib/python3.9/site-packages/dbt/include/postgres", "path": "macros/catalog.sql", "original_file_path": "macros/catalog.sql", "name": "postgres__get_catalog", "macro_sql": "{% macro postgres__get_catalog(information_schema, schemas) -%}\n\n  {%- call statement('catalog', fetch_result=True) -%}\n    {#\n      If the user has multiple databases set and the first one is wrong, this will fail.\n      But we won't fail in the case where there are multiple quoting-difference-only dbs, which is better.\n    #}\n    {% set database = information_schema.database %}\n    {{ adapter.verify_database(database) }}\n\n    select\n        '{{ database }}' as table_database,\n        sch.nspname as table_schema,\n        tbl.relname as table_name,\n        case tbl.relkind\n            when 'v' then 'VIEW'\n            else 'BASE TABLE'\n        end as table_type,\n        tbl_desc.description as table_comment,\n        col.attname as column_name,\n        col.attnum as column_index,\n        pg_catalog.format_type(col.atttypid, col.atttypmod) as column_type,\n        col_desc.description as column_comment,\n        pg_get_userbyid(tbl.relowner) as table_owner\n\n    from pg_catalog.pg_namespace sch\n    join pg_catalog.pg_class tbl on tbl.relnamespace = sch.oid\n    join pg_catalog.pg_attribute col on col.attrelid = tbl.oid\n    left outer join pg_catalog.pg_description tbl_desc on (tbl_desc.objoid = tbl.oid and tbl_desc.objsubid = 0)\n    left outer join pg_catalog.pg_description col_desc on (col_desc.objoid = tbl.oid and col_desc.objsubid = col.attnum)\n\n    where (\n        {%- for schema in schemas -%}\n          upper(sch.nspname) = upper('{{ schema }}'){%- if not loop.last %} or {% endif -%}\n        {%- endfor -%}\n      )\n      and not pg_is_other_temp_schema(sch.oid) -- not a temporary schema belonging to another session\n      and tbl.relpersistence in ('p', 'u') -- [p]ermanent table or [u]nlogged table. Exclude [t]emporary tables\n      and tbl.relkind in ('r', 'v', 'f', 'p') -- o[r]dinary table, [v]iew, [f]oreign table, [p]artitioned table. Other values are [i]ndex, [S]equence, [c]omposite type, [t]OAST table, [m]aterialized view\n      and col.attnum > 0 -- negative numbers are used for system columns such as oid\n      and not col.attisdropped -- column as not been dropped\n\n    order by\n        sch.nspname,\n        tbl.relname,\n        col.attnum\n\n  {%- endcall -%}\n\n  {{ return(load_result('catalog').table) }}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1654784474.229266}, "macro.dbt_postgres.postgres_get_relations": {"unique_id": "macro.dbt_postgres.postgres_get_relations", "package_name": "dbt_postgres", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.1.0/libexec/lib/python3.9/site-packages/dbt/include/postgres", "path": "macros/relations.sql", "original_file_path": "macros/relations.sql", "name": "postgres_get_relations", "macro_sql": "{% macro postgres_get_relations () -%}\n\n  {#\n      -- in pg_depend, objid is the dependent, refobjid is the referenced object\n      --  > a pg_depend entry indicates that the referenced object cannot be\n      --  > dropped without also dropping the dependent object.\n  #}\n\n  {%- call statement('relations', fetch_result=True) -%}\n    with relation as (\n        select\n            pg_rewrite.ev_class as class,\n            pg_rewrite.oid as id\n        from pg_rewrite\n    ),\n    class as (\n        select\n            oid as id,\n            relname as name,\n            relnamespace as schema,\n            relkind as kind\n        from pg_class\n    ),\n    dependency as (\n        select distinct\n            pg_depend.objid as id,\n            pg_depend.refobjid as ref\n        from pg_depend\n    ),\n    schema as (\n        select\n            pg_namespace.oid as id,\n            pg_namespace.nspname as name\n        from pg_namespace\n        where nspname != 'information_schema' and nspname not like 'pg\\_%'\n    ),\n    referenced as (\n        select\n            relation.id AS id,\n            referenced_class.name ,\n            referenced_class.schema ,\n            referenced_class.kind\n        from relation\n        join class as referenced_class on relation.class=referenced_class.id\n        where referenced_class.kind in ('r', 'v')\n    ),\n    relationships as (\n        select\n            referenced.name as referenced_name,\n            referenced.schema as referenced_schema_id,\n            dependent_class.name as dependent_name,\n            dependent_class.schema as dependent_schema_id,\n            referenced.kind as kind\n        from referenced\n        join dependency on referenced.id=dependency.id\n        join class as dependent_class on dependency.ref=dependent_class.id\n        where\n            (referenced.name != dependent_class.name or\n             referenced.schema != dependent_class.schema)\n    )\n\n    select\n        referenced_schema.name as referenced_schema,\n        relationships.referenced_name as referenced_name,\n        dependent_schema.name as dependent_schema,\n        relationships.dependent_name as dependent_name\n    from relationships\n    join schema as dependent_schema on relationships.dependent_schema_id=dependent_schema.id\n    join schema as referenced_schema on relationships.referenced_schema_id=referenced_schema.id\n    group by referenced_schema, referenced_name, dependent_schema, dependent_name\n    order by referenced_schema, referenced_name, dependent_schema, dependent_name;\n\n  {%- endcall -%}\n\n  {{ return(load_result('relations').table) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1654784474.2303302}, "macro.dbt_postgres.postgres__create_table_as": {"unique_id": "macro.dbt_postgres.postgres__create_table_as", "package_name": "dbt_postgres", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.1.0/libexec/lib/python3.9/site-packages/dbt/include/postgres", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "postgres__create_table_as", "macro_sql": "{% macro postgres__create_table_as(temporary, relation, sql) -%}\n  {%- set unlogged = config.get('unlogged', default=false) -%}\n  {%- set sql_header = config.get('sql_header', none) -%}\n\n  {{ sql_header if sql_header is not none }}\n\n  create {% if temporary -%}\n    temporary\n  {%- elif unlogged -%}\n    unlogged\n  {%- endif %} table {{ relation }}\n  as (\n    {{ sql }}\n  );\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1654784474.239018}, "macro.dbt_postgres.postgres__get_create_index_sql": {"unique_id": "macro.dbt_postgres.postgres__get_create_index_sql", "package_name": "dbt_postgres", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.1.0/libexec/lib/python3.9/site-packages/dbt/include/postgres", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "postgres__get_create_index_sql", "macro_sql": "{% macro postgres__get_create_index_sql(relation, index_dict) -%}\n  {%- set index_config = adapter.parse_index(index_dict) -%}\n  {%- set comma_separated_columns = \", \".join(index_config.columns) -%}\n  {%- set index_name = index_config.render(relation) -%}\n\n  create {% if index_config.unique -%}\n    unique\n  {%- endif %} index if not exists\n  \"{{ index_name }}\"\n  on {{ relation }} {% if index_config.type -%}\n    using {{ index_config.type }}\n  {%- endif %}\n  ({{ comma_separated_columns }});\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1654784474.239836}, "macro.dbt_postgres.postgres__create_schema": {"unique_id": "macro.dbt_postgres.postgres__create_schema", "package_name": "dbt_postgres", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.1.0/libexec/lib/python3.9/site-packages/dbt/include/postgres", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "postgres__create_schema", "macro_sql": "{% macro postgres__create_schema(relation) -%}\n  {% if relation.database -%}\n    {{ adapter.verify_database(relation.database) }}\n  {%- endif -%}\n  {%- call statement('create_schema') -%}\n    create schema if not exists {{ relation.without_identifier().include(database=False) }}\n  {%- endcall -%}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1654784474.2403688}, "macro.dbt_postgres.postgres__drop_schema": {"unique_id": "macro.dbt_postgres.postgres__drop_schema", "package_name": "dbt_postgres", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.1.0/libexec/lib/python3.9/site-packages/dbt/include/postgres", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "postgres__drop_schema", "macro_sql": "{% macro postgres__drop_schema(relation) -%}\n  {% if relation.database -%}\n    {{ adapter.verify_database(relation.database) }}\n  {%- endif -%}\n  {%- call statement('drop_schema') -%}\n    drop schema if exists {{ relation.without_identifier().include(database=False) }} cascade\n  {%- endcall -%}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1654784474.240884}, "macro.dbt_postgres.postgres__get_columns_in_relation": {"unique_id": "macro.dbt_postgres.postgres__get_columns_in_relation", "package_name": "dbt_postgres", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.1.0/libexec/lib/python3.9/site-packages/dbt/include/postgres", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "postgres__get_columns_in_relation", "macro_sql": "{% macro postgres__get_columns_in_relation(relation) -%}\n  {% call statement('get_columns_in_relation', fetch_result=True) %}\n      select\n          column_name,\n          data_type,\n          character_maximum_length,\n          numeric_precision,\n          numeric_scale\n\n      from {{ relation.information_schema('columns') }}\n      where table_name = '{{ relation.identifier }}'\n        {% if relation.schema %}\n        and table_schema = '{{ relation.schema }}'\n        {% endif %}\n      order by ordinal_position\n\n  {% endcall %}\n  {% set table = load_result('get_columns_in_relation').table %}\n  {{ return(sql_convert_columns_in_relation(table)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement", "macro.dbt.sql_convert_columns_in_relation"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1654784474.2416499}, "macro.dbt_postgres.postgres__list_relations_without_caching": {"unique_id": "macro.dbt_postgres.postgres__list_relations_without_caching", "package_name": "dbt_postgres", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.1.0/libexec/lib/python3.9/site-packages/dbt/include/postgres", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "postgres__list_relations_without_caching", "macro_sql": "{% macro postgres__list_relations_without_caching(schema_relation) %}\n  {% call statement('list_relations_without_caching', fetch_result=True) -%}\n    select\n      '{{ schema_relation.database }}' as database,\n      tablename as name,\n      schemaname as schema,\n      'table' as type\n    from pg_tables\n    where schemaname ilike '{{ schema_relation.schema }}'\n    union all\n    select\n      '{{ schema_relation.database }}' as database,\n      viewname as name,\n      schemaname as schema,\n      'view' as type\n    from pg_views\n    where schemaname ilike '{{ schema_relation.schema }}'\n  {% endcall %}\n  {{ return(load_result('list_relations_without_caching').table) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1654784474.2422478}, "macro.dbt_postgres.postgres__information_schema_name": {"unique_id": "macro.dbt_postgres.postgres__information_schema_name", "package_name": "dbt_postgres", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.1.0/libexec/lib/python3.9/site-packages/dbt/include/postgres", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "postgres__information_schema_name", "macro_sql": "{% macro postgres__information_schema_name(database) -%}\n  {% if database_name -%}\n    {{ adapter.verify_database(database_name) }}\n  {%- endif -%}\n  information_schema\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1654784474.242521}, "macro.dbt_postgres.postgres__list_schemas": {"unique_id": "macro.dbt_postgres.postgres__list_schemas", "package_name": "dbt_postgres", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.1.0/libexec/lib/python3.9/site-packages/dbt/include/postgres", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "postgres__list_schemas", "macro_sql": "{% macro postgres__list_schemas(database) %}\n  {% if database -%}\n    {{ adapter.verify_database(database) }}\n  {%- endif -%}\n  {% call statement('list_schemas', fetch_result=True, auto_begin=False) %}\n    select distinct nspname from pg_namespace\n  {% endcall %}\n  {{ return(load_result('list_schemas').table) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1654784474.243087}, "macro.dbt_postgres.postgres__check_schema_exists": {"unique_id": "macro.dbt_postgres.postgres__check_schema_exists", "package_name": "dbt_postgres", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.1.0/libexec/lib/python3.9/site-packages/dbt/include/postgres", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "postgres__check_schema_exists", "macro_sql": "{% macro postgres__check_schema_exists(information_schema, schema) -%}\n  {% if information_schema.database -%}\n    {{ adapter.verify_database(information_schema.database) }}\n  {%- endif -%}\n  {% call statement('check_schema_exists', fetch_result=True, auto_begin=False) %}\n    select count(*) from pg_namespace where nspname = '{{ schema }}'\n  {% endcall %}\n  {{ return(load_result('check_schema_exists').table) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1654784474.24372}, "macro.dbt_postgres.postgres__current_timestamp": {"unique_id": "macro.dbt_postgres.postgres__current_timestamp", "package_name": "dbt_postgres", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.1.0/libexec/lib/python3.9/site-packages/dbt/include/postgres", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "postgres__current_timestamp", "macro_sql": "{% macro postgres__current_timestamp() -%}\n  now()\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1654784474.24384}, "macro.dbt_postgres.postgres__snapshot_string_as_time": {"unique_id": "macro.dbt_postgres.postgres__snapshot_string_as_time", "package_name": "dbt_postgres", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.1.0/libexec/lib/python3.9/site-packages/dbt/include/postgres", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "postgres__snapshot_string_as_time", "macro_sql": "{% macro postgres__snapshot_string_as_time(timestamp) -%}\n    {%- set result = \"'\" ~ timestamp ~ \"'::timestamp without time zone\" -%}\n    {{ return(result) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1654784474.244119}, "macro.dbt_postgres.postgres__snapshot_get_time": {"unique_id": "macro.dbt_postgres.postgres__snapshot_get_time", "package_name": "dbt_postgres", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.1.0/libexec/lib/python3.9/site-packages/dbt/include/postgres", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "postgres__snapshot_get_time", "macro_sql": "{% macro postgres__snapshot_get_time() -%}\n  {{ current_timestamp() }}::timestamp without time zone\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.current_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1654784474.244284}, "macro.dbt_postgres.postgres__make_temp_relation": {"unique_id": "macro.dbt_postgres.postgres__make_temp_relation", "package_name": "dbt_postgres", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.1.0/libexec/lib/python3.9/site-packages/dbt/include/postgres", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "postgres__make_temp_relation", "macro_sql": "{% macro postgres__make_temp_relation(base_relation, suffix) %}\n    {% set dt = modules.datetime.datetime.now() %}\n    {% set dtstring = dt.strftime(\"%H%M%S%f\") %}\n    {% set suffix_length = suffix|length + dtstring|length %}\n    {% set relation_max_name_length = 63 %}\n    {% if suffix_length > relation_max_name_length %}\n        {% do exceptions.raise_compiler_error('Temp relation suffix is too long (' ~ suffix|length ~ ' characters). Maximum length is ' ~ (relation_max_name_length - dtstring|length) ~ ' characters.') %}\n    {% endif %}\n    {% set tmp_identifier = base_relation.identifier[:relation_max_name_length - suffix_length] ~ suffix ~ dtstring %}\n    {% do return(base_relation.incorporate(\n                                  path={\n                                    \"identifier\": tmp_identifier,\n                                    \"schema\": none,\n                                    \"database\": none\n                                  })) -%}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1654784474.245801}, "macro.dbt_postgres.postgres_escape_comment": {"unique_id": "macro.dbt_postgres.postgres_escape_comment", "package_name": "dbt_postgres", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.1.0/libexec/lib/python3.9/site-packages/dbt/include/postgres", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "postgres_escape_comment", "macro_sql": "{% macro postgres_escape_comment(comment) -%}\n  {% if comment is not string %}\n    {% do exceptions.raise_compiler_error('cannot escape a non-string: ' ~ comment) %}\n  {% endif %}\n  {%- set magic = '$dbt_comment_literal_block$' -%}\n  {%- if magic in comment -%}\n    {%- do exceptions.raise_compiler_error('The string ' ~ magic ~ ' is not allowed in comments.') -%}\n  {%- endif -%}\n  {{ magic }}{{ comment }}{{ magic }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1654784474.246521}, "macro.dbt_postgres.postgres__alter_relation_comment": {"unique_id": "macro.dbt_postgres.postgres__alter_relation_comment", "package_name": "dbt_postgres", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.1.0/libexec/lib/python3.9/site-packages/dbt/include/postgres", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "postgres__alter_relation_comment", "macro_sql": "{% macro postgres__alter_relation_comment(relation, comment) %}\n  {% set escaped_comment = postgres_escape_comment(comment) %}\n  comment on {{ relation.type }} {{ relation }} is {{ escaped_comment }};\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_postgres.postgres_escape_comment"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1654784474.2468889}, "macro.dbt_postgres.postgres__alter_column_comment": {"unique_id": "macro.dbt_postgres.postgres__alter_column_comment", "package_name": "dbt_postgres", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.1.0/libexec/lib/python3.9/site-packages/dbt/include/postgres", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "postgres__alter_column_comment", "macro_sql": "{% macro postgres__alter_column_comment(relation, column_dict) %}\n  {% set existing_columns = adapter.get_columns_in_relation(relation) | map(attribute=\"name\") | list %}\n  {% for column_name in column_dict if (column_name in existing_columns) %}\n    {% set comment = column_dict[column_name]['description'] %}\n    {% set escaped_comment = postgres_escape_comment(comment) %}\n    comment on column {{ relation }}.{{ adapter.quote(column_name) if column_dict[column_name]['quote'] else column_name }} is {{ escaped_comment }};\n  {% endfor %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_postgres.postgres_escape_comment"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1654784474.247875}, "macro.dbt_postgres.postgres__snapshot_merge_sql": {"unique_id": "macro.dbt_postgres.postgres__snapshot_merge_sql", "package_name": "dbt_postgres", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.1.0/libexec/lib/python3.9/site-packages/dbt/include/postgres", "path": "macros/materializations/snapshot_merge.sql", "original_file_path": "macros/materializations/snapshot_merge.sql", "name": "postgres__snapshot_merge_sql", "macro_sql": "{% macro postgres__snapshot_merge_sql(target, source, insert_cols) -%}\n    {%- set insert_cols_csv = insert_cols | join(', ') -%}\n\n    update {{ target }}\n    set dbt_valid_to = DBT_INTERNAL_SOURCE.dbt_valid_to\n    from {{ source }} as DBT_INTERNAL_SOURCE\n    where DBT_INTERNAL_SOURCE.dbt_scd_id::text = {{ target }}.dbt_scd_id::text\n      and DBT_INTERNAL_SOURCE.dbt_change_type::text in ('update'::text, 'delete'::text)\n      and {{ target }}.dbt_valid_to is null;\n\n    insert into {{ target }} ({{ insert_cols_csv }})\n    select {% for column in insert_cols -%}\n        DBT_INTERNAL_SOURCE.{{ column }} {%- if not loop.last %}, {%- endif %}\n    {%- endfor %}\n    from {{ source }} as DBT_INTERNAL_SOURCE\n    where DBT_INTERNAL_SOURCE.dbt_change_type::text = 'insert'::text;\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1654784474.249266}, "macro.dbt.run_hooks": {"unique_id": "macro.dbt.run_hooks", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.1.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/hooks.sql", "original_file_path": "macros/materializations/hooks.sql", "name": "run_hooks", "macro_sql": "{% macro run_hooks(hooks, inside_transaction=True) %}\n  {% for hook in hooks | selectattr('transaction', 'equalto', inside_transaction)  %}\n    {% if not inside_transaction and loop.first %}\n      {% call statement(auto_begin=inside_transaction) %}\n        commit;\n      {% endcall %}\n    {% endif %}\n    {% set rendered = render(hook.get('sql')) | trim %}\n    {% if (rendered | length) > 0 %}\n      {% call statement(auto_begin=inside_transaction) %}\n        {{ rendered }}\n      {% endcall %}\n    {% endif %}\n  {% endfor %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1654784474.251081}, "macro.dbt.make_hook_config": {"unique_id": "macro.dbt.make_hook_config", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.1.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/hooks.sql", "original_file_path": "macros/materializations/hooks.sql", "name": "make_hook_config", "macro_sql": "{% macro make_hook_config(sql, inside_transaction) %}\n    {{ tojson({\"sql\": sql, \"transaction\": inside_transaction}) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1654784474.2514062}, "macro.dbt.before_begin": {"unique_id": "macro.dbt.before_begin", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.1.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/hooks.sql", "original_file_path": "macros/materializations/hooks.sql", "name": "before_begin", "macro_sql": "{% macro before_begin(sql) %}\n    {{ make_hook_config(sql, inside_transaction=False) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.make_hook_config"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1654784474.251634}, "macro.dbt.in_transaction": {"unique_id": "macro.dbt.in_transaction", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.1.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/hooks.sql", "original_file_path": "macros/materializations/hooks.sql", "name": "in_transaction", "macro_sql": "{% macro in_transaction(sql) %}\n    {{ make_hook_config(sql, inside_transaction=True) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.make_hook_config"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1654784474.251858}, "macro.dbt.after_commit": {"unique_id": "macro.dbt.after_commit", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.1.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/hooks.sql", "original_file_path": "macros/materializations/hooks.sql", "name": "after_commit", "macro_sql": "{% macro after_commit(sql) %}\n    {{ make_hook_config(sql, inside_transaction=False) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.make_hook_config"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1654784474.252081}, "macro.dbt.set_sql_header": {"unique_id": "macro.dbt.set_sql_header", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.1.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/configs.sql", "original_file_path": "macros/materializations/configs.sql", "name": "set_sql_header", "macro_sql": "{% macro set_sql_header(config) -%}\n  {{ config.set('sql_header', caller()) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1654784474.252766}, "macro.dbt.should_full_refresh": {"unique_id": "macro.dbt.should_full_refresh", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.1.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/configs.sql", "original_file_path": "macros/materializations/configs.sql", "name": "should_full_refresh", "macro_sql": "{% macro should_full_refresh() %}\n  {% set config_full_refresh = config.get('full_refresh') %}\n  {% if config_full_refresh is none %}\n    {% set config_full_refresh = flags.FULL_REFRESH %}\n  {% endif %}\n  {% do return(config_full_refresh) %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1654784474.253249}, "macro.dbt.should_store_failures": {"unique_id": "macro.dbt.should_store_failures", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.1.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/configs.sql", "original_file_path": "macros/materializations/configs.sql", "name": "should_store_failures", "macro_sql": "{% macro should_store_failures() %}\n  {% set config_store_failures = config.get('store_failures') %}\n  {% if config_store_failures is none %}\n    {% set config_store_failures = flags.STORE_FAILURES %}\n  {% endif %}\n  {% do return(config_store_failures) %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1654784474.253737}, "macro.dbt.snapshot_merge_sql": {"unique_id": "macro.dbt.snapshot_merge_sql", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.1.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshots/snapshot_merge.sql", "original_file_path": "macros/materializations/snapshots/snapshot_merge.sql", "name": "snapshot_merge_sql", "macro_sql": "{% macro snapshot_merge_sql(target, source, insert_cols) -%}\n  {{ adapter.dispatch('snapshot_merge_sql', 'dbt')(target, source, insert_cols) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_redshift.redshift__snapshot_merge_sql"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1654784474.254522}, "macro.dbt.default__snapshot_merge_sql": {"unique_id": "macro.dbt.default__snapshot_merge_sql", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.1.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshots/snapshot_merge.sql", "original_file_path": "macros/materializations/snapshots/snapshot_merge.sql", "name": "default__snapshot_merge_sql", "macro_sql": "{% macro default__snapshot_merge_sql(target, source, insert_cols) -%}\n    {%- set insert_cols_csv = insert_cols | join(', ') -%}\n\n    merge into {{ target }} as DBT_INTERNAL_DEST\n    using {{ source }} as DBT_INTERNAL_SOURCE\n    on DBT_INTERNAL_SOURCE.dbt_scd_id = DBT_INTERNAL_DEST.dbt_scd_id\n\n    when matched\n     and DBT_INTERNAL_DEST.dbt_valid_to is null\n     and DBT_INTERNAL_SOURCE.dbt_change_type in ('update', 'delete')\n        then update\n        set dbt_valid_to = DBT_INTERNAL_SOURCE.dbt_valid_to\n\n    when not matched\n     and DBT_INTERNAL_SOURCE.dbt_change_type = 'insert'\n        then insert ({{ insert_cols_csv }})\n        values ({{ insert_cols_csv }})\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1654784474.2549691}, "macro.dbt.strategy_dispatch": {"unique_id": "macro.dbt.strategy_dispatch", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.1.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshots/strategies.sql", "original_file_path": "macros/materializations/snapshots/strategies.sql", "name": "strategy_dispatch", "macro_sql": "{% macro strategy_dispatch(name) -%}\n{% set original_name = name %}\n  {% if '.' in name %}\n    {% set package_name, name = name.split(\".\", 1) %}\n  {% else %}\n    {% set package_name = none %}\n  {% endif %}\n\n  {% if package_name is none %}\n    {% set package_context = context %}\n  {% elif package_name in context %}\n    {% set package_context = context[package_name] %}\n  {% else %}\n    {% set error_msg %}\n        Could not find package '{{package_name}}', called with '{{original_name}}'\n    {% endset %}\n    {{ exceptions.raise_compiler_error(error_msg | trim) }}\n  {% endif %}\n\n  {%- set search_name = 'snapshot_' ~ name ~ '_strategy' -%}\n\n  {% if search_name not in package_context %}\n    {% set error_msg %}\n        The specified strategy macro '{{name}}' was not found in package '{{ package_name }}'\n    {% endset %}\n    {{ exceptions.raise_compiler_error(error_msg | trim) }}\n  {% endif %}\n  {{ return(package_context[search_name]) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1654784474.260642}, "macro.dbt.snapshot_hash_arguments": {"unique_id": "macro.dbt.snapshot_hash_arguments", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.1.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshots/strategies.sql", "original_file_path": "macros/materializations/snapshots/strategies.sql", "name": "snapshot_hash_arguments", "macro_sql": "{% macro snapshot_hash_arguments(args) -%}\n  {{ adapter.dispatch('snapshot_hash_arguments', 'dbt')(args) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__snapshot_hash_arguments"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1654784474.260913}, "macro.dbt.default__snapshot_hash_arguments": {"unique_id": "macro.dbt.default__snapshot_hash_arguments", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.1.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshots/strategies.sql", "original_file_path": "macros/materializations/snapshots/strategies.sql", "name": "default__snapshot_hash_arguments", "macro_sql": "{% macro default__snapshot_hash_arguments(args) -%}\n    md5({%- for arg in args -%}\n        coalesce(cast({{ arg }} as varchar ), '')\n        {% if not loop.last %} || '|' || {% endif %}\n    {%- endfor -%})\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1654784474.261267}, "macro.dbt.snapshot_get_time": {"unique_id": "macro.dbt.snapshot_get_time", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.1.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshots/strategies.sql", "original_file_path": "macros/materializations/snapshots/strategies.sql", "name": "snapshot_get_time", "macro_sql": "{% macro snapshot_get_time() -%}\n  {{ adapter.dispatch('snapshot_get_time', 'dbt')() }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_redshift.redshift__snapshot_get_time"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1654784474.261492}, "macro.dbt.default__snapshot_get_time": {"unique_id": "macro.dbt.default__snapshot_get_time", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.1.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshots/strategies.sql", "original_file_path": "macros/materializations/snapshots/strategies.sql", "name": "default__snapshot_get_time", "macro_sql": "{% macro default__snapshot_get_time() -%}\n  {{ current_timestamp() }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.current_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1654784474.261646}, "macro.dbt.snapshot_timestamp_strategy": {"unique_id": "macro.dbt.snapshot_timestamp_strategy", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.1.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshots/strategies.sql", "original_file_path": "macros/materializations/snapshots/strategies.sql", "name": "snapshot_timestamp_strategy", "macro_sql": "{% macro snapshot_timestamp_strategy(node, snapshotted_rel, current_rel, config, target_exists) %}\n    {% set primary_key = config['unique_key'] %}\n    {% set updated_at = config['updated_at'] %}\n    {% set invalidate_hard_deletes = config.get('invalidate_hard_deletes', false) %}\n\n    {#/*\n        The snapshot relation might not have an {{ updated_at }} value if the\n        snapshot strategy is changed from `check` to `timestamp`. We\n        should use a dbt-created column for the comparison in the snapshot\n        table instead of assuming that the user-supplied {{ updated_at }}\n        will be present in the historical data.\n\n        See https://github.com/dbt-labs/dbt-core/issues/2350\n    */ #}\n    {% set row_changed_expr -%}\n        ({{ snapshotted_rel }}.dbt_valid_from < {{ current_rel }}.{{ updated_at }})\n    {%- endset %}\n\n    {% set scd_id_expr = snapshot_hash_arguments([primary_key, updated_at]) %}\n\n    {% do return({\n        \"unique_key\": primary_key,\n        \"updated_at\": updated_at,\n        \"row_changed\": row_changed_expr,\n        \"scd_id\": scd_id_expr,\n        \"invalidate_hard_deletes\": invalidate_hard_deletes\n    }) %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.snapshot_hash_arguments"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1654784474.26291}, "macro.dbt.snapshot_string_as_time": {"unique_id": "macro.dbt.snapshot_string_as_time", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.1.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshots/strategies.sql", "original_file_path": "macros/materializations/snapshots/strategies.sql", "name": "snapshot_string_as_time", "macro_sql": "{% macro snapshot_string_as_time(timestamp) -%}\n    {{ adapter.dispatch('snapshot_string_as_time', 'dbt')(timestamp) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_redshift.redshift__snapshot_string_as_time"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1654784474.2631721}, "macro.dbt.default__snapshot_string_as_time": {"unique_id": "macro.dbt.default__snapshot_string_as_time", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.1.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshots/strategies.sql", "original_file_path": "macros/materializations/snapshots/strategies.sql", "name": "default__snapshot_string_as_time", "macro_sql": "{% macro default__snapshot_string_as_time(timestamp) %}\n    {% do exceptions.raise_not_implemented(\n        'snapshot_string_as_time macro not implemented for adapter '+adapter.type()\n    ) %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1654784474.2634509}, "macro.dbt.snapshot_check_all_get_existing_columns": {"unique_id": "macro.dbt.snapshot_check_all_get_existing_columns", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.1.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshots/strategies.sql", "original_file_path": "macros/materializations/snapshots/strategies.sql", "name": "snapshot_check_all_get_existing_columns", "macro_sql": "{% macro snapshot_check_all_get_existing_columns(node, target_exists) -%}\n    {%- set query_columns = get_columns_in_query(node['compiled_sql']) -%}\n    {%- if not target_exists -%}\n        {# no table yet -> return whatever the query does #}\n        {{ return([false, query_columns]) }}\n    {%- endif -%}\n    {# handle any schema changes #}\n    {%- set target_table = node.get('alias', node.get('name')) -%}\n    {%- set target_relation = adapter.get_relation(database=node.database, schema=node.schema, identifier=target_table) -%}\n    {%- set existing_cols = get_columns_in_query('select * from ' ~ target_relation) -%}\n    {%- set ns = namespace() -%} {# handle for-loop scoping with a namespace #}\n    {%- set ns.column_added = false -%}\n\n    {%- set intersection = [] -%}\n    {%- for col in query_columns -%}\n        {%- if col in existing_cols -%}\n            {%- do intersection.append(col) -%}\n        {%- else -%}\n            {% set ns.column_added = true %}\n        {%- endif -%}\n    {%- endfor -%}\n    {{ return([ns.column_added, intersection]) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.get_columns_in_query"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1654784474.265028}, "macro.dbt.snapshot_check_strategy": {"unique_id": "macro.dbt.snapshot_check_strategy", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.1.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshots/strategies.sql", "original_file_path": "macros/materializations/snapshots/strategies.sql", "name": "snapshot_check_strategy", "macro_sql": "{% macro snapshot_check_strategy(node, snapshotted_rel, current_rel, config, target_exists) %}\n    {% set check_cols_config = config['check_cols'] %}\n    {% set primary_key = config['unique_key'] %}\n    {% set invalidate_hard_deletes = config.get('invalidate_hard_deletes', false) %}\n    {% set updated_at = config.get('updated_at', snapshot_get_time()) %}\n\n    {% set column_added = false %}\n\n    {% if check_cols_config == 'all' %}\n        {% set column_added, check_cols = snapshot_check_all_get_existing_columns(node, target_exists) %}\n    {% elif check_cols_config is iterable and (check_cols_config | length) > 0 %}\n        {% set check_cols = check_cols_config %}\n    {% else %}\n        {% do exceptions.raise_compiler_error(\"Invalid value for 'check_cols': \" ~ check_cols_config) %}\n    {% endif %}\n\n    {%- set row_changed_expr -%}\n    (\n    {%- if column_added -%}\n        {{ get_true_sql() }}\n    {%- else -%}\n    {%- for col in check_cols -%}\n        {{ snapshotted_rel }}.{{ col }} != {{ current_rel }}.{{ col }}\n        or\n        (\n            (({{ snapshotted_rel }}.{{ col }} is null) and not ({{ current_rel }}.{{ col }} is null))\n            or\n            ((not {{ snapshotted_rel }}.{{ col }} is null) and ({{ current_rel }}.{{ col }} is null))\n        )\n        {%- if not loop.last %} or {% endif -%}\n    {%- endfor -%}\n    {%- endif -%}\n    )\n    {%- endset %}\n\n    {% set scd_id_expr = snapshot_hash_arguments([primary_key, updated_at]) %}\n\n    {% do return({\n        \"unique_key\": primary_key,\n        \"updated_at\": updated_at,\n        \"row_changed\": row_changed_expr,\n        \"scd_id\": scd_id_expr,\n        \"invalidate_hard_deletes\": invalidate_hard_deletes\n    }) %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.snapshot_get_time", "macro.dbt.snapshot_check_all_get_existing_columns", "macro.dbt.get_true_sql", "macro.dbt.snapshot_hash_arguments"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1654784474.267565}, "macro.dbt.create_columns": {"unique_id": "macro.dbt.create_columns", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.1.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "name": "create_columns", "macro_sql": "{% macro create_columns(relation, columns) %}\n  {{ adapter.dispatch('create_columns', 'dbt')(relation, columns) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__create_columns"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1654784474.273453}, "macro.dbt.default__create_columns": {"unique_id": "macro.dbt.default__create_columns", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.1.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "name": "default__create_columns", "macro_sql": "{% macro default__create_columns(relation, columns) %}\n  {% for column in columns %}\n    {% call statement() %}\n      alter table {{ relation }} add column \"{{ column.name }}\" {{ column.data_type }};\n    {% endcall %}\n  {% endfor %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1654784474.273916}, "macro.dbt.post_snapshot": {"unique_id": "macro.dbt.post_snapshot", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.1.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "name": "post_snapshot", "macro_sql": "{% macro post_snapshot(staging_relation) %}\n  {{ adapter.dispatch('post_snapshot', 'dbt')(staging_relation) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__post_snapshot"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1654784474.2741902}, "macro.dbt.default__post_snapshot": {"unique_id": "macro.dbt.default__post_snapshot", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.1.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "name": "default__post_snapshot", "macro_sql": "{% macro default__post_snapshot(staging_relation) %}\n    {# no-op #}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1654784474.274326}, "macro.dbt.get_true_sql": {"unique_id": "macro.dbt.get_true_sql", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.1.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "name": "get_true_sql", "macro_sql": "{% macro get_true_sql() %}\n  {{ adapter.dispatch('get_true_sql', 'dbt')() }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__get_true_sql"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1654784474.274558}, "macro.dbt.default__get_true_sql": {"unique_id": "macro.dbt.default__get_true_sql", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.1.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "name": "default__get_true_sql", "macro_sql": "{% macro default__get_true_sql() %}\n    {{ return('TRUE') }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1654784474.274762}, "macro.dbt.snapshot_staging_table": {"unique_id": "macro.dbt.snapshot_staging_table", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.1.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "name": "snapshot_staging_table", "macro_sql": "{% macro snapshot_staging_table(strategy, source_sql, target_relation) -%}\n  {{ adapter.dispatch('snapshot_staging_table', 'dbt')(strategy, source_sql, target_relation) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__snapshot_staging_table"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1654784474.275101}, "macro.dbt.default__snapshot_staging_table": {"unique_id": "macro.dbt.default__snapshot_staging_table", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.1.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "name": "default__snapshot_staging_table", "macro_sql": "{% macro default__snapshot_staging_table(strategy, source_sql, target_relation) -%}\n\n    with snapshot_query as (\n\n        {{ source_sql }}\n\n    ),\n\n    snapshotted_data as (\n\n        select *,\n            {{ strategy.unique_key }} as dbt_unique_key\n\n        from {{ target_relation }}\n        where dbt_valid_to is null\n\n    ),\n\n    insertions_source_data as (\n\n        select\n            *,\n            {{ strategy.unique_key }} as dbt_unique_key,\n            {{ strategy.updated_at }} as dbt_updated_at,\n            {{ strategy.updated_at }} as dbt_valid_from,\n            nullif({{ strategy.updated_at }}, {{ strategy.updated_at }}) as dbt_valid_to,\n            {{ strategy.scd_id }} as dbt_scd_id\n\n        from snapshot_query\n    ),\n\n    updates_source_data as (\n\n        select\n            *,\n            {{ strategy.unique_key }} as dbt_unique_key,\n            {{ strategy.updated_at }} as dbt_updated_at,\n            {{ strategy.updated_at }} as dbt_valid_from,\n            {{ strategy.updated_at }} as dbt_valid_to\n\n        from snapshot_query\n    ),\n\n    {%- if strategy.invalidate_hard_deletes %}\n\n    deletes_source_data as (\n\n        select\n            *,\n            {{ strategy.unique_key }} as dbt_unique_key\n        from snapshot_query\n    ),\n    {% endif %}\n\n    insertions as (\n\n        select\n            'insert' as dbt_change_type,\n            source_data.*\n\n        from insertions_source_data as source_data\n        left outer join snapshotted_data on snapshotted_data.dbt_unique_key = source_data.dbt_unique_key\n        where snapshotted_data.dbt_unique_key is null\n           or (\n                snapshotted_data.dbt_unique_key is not null\n            and (\n                {{ strategy.row_changed }}\n            )\n        )\n\n    ),\n\n    updates as (\n\n        select\n            'update' as dbt_change_type,\n            source_data.*,\n            snapshotted_data.dbt_scd_id\n\n        from updates_source_data as source_data\n        join snapshotted_data on snapshotted_data.dbt_unique_key = source_data.dbt_unique_key\n        where (\n            {{ strategy.row_changed }}\n        )\n    )\n\n    {%- if strategy.invalidate_hard_deletes -%}\n    ,\n\n    deletes as (\n\n        select\n            'delete' as dbt_change_type,\n            source_data.*,\n            {{ snapshot_get_time() }} as dbt_valid_from,\n            {{ snapshot_get_time() }} as dbt_updated_at,\n            {{ snapshot_get_time() }} as dbt_valid_to,\n            snapshotted_data.dbt_scd_id\n\n        from snapshotted_data\n        left join deletes_source_data as source_data on snapshotted_data.dbt_unique_key = source_data.dbt_unique_key\n        where source_data.dbt_unique_key is null\n    )\n    {%- endif %}\n\n    select * from insertions\n    union all\n    select * from updates\n    {%- if strategy.invalidate_hard_deletes %}\n    union all\n    select * from deletes\n    {%- endif %}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.snapshot_get_time"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1654784474.276511}, "macro.dbt.build_snapshot_table": {"unique_id": "macro.dbt.build_snapshot_table", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.1.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "name": "build_snapshot_table", "macro_sql": "{% macro build_snapshot_table(strategy, sql) -%}\n  {{ adapter.dispatch('build_snapshot_table', 'dbt')(strategy, sql) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__build_snapshot_table"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1654784474.2768168}, "macro.dbt.default__build_snapshot_table": {"unique_id": "macro.dbt.default__build_snapshot_table", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.1.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "name": "default__build_snapshot_table", "macro_sql": "{% macro default__build_snapshot_table(strategy, sql) %}\n\n    select *,\n        {{ strategy.scd_id }} as dbt_scd_id,\n        {{ strategy.updated_at }} as dbt_updated_at,\n        {{ strategy.updated_at }} as dbt_valid_from,\n        nullif({{ strategy.updated_at }}, {{ strategy.updated_at }}) as dbt_valid_to\n    from (\n        {{ sql }}\n    ) sbq\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1654784474.277218}, "macro.dbt.build_snapshot_staging_table": {"unique_id": "macro.dbt.build_snapshot_staging_table", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.1.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshots/helpers.sql", "original_file_path": "macros/materializations/snapshots/helpers.sql", "name": "build_snapshot_staging_table", "macro_sql": "{% macro build_snapshot_staging_table(strategy, sql, target_relation) %}\n    {% set tmp_relation = make_temp_relation(target_relation) %}\n\n    {% set select = snapshot_staging_table(strategy, sql, target_relation) %}\n\n    {% call statement('build_snapshot_staging_relation') %}\n        {{ create_table_as(True, tmp_relation, select) }}\n    {% endcall %}\n\n    {% do return(tmp_relation) %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.make_temp_relation", "macro.dbt.snapshot_staging_table", "macro.dbt.statement", "macro.dbt.create_table_as"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1654784474.277924}, "macro.dbt.materialization_snapshot_default": {"unique_id": "macro.dbt.materialization_snapshot_default", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.1.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshots/snapshot.sql", "original_file_path": "macros/materializations/snapshots/snapshot.sql", "name": "materialization_snapshot_default", "macro_sql": "{% materialization snapshot, default %}\n  {%- set config = model['config'] -%}\n\n  {%- set target_table = model.get('alias', model.get('name')) -%}\n\n  {%- set strategy_name = config.get('strategy') -%}\n  {%- set unique_key = config.get('unique_key') %}\n\n  {% set target_relation_exists, target_relation = get_or_create_relation(\n          database=model.database,\n          schema=model.schema,\n          identifier=target_table,\n          type='table') -%}\n\n  {%- if not target_relation.is_table -%}\n    {% do exceptions.relation_wrong_type(target_relation, 'table') %}\n  {%- endif -%}\n\n\n  {{ run_hooks(pre_hooks, inside_transaction=False) }}\n\n  {{ run_hooks(pre_hooks, inside_transaction=True) }}\n\n  {% set strategy_macro = strategy_dispatch(strategy_name) %}\n  {% set strategy = strategy_macro(model, \"snapshotted_data\", \"source_data\", config, target_relation_exists) %}\n\n  {% if not target_relation_exists %}\n\n      {% set build_sql = build_snapshot_table(strategy, model['compiled_sql']) %}\n      {% set final_sql = create_table_as(False, target_relation, build_sql) %}\n\n  {% else %}\n\n      {{ adapter.valid_snapshot_target(target_relation) }}\n\n      {% set staging_table = build_snapshot_staging_table(strategy, sql, target_relation) %}\n\n      -- this may no-op if the database does not require column expansion\n      {% do adapter.expand_target_column_types(from_relation=staging_table,\n                                               to_relation=target_relation) %}\n\n      {% set missing_columns = adapter.get_missing_columns(staging_table, target_relation)\n                                   | rejectattr('name', 'equalto', 'dbt_change_type')\n                                   | rejectattr('name', 'equalto', 'DBT_CHANGE_TYPE')\n                                   | rejectattr('name', 'equalto', 'dbt_unique_key')\n                                   | rejectattr('name', 'equalto', 'DBT_UNIQUE_KEY')\n                                   | list %}\n\n      {% do create_columns(target_relation, missing_columns) %}\n\n      {% set source_columns = adapter.get_columns_in_relation(staging_table)\n                                   | rejectattr('name', 'equalto', 'dbt_change_type')\n                                   | rejectattr('name', 'equalto', 'DBT_CHANGE_TYPE')\n                                   | rejectattr('name', 'equalto', 'dbt_unique_key')\n                                   | rejectattr('name', 'equalto', 'DBT_UNIQUE_KEY')\n                                   | list %}\n\n      {% set quoted_source_columns = [] %}\n      {% for column in source_columns %}\n        {% do quoted_source_columns.append(adapter.quote(column.name)) %}\n      {% endfor %}\n\n      {% set final_sql = snapshot_merge_sql(\n            target = target_relation,\n            source = staging_table,\n            insert_cols = quoted_source_columns\n         )\n      %}\n\n  {% endif %}\n\n  {% call statement('main') %}\n      {{ final_sql }}\n  {% endcall %}\n\n  {% do persist_docs(target_relation, model) %}\n\n  {% if not target_relation_exists %}\n    {% do create_indexes(target_relation) %}\n  {% endif %}\n\n  {{ run_hooks(post_hooks, inside_transaction=True) }}\n\n  {{ adapter.commit() }}\n\n  {% if staging_table is defined %}\n      {% do post_snapshot(staging_table) %}\n  {% endif %}\n\n  {{ run_hooks(post_hooks, inside_transaction=False) }}\n\n  {{ return({'relations': [target_relation]}) }}\n\n{% endmaterialization %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.get_or_create_relation", "macro.dbt.run_hooks", "macro.dbt.strategy_dispatch", "macro.dbt.build_snapshot_table", "macro.dbt.create_table_as", "macro.dbt.build_snapshot_staging_table", "macro.dbt.create_columns", "macro.dbt.snapshot_merge_sql", "macro.dbt.statement", "macro.dbt.persist_docs", "macro.dbt.create_indexes", "macro.dbt.post_snapshot"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1654784474.286819}, "macro.dbt.materialization_test_default": {"unique_id": "macro.dbt.materialization_test_default", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.1.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/tests/test.sql", "original_file_path": "macros/materializations/tests/test.sql", "name": "materialization_test_default", "macro_sql": "{%- materialization test, default -%}\n\n  {% set relations = [] %}\n\n  {% if should_store_failures() %}\n\n    {% set identifier = model['alias'] %}\n    {% set old_relation = adapter.get_relation(database=database, schema=schema, identifier=identifier) %}\n    {% set target_relation = api.Relation.create(\n        identifier=identifier, schema=schema, database=database, type='table') -%} %}\n\n    {% if old_relation %}\n        {% do adapter.drop_relation(old_relation) %}\n    {% endif %}\n\n    {% call statement(auto_begin=True) %}\n        {{ create_table_as(False, target_relation, sql) }}\n    {% endcall %}\n\n    {% do relations.append(target_relation) %}\n\n    {% set main_sql %}\n        select *\n        from {{ target_relation }}\n    {% endset %}\n\n    {{ adapter.commit() }}\n\n  {% else %}\n\n      {% set main_sql = sql %}\n\n  {% endif %}\n\n  {% set limit = config.get('limit') %}\n  {% set fail_calc = config.get('fail_calc') %}\n  {% set warn_if = config.get('warn_if') %}\n  {% set error_if = config.get('error_if') %}\n\n  {% call statement('main', fetch_result=True) -%}\n\n    {{ get_test_sql(main_sql, fail_calc, warn_if, error_if, limit)}}\n\n  {%- endcall %}\n\n  {{ return({'relations': relations}) }}\n\n{%- endmaterialization -%}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.should_store_failures", "macro.dbt.statement", "macro.dbt.create_table_as", "macro.dbt.get_test_sql"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1654784474.29015}, "macro.dbt.get_test_sql": {"unique_id": "macro.dbt.get_test_sql", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.1.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/tests/helpers.sql", "original_file_path": "macros/materializations/tests/helpers.sql", "name": "get_test_sql", "macro_sql": "{% macro get_test_sql(main_sql, fail_calc, warn_if, error_if, limit) -%}\n  {{ adapter.dispatch('get_test_sql', 'dbt')(main_sql, fail_calc, warn_if, error_if, limit) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__get_test_sql"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1654784474.290945}, "macro.dbt.default__get_test_sql": {"unique_id": "macro.dbt.default__get_test_sql", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.1.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/tests/helpers.sql", "original_file_path": "macros/materializations/tests/helpers.sql", "name": "default__get_test_sql", "macro_sql": "{% macro default__get_test_sql(main_sql, fail_calc, warn_if, error_if, limit) -%}\n    select\n      {{ fail_calc }} as failures,\n      {{ fail_calc }} {{ warn_if }} as should_warn,\n      {{ fail_calc }} {{ error_if }} as should_error\n    from (\n      {{ main_sql }}\n      {{ \"limit \" ~ limit if limit != none }}\n    ) dbt_internal_test\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1654784474.291446}, "macro.dbt.get_where_subquery": {"unique_id": "macro.dbt.get_where_subquery", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.1.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/tests/where_subquery.sql", "original_file_path": "macros/materializations/tests/where_subquery.sql", "name": "get_where_subquery", "macro_sql": "{% macro get_where_subquery(relation) -%}\n    {% do return(adapter.dispatch('get_where_subquery', 'dbt')(relation)) %}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__get_where_subquery"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1654784474.29212}, "macro.dbt.default__get_where_subquery": {"unique_id": "macro.dbt.default__get_where_subquery", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.1.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/tests/where_subquery.sql", "original_file_path": "macros/materializations/tests/where_subquery.sql", "name": "default__get_where_subquery", "macro_sql": "{% macro default__get_where_subquery(relation) -%}\n    {% set where = config.get('where', '') %}\n    {% if where %}\n        {%- set filtered -%}\n            (select * from {{ relation }} where {{ where }}) dbt_subquery\n        {%- endset -%}\n        {% do return(filtered) %}\n    {%- else -%}\n        {% do return(relation) %}\n    {%- endif -%}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1654784474.292738}, "macro.dbt.get_quoted_csv": {"unique_id": "macro.dbt.get_quoted_csv", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.1.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/models/incremental/column_helpers.sql", "original_file_path": "macros/materializations/models/incremental/column_helpers.sql", "name": "get_quoted_csv", "macro_sql": "{% macro get_quoted_csv(column_names) %}\n\n    {% set quoted = [] %}\n    {% for col in column_names -%}\n        {%- do quoted.append(adapter.quote(col)) -%}\n    {%- endfor %}\n\n    {%- set dest_cols_csv = quoted | join(', ') -%}\n    {{ return(dest_cols_csv) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1654784474.294102}, "macro.dbt.diff_columns": {"unique_id": "macro.dbt.diff_columns", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.1.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/models/incremental/column_helpers.sql", "original_file_path": "macros/materializations/models/incremental/column_helpers.sql", "name": "diff_columns", "macro_sql": "{% macro diff_columns(source_columns, target_columns) %}\n\n  {% set result = [] %}\n  {% set source_names = source_columns | map(attribute = 'column') | list %}\n  {% set target_names = target_columns | map(attribute = 'column') | list %}\n\n   {# --check whether the name attribute exists in the target - this does not perform a data type check #}\n   {% for sc in source_columns %}\n     {% if sc.name not in target_names %}\n        {{ result.append(sc) }}\n     {% endif %}\n   {% endfor %}\n\n  {{ return(result) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1654784474.294986}, "macro.dbt.diff_column_data_types": {"unique_id": "macro.dbt.diff_column_data_types", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.1.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/models/incremental/column_helpers.sql", "original_file_path": "macros/materializations/models/incremental/column_helpers.sql", "name": "diff_column_data_types", "macro_sql": "{% macro diff_column_data_types(source_columns, target_columns) %}\n\n  {% set result = [] %}\n  {% for sc in source_columns %}\n    {% set tc = target_columns | selectattr(\"name\", \"equalto\", sc.name) | list | first %}\n    {% if tc %}\n      {% if sc.data_type != tc.data_type %}\n        {{ result.append( { 'column_name': tc.name, 'new_type': sc.data_type } ) }}\n      {% endif %}\n    {% endif %}\n  {% endfor %}\n\n  {{ return(result) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1654784474.295989}, "macro.dbt.get_merge_sql": {"unique_id": "macro.dbt.get_merge_sql", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.1.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/models/incremental/merge.sql", "original_file_path": "macros/materializations/models/incremental/merge.sql", "name": "get_merge_sql", "macro_sql": "{% macro get_merge_sql(target, source, unique_key, dest_columns, predicates=none) -%}\n  {{ adapter.dispatch('get_merge_sql', 'dbt')(target, source, unique_key, dest_columns, predicates) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__get_merge_sql"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1654784474.303746}, "macro.dbt.default__get_merge_sql": {"unique_id": "macro.dbt.default__get_merge_sql", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.1.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/models/incremental/merge.sql", "original_file_path": "macros/materializations/models/incremental/merge.sql", "name": "default__get_merge_sql", "macro_sql": "{% macro default__get_merge_sql(target, source, unique_key, dest_columns, predicates) -%}\n    {%- set predicates = [] if predicates is none else [] + predicates -%}\n    {%- set dest_cols_csv = get_quoted_csv(dest_columns | map(attribute=\"name\")) -%}\n    {%- set update_columns = config.get('merge_update_columns', default = dest_columns | map(attribute=\"quoted\") | list) -%}\n    {%- set sql_header = config.get('sql_header', none) -%}\n\n    {% if unique_key %}\n        {% if unique_key is sequence and unique_key is not mapping and unique_key is not string %}\n            {% for key in unique_key %}\n                {% set this_key_match %}\n                    DBT_INTERNAL_SOURCE.{{ key }} = DBT_INTERNAL_DEST.{{ key }}\n                {% endset %}\n                {% do predicates.append(this_key_match) %}\n            {% endfor %}\n        {% else %}\n            {% set unique_key_match %}\n                DBT_INTERNAL_SOURCE.{{ unique_key }} = DBT_INTERNAL_DEST.{{ unique_key }}\n            {% endset %}\n            {% do predicates.append(unique_key_match) %}\n        {% endif %}\n    {% else %}\n        {% do predicates.append('FALSE') %}\n    {% endif %}\n\n    {{ sql_header if sql_header is not none }}\n\n    merge into {{ target }} as DBT_INTERNAL_DEST\n        using {{ source }} as DBT_INTERNAL_SOURCE\n        on {{ predicates | join(' and ') }}\n\n    {% if unique_key %}\n    when matched then update set\n        {% for column_name in update_columns -%}\n            {{ column_name }} = DBT_INTERNAL_SOURCE.{{ column_name }}\n            {%- if not loop.last %}, {%- endif %}\n        {%- endfor %}\n    {% endif %}\n\n    when not matched then insert\n        ({{ dest_cols_csv }})\n    values\n        ({{ dest_cols_csv }})\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.get_quoted_csv"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1654784474.306186}, "macro.dbt.get_delete_insert_merge_sql": {"unique_id": "macro.dbt.get_delete_insert_merge_sql", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.1.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/models/incremental/merge.sql", "original_file_path": "macros/materializations/models/incremental/merge.sql", "name": "get_delete_insert_merge_sql", "macro_sql": "{% macro get_delete_insert_merge_sql(target, source, unique_key, dest_columns) -%}\n  {{ adapter.dispatch('get_delete_insert_merge_sql', 'dbt')(target, source, unique_key, dest_columns) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__get_delete_insert_merge_sql"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1654784474.306678}, "macro.dbt.default__get_delete_insert_merge_sql": {"unique_id": "macro.dbt.default__get_delete_insert_merge_sql", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.1.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/models/incremental/merge.sql", "original_file_path": "macros/materializations/models/incremental/merge.sql", "name": "default__get_delete_insert_merge_sql", "macro_sql": "{% macro default__get_delete_insert_merge_sql(target, source, unique_key, dest_columns) -%}\n\n    {%- set dest_cols_csv = get_quoted_csv(dest_columns | map(attribute=\"name\")) -%}\n\n    {% if unique_key %}\n        {% if unique_key is sequence and unique_key is not string %}\n            delete from {{target }}\n            using {{ source }}\n            where (\n                {% for key in unique_key %}\n                    {{ source }}.{{ key }} = {{ target }}.{{ key }}\n                    {{ \"and \" if not loop.last }}\n                {% endfor %}\n            );\n        {% else %}\n            delete from {{ target }}\n            where (\n                {{ unique_key }}) in (\n                select ({{ unique_key }})\n                from {{ source }}\n            );\n\n        {% endif %}\n        {% endif %}\n\n    insert into {{ target }} ({{ dest_cols_csv }})\n    (\n        select {{ dest_cols_csv }}\n        from {{ source }}\n    )\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.get_quoted_csv"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1654784474.307913}, "macro.dbt.get_insert_overwrite_merge_sql": {"unique_id": "macro.dbt.get_insert_overwrite_merge_sql", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.1.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/models/incremental/merge.sql", "original_file_path": "macros/materializations/models/incremental/merge.sql", "name": "get_insert_overwrite_merge_sql", "macro_sql": "{% macro get_insert_overwrite_merge_sql(target, source, dest_columns, predicates, include_sql_header=false) -%}\n  {{ adapter.dispatch('get_insert_overwrite_merge_sql', 'dbt')(target, source, dest_columns, predicates, include_sql_header) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__get_insert_overwrite_merge_sql"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1654784474.3083498}, "macro.dbt.default__get_insert_overwrite_merge_sql": {"unique_id": "macro.dbt.default__get_insert_overwrite_merge_sql", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.1.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/models/incremental/merge.sql", "original_file_path": "macros/materializations/models/incremental/merge.sql", "name": "default__get_insert_overwrite_merge_sql", "macro_sql": "{% macro default__get_insert_overwrite_merge_sql(target, source, dest_columns, predicates, include_sql_header) -%}\n    {%- set predicates = [] if predicates is none else [] + predicates -%}\n    {%- set dest_cols_csv = get_quoted_csv(dest_columns | map(attribute=\"name\")) -%}\n    {%- set sql_header = config.get('sql_header', none) -%}\n\n    {{ sql_header if sql_header is not none and include_sql_header }}\n\n    merge into {{ target }} as DBT_INTERNAL_DEST\n        using {{ source }} as DBT_INTERNAL_SOURCE\n        on FALSE\n\n    when not matched by source\n        {% if predicates %} and {{ predicates | join(' and ') }} {% endif %}\n        then delete\n\n    when not matched then insert\n        ({{ dest_cols_csv }})\n    values\n        ({{ dest_cols_csv }})\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.get_quoted_csv"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1654784474.3093739}, "macro.dbt.is_incremental": {"unique_id": "macro.dbt.is_incremental", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.1.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/models/incremental/is_incremental.sql", "original_file_path": "macros/materializations/models/incremental/is_incremental.sql", "name": "is_incremental", "macro_sql": "{% macro is_incremental() %}\n    {#-- do not run introspective queries in parsing #}\n    {% if not execute %}\n        {{ return(False) }}\n    {% else %}\n        {% set relation = adapter.get_relation(this.database, this.schema, this.table) %}\n        {{ return(relation is not none\n                  and relation.type == 'table'\n                  and model.config.materialized == 'incremental'\n                  and not should_full_refresh()) }}\n    {% endif %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.should_full_refresh"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1654784474.310473}, "macro.dbt.materialization_incremental_default": {"unique_id": "macro.dbt.materialization_incremental_default", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.1.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/models/incremental/incremental.sql", "original_file_path": "macros/materializations/models/incremental/incremental.sql", "name": "materialization_incremental_default", "macro_sql": "{% materialization incremental, default -%}\n\n  {% set unique_key = config.get('unique_key') %}\n\n  {% set target_relation = this.incorporate(type='table') %}\n  {% set existing_relation = load_relation(this) %}\n  {% set tmp_relation = make_temp_relation(target_relation) %}\n  {%- set full_refresh_mode = (should_full_refresh()) -%}\n\n  {% set on_schema_change = incremental_validate_on_schema_change(config.get('on_schema_change'), default='ignore') %}\n\n  {% set tmp_identifier = model['name'] + '__dbt_tmp' %}\n  {% set backup_identifier = model['name'] + \"__dbt_backup\" %}\n\n  -- the intermediate_ and backup_ relations should not already exist in the database; get_relation\n  -- will return None in that case. Otherwise, we get a relation that we can drop\n  -- later, before we try to use this name for the current operation. This has to happen before\n  -- BEGIN, in a separate transaction\n  {% set preexisting_intermediate_relation = adapter.get_relation(identifier=tmp_identifier,\n                                                                  schema=schema,\n                                                                  database=database) %}\n  {% set preexisting_backup_relation = adapter.get_relation(identifier=backup_identifier,\n                                                            schema=schema,\n                                                            database=database) %}\n  {{ drop_relation_if_exists(preexisting_intermediate_relation) }}\n  {{ drop_relation_if_exists(preexisting_backup_relation) }}\n\n  {{ run_hooks(pre_hooks, inside_transaction=False) }}\n\n  -- `BEGIN` happens here:\n  {{ run_hooks(pre_hooks, inside_transaction=True) }}\n\n  {% set to_drop = [] %}\n\n  {# -- first check whether we want to full refresh for source view or config reasons #}\n  {% set trigger_full_refresh = (full_refresh_mode or existing_relation.is_view) %}\n\n  {% if existing_relation is none %}\n      {% set build_sql = create_table_as(False, target_relation, sql) %}\n{% elif trigger_full_refresh %}\n      {#-- Make sure the backup doesn't exist so we don't encounter issues with the rename below #}\n      {% set tmp_identifier = model['name'] + '__dbt_tmp' %}\n      {% set backup_identifier = model['name'] + '__dbt_backup' %}\n      {% set intermediate_relation = existing_relation.incorporate(path={\"identifier\": tmp_identifier}) %}\n      {% set backup_relation = existing_relation.incorporate(path={\"identifier\": backup_identifier}) %}\n\n      {% set build_sql = create_table_as(False, intermediate_relation, sql) %}\n      {% set need_swap = true %}\n      {% do to_drop.append(backup_relation) %}\n  {% else %}\n    {% do run_query(create_table_as(True, tmp_relation, sql)) %}\n    {% do adapter.expand_target_column_types(\n             from_relation=tmp_relation,\n             to_relation=target_relation) %}\n    {#-- Process schema changes. Returns dict of changes if successful. Use source columns for upserting/merging --#}\n    {% set dest_columns = process_schema_changes(on_schema_change, tmp_relation, existing_relation) %}\n    {% if not dest_columns %}\n      {% set dest_columns = adapter.get_columns_in_relation(existing_relation) %}\n    {% endif %}\n    {% set build_sql = get_delete_insert_merge_sql(target_relation, tmp_relation, unique_key, dest_columns) %}\n\n  {% endif %}\n\n  {% call statement(\"main\") %}\n      {{ build_sql }}\n  {% endcall %}\n\n  {% if need_swap %}\n      {% do adapter.rename_relation(target_relation, backup_relation) %}\n      {% do adapter.rename_relation(intermediate_relation, target_relation) %}\n  {% endif %}\n\n  {% do persist_docs(target_relation, model) %}\n\n  {% if existing_relation is none or existing_relation.is_view or should_full_refresh() %}\n    {% do create_indexes(target_relation) %}\n  {% endif %}\n\n  {{ run_hooks(post_hooks, inside_transaction=True) }}\n\n  -- `COMMIT` happens here\n  {% do adapter.commit() %}\n\n  {% for rel in to_drop %}\n      {% do adapter.drop_relation(rel) %}\n  {% endfor %}\n\n  {{ run_hooks(post_hooks, inside_transaction=False) }}\n\n  {{ return({'relations': [target_relation]}) }}\n\n{%- endmaterialization %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.load_relation", "macro.dbt.make_temp_relation", "macro.dbt.should_full_refresh", "macro.dbt.incremental_validate_on_schema_change", "macro.dbt.drop_relation_if_exists", "macro.dbt.run_hooks", "macro.dbt.create_table_as", "macro.dbt.run_query", "macro.dbt.process_schema_changes", "macro.dbt.get_delete_insert_merge_sql", "macro.dbt.statement", "macro.dbt.persist_docs", "macro.dbt.create_indexes"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1654784474.318209}, "macro.dbt.incremental_validate_on_schema_change": {"unique_id": "macro.dbt.incremental_validate_on_schema_change", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.1.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/models/incremental/on_schema_change.sql", "original_file_path": "macros/materializations/models/incremental/on_schema_change.sql", "name": "incremental_validate_on_schema_change", "macro_sql": "{% macro incremental_validate_on_schema_change(on_schema_change, default='ignore') %}\n\n   {% if on_schema_change not in ['sync_all_columns', 'append_new_columns', 'fail', 'ignore'] %}\n\n     {% set log_message = 'Invalid value for on_schema_change (%s) specified. Setting default value of %s.' % (on_schema_change, default) %}\n     {% do log(log_message) %}\n\n     {{ return(default) }}\n\n   {% else %}\n\n     {{ return(on_schema_change) }}\n\n   {% endif %}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1654784474.325254}, "macro.dbt.check_for_schema_changes": {"unique_id": "macro.dbt.check_for_schema_changes", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.1.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/models/incremental/on_schema_change.sql", "original_file_path": "macros/materializations/models/incremental/on_schema_change.sql", "name": "check_for_schema_changes", "macro_sql": "{% macro check_for_schema_changes(source_relation, target_relation) %}\n\n  {% set schema_changed = False %}\n\n  {%- set source_columns = adapter.get_columns_in_relation(source_relation) -%}\n  {%- set target_columns = adapter.get_columns_in_relation(target_relation) -%}\n  {%- set source_not_in_target = diff_columns(source_columns, target_columns) -%}\n  {%- set target_not_in_source = diff_columns(target_columns, source_columns) -%}\n\n  {% set new_target_types = diff_column_data_types(source_columns, target_columns) %}\n\n  {% if source_not_in_target != [] %}\n    {% set schema_changed = True %}\n  {% elif target_not_in_source != [] or new_target_types != [] %}\n    {% set schema_changed = True %}\n  {% elif new_target_types != [] %}\n    {% set schema_changed = True %}\n  {% endif %}\n\n  {% set changes_dict = {\n    'schema_changed': schema_changed,\n    'source_not_in_target': source_not_in_target,\n    'target_not_in_source': target_not_in_source,\n    'source_columns': source_columns,\n    'target_columns': target_columns,\n    'new_target_types': new_target_types\n  } %}\n\n  {% set msg %}\n    In {{ target_relation }}:\n        Schema changed: {{ schema_changed }}\n        Source columns not in target: {{ source_not_in_target }}\n        Target columns not in source: {{ target_not_in_source }}\n        New column types: {{ new_target_types }}\n  {% endset %}\n\n  {% do log(msg) %}\n\n  {{ return(changes_dict) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.diff_columns", "macro.dbt.diff_column_data_types"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1654784474.327255}, "macro.dbt.sync_column_schemas": {"unique_id": "macro.dbt.sync_column_schemas", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.1.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/models/incremental/on_schema_change.sql", "original_file_path": "macros/materializations/models/incremental/on_schema_change.sql", "name": "sync_column_schemas", "macro_sql": "{% macro sync_column_schemas(on_schema_change, target_relation, schema_changes_dict) %}\n\n  {%- set add_to_target_arr = schema_changes_dict['source_not_in_target'] -%}\n\n  {%- if on_schema_change == 'append_new_columns'-%}\n     {%- if add_to_target_arr | length > 0 -%}\n       {%- do alter_relation_add_remove_columns(target_relation, add_to_target_arr, none) -%}\n     {%- endif -%}\n\n  {% elif on_schema_change == 'sync_all_columns' %}\n     {%- set remove_from_target_arr = schema_changes_dict['target_not_in_source'] -%}\n     {%- set new_target_types = schema_changes_dict['new_target_types'] -%}\n\n     {% if add_to_target_arr | length > 0 or remove_from_target_arr | length > 0 %}\n       {%- do alter_relation_add_remove_columns(target_relation, add_to_target_arr, remove_from_target_arr) -%}\n     {% endif %}\n\n     {% if new_target_types != [] %}\n       {% for ntt in new_target_types %}\n         {% set column_name = ntt['column_name'] %}\n         {% set new_type = ntt['new_type'] %}\n         {% do alter_column_type(target_relation, column_name, new_type) %}\n       {% endfor %}\n     {% endif %}\n\n  {% endif %}\n\n  {% set schema_change_message %}\n    In {{ target_relation }}:\n        Schema change approach: {{ on_schema_change }}\n        Columns added: {{ add_to_target_arr }}\n        Columns removed: {{ remove_from_target_arr }}\n        Data types changed: {{ new_target_types }}\n  {% endset %}\n\n  {% do log(schema_change_message) %}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.alter_relation_add_remove_columns", "macro.dbt.alter_column_type"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1654784474.3292081}, "macro.dbt.process_schema_changes": {"unique_id": "macro.dbt.process_schema_changes", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.1.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/models/incremental/on_schema_change.sql", "original_file_path": "macros/materializations/models/incremental/on_schema_change.sql", "name": "process_schema_changes", "macro_sql": "{% macro process_schema_changes(on_schema_change, source_relation, target_relation) %}\n\n    {% if on_schema_change == 'ignore' %}\n\n     {{ return({}) }}\n\n    {% else %}\n\n      {% set schema_changes_dict = check_for_schema_changes(source_relation, target_relation) %}\n\n      {% if schema_changes_dict['schema_changed'] %}\n\n        {% if on_schema_change == 'fail' %}\n\n          {% set fail_msg %}\n              The source and target schemas on this incremental model are out of sync!\n              They can be reconciled in several ways:\n                - set the `on_schema_change` config to either append_new_columns or sync_all_columns, depending on your situation.\n                - Re-run the incremental model with `full_refresh: True` to update the target schema.\n                - update the schema manually and re-run the process.\n          {% endset %}\n\n          {% do exceptions.raise_compiler_error(fail_msg) %}\n\n        {# -- unless we ignore, run the sync operation per the config #}\n        {% else %}\n\n          {% do sync_column_schemas(on_schema_change, target_relation, schema_changes_dict) %}\n\n        {% endif %}\n\n      {% endif %}\n\n      {{ return(schema_changes_dict['source_columns']) }}\n\n    {% endif %}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.check_for_schema_changes", "macro.dbt.sync_column_schemas"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1654784474.330378}, "macro.dbt.materialization_table_default": {"unique_id": "macro.dbt.materialization_table_default", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.1.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/models/table/table.sql", "original_file_path": "macros/materializations/models/table/table.sql", "name": "materialization_table_default", "macro_sql": "{% materialization table, default %}\n  {%- set identifier = model['alias'] -%}\n  {%- set tmp_identifier = model['name'] + '__dbt_tmp' -%}\n  {%- set backup_identifier = model['name'] + '__dbt_backup' -%}\n\n  {%- set old_relation = adapter.get_relation(database=database, schema=schema, identifier=identifier) -%}\n  {%- set target_relation = api.Relation.create(identifier=identifier,\n                                                schema=schema,\n                                                database=database,\n                                                type='table') -%}\n  {%- set intermediate_relation = api.Relation.create(identifier=tmp_identifier,\n                                                      schema=schema,\n                                                      database=database,\n                                                      type='table') -%}\n  -- the intermediate_relation should not already exist in the database; get_relation\n  -- will return None in that case. Otherwise, we get a relation that we can drop\n  -- later, before we try to use this name for the current operation\n  {%- set preexisting_intermediate_relation = adapter.get_relation(identifier=tmp_identifier,\n                                                                   schema=schema,\n                                                                   database=database) -%}\n  /*\n      See ../view/view.sql for more information about this relation.\n  */\n  {%- set backup_relation_type = 'table' if old_relation is none else old_relation.type -%}\n  {%- set backup_relation = api.Relation.create(identifier=backup_identifier,\n                                                schema=schema,\n                                                database=database,\n                                                type=backup_relation_type) -%}\n  -- as above, the backup_relation should not already exist\n  {%- set preexisting_backup_relation = adapter.get_relation(identifier=backup_identifier,\n                                                             schema=schema,\n                                                             database=database) -%}\n\n\n  -- drop the temp relations if they exist already in the database\n  {{ drop_relation_if_exists(preexisting_intermediate_relation) }}\n  {{ drop_relation_if_exists(preexisting_backup_relation) }}\n\n  {{ run_hooks(pre_hooks, inside_transaction=False) }}\n\n  -- `BEGIN` happens here:\n  {{ run_hooks(pre_hooks, inside_transaction=True) }}\n\n  -- build model\n  {% call statement('main') -%}\n    {{ get_create_table_as_sql(False, intermediate_relation, sql) }}\n  {%- endcall %}\n\n  -- cleanup\n  {% if old_relation is not none %}\n      {{ adapter.rename_relation(old_relation, backup_relation) }}\n  {% endif %}\n\n  {{ adapter.rename_relation(intermediate_relation, target_relation) }}\n\n  {% do create_indexes(target_relation) %}\n\n  {{ run_hooks(post_hooks, inside_transaction=True) }}\n\n  {% do persist_docs(target_relation, model) %}\n\n  -- `COMMIT` happens here\n  {{ adapter.commit() }}\n\n  -- finally, drop the existing/backup relation after the commit\n  {{ drop_relation_if_exists(backup_relation) }}\n\n  {{ run_hooks(post_hooks, inside_transaction=False) }}\n\n  {{ return({'relations': [target_relation]}) }}\n{% endmaterialization %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.drop_relation_if_exists", "macro.dbt.run_hooks", "macro.dbt.statement", "macro.dbt.get_create_table_as_sql", "macro.dbt.create_indexes", "macro.dbt.persist_docs"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1654784474.3363452}, "macro.dbt.get_create_table_as_sql": {"unique_id": "macro.dbt.get_create_table_as_sql", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.1.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/models/table/create_table_as.sql", "original_file_path": "macros/materializations/models/table/create_table_as.sql", "name": "get_create_table_as_sql", "macro_sql": "{% macro get_create_table_as_sql(temporary, relation, sql) -%}\n  {{ adapter.dispatch('get_create_table_as_sql', 'dbt')(temporary, relation, sql) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__get_create_table_as_sql"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1654784474.337122}, "macro.dbt.default__get_create_table_as_sql": {"unique_id": "macro.dbt.default__get_create_table_as_sql", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.1.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/models/table/create_table_as.sql", "original_file_path": "macros/materializations/models/table/create_table_as.sql", "name": "default__get_create_table_as_sql", "macro_sql": "{% macro default__get_create_table_as_sql(temporary, relation, sql) -%}\n  {{ return(create_table_as(temporary, relation, sql)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.create_table_as"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1654784474.337426}, "macro.dbt.create_table_as": {"unique_id": "macro.dbt.create_table_as", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.1.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/models/table/create_table_as.sql", "original_file_path": "macros/materializations/models/table/create_table_as.sql", "name": "create_table_as", "macro_sql": "{% macro create_table_as(temporary, relation, sql) -%}\n  {{ adapter.dispatch('create_table_as', 'dbt')(temporary, relation, sql) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_redshift.redshift__create_table_as"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1654784474.33775}, "macro.dbt.default__create_table_as": {"unique_id": "macro.dbt.default__create_table_as", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.1.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/models/table/create_table_as.sql", "original_file_path": "macros/materializations/models/table/create_table_as.sql", "name": "default__create_table_as", "macro_sql": "{% macro default__create_table_as(temporary, relation, sql) -%}\n  {%- set sql_header = config.get('sql_header', none) -%}\n\n  {{ sql_header if sql_header is not none }}\n\n  create {% if temporary: -%}temporary{%- endif %} table\n    {{ relation.include(database=(not temporary), schema=(not temporary)) }}\n  as (\n    {{ sql }}\n  );\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1654784474.338412}, "macro.dbt.materialization_view_default": {"unique_id": "macro.dbt.materialization_view_default", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.1.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/models/view/view.sql", "original_file_path": "macros/materializations/models/view/view.sql", "name": "materialization_view_default", "macro_sql": "{%- materialization view, default -%}\n\n  {%- set identifier = model['alias'] -%}\n  {%- set tmp_identifier = model['name'] + '__dbt_tmp' -%}\n  {%- set backup_identifier = model['name'] + '__dbt_backup' -%}\n\n  {%- set old_relation = adapter.get_relation(database=database, schema=schema, identifier=identifier) -%}\n  {%- set target_relation = api.Relation.create(identifier=identifier, schema=schema, database=database,\n                                                type='view') -%}\n  {%- set intermediate_relation = api.Relation.create(identifier=tmp_identifier,\n                                                      schema=schema, database=database, type='view') -%}\n  -- the intermediate_relation should not already exist in the database; get_relation\n  -- will return None in that case. Otherwise, we get a relation that we can drop\n  -- later, before we try to use this name for the current operation\n  {%- set preexisting_intermediate_relation = adapter.get_relation(identifier=tmp_identifier,\n                                                                   schema=schema,\n                                                                   database=database) -%}\n  /*\n     This relation (probably) doesn't exist yet. If it does exist, it's a leftover from\n     a previous run, and we're going to try to drop it immediately. At the end of this\n     materialization, we're going to rename the \"old_relation\" to this identifier,\n     and then we're going to drop it. In order to make sure we run the correct one of:\n       - drop view ...\n       - drop table ...\n\n     We need to set the type of this relation to be the type of the old_relation, if it exists,\n     or else \"view\" as a sane default if it does not. Note that if the old_relation does not\n     exist, then there is nothing to move out of the way and subsequentally drop. In that case,\n     this relation will be effectively unused.\n  */\n  {%- set backup_relation_type = 'view' if old_relation is none else old_relation.type -%}\n  {%- set backup_relation = api.Relation.create(identifier=backup_identifier,\n                                                schema=schema, database=database,\n                                                type=backup_relation_type) -%}\n  -- as above, the backup_relation should not already exist\n  {%- set preexisting_backup_relation = adapter.get_relation(identifier=backup_identifier,\n                                                             schema=schema,\n                                                             database=database) -%}\n\n  {{ run_hooks(pre_hooks, inside_transaction=False) }}\n\n  -- drop the temp relations if they exist already in the database\n  {{ drop_relation_if_exists(preexisting_intermediate_relation) }}\n  {{ drop_relation_if_exists(preexisting_backup_relation) }}\n\n  -- `BEGIN` happens here:\n  {{ run_hooks(pre_hooks, inside_transaction=True) }}\n\n  -- build model\n  {% call statement('main') -%}\n    {{ create_view_as(intermediate_relation, sql) }}\n  {%- endcall %}\n\n  -- cleanup\n  -- move the existing view out of the way\n  {% if old_relation is not none %}\n    {{ adapter.rename_relation(old_relation, backup_relation) }}\n  {% endif %}\n  {{ adapter.rename_relation(intermediate_relation, target_relation) }}\n\n  {% do persist_docs(target_relation, model) %}\n\n  {{ run_hooks(post_hooks, inside_transaction=True) }}\n\n  {{ adapter.commit() }}\n\n  {{ drop_relation_if_exists(backup_relation) }}\n\n  {{ run_hooks(post_hooks, inside_transaction=False) }}\n\n  {{ return({'relations': [target_relation]}) }}\n\n{%- endmaterialization -%}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.run_hooks", "macro.dbt.drop_relation_if_exists", "macro.dbt.statement", "macro.dbt.create_view_as", "macro.dbt.persist_docs"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1654784474.3440971}, "macro.dbt.handle_existing_table": {"unique_id": "macro.dbt.handle_existing_table", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.1.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/models/view/helpers.sql", "original_file_path": "macros/materializations/models/view/helpers.sql", "name": "handle_existing_table", "macro_sql": "{% macro handle_existing_table(full_refresh, old_relation) %}\n    {{ adapter.dispatch('handle_existing_table', 'dbt')(full_refresh, old_relation) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__handle_existing_table"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1654784474.344678}, "macro.dbt.default__handle_existing_table": {"unique_id": "macro.dbt.default__handle_existing_table", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.1.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/models/view/helpers.sql", "original_file_path": "macros/materializations/models/view/helpers.sql", "name": "default__handle_existing_table", "macro_sql": "{% macro default__handle_existing_table(full_refresh, old_relation) %}\n    {{ log(\"Dropping relation \" ~ old_relation ~ \" because it is of type \" ~ old_relation.type) }}\n    {{ adapter.drop_relation(old_relation) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1654784474.34505}, "macro.dbt.create_or_replace_view": {"unique_id": "macro.dbt.create_or_replace_view", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.1.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/models/view/create_or_replace_view.sql", "original_file_path": "macros/materializations/models/view/create_or_replace_view.sql", "name": "create_or_replace_view", "macro_sql": "{% macro create_or_replace_view() %}\n  {%- set identifier = model['alias'] -%}\n\n  {%- set old_relation = adapter.get_relation(database=database, schema=schema, identifier=identifier) -%}\n\n  {%- set exists_as_view = (old_relation is not none and old_relation.is_view) -%}\n\n  {%- set target_relation = api.Relation.create(\n      identifier=identifier, schema=schema, database=database,\n      type='view') -%}\n\n  {{ run_hooks(pre_hooks) }}\n\n  -- If there's a table with the same name and we weren't told to full refresh,\n  -- that's an error. If we were told to full refresh, drop it. This behavior differs\n  -- for Snowflake and BigQuery, so multiple dispatch is used.\n  {%- if old_relation is not none and old_relation.is_table -%}\n    {{ handle_existing_table(should_full_refresh(), old_relation) }}\n  {%- endif -%}\n\n  -- build model\n  {% call statement('main') -%}\n    {{ get_create_view_as_sql(target_relation, sql) }}\n  {%- endcall %}\n\n  {{ run_hooks(post_hooks) }}\n\n  {{ return({'relations': [target_relation]}) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.run_hooks", "macro.dbt.handle_existing_table", "macro.dbt.should_full_refresh", "macro.dbt.statement", "macro.dbt.get_create_view_as_sql"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1654784474.347063}, "macro.dbt.get_create_view_as_sql": {"unique_id": "macro.dbt.get_create_view_as_sql", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.1.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/models/view/create_view_as.sql", "original_file_path": "macros/materializations/models/view/create_view_as.sql", "name": "get_create_view_as_sql", "macro_sql": "{% macro get_create_view_as_sql(relation, sql) -%}\n  {{ adapter.dispatch('get_create_view_as_sql', 'dbt')(relation, sql) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__get_create_view_as_sql"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1654784474.347739}, "macro.dbt.default__get_create_view_as_sql": {"unique_id": "macro.dbt.default__get_create_view_as_sql", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.1.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/models/view/create_view_as.sql", "original_file_path": "macros/materializations/models/view/create_view_as.sql", "name": "default__get_create_view_as_sql", "macro_sql": "{% macro default__get_create_view_as_sql(relation, sql) -%}\n  {{ return(create_view_as(relation, sql)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.create_view_as"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1654784474.3480058}, "macro.dbt.create_view_as": {"unique_id": "macro.dbt.create_view_as", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.1.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/models/view/create_view_as.sql", "original_file_path": "macros/materializations/models/view/create_view_as.sql", "name": "create_view_as", "macro_sql": "{% macro create_view_as(relation, sql) -%}\n  {{ adapter.dispatch('create_view_as', 'dbt')(relation, sql) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_redshift.redshift__create_view_as"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1654784474.3482969}, "macro.dbt.default__create_view_as": {"unique_id": "macro.dbt.default__create_view_as", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.1.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/models/view/create_view_as.sql", "original_file_path": "macros/materializations/models/view/create_view_as.sql", "name": "default__create_view_as", "macro_sql": "{% macro default__create_view_as(relation, sql) -%}\n  {%- set sql_header = config.get('sql_header', none) -%}\n\n  {{ sql_header if sql_header is not none }}\n  create view {{ relation }} as (\n    {{ sql }}\n  );\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1654784474.3487139}, "macro.dbt.materialization_seed_default": {"unique_id": "macro.dbt.materialization_seed_default", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.1.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/seeds/seed.sql", "original_file_path": "macros/materializations/seeds/seed.sql", "name": "materialization_seed_default", "macro_sql": "{% materialization seed, default %}\n\n  {%- set identifier = model['alias'] -%}\n  {%- set full_refresh_mode = (should_full_refresh()) -%}\n\n  {%- set old_relation = adapter.get_relation(database=database, schema=schema, identifier=identifier) -%}\n\n  {%- set exists_as_table = (old_relation is not none and old_relation.is_table) -%}\n  {%- set exists_as_view = (old_relation is not none and old_relation.is_view) -%}\n\n  {%- set agate_table = load_agate_table() -%}\n  {%- do store_result('agate_table', response='OK', agate_table=agate_table) -%}\n\n  {{ run_hooks(pre_hooks, inside_transaction=False) }}\n\n  -- `BEGIN` happens here:\n  {{ run_hooks(pre_hooks, inside_transaction=True) }}\n\n  -- build model\n  {% set create_table_sql = \"\" %}\n  {% if exists_as_view %}\n    {{ exceptions.raise_compiler_error(\"Cannot seed to '{}', it is a view\".format(old_relation)) }}\n  {% elif exists_as_table %}\n    {% set create_table_sql = reset_csv_table(model, full_refresh_mode, old_relation, agate_table) %}\n  {% else %}\n    {% set create_table_sql = create_csv_table(model, agate_table) %}\n  {% endif %}\n\n  {% set code = 'CREATE' if full_refresh_mode else 'INSERT' %}\n  {% set rows_affected = (agate_table.rows | length) %}\n  {% set sql = load_csv_rows(model, agate_table) %}\n\n  {% call noop_statement('main', code ~ ' ' ~ rows_affected, code, rows_affected) %}\n    {{ create_table_sql }};\n    -- dbt seed --\n    {{ sql }}\n  {% endcall %}\n\n  {% set target_relation = this.incorporate(type='table') %}\n  {% do persist_docs(target_relation, model) %}\n\n  {% if full_refresh_mode or not exists_as_table %}\n    {% do create_indexes(target_relation) %}\n  {% endif %}\n\n  {{ run_hooks(post_hooks, inside_transaction=True) }}\n\n  -- `COMMIT` happens here\n  {{ adapter.commit() }}\n\n  {{ run_hooks(post_hooks, inside_transaction=False) }}\n\n  {{ return({'relations': [target_relation]}) }}\n\n{% endmaterialization %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.should_full_refresh", "macro.dbt.run_hooks", "macro.dbt.reset_csv_table", "macro.dbt.create_csv_table", "macro.dbt.load_csv_rows", "macro.dbt.noop_statement", "macro.dbt.persist_docs", "macro.dbt.create_indexes"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1654784474.353229}, "macro.dbt.create_csv_table": {"unique_id": "macro.dbt.create_csv_table", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.1.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "name": "create_csv_table", "macro_sql": "{% macro create_csv_table(model, agate_table) -%}\n  {{ adapter.dispatch('create_csv_table', 'dbt')(model, agate_table) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__create_csv_table"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1654784474.3595479}, "macro.dbt.default__create_csv_table": {"unique_id": "macro.dbt.default__create_csv_table", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.1.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "name": "default__create_csv_table", "macro_sql": "{% macro default__create_csv_table(model, agate_table) %}\n  {%- set column_override = model['config'].get('column_types', {}) -%}\n  {%- set quote_seed_column = model['config'].get('quote_columns', None) -%}\n\n  {% set sql %}\n    create table {{ this.render() }} (\n        {%- for col_name in agate_table.column_names -%}\n            {%- set inferred_type = adapter.convert_type(agate_table, loop.index0) -%}\n            {%- set type = column_override.get(col_name, inferred_type) -%}\n            {%- set column_name = (col_name | string) -%}\n            {{ adapter.quote_seed_column(column_name, quote_seed_column) }} {{ type }} {%- if not loop.last -%}, {%- endif -%}\n        {%- endfor -%}\n    )\n  {% endset %}\n\n  {% call statement('_') -%}\n    {{ sql }}\n  {%- endcall %}\n\n  {{ return(sql) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1654784474.361004}, "macro.dbt.reset_csv_table": {"unique_id": "macro.dbt.reset_csv_table", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.1.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "name": "reset_csv_table", "macro_sql": "{% macro reset_csv_table(model, full_refresh, old_relation, agate_table) -%}\n  {{ adapter.dispatch('reset_csv_table', 'dbt')(model, full_refresh, old_relation, agate_table) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__reset_csv_table"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1654784474.361384}, "macro.dbt.default__reset_csv_table": {"unique_id": "macro.dbt.default__reset_csv_table", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.1.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "name": "default__reset_csv_table", "macro_sql": "{% macro default__reset_csv_table(model, full_refresh, old_relation, agate_table) %}\n    {% set sql = \"\" %}\n    {% if full_refresh %}\n        {{ adapter.drop_relation(old_relation) }}\n        {% set sql = create_csv_table(model, agate_table) %}\n    {% else %}\n        {{ adapter.truncate_relation(old_relation) }}\n        {% set sql = \"truncate table \" ~ old_relation %}\n    {% endif %}\n\n    {{ return(sql) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.create_csv_table"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1654784474.3621492}, "macro.dbt.get_binding_char": {"unique_id": "macro.dbt.get_binding_char", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.1.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "name": "get_binding_char", "macro_sql": "{% macro get_binding_char() -%}\n  {{ adapter.dispatch('get_binding_char', 'dbt')() }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__get_binding_char"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1654784474.36238}, "macro.dbt.default__get_binding_char": {"unique_id": "macro.dbt.default__get_binding_char", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.1.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "name": "default__get_binding_char", "macro_sql": "{% macro default__get_binding_char() %}\n  {{ return('%s') }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1654784474.362561}, "macro.dbt.get_batch_size": {"unique_id": "macro.dbt.get_batch_size", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.1.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "name": "get_batch_size", "macro_sql": "{% macro get_batch_size() -%}\n  {{ return(adapter.dispatch('get_batch_size', 'dbt')()) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__get_batch_size"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1654784474.362819}, "macro.dbt.default__get_batch_size": {"unique_id": "macro.dbt.default__get_batch_size", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.1.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "name": "default__get_batch_size", "macro_sql": "{% macro default__get_batch_size() %}\n  {{ return(10000) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1654784474.3630002}, "macro.dbt.get_seed_column_quoted_csv": {"unique_id": "macro.dbt.get_seed_column_quoted_csv", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.1.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "name": "get_seed_column_quoted_csv", "macro_sql": "{% macro get_seed_column_quoted_csv(model, column_names) %}\n  {%- set quote_seed_column = model['config'].get('quote_columns', None) -%}\n    {% set quoted = [] %}\n    {% for col in column_names -%}\n        {%- do quoted.append(adapter.quote_seed_column(col, quote_seed_column)) -%}\n    {%- endfor %}\n\n    {%- set dest_cols_csv = quoted | join(', ') -%}\n    {{ return(dest_cols_csv) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1654784474.36377}, "macro.dbt.load_csv_rows": {"unique_id": "macro.dbt.load_csv_rows", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.1.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "name": "load_csv_rows", "macro_sql": "{% macro load_csv_rows(model, agate_table) -%}\n  {{ adapter.dispatch('load_csv_rows', 'dbt')(model, agate_table) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__load_csv_rows"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1654784474.3641732}, "macro.dbt.default__load_csv_rows": {"unique_id": "macro.dbt.default__load_csv_rows", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.1.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/seeds/helpers.sql", "original_file_path": "macros/materializations/seeds/helpers.sql", "name": "default__load_csv_rows", "macro_sql": "{% macro default__load_csv_rows(model, agate_table) %}\n\n  {% set batch_size = get_batch_size() %}\n\n  {% set cols_sql = get_seed_column_quoted_csv(model, agate_table.column_names) %}\n  {% set bindings = [] %}\n\n  {% set statements = [] %}\n\n  {% for chunk in agate_table.rows | batch(batch_size) %}\n      {% set bindings = [] %}\n\n      {% for row in chunk %}\n          {% do bindings.extend(row) %}\n      {% endfor %}\n\n      {% set sql %}\n          insert into {{ this.render() }} ({{ cols_sql }}) values\n          {% for row in chunk -%}\n              ({%- for column in agate_table.column_names -%}\n                  {{ get_binding_char() }}\n                  {%- if not loop.last%},{%- endif %}\n              {%- endfor -%})\n              {%- if not loop.last%},{%- endif %}\n          {%- endfor %}\n      {% endset %}\n\n      {% do adapter.add_query(sql, bindings=bindings, abridge_sql_log=True) %}\n\n      {% if loop.index0 == 0 %}\n          {% do statements.append(sql) %}\n      {% endif %}\n  {% endfor %}\n\n  {# Return SQL so we can render it out into the compiled files #}\n  {{ return(statements[0]) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.get_batch_size", "macro.dbt.get_seed_column_quoted_csv", "macro.dbt.get_binding_char"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1654784474.3661618}, "macro.dbt.generate_alias_name": {"unique_id": "macro.dbt.generate_alias_name", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.1.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/get_custom_name/get_custom_alias.sql", "original_file_path": "macros/get_custom_name/get_custom_alias.sql", "name": "generate_alias_name", "macro_sql": "{% macro generate_alias_name(custom_alias_name=none, node=none) -%}\n    {% do return(adapter.dispatch('generate_alias_name', 'dbt')(custom_alias_name, node)) %}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__generate_alias_name"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1654784474.366888}, "macro.dbt.default__generate_alias_name": {"unique_id": "macro.dbt.default__generate_alias_name", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.1.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/get_custom_name/get_custom_alias.sql", "original_file_path": "macros/get_custom_name/get_custom_alias.sql", "name": "default__generate_alias_name", "macro_sql": "{% macro default__generate_alias_name(custom_alias_name=none, node=none) -%}\n\n    {%- if custom_alias_name is none -%}\n\n        {{ node.name }}\n\n    {%- else -%}\n\n        {{ custom_alias_name | trim }}\n\n    {%- endif -%}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1654784474.367249}, "macro.dbt.generate_schema_name": {"unique_id": "macro.dbt.generate_schema_name", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.1.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/get_custom_name/get_custom_schema.sql", "original_file_path": "macros/get_custom_name/get_custom_schema.sql", "name": "generate_schema_name", "macro_sql": "{% macro generate_schema_name(custom_schema_name=none, node=none) -%}\n    {{ return(adapter.dispatch('generate_schema_name', 'dbt')(custom_schema_name, node)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__generate_schema_name"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1654784474.368137}, "macro.dbt.default__generate_schema_name": {"unique_id": "macro.dbt.default__generate_schema_name", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.1.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/get_custom_name/get_custom_schema.sql", "original_file_path": "macros/get_custom_name/get_custom_schema.sql", "name": "default__generate_schema_name", "macro_sql": "{% macro default__generate_schema_name(custom_schema_name, node) -%}\n\n    {%- set default_schema = target.schema -%}\n    {%- if custom_schema_name is none -%}\n\n        {{ default_schema }}\n\n    {%- else -%}\n\n        {{ default_schema }}_{{ custom_schema_name | trim }}\n\n    {%- endif -%}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1654784474.368549}, "macro.dbt.generate_schema_name_for_env": {"unique_id": "macro.dbt.generate_schema_name_for_env", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.1.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/get_custom_name/get_custom_schema.sql", "original_file_path": "macros/get_custom_name/get_custom_schema.sql", "name": "generate_schema_name_for_env", "macro_sql": "{% macro generate_schema_name_for_env(custom_schema_name, node) -%}\n\n    {%- set default_schema = target.schema -%}\n    {%- if target.name == 'prod' and custom_schema_name is not none -%}\n\n        {{ custom_schema_name | trim }}\n\n    {%- else -%}\n\n        {{ default_schema }}\n\n    {%- endif -%}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1654784474.369003}, "macro.dbt.generate_database_name": {"unique_id": "macro.dbt.generate_database_name", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.1.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/get_custom_name/get_custom_database.sql", "original_file_path": "macros/get_custom_name/get_custom_database.sql", "name": "generate_database_name", "macro_sql": "{% macro generate_database_name(custom_database_name=none, node=none) -%}\n    {% do return(adapter.dispatch('generate_database_name', 'dbt')(custom_database_name, node)) %}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__generate_database_name"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1654784474.369707}, "macro.dbt.default__generate_database_name": {"unique_id": "macro.dbt.default__generate_database_name", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.1.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/get_custom_name/get_custom_database.sql", "original_file_path": "macros/get_custom_name/get_custom_database.sql", "name": "default__generate_database_name", "macro_sql": "{% macro default__generate_database_name(custom_database_name=none, node=none) -%}\n    {%- set default_database = target.database -%}\n    {%- if custom_database_name is none -%}\n\n        {{ default_database }}\n\n    {%- else -%}\n\n        {{ custom_database_name }}\n\n    {%- endif -%}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1654784474.3701088}, "macro.dbt.default__test_relationships": {"unique_id": "macro.dbt.default__test_relationships", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.1.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/generic_test_sql/relationships.sql", "original_file_path": "macros/generic_test_sql/relationships.sql", "name": "default__test_relationships", "macro_sql": "{% macro default__test_relationships(model, column_name, to, field) %}\n\nwith child as (\n    select {{ column_name }} as from_field\n    from {{ model }}\n    where {{ column_name }} is not null\n),\n\nparent as (\n    select {{ field }} as to_field\n    from {{ to }}\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1654784474.3707469}, "macro.dbt.default__test_not_null": {"unique_id": "macro.dbt.default__test_not_null", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.1.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/generic_test_sql/not_null.sql", "original_file_path": "macros/generic_test_sql/not_null.sql", "name": "default__test_not_null", "macro_sql": "{% macro default__test_not_null(model, column_name) %}\n\n{% set column_list = '*' if should_store_failures() else column_name %}\n\nselect {{ column_list }}\nfrom {{ model }}\nwhere {{ column_name }} is null\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.should_store_failures"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1654784474.371315}, "macro.dbt.default__test_unique": {"unique_id": "macro.dbt.default__test_unique", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.1.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/generic_test_sql/unique.sql", "original_file_path": "macros/generic_test_sql/unique.sql", "name": "default__test_unique", "macro_sql": "{% macro default__test_unique(model, column_name) %}\n\nselect\n    {{ column_name }} as unique_field,\n    count(*) as n_records\n\nfrom {{ model }}\nwhere {{ column_name }} is not null\ngroup by {{ column_name }}\nhaving count(*) > 1\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1654784474.3718}, "macro.dbt.default__test_accepted_values": {"unique_id": "macro.dbt.default__test_accepted_values", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.1.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/generic_test_sql/accepted_values.sql", "original_file_path": "macros/generic_test_sql/accepted_values.sql", "name": "default__test_accepted_values", "macro_sql": "{% macro default__test_accepted_values(model, column_name, values, quote=True) %}\n\nwith all_values as (\n\n    select\n        {{ column_name }} as value_field,\n        count(*) as n_records\n\n    from {{ model }}\n    group by {{ column_name }}\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    {% for value in values -%}\n        {% if quote -%}\n        '{{ value }}'\n        {%- else -%}\n        {{ value }}\n        {%- endif -%}\n        {%- if not loop.last -%},{%- endif %}\n    {%- endfor %}\n)\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1654784474.3727958}, "macro.dbt.statement": {"unique_id": "macro.dbt.statement", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.1.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/etc/statement.sql", "original_file_path": "macros/etc/statement.sql", "name": "statement", "macro_sql": "{% macro statement(name=None, fetch_result=False, auto_begin=True) -%}\n  {%- if execute: -%}\n    {%- set sql = caller() -%}\n\n    {%- if name == 'main' -%}\n      {{ log('Writing runtime SQL for node \"{}\"'.format(model['unique_id'])) }}\n      {{ write(sql) }}\n    {%- endif -%}\n\n    {%- set res, table = adapter.execute(sql, auto_begin=auto_begin, fetch=fetch_result) -%}\n    {%- if name is not none -%}\n      {{ store_result(name, response=res, agate_table=table) }}\n    {%- endif -%}\n\n  {%- endif -%}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1654784474.374617}, "macro.dbt.noop_statement": {"unique_id": "macro.dbt.noop_statement", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.1.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/etc/statement.sql", "original_file_path": "macros/etc/statement.sql", "name": "noop_statement", "macro_sql": "{% macro noop_statement(name=None, message=None, code=None, rows_affected=None, res=None) -%}\n  {%- set sql = caller() -%}\n\n  {%- if name == 'main' -%}\n    {{ log('Writing runtime SQL for node \"{}\"'.format(model['unique_id'])) }}\n    {{ write(sql) }}\n  {%- endif -%}\n\n  {%- if name is not none -%}\n    {{ store_raw_result(name, message=message, code=code, rows_affected=rows_affected, agate_table=res) }}\n  {%- endif -%}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1654784474.375561}, "macro.dbt.run_query": {"unique_id": "macro.dbt.run_query", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.1.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/etc/statement.sql", "original_file_path": "macros/etc/statement.sql", "name": "run_query", "macro_sql": "{% macro run_query(sql) %}\n  {% call statement(\"run_query_statement\", fetch_result=true, auto_begin=false) %}\n    {{ sql }}\n  {% endcall %}\n\n  {% do return(load_result(\"run_query_statement\").table) %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1654784474.37603}, "macro.dbt.convert_datetime": {"unique_id": "macro.dbt.convert_datetime", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.1.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/etc/datetime.sql", "original_file_path": "macros/etc/datetime.sql", "name": "convert_datetime", "macro_sql": "{% macro convert_datetime(date_str, date_fmt) %}\n\n  {% set error_msg -%}\n      The provided partition date '{{ date_str }}' does not match the expected format '{{ date_fmt }}'\n  {%- endset %}\n\n  {% set res = try_or_compiler_error(error_msg, modules.datetime.datetime.strptime, date_str.strip(), date_fmt) %}\n  {{ return(res) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1654784474.378796}, "macro.dbt.dates_in_range": {"unique_id": "macro.dbt.dates_in_range", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.1.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/etc/datetime.sql", "original_file_path": "macros/etc/datetime.sql", "name": "dates_in_range", "macro_sql": "{% macro dates_in_range(start_date_str, end_date_str=none, in_fmt=\"%Y%m%d\", out_fmt=\"%Y%m%d\") %}\n    {% set end_date_str = start_date_str if end_date_str is none else end_date_str %}\n\n    {% set start_date = convert_datetime(start_date_str, in_fmt) %}\n    {% set end_date = convert_datetime(end_date_str, in_fmt) %}\n\n    {% set day_count = (end_date - start_date).days %}\n    {% if day_count < 0 %}\n        {% set msg -%}\n            Partiton start date is after the end date ({{ start_date }}, {{ end_date }})\n        {%- endset %}\n\n        {{ exceptions.raise_compiler_error(msg, model) }}\n    {% endif %}\n\n    {% set date_list = [] %}\n    {% for i in range(0, day_count + 1) %}\n        {% set the_date = (modules.datetime.timedelta(days=i) + start_date) %}\n        {% if not out_fmt %}\n            {% set _ = date_list.append(the_date) %}\n        {% else %}\n            {% set _ = date_list.append(the_date.strftime(out_fmt)) %}\n        {% endif %}\n    {% endfor %}\n\n    {{ return(date_list) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.convert_datetime"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1654784474.3808372}, "macro.dbt.partition_range": {"unique_id": "macro.dbt.partition_range", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.1.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/etc/datetime.sql", "original_file_path": "macros/etc/datetime.sql", "name": "partition_range", "macro_sql": "{% macro partition_range(raw_partition_date, date_fmt='%Y%m%d') %}\n    {% set partition_range = (raw_partition_date | string).split(\",\") %}\n\n    {% if (partition_range | length) == 1 %}\n      {% set start_date = partition_range[0] %}\n      {% set end_date = none %}\n    {% elif (partition_range | length) == 2 %}\n      {% set start_date = partition_range[0] %}\n      {% set end_date = partition_range[1] %}\n    {% else %}\n      {{ exceptions.raise_compiler_error(\"Invalid partition time. Expected format: {Start Date}[,{End Date}]. Got: \" ~ raw_partition_date) }}\n    {% endif %}\n\n    {{ return(dates_in_range(start_date, end_date, in_fmt=date_fmt)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.dates_in_range"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1654784474.3820539}, "macro.dbt.py_current_timestring": {"unique_id": "macro.dbt.py_current_timestring", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.1.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/etc/datetime.sql", "original_file_path": "macros/etc/datetime.sql", "name": "py_current_timestring", "macro_sql": "{% macro py_current_timestring() %}\n    {% set dt = modules.datetime.datetime.now() %}\n    {% do return(dt.strftime(\"%Y%m%d%H%M%S%f\")) %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1654784474.382429}, "macro.dbt.create_schema": {"unique_id": "macro.dbt.create_schema", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.1.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/schema.sql", "original_file_path": "macros/adapters/schema.sql", "name": "create_schema", "macro_sql": "{% macro create_schema(relation) -%}\n  {{ adapter.dispatch('create_schema', 'dbt')(relation) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_redshift.redshift__create_schema"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1654784474.383102}, "macro.dbt.default__create_schema": {"unique_id": "macro.dbt.default__create_schema", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.1.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/schema.sql", "original_file_path": "macros/adapters/schema.sql", "name": "default__create_schema", "macro_sql": "{% macro default__create_schema(relation) -%}\n  {%- call statement('create_schema') -%}\n    create schema if not exists {{ relation.without_identifier() }}\n  {% endcall %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1654784474.383392}, "macro.dbt.drop_schema": {"unique_id": "macro.dbt.drop_schema", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.1.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/schema.sql", "original_file_path": "macros/adapters/schema.sql", "name": "drop_schema", "macro_sql": "{% macro drop_schema(relation) -%}\n  {{ adapter.dispatch('drop_schema', 'dbt')(relation) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_redshift.redshift__drop_schema"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1654784474.383657}, "macro.dbt.default__drop_schema": {"unique_id": "macro.dbt.default__drop_schema", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.1.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/schema.sql", "original_file_path": "macros/adapters/schema.sql", "name": "default__drop_schema", "macro_sql": "{% macro default__drop_schema(relation) -%}\n  {%- call statement('drop_schema') -%}\n    drop schema if exists {{ relation.without_identifier() }} cascade\n  {% endcall %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1654784474.383946}, "macro.dbt.get_create_index_sql": {"unique_id": "macro.dbt.get_create_index_sql", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.1.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/indexes.sql", "original_file_path": "macros/adapters/indexes.sql", "name": "get_create_index_sql", "macro_sql": "{% macro get_create_index_sql(relation, index_dict) -%}\n  {{ return(adapter.dispatch('get_create_index_sql', 'dbt')(relation, index_dict)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_postgres.postgres__get_create_index_sql"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1654784474.3847308}, "macro.dbt.default__get_create_index_sql": {"unique_id": "macro.dbt.default__get_create_index_sql", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.1.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/indexes.sql", "original_file_path": "macros/adapters/indexes.sql", "name": "default__get_create_index_sql", "macro_sql": "{% macro default__get_create_index_sql(relation, index_dict) -%}\n  {% do return(None) %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1654784474.384945}, "macro.dbt.create_indexes": {"unique_id": "macro.dbt.create_indexes", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.1.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/indexes.sql", "original_file_path": "macros/adapters/indexes.sql", "name": "create_indexes", "macro_sql": "{% macro create_indexes(relation) -%}\n  {{ adapter.dispatch('create_indexes', 'dbt')(relation) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__create_indexes"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1654784474.3852}, "macro.dbt.default__create_indexes": {"unique_id": "macro.dbt.default__create_indexes", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.1.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/indexes.sql", "original_file_path": "macros/adapters/indexes.sql", "name": "default__create_indexes", "macro_sql": "{% macro default__create_indexes(relation) -%}\n  {%- set _indexes = config.get('indexes', default=[]) -%}\n\n  {% for _index_dict in _indexes %}\n    {% set create_index_sql = get_create_index_sql(relation, _index_dict) %}\n    {% if create_index_sql %}\n      {% do run_query(create_index_sql) %}\n    {% endif %}\n  {% endfor %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.get_create_index_sql", "macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1654784474.3858318}, "macro.dbt.make_temp_relation": {"unique_id": "macro.dbt.make_temp_relation", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.1.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "name": "make_temp_relation", "macro_sql": "{% macro make_temp_relation(base_relation, suffix='__dbt_tmp') %}\n  {{ return(adapter.dispatch('make_temp_relation', 'dbt')(base_relation, suffix))}}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_redshift.redshift__make_temp_relation"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1654784474.3883488}, "macro.dbt.default__make_temp_relation": {"unique_id": "macro.dbt.default__make_temp_relation", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.1.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "name": "default__make_temp_relation", "macro_sql": "{% macro default__make_temp_relation(base_relation, suffix) %}\n    {% set tmp_identifier = base_relation.identifier ~ suffix %}\n    {% set tmp_relation = base_relation.incorporate(\n                                path={\"identifier\": tmp_identifier}) -%}\n\n    {% do return(tmp_relation) %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1654784474.388841}, "macro.dbt.drop_relation": {"unique_id": "macro.dbt.drop_relation", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.1.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "name": "drop_relation", "macro_sql": "{% macro drop_relation(relation) -%}\n  {{ return(adapter.dispatch('drop_relation', 'dbt')(relation)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__drop_relation"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1654784474.3891358}, "macro.dbt.default__drop_relation": {"unique_id": "macro.dbt.default__drop_relation", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.1.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "name": "default__drop_relation", "macro_sql": "{% macro default__drop_relation(relation) -%}\n  {% call statement('drop_relation', auto_begin=False) -%}\n    drop {{ relation.type }} if exists {{ relation }} cascade\n  {%- endcall %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1654784474.3894699}, "macro.dbt.truncate_relation": {"unique_id": "macro.dbt.truncate_relation", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.1.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "name": "truncate_relation", "macro_sql": "{% macro truncate_relation(relation) -%}\n  {{ return(adapter.dispatch('truncate_relation', 'dbt')(relation)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__truncate_relation"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1654784474.389761}, "macro.dbt.default__truncate_relation": {"unique_id": "macro.dbt.default__truncate_relation", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.1.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "name": "default__truncate_relation", "macro_sql": "{% macro default__truncate_relation(relation) -%}\n  {% call statement('truncate_relation') -%}\n    truncate table {{ relation }}\n  {%- endcall %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1654784474.3900192}, "macro.dbt.rename_relation": {"unique_id": "macro.dbt.rename_relation", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.1.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "name": "rename_relation", "macro_sql": "{% macro rename_relation(from_relation, to_relation) -%}\n  {{ return(adapter.dispatch('rename_relation', 'dbt')(from_relation, to_relation)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__rename_relation"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1654784474.390337}, "macro.dbt.default__rename_relation": {"unique_id": "macro.dbt.default__rename_relation", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.1.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "name": "default__rename_relation", "macro_sql": "{% macro default__rename_relation(from_relation, to_relation) -%}\n  {% set target_name = adapter.quote_as_configured(to_relation.identifier, 'identifier') %}\n  {% call statement('rename_relation') -%}\n    alter table {{ from_relation }} rename to {{ target_name }}\n  {%- endcall %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1654784474.390786}, "macro.dbt.get_or_create_relation": {"unique_id": "macro.dbt.get_or_create_relation", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.1.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "name": "get_or_create_relation", "macro_sql": "{% macro get_or_create_relation(database, schema, identifier, type) -%}\n  {{ return(adapter.dispatch('get_or_create_relation', 'dbt')(database, schema, identifier, type)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__get_or_create_relation"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1654784474.39119}, "macro.dbt.default__get_or_create_relation": {"unique_id": "macro.dbt.default__get_or_create_relation", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.1.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "name": "default__get_or_create_relation", "macro_sql": "{% macro default__get_or_create_relation(database, schema, identifier, type) %}\n  {%- set target_relation = adapter.get_relation(database=database, schema=schema, identifier=identifier) %}\n\n  {% if target_relation %}\n    {% do return([true, target_relation]) %}\n  {% endif %}\n\n  {%- set new_relation = api.Relation.create(\n      database=database,\n      schema=schema,\n      identifier=identifier,\n      type=type\n  ) -%}\n  {% do return([false, new_relation]) %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1654784474.392195}, "macro.dbt.load_relation": {"unique_id": "macro.dbt.load_relation", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.1.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "name": "load_relation", "macro_sql": "{% macro load_relation(relation) %}\n  {% do return(adapter.get_relation(\n    database=relation.database,\n    schema=relation.schema,\n    identifier=relation.identifier\n  )) -%}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1654784474.392558}, "macro.dbt.drop_relation_if_exists": {"unique_id": "macro.dbt.drop_relation_if_exists", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.1.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/relation.sql", "original_file_path": "macros/adapters/relation.sql", "name": "drop_relation_if_exists", "macro_sql": "{% macro drop_relation_if_exists(relation) %}\n  {% if relation is not none %}\n    {{ adapter.drop_relation(relation) }}\n  {% endif %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1654784474.3928661}, "macro.dbt.current_timestamp": {"unique_id": "macro.dbt.current_timestamp", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.1.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/freshness.sql", "original_file_path": "macros/adapters/freshness.sql", "name": "current_timestamp", "macro_sql": "{% macro current_timestamp() -%}\n  {{ adapter.dispatch('current_timestamp', 'dbt')() }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_redshift.redshift__current_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1654784474.3936598}, "macro.dbt.default__current_timestamp": {"unique_id": "macro.dbt.default__current_timestamp", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.1.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/freshness.sql", "original_file_path": "macros/adapters/freshness.sql", "name": "default__current_timestamp", "macro_sql": "{% macro default__current_timestamp() -%}\n  {{ exceptions.raise_not_implemented(\n    'current_timestamp macro not implemented for adapter '+adapter.type()) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1654784474.393892}, "macro.dbt.collect_freshness": {"unique_id": "macro.dbt.collect_freshness", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.1.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/freshness.sql", "original_file_path": "macros/adapters/freshness.sql", "name": "collect_freshness", "macro_sql": "{% macro collect_freshness(source, loaded_at_field, filter) %}\n  {{ return(adapter.dispatch('collect_freshness', 'dbt')(source, loaded_at_field, filter))}}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__collect_freshness"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1654784474.39426}, "macro.dbt.default__collect_freshness": {"unique_id": "macro.dbt.default__collect_freshness", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.1.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/freshness.sql", "original_file_path": "macros/adapters/freshness.sql", "name": "default__collect_freshness", "macro_sql": "{% macro default__collect_freshness(source, loaded_at_field, filter) %}\n  {% call statement('collect_freshness', fetch_result=True, auto_begin=False) -%}\n    select\n      max({{ loaded_at_field }}) as max_loaded_at,\n      {{ current_timestamp() }} as snapshotted_at\n    from {{ source }}\n    {% if filter %}\n    where {{ filter }}\n    {% endif %}\n  {% endcall %}\n  {{ return(load_result('collect_freshness').table) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement", "macro.dbt.current_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1654784474.394939}, "macro.dbt.alter_column_comment": {"unique_id": "macro.dbt.alter_column_comment", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.1.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/persist_docs.sql", "original_file_path": "macros/adapters/persist_docs.sql", "name": "alter_column_comment", "macro_sql": "{% macro alter_column_comment(relation, column_dict) -%}\n  {{ return(adapter.dispatch('alter_column_comment', 'dbt')(relation, column_dict)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_redshift.redshift__alter_column_comment"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1654784474.396041}, "macro.dbt.default__alter_column_comment": {"unique_id": "macro.dbt.default__alter_column_comment", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.1.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/persist_docs.sql", "original_file_path": "macros/adapters/persist_docs.sql", "name": "default__alter_column_comment", "macro_sql": "{% macro default__alter_column_comment(relation, column_dict) -%}\n  {{ exceptions.raise_not_implemented(\n    'alter_column_comment macro not implemented for adapter '+adapter.type()) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1654784474.396306}, "macro.dbt.alter_relation_comment": {"unique_id": "macro.dbt.alter_relation_comment", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.1.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/persist_docs.sql", "original_file_path": "macros/adapters/persist_docs.sql", "name": "alter_relation_comment", "macro_sql": "{% macro alter_relation_comment(relation, relation_comment) -%}\n  {{ return(adapter.dispatch('alter_relation_comment', 'dbt')(relation, relation_comment)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_redshift.redshift__alter_relation_comment"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1654784474.3966331}, "macro.dbt.default__alter_relation_comment": {"unique_id": "macro.dbt.default__alter_relation_comment", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.1.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/persist_docs.sql", "original_file_path": "macros/adapters/persist_docs.sql", "name": "default__alter_relation_comment", "macro_sql": "{% macro default__alter_relation_comment(relation, relation_comment) -%}\n  {{ exceptions.raise_not_implemented(\n    'alter_relation_comment macro not implemented for adapter '+adapter.type()) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1654784474.3969018}, "macro.dbt.persist_docs": {"unique_id": "macro.dbt.persist_docs", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.1.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/persist_docs.sql", "original_file_path": "macros/adapters/persist_docs.sql", "name": "persist_docs", "macro_sql": "{% macro persist_docs(relation, model, for_relation=true, for_columns=true) -%}\n  {{ return(adapter.dispatch('persist_docs', 'dbt')(relation, model, for_relation, for_columns)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_redshift.redshift__persist_docs"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1654784474.397341}, "macro.dbt.default__persist_docs": {"unique_id": "macro.dbt.default__persist_docs", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.1.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/persist_docs.sql", "original_file_path": "macros/adapters/persist_docs.sql", "name": "default__persist_docs", "macro_sql": "{% macro default__persist_docs(relation, model, for_relation, for_columns) -%}\n  {% if for_relation and config.persist_relation_docs() and model.description %}\n    {% do run_query(alter_relation_comment(relation, model.description)) %}\n  {% endif %}\n\n  {% if for_columns and config.persist_column_docs() and model.columns %}\n    {% do run_query(alter_column_comment(relation, model.columns)) %}\n  {% endif %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.run_query", "macro.dbt.alter_relation_comment", "macro.dbt.alter_column_comment"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1654784474.3981519}, "macro.dbt.get_catalog": {"unique_id": "macro.dbt.get_catalog", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.1.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "name": "get_catalog", "macro_sql": "{% macro get_catalog(information_schema, schemas) -%}\n  {{ return(adapter.dispatch('get_catalog', 'dbt')(information_schema, schemas)) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_redshift.redshift__get_catalog"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1654784474.400413}, "macro.dbt.default__get_catalog": {"unique_id": "macro.dbt.default__get_catalog", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.1.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "name": "default__get_catalog", "macro_sql": "{% macro default__get_catalog(information_schema, schemas) -%}\n\n  {% set typename = adapter.type() %}\n  {% set msg -%}\n    get_catalog not implemented for {{ typename }}\n  {%- endset %}\n\n  {{ exceptions.raise_compiler_error(msg) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1654784474.4008262}, "macro.dbt.information_schema_name": {"unique_id": "macro.dbt.information_schema_name", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.1.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "name": "information_schema_name", "macro_sql": "{% macro information_schema_name(database) %}\n  {{ return(adapter.dispatch('information_schema_name', 'dbt')(database)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_redshift.redshift__information_schema_name"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1654784474.4011252}, "macro.dbt.default__information_schema_name": {"unique_id": "macro.dbt.default__information_schema_name", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.1.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "name": "default__information_schema_name", "macro_sql": "{% macro default__information_schema_name(database) -%}\n  {%- if database -%}\n    {{ database }}.INFORMATION_SCHEMA\n  {%- else -%}\n    INFORMATION_SCHEMA\n  {%- endif -%}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1654784474.401366}, "macro.dbt.list_schemas": {"unique_id": "macro.dbt.list_schemas", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.1.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "name": "list_schemas", "macro_sql": "{% macro list_schemas(database) -%}\n  {{ return(adapter.dispatch('list_schemas', 'dbt')(database)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_redshift.redshift__list_schemas"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1654784474.401648}, "macro.dbt.default__list_schemas": {"unique_id": "macro.dbt.default__list_schemas", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.1.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "name": "default__list_schemas", "macro_sql": "{% macro default__list_schemas(database) -%}\n  {% set sql %}\n    select distinct schema_name\n    from {{ information_schema_name(database) }}.SCHEMATA\n    where catalog_name ilike '{{ database }}'\n  {% endset %}\n  {{ return(run_query(sql)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.information_schema_name", "macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1654784474.4020438}, "macro.dbt.check_schema_exists": {"unique_id": "macro.dbt.check_schema_exists", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.1.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "name": "check_schema_exists", "macro_sql": "{% macro check_schema_exists(information_schema, schema) -%}\n  {{ return(adapter.dispatch('check_schema_exists', 'dbt')(information_schema, schema)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_redshift.redshift__check_schema_exists"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1654784474.402375}, "macro.dbt.default__check_schema_exists": {"unique_id": "macro.dbt.default__check_schema_exists", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.1.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "name": "default__check_schema_exists", "macro_sql": "{% macro default__check_schema_exists(information_schema, schema) -%}\n  {% set sql -%}\n        select count(*)\n        from {{ information_schema.replace(information_schema_view='SCHEMATA') }}\n        where catalog_name='{{ information_schema.database }}'\n          and schema_name='{{ schema }}'\n  {%- endset %}\n  {{ return(run_query(sql)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1654784474.402957}, "macro.dbt.list_relations_without_caching": {"unique_id": "macro.dbt.list_relations_without_caching", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.1.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "name": "list_relations_without_caching", "macro_sql": "{% macro list_relations_without_caching(schema_relation) %}\n  {{ return(adapter.dispatch('list_relations_without_caching', 'dbt')(schema_relation)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_redshift.redshift__list_relations_without_caching"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1654784474.403253}, "macro.dbt.default__list_relations_without_caching": {"unique_id": "macro.dbt.default__list_relations_without_caching", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.1.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/metadata.sql", "original_file_path": "macros/adapters/metadata.sql", "name": "default__list_relations_without_caching", "macro_sql": "{% macro default__list_relations_without_caching(schema_relation) %}\n  {{ exceptions.raise_not_implemented(\n    'list_relations_without_caching macro not implemented for adapter '+adapter.type()) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1654784474.4035032}, "macro.dbt.get_columns_in_relation": {"unique_id": "macro.dbt.get_columns_in_relation", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.1.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "name": "get_columns_in_relation", "macro_sql": "{% macro get_columns_in_relation(relation) -%}\n  {{ return(adapter.dispatch('get_columns_in_relation', 'dbt')(relation)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_redshift.redshift__get_columns_in_relation"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1654784474.406122}, "macro.dbt.default__get_columns_in_relation": {"unique_id": "macro.dbt.default__get_columns_in_relation", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.1.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "name": "default__get_columns_in_relation", "macro_sql": "{% macro default__get_columns_in_relation(relation) -%}\n  {{ exceptions.raise_not_implemented(\n    'get_columns_in_relation macro not implemented for adapter '+adapter.type()) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1654784474.406372}, "macro.dbt.sql_convert_columns_in_relation": {"unique_id": "macro.dbt.sql_convert_columns_in_relation", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.1.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "name": "sql_convert_columns_in_relation", "macro_sql": "{% macro sql_convert_columns_in_relation(table) -%}\n  {% set columns = [] %}\n  {% for row in table %}\n    {% do columns.append(api.Column(*row)) %}\n  {% endfor %}\n  {{ return(columns) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1654784474.4068758}, "macro.dbt.get_columns_in_query": {"unique_id": "macro.dbt.get_columns_in_query", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.1.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "name": "get_columns_in_query", "macro_sql": "{% macro get_columns_in_query(select_sql) -%}\n  {{ return(adapter.dispatch('get_columns_in_query', 'dbt')(select_sql)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__get_columns_in_query"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1654784474.407178}, "macro.dbt.default__get_columns_in_query": {"unique_id": "macro.dbt.default__get_columns_in_query", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.1.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "name": "default__get_columns_in_query", "macro_sql": "{% macro default__get_columns_in_query(select_sql) %}\n    {% call statement('get_columns_in_query', fetch_result=True, auto_begin=False) -%}\n        select * from (\n            {{ select_sql }}\n        ) as __dbt_sbq\n        where false\n        limit 0\n    {% endcall %}\n\n    {{ return(load_result('get_columns_in_query').table.columns | map(attribute='name') | list) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1654784474.407733}, "macro.dbt.alter_column_type": {"unique_id": "macro.dbt.alter_column_type", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.1.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "name": "alter_column_type", "macro_sql": "{% macro alter_column_type(relation, column_name, new_column_type) -%}\n  {{ return(adapter.dispatch('alter_column_type', 'dbt')(relation, column_name, new_column_type)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__alter_column_type"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1654784474.408098}, "macro.dbt.default__alter_column_type": {"unique_id": "macro.dbt.default__alter_column_type", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.1.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "name": "default__alter_column_type", "macro_sql": "{% macro default__alter_column_type(relation, column_name, new_column_type) -%}\n  {#\n    1. Create a new column (w/ temp name and correct type)\n    2. Copy data over to it\n    3. Drop the existing column (cascade!)\n    4. Rename the new column to existing column\n  #}\n  {%- set tmp_column = column_name + \"__dbt_alter\" -%}\n\n  {% call statement('alter_column_type') %}\n    alter table {{ relation }} add column {{ adapter.quote(tmp_column) }} {{ new_column_type }};\n    update {{ relation }} set {{ adapter.quote(tmp_column) }} = {{ adapter.quote(column_name) }};\n    alter table {{ relation }} drop column {{ adapter.quote(column_name) }} cascade;\n    alter table {{ relation }} rename column {{ adapter.quote(tmp_column) }} to {{ adapter.quote(column_name) }}\n  {% endcall %}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1654784474.409077}, "macro.dbt.alter_relation_add_remove_columns": {"unique_id": "macro.dbt.alter_relation_add_remove_columns", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.1.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "name": "alter_relation_add_remove_columns", "macro_sql": "{% macro alter_relation_add_remove_columns(relation, add_columns = none, remove_columns = none) -%}\n  {{ return(adapter.dispatch('alter_relation_add_remove_columns', 'dbt')(relation, add_columns, remove_columns)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_redshift.redshift__alter_relation_add_remove_columns"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1654784474.409493}, "macro.dbt.default__alter_relation_add_remove_columns": {"unique_id": "macro.dbt.default__alter_relation_add_remove_columns", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.1.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/columns.sql", "original_file_path": "macros/adapters/columns.sql", "name": "default__alter_relation_add_remove_columns", "macro_sql": "{% macro default__alter_relation_add_remove_columns(relation, add_columns, remove_columns) %}\n\n  {% if add_columns is none %}\n    {% set add_columns = [] %}\n  {% endif %}\n  {% if remove_columns is none %}\n    {% set remove_columns = [] %}\n  {% endif %}\n\n  {% set sql -%}\n\n     alter {{ relation.type }} {{ relation }}\n\n            {% for column in add_columns %}\n               add column {{ column.name }} {{ column.data_type }}{{ ',' if not loop.last }}\n            {% endfor %}{{ ',' if add_columns and remove_columns }}\n\n            {% for column in remove_columns %}\n                drop column {{ column.name }}{{ ',' if not loop.last }}\n            {% endfor %}\n\n  {%- endset -%}\n\n  {% do run_query(sql) %}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1654784474.41078}, "macro.dbt.test_unique": {"unique_id": "macro.dbt.test_unique", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.1.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "tests/generic/builtin.sql", "original_file_path": "tests/generic/builtin.sql", "name": "test_unique", "macro_sql": "{% test unique(model, column_name) %}\n    {% set macro = adapter.dispatch('test_unique', 'dbt') %}\n    {{ macro(model, column_name) }}\n{% endtest %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__test_unique"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1654784474.411677}, "macro.dbt.test_not_null": {"unique_id": "macro.dbt.test_not_null", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.1.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "tests/generic/builtin.sql", "original_file_path": "tests/generic/builtin.sql", "name": "test_not_null", "macro_sql": "{% test not_null(model, column_name) %}\n    {% set macro = adapter.dispatch('test_not_null', 'dbt') %}\n    {{ macro(model, column_name) }}\n{% endtest %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__test_not_null"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1654784474.41205}, "macro.dbt.test_accepted_values": {"unique_id": "macro.dbt.test_accepted_values", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.1.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "tests/generic/builtin.sql", "original_file_path": "tests/generic/builtin.sql", "name": "test_accepted_values", "macro_sql": "{% test accepted_values(model, column_name, values, quote=True) %}\n    {% set macro = adapter.dispatch('test_accepted_values', 'dbt') %}\n    {{ macro(model, column_name, values, quote) }}\n{% endtest %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__test_accepted_values"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1654784474.412514}, "macro.dbt.test_relationships": {"unique_id": "macro.dbt.test_relationships", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.1.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "tests/generic/builtin.sql", "original_file_path": "tests/generic/builtin.sql", "name": "test_relationships", "macro_sql": "{% test relationships(model, column_name, to, field) %}\n    {% set macro = adapter.dispatch('test_relationships', 'dbt') %}\n    {{ macro(model, column_name, to, field) }}\n{% endtest %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__test_relationships"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1654784474.4129589}}, "docs": {"houm.__overview__": {"unique_id": "houm.__overview__", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "overview.md", "original_file_path": "models/overview.md", "name": "__overview__", "block_contents": "# Data Documentation for GitLab\n\nAll other documentation is in our handbook in the following links:\n\n* [Data Team Handbook](https://wiki.houm.com/doc/recursos-data-engineer-qbDEpLU3Vc)\n* [dbt Gitlab Guide](https://about.gitlab.com/handbook/business-ops/data-team/platform/dbt-guide/)\n* [SQL Style  Gitlab Guide](https://about.gitlab.com/handbook/business-ops/data-team/platform/sql-style-guide)\n* [Slack Channel for questions](https://houmteam.slack.com/archives/CG9ND40K0) \n\n\n\nThe data in any of our projects has four distinct checkpoints:\n\n- ** 1. Sources ** : Schemas and tables in a source-conformed structure (i.e. tables and columns in a structure based on what an API returns), loaded by a third party tool.\n\n\n- ** 2. Staging models ** : The atomic unit of data modeling. Each model bears a one-to-one relationship with the source data table it represents. It has the same granularity, but the columns have been renamed, recast, or usefully reconsidered into a consistent format.\n\n\n- ** 3. Processing models ** : This is a enrich and cleaning process of the transformations \n\n\n- ** 4.1 Facts models ** : Models that represent business processes and entities, abstracted from the data sources that they are based on\n\n\n- ** 4.2 Dims models ** : Models that represent business processes and entities, abstracted from the data sources that they are based on\n\n\n- ** 4.3 Marts models ** : Models that represent **aggregated** business processes and entities, abstracted from the data sources that they are based on"}, "houm.historical": {"unique_id": "houm.historical", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "staging/sources.md", "original_file_path": "models/staging/sources.md", "name": "historical", "block_contents": "This is a historical schema, that captures every changes in each columns for every table at database **Arriendo asegurado**.\n\nthe principal tables in this schema are:\n- historical_properties\n- historical_arriendoasegurado_propertydetails\n- historical_properties_salesdetails\n- historical_users\n\nthe principal key for read changes, in each table, is the following columns:\n- audit_end_dt\n- audit_start_dt"}, "houm.raw_stage": {"unique_id": "houm.raw_stage", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "staging/sources.md", "original_file_path": "models/staging/sources.md", "name": "raw_stage", "block_contents": "The raw schema, it's a direct copy of the arriendoasegurado's tables:\n- scheduler_macrozone\n- properties_location"}, "houm.staging_buk": {"unique_id": "houm.staging_buk", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "staging/sources.md", "original_file_path": "models/staging/sources.md", "name": "staging_buk", "block_contents": "This information is collected by the current Human Resources System: BUK"}, "houm.airbyte_zendesk": {"unique_id": "houm.airbyte_zendesk", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "staging/sources.md", "original_file_path": "models/staging/sources.md", "name": "airbyte_zendesk", "block_contents": "This is a raw data this is information extracted directly from the API source Zendesk.\n\nSchemas and tables in a source-conformed structure (i.e. tables and columns in a structure based on what an API returns), loaded by a third party tool."}, "houm.stg_properties": {"unique_id": "houm.stg_properties", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "staging/arriendoasegurado/arriendoasegurado.md", "original_file_path": "models/staging/arriendoasegurado/arriendoasegurado.md", "name": "stg_properties", "block_contents": "This informaton is collected by the Houm Backend. the database arriendoasegurado"}, "houm.stg_properties_id": {"unique_id": "houm.stg_properties_id", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "staging/arriendoasegurado/arriendoasegurado.md", "original_file_path": "models/staging/arriendoasegurado/arriendoasegurado.md", "name": "stg_properties_id", "block_contents": "This is a unique identifier for the properties at Houm."}, "houm.stg_propertydetails": {"unique_id": "houm.stg_propertydetails", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "staging/arriendoasegurado/arriendoasegurado.md", "original_file_path": "models/staging/arriendoasegurado/arriendoasegurado.md", "name": "stg_propertydetails", "block_contents": "This informaton is collected by the Houm Backend. the database arriendoasegurado"}, "houm.stg_propertydetails_id": {"unique_id": "houm.stg_propertydetails_id", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "staging/arriendoasegurado/arriendoasegurado.md", "original_file_path": "models/staging/arriendoasegurado/arriendoasegurado.md", "name": "stg_propertydetails_id", "block_contents": "This is a unique identifier for the properties details at Houm."}, "houm.stg_property_salesdetails": {"unique_id": "houm.stg_property_salesdetails", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "staging/arriendoasegurado/arriendoasegurado.md", "original_file_path": "models/staging/arriendoasegurado/arriendoasegurado.md", "name": "stg_property_salesdetails", "block_contents": "This informaton is collected by the Houm Backend. the database arriendoasegurado"}, "houm.stg_zendesk_users": {"unique_id": "houm.stg_zendesk_users", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "staging/zendesk/zendesk.md", "original_file_path": "models/staging/zendesk/zendesk.md", "name": "stg_zendesk_users", "block_contents": "This is a processed model with information from zendesk. Consolidates the agents and customers. The more important columns are:\n- id: *unique user id at zendesk Houm*\n- email: *email of the user*\n- role: *the role of the user*\n- tags\n- user_fields_id_de_propiedad\n- user_fields_tipo_de_usuario\n- user_fields_id_suscripcin\n- user_fields_social_messaging_user_info\n- user_fields_nombre\n- user_fields_rut"}, "houm.stg_zendesk_users_id": {"unique_id": "houm.stg_zendesk_users_id", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "staging/zendesk/zendesk.md", "original_file_path": "models/staging/zendesk/zendesk.md", "name": "stg_zendesk_users_id", "block_contents": "This is a unique identifier for the users at Houm Zendesk, related columns in ** zendesk_tickets ** table :\n- submitter_id\n- requester_id\n- assignee_id"}, "houm.stg_zendesk_tickets": {"unique_id": "houm.stg_zendesk_tickets", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "staging/zendesk/zendesk.md", "original_file_path": "models/staging/zendesk/zendesk.md", "name": "stg_zendesk_tickets", "block_contents": "Tickets are the means through which your end users (customers) communicate with agents in Zendesk Support. Tickets can originate from a number of channels, including email, Help Center, chat, phone call, Twitter, Facebook, or the API. \n\nAll tickets have a core set of properties.\n source: https://developer.zendesk.com/api-reference/ticketing/tickets/tickets/\n\n\nThe more important columns are:\n- id: *unique ticket id at zendesk Houm*\n- created_at: * ticket creation timestamp *\n- updated_at: * ticket update timestamp *\n- status: * All tickets in Zendesk Support start out as New and progress through Open, Pending, Solved, and Closed states. A ticket must have an assignee in order to be solved. * \n- tags: array of tags \n- priority: this is a priority of the ticket, can be: [urgent, normal, high, low, null]\n- **submitter_id**: This is the agent id, The user who submitted the ticket. The submitter always becomes the author of the first comment on the ticket\n- **requester_id**: This is the customer id, The user who requested this ticket.\n- **assignee_id**: This is the agent id, that currently asigned to solve this ticket."}, "houm.stg_zendesk_tickets_audits": {"unique_id": "houm.stg_zendesk_tickets_audits", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "staging/zendesk/zendesk.md", "original_file_path": "models/staging/zendesk/zendesk.md", "name": "stg_zendesk_tickets_audits", "block_contents": "Audits are a read-only history of all updates to a ticket. \n \t\t\t\tWhen a ticket is updated in Zendesk Support, an audit is stored. \n \t\t\t\tEach audit represents a single update to the ticket.\n  \t\t\t\tAn update can consist of one or more events, ex: \t\n  \t\t\t\t\t\t\t\t\t\t\t- The value of a ticket field was changed\n\t\t\t\t\t\t\t\t\t\t\t- A new comment was added\n\t\t\t\t\t\t\t\t\t\t\t- Tags were added or\t removed\n\t\t\t\t\t\t\t\t\t\t\t- A notification was sent\nThe more important columns are:\n - via = * Describes how the object was created. See the [Via object  reference](https://developer.zendesk.com/documentation/ticketing/reference-guides/ticket-audit-events-reference) * \n - events = * An array of the events that happened in this audit. See the [Ticket Audit events reference](https://developer.zendesk.com/documentation/ticketing/reference-guides/via-object-reference/)* \n - metadata = * Metadata for the audit, custom and system data, info acerca del navegador y SO que se ocup\u00f3 * \n - author_id = * The user who created the audit * \n - ticket_id = * The ID of the associated ticket *\n - created_at = * The time the audit was created *"}, "houm.stg_zendesk_metrics": {"unique_id": "houm.stg_zendesk_metrics", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "staging/zendesk/zendesk.md", "original_file_path": "models/staging/zendesk/zendesk.md", "name": "stg_zendesk_metrics", "block_contents": "Table with commons metrics about the tickets, more info consult:\n\nhttps://developer.zendesk.com/api-reference/ticketing/tickets/ticket_metrics/\n\nThe important columns are:\n- assigned_at: *When the ticket was assigned*\n- created_at: *When the ticket was created*\n- first_resolution_time_in_minutes\n- full_resolution_time_in_minutes\n- latest_comment_added_at\n- initially_assigned_at: *When the ticket was initially assigned*\n- agent_wait_time_in_minutes: *Number of minutes the agent spent waiting during calendar and business hours* \n- solved_at: *When the ticket was solved*\n- ticket_id: unique id of the tickets. ** Can be related with the table tickets_audits or tickets.**"}, "houm.stg_employees": {"unique_id": "houm.stg_employees", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "staging/buk/buk.md", "original_file_path": "models/staging/buk/buk.md", "name": "stg_employees", "block_contents": "This table contains information about all employees of Chile & Colombia working at Houm.\n\nThis information is collected by the current Human Resources System: BUK\nYou can read the docs of their API here: link"}, "houm.stg_roles": {"unique_id": "houm.stg_roles", "package_name": "houm", "root_path": "/Users/manubd/Airflow/ms-airflow2.0/dbt", "path": "staging/buk/buk.md", "original_file_path": "models/staging/buk/buk.md", "name": "stg_roles", "block_contents": "This table contains information about employees roles at Houm.\n\nThis information is collected by the current Human Resources System: BUK"}, "dbt.__overview__": {"unique_id": "dbt.__overview__", "package_name": "dbt", "root_path": "/opt/homebrew/Cellar/dbt-redshift/1.1.0/libexec/lib/python3.9/site-packages/dbt/include/global_project", "path": "overview.md", "original_file_path": "docs/overview.md", "name": "__overview__", "block_contents": "### Welcome!\n\nWelcome to the auto-generated documentation for your dbt project!\n\n### Navigation\n\nYou can use the `Project` and `Database` navigation tabs on the left side of the window to explore the models\nin your project.\n\n#### Project Tab\nThe `Project` tab mirrors the directory structure of your dbt project. In this tab, you can see all of the\nmodels defined in your dbt project, as well as models imported from dbt packages.\n\n#### Database Tab\nThe `Database` tab also exposes your models, but in a format that looks more like a database explorer. This view\nshows relations (tables and views) grouped into database schemas. Note that ephemeral models are _not_ shown\nin this interface, as they do not exist in the database.\n\n### Graph Exploration\nYou can click the blue icon on the bottom-right corner of the page to view the lineage graph of your models.\n\nOn model pages, you'll see the immediate parents and children of the model you're exploring. By clicking the `Expand`\nbutton at the top-right of this lineage pane, you'll be able to see all of the models that are used to build,\nor are built from, the model you're exploring.\n\nOnce expanded, you'll be able to use the `--select` and `--exclude` model selection syntax to filter the\nmodels in the graph. For more information on model selection, check out the [dbt docs](https://docs.getdbt.com/docs/model-selection-syntax).\n\nNote that you can also right-click on models to interactively filter and explore the graph.\n\n---\n\n### More information\n\n- [What is dbt](https://docs.getdbt.com/docs/introduction)?\n- Read the [dbt viewpoint](https://docs.getdbt.com/docs/viewpoint)\n- [Installation](https://docs.getdbt.com/docs/installation)\n- Join the [dbt Community](https://www.getdbt.com/community/) for questions and discussion"}}, "exposures": {}, "metrics": {}, "selectors": {}, "disabled": {}, "parent_map": {"model.houm.goals_current": ["model.houm.cum_rentals_units", "model.houm.cum_sales_local_revenue", "model.houm.cum_sales_units", "model.houm.eop_subs", "model.houm.rentals_units", "model.houm.sales_local_revenue", "model.houm.sales_units"], "model.houm.cum_rentals_units": ["model.houm.rentals_units"], "model.houm.cum_sales_units": ["model.houm.sales_units"], "model.houm.cum_sales_local_revenue": ["model.houm.sales_local_revenue"], "model.houm.sales_seller_metric_leads": ["model.houm.sales_seller_metric_details_leads"], "model.houm.rental_landlord_metric_paid_media_cost": ["model.houm.rental_landlord_metric_details_paid_media_cost"], "model.houm.sales_seller_metric_photo_scheduled": ["model.houm.sales_seller_metric_details_photo_scheduled"], "model.houm.rental_landlord_metric_photo_done": ["model.houm.rental_landlord_metric_details_photo_done"], "model.houm.sales_seller_metric_new_sale_listing": ["model.houm.sales_seller_metric_details_new_sale_listing"], "model.houm.sales_seller_metric_leads_qualified_date": ["model.houm.sales_seller_metric_details_leads_qualified_date"], "model.houm.properties_published": ["model.houm.proc_properties", "model.houm.proc_property_salesdetails", "model.houm.proc_propertydetails"], "model.houm.rental_landlord_metric_leads_qualified": ["model.houm.rental_landlord_metric_details_leads_qualified"], "model.houm.rental_landlord_metric_photo_scheduled": ["model.houm.rental_landlord_metric_details_photo_scheduled"], "model.houm.rental_landlord_metric_leads_qualified_date": ["model.houm.rental_landlord_metric_details_leads_qualified_date"], "model.houm.rental_landlord_metric_new_rental_listing_b2c": ["model.houm.rental_landlord_metric_details_new_rental_listing_b2c"], "model.houm.rental_landlord_metric_photo_created": ["model.houm.rental_landlord_metric_details_photo_created"], "model.houm.sales_seller_metric_paid_media_cost": ["model.houm.sales_seller_metric_details_paid_media_cost"], "model.houm.rental_landlord_metric_leads": ["model.houm.rental_landlord_metric_details_leads"], "model.houm.sales_seller_metric_photo_created": ["model.houm.sales_seller_metric_details_photo_created"], "model.houm.sales_seller_metric_photo_done": ["model.houm.sales_seller_metric_details_photo_done"], "model.houm.rental_landlord_metric_new_rental_listing": ["model.houm.rental_landlord_metric_details_new_rental_listing"], "model.houm.sales_seller_metric_new_sale_listing_b2c": ["model.houm.sales_seller_metric_details_new_sale_listing_b2c"], "model.houm.sales_seller_metric_leads_qualified": ["model.houm.sales_seller_metric_details_leads_qualified"], "model.houm.kpi_landlord_photo_scheduled": ["model.houm.proc_tmp_demand_schedules_cleaned"], "model.houm.kpi_tenant_visit_done": ["model.houm.proc_tmp_demand_schedules_cleaned"], "model.houm.kpi_landlord_nrl": ["model.houm.proc_tmp_supply_properties_macrozone"], "model.houm.kpi_landlord_photo_created": ["model.houm.proc_tmp_demand_schedules_cleaned"], "model.houm.kpi_landlord_photo_done": ["model.houm.proc_tmp_demand_schedules_cleaned"], "model.houm.kpi_tenant_visit_created": ["model.houm.proc_tmp_demand_schedules_cleaned"], "model.houm.kpi_landlord_leads": ["model.houm.proc_tmp_supply_leads"], "model.houm.kpi_tenant_visit_scheduled": ["model.houm.proc_tmp_demand_schedules_cleaned"], "model.houm.kpi_landlord_qualified_leads": ["model.houm.proc_tmp_supply_leads"], "model.houm.kpi_seller_photo_created": ["model.houm.proc_tmp_demand_schedules_cleaned"], "model.houm.kpi_seller_nsl": ["model.houm.proc_tmp_supply_properties_macrozone"], "model.houm.kpi_seller_photo_scheduled": ["model.houm.proc_tmp_demand_schedules_cleaned"], "model.houm.kpi_buyer_visit_done": ["model.houm.proc_tmp_demand_schedules_cleaned"], "model.houm.kpi_buyer_visit_created": ["model.houm.proc_tmp_demand_schedules_cleaned"], "model.houm.kpi_seller_leads": ["model.houm.proc_tmp_supply_leads"], "model.houm.kpi_seller_photo_done": ["model.houm.proc_tmp_demand_schedules_cleaned"], "model.houm.kpi_buyer_leads": ["model.houm.proc_tmp_supply_leads"], "model.houm.kpi_seller_qualified_leads": ["model.houm.proc_tmp_supply_leads"], "model.houm.kpi_buyer_visit_scheduled": ["model.houm.proc_tmp_demand_schedules_cleaned"], "model.houm.kpi_buyer_qualified_leads": ["model.houm.proc_tmp_supply_leads"], "model.houm.rental_tenant_metric_portal_leads_interactions": ["model.houm.rental_tenant_metric_details_leads_interactions"], "model.houm.sales_buyer_metrics_leads_sales_qualified_date": ["model.houm.sales_buyer_metrics_details_leads_sales_qualified_date"], "model.houm.rental_tenant_metric_schedules_created": ["model.houm.rental_tenant_metric_details_schedules_created"], "model.houm.sales_buyer_metric_schedules_created": ["model.houm.sales_buyer_metric_details_schedules_created"], "model.houm.sales_buyer_metric_schedules_done": ["model.houm.sales_buyer_metric_details_schedules_done"], "model.houm.rental_tenant_metric_portal_leads": ["model.houm.rental_tenant_metric_details_leads"], "model.houm.sales_buyer_metrics_leads": ["model.houm.sales_buyer_metrics_details_leads"], "model.houm.rental_tenant_metric_reservations_refunded": ["model.houm.rental_tenant_metric_details_reservations_refunded"], "model.houm.sales_buyer_metric_schedules_scheduled": ["model.houm.sales_buyer_metric_details_schedules_scheduled"], "model.houm.sales_buyer_metric_paid_media_cost": ["model.houm.sales_buyer_metric_details_paid_media_cost"], "model.houm.rental_tenant_metric_new_tenant": ["model.houm.rental_tenant_metric_details_new_tenant"], "model.houm.sales_buyer_metrics_leads_sales_qualified": ["model.houm.sales_buyer_metrics_details_leads_sales_qualified"], "model.houm.rental_tenant_metric_paid_media_cost": ["model.houm.rental_tenant_metric_details_paid_media_cost"], "model.houm.rental_tenant_metric_reservations": ["model.houm.rental_tenant_metric_details_reservations"], "model.houm.rental_tenant_metric_schedules_done": ["model.houm.rental_tenant_metric_details_schedules_done"], "model.houm.sales_buyer_metrics_leads_sales": ["model.houm.sales_buyer_metrics_details_leads_sales"], "model.houm.sales_buyer_metric_paid_media_cost_sales": ["model.houm.sales_buyer_metric_details_paid_media_cost_sales"], "model.houm.rental_tenant_metric_new_subs": ["model.houm.rental_tenant_metric_details_new_subs"], "model.houm.rental_tenant_metric_schedules_scheduled": ["model.houm.rental_tenant_metric_details_schedules_scheduled"], "model.houm.rental_tenant_metric_reservations_effective": ["model.houm.rental_tenant_metric_details_reservations_effective"], "model.houm.rental_tenant_funnel": ["model.houm.dim_macrozones", "model.houm.rental_tenant_metric_new_subs", "model.houm.rental_tenant_metric_new_tenant", "model.houm.rental_tenant_metric_paid_media_cost", "model.houm.rental_tenant_metric_portal_leads", "model.houm.rental_tenant_metric_portal_leads_interactions", "model.houm.rental_tenant_metric_reservations", "model.houm.rental_tenant_metric_reservations_effective", "model.houm.rental_tenant_metric_reservations_refunded", "model.houm.rental_tenant_metric_schedules_created", "model.houm.rental_tenant_metric_schedules_done", "model.houm.rental_tenant_metric_schedules_scheduled"], "model.houm.rental_landlord_funnel": ["model.houm.dim_macrozones", "model.houm.rental_landlord_metric_leads", "model.houm.rental_landlord_metric_leads_qualified", "model.houm.rental_landlord_metric_leads_qualified_date", "model.houm.rental_landlord_metric_new_rental_listing", "model.houm.rental_landlord_metric_new_rental_listing_b2c", "model.houm.rental_landlord_metric_paid_media_cost", "model.houm.rental_landlord_metric_photo_created", "model.houm.rental_landlord_metric_photo_done", "model.houm.rental_landlord_metric_photo_scheduled"], "model.houm.sales_buyer_funnel": ["model.houm.dim_macrozones", "model.houm.sales_buyer_metric_paid_media_cost", "model.houm.sales_buyer_metric_paid_media_cost_sales", "model.houm.sales_buyer_metric_schedules_created", "model.houm.sales_buyer_metric_schedules_done", "model.houm.sales_buyer_metric_schedules_scheduled", "model.houm.sales_buyer_metrics_leads", "model.houm.sales_buyer_metrics_leads_sales", "model.houm.sales_buyer_metrics_leads_sales_qualified", "model.houm.sales_buyer_metrics_leads_sales_qualified_date"], "model.houm.sales_seller_funnel": ["model.houm.dim_macrozones", "model.houm.sales_seller_metric_leads", "model.houm.sales_seller_metric_leads_qualified", "model.houm.sales_seller_metric_leads_qualified_date", "model.houm.sales_seller_metric_new_sale_listing", "model.houm.sales_seller_metric_new_sale_listing_b2c", "model.houm.sales_seller_metric_paid_media_cost", "model.houm.sales_seller_metric_photo_created", "model.houm.sales_seller_metric_photo_done", "model.houm.sales_seller_metric_photo_scheduled"], "model.houm.dim_currency": [], "model.houm.dim_properties": ["model.houm.proc_properties", "model.houm.proc_property_salesdetails", "model.houm.proc_propertydetails"], "model.houm.dim_business": ["model.houm.proc_tmp_supply_leads"], "model.houm.dim_macrozones": ["model.houm.proc_macrozone"], "model.houm.dim_pipedrive_locations": ["model.houm.proc_tmp_supply_leads"], "model.houm.dim_cities": ["model.houm.proc_macrozone"], "model.houm.dim_dates": [], "model.houm.dim_locations": ["source.houm.public.dim_polygons"], "model.houm.rental_landlord_metric_details_paid_media_cost": ["model.houm.proc_marketing_paid_media"], "model.houm.sales_seller_metric_details_leads_qualified_date": ["model.houm.proc_supply_seller_leads"], "model.houm.sales_seller_metric_details_paid_media_cost": ["model.houm.proc_marketing_paid_media"], "model.houm.sales_seller_metric_details_new_sale_listing": ["model.houm.proc_properties", "model.houm.proc_properties_mz", "model.houm.proc_property_salesdetails"], "model.houm.sales_seller_metric_details_photo_done": ["model.houm.proc_supply_schedules"], "model.houm.rental_landlord_metric_details_photo_done": ["model.houm.proc_supply_schedules"], "model.houm.rental_landlord_metric_details_leads_qualified": ["model.houm.proc_supply_landlord_leads"], "model.houm.sales_seller_metric_details_leads_qualified": ["model.houm.proc_supply_seller_leads"], "model.houm.rental_landlord_metric_details_new_rental_listing": ["model.houm.proc_properties", "model.houm.proc_properties_mz"], "model.houm.sales_seller_metric_details_photo_scheduled": ["model.houm.proc_supply_schedules"], "model.houm.rental_landlord_metric_details_photo_scheduled": ["model.houm.proc_supply_schedules"], "model.houm.sales_seller_metric_details_photo_created": ["model.houm.proc_supply_schedules"], "model.houm.sales_seller_metric_details_new_sale_listing_b2c": ["model.houm.proc_properties", "model.houm.proc_properties_mz", "model.houm.proc_property_salesdetails"], "model.houm.rental_landlord_metric_details_new_rental_listing_b2c": ["model.houm.proc_properties", "model.houm.proc_properties_mz"], "model.houm.rental_landlord_metric_details_photo_created": ["model.houm.proc_supply_schedules"], "model.houm.sales_seller_metric_details_leads": ["model.houm.proc_supply_seller_leads"], "model.houm.rental_landlord_metric_details_leads_qualified_date": ["model.houm.proc_supply_landlord_leads"], "model.houm.rental_landlord_metric_details_leads": ["model.houm.proc_supply_landlord_leads"], "model.houm.facts_pipedrive_leads": ["model.houm.dim_business", "model.houm.dim_pipedrive_locations", "model.houm.proc_tmp_supply_leads"], "model.houm.fact_daily_virtual_uf_cl": ["model.houm.proc_monthly_daily_inflation_cl"], "model.houm.fact_daily_virtual_uf_co": ["model.houm.proc_monthly_daily_inflation_co"], "model.houm.fact_daily_virtual_uf_mx": ["model.houm.proc_monthly_daily_inflation_mx"], "model.houm.sales_investor_metrics_details_leads_sales_qualified": ["model.houm.proc_demand_buyer_leads"], "model.houm.rental_tenant_metric_details_reservations_refunded": ["model.houm.proc_demand_reservations"], "model.houm.sales_buyer_metrics_details_leads_sales_qualified_date": ["model.houm.proc_demand_buyer_leads"], "model.houm.sales_buyer_metrics_details_leads": ["model.houm.proc_demand_buyer_leads", "model.houm.proc_demand_buyer_leads"], "model.houm.rental_tenant_metric_details_schedules_scheduled": ["model.houm.proc_demand_schedules"], "model.houm.sales_investor_metric_details_schedules_created": ["model.houm.proc_demand_schedules"], "model.houm.rental_tenant_metric_details_schedules_done": ["model.houm.proc_demand_schedules"], "model.houm.sales_investor_metric_details_schedules_scheduled": ["model.houm.proc_demand_schedules"], "model.houm.rental_tenant_metric_details_reservations_effective": ["model.houm.proc_demand_reservations"], "model.houm.sales_buyer_metric_details_schedules_scheduled": ["model.houm.proc_demand_schedules"], "model.houm.rental_tenant_metric_details_leads": ["model.houm.proc_demand_leads"], "model.houm.sales_buyer_metrics_details_leads_sales": ["model.houm.proc_demand_buyer_leads"], "model.houm.rental_tenant_metric_details_new_subs": ["model.houm.proc_closure_subs"], "model.houm.rental_tenant_metric_details_reservations": ["model.houm.proc_demand_reservations"], "model.houm.sales_buyer_metric_details_schedules_created": ["model.houm.proc_demand_schedules"], "model.houm.rental_tenant_metric_details_schedules_created": ["model.houm.proc_demand_schedules"], "model.houm.rental_tenant_metric_details_leads_interactions": ["model.houm.proc_demand_leads"], "model.houm.sales_investor_metric_details_schedules_done": ["model.houm.proc_demand_schedules"], "model.houm.sales_buyer_metrics_details_leads_sales_qualified": ["model.houm.proc_demand_buyer_leads"], "model.houm.rental_tenant_metric_details_new_tenant": ["model.houm.proc_closure_subs"], "model.houm.rental_tenant_metric_details_paid_media_cost": ["model.houm.proc_marketing_paid_media"], "model.houm.sales_buyer_metric_details_paid_media_cost": ["model.houm.proc_marketing_paid_media"], "model.houm.sales_buyer_metric_details_paid_media_cost_sales": ["model.houm.proc_marketing_paid_media"], "model.houm.sales_investor_metrics_details_leads": ["model.houm.proc_demand_buyer_leads"], "model.houm.sales_buyer_metric_details_schedules_done": ["model.houm.proc_demand_schedules"], "model.houm.sales_investor_metrics_details_leads_sales_qualified_date": ["model.houm.proc_demand_buyer_leads"], "model.houm.stg_survicate_nps_tenant_satisfaction_24hrs": ["source.houm.survicate.nps_tenant_satisfaction_24hrs"], "model.houm.stg_survicate_nps_landlord_satisfaction_6months_cl": ["source.houm.survicate.nps_landlord_satisfaction_6months_cl"], "model.houm.stg_survicate_nps_visit_done": ["source.houm.survicate.nps_visit_done"], "model.houm.stg_survicate_nps_landlord_listing": ["source.houm.survicate.nps_landlord_listing"], "model.houm.stg_survicate_nps_landlord_new_sub": ["source.houm.survicate.nps_landlord_new_sub"], "model.houm.stg_survicate_nps_photo_done": ["source.houm.survicate.photo_done"], "model.houm.stg_survicate_nps_tenant_new_sub": ["source.houm.survicate.nps_tennant_new_sub"], "model.houm.stg_whatsapp_nps_chile_visit_sales": ["source.houm.airbyte_gspread.nps_chile_sales"], "model.houm.stg_whatsapp_nps_tenant_pc_cl": ["source.houm.airbyte_gspread.nps_rentas_tenant_pc_cl"], "model.houm.stg_whatsapp_nps_tenant_pc_co": ["source.houm.airbyte_gspread.nps_rentas_tenant_pc_co"], "model.houm.stg_whatsapp_nps_sales_post_venta_selller": ["source.houm.airbyte_gspread.nps_sales_post_venta_seller"], "model.houm.stg_whatsapp_nps_cancel_visit": ["source.houm.airbyte_gspread.nps_cancel_visit"], "model.houm.stg_whatsapp_nps_mexico_visit_renta": ["source.houm.airbyte_gspread.nps_mexico_renta"], "model.houm.stg_whatsapp_nps_automatic_tenant_24_hrs": ["source.houm.airbyte_gspread.nps_automatic_tenant_24_hrs"], "model.houm.stg_whatsapp_nps_colombia_visit_sales": ["source.houm.airbyte_gspread.nps_colombia_sales"], "model.houm.stg_whatsapp_nps_sales_promesa_buyer": ["source.houm.airbyte_gspread.nps_sales_promesa_buyer"], "model.houm.stg_whatsapp_nps_automatic_landlord_3_meses": ["source.houm.airbyte_gspread.nps_automatic_landlord_3_meses"], "model.houm.stg_whatsapp_nps_automatic_tenant_6_meses": ["source.houm.airbyte_gspread.nps_automatic_tenant_6_meses"], "model.houm.stg_whatsapp_nps_rentas_new_listing_cl": ["source.houm.airbyte_gspread.nps_rentas_prop_new_listing_cl"], "model.houm.stg_whatsapp_nps_rentas_new_listing_co": ["source.houm.airbyte_gspread.nps_rentas_prop_new_listing_co"], "model.houm.stg_whatsapp_nps_chile_foto": ["source.houm.airbyte_gspread.nps_chile_foto"], "model.houm.stg_whatsapp_nps_sales_post_venta_buyer": ["source.houm.airbyte_gspread.nps_sales_post_venta_buyer"], "model.houm.stg_whatsapp_nps_mexico_foto": ["source.houm.airbyte_gspread.nps_mexico_foto"], "model.houm.stg_whatsapp_nps_automatic_tenant_3_meses": ["source.houm.airbyte_gspread.nps_automatic_tenant_3_meses"], "model.houm.stg_whatsapp_nps_rentas_new_listing_mx": ["source.houm.airbyte_gspread.nps_rentas_prop_new_listing_mx"], "model.houm.stg_whatsapp_nps_colombia_visit_renta": ["source.houm.airbyte_gspread.nps_colombia_renta"], "model.houm.stg_whatsapp_nps_automatic_landlord_6_meses": ["source.houm.airbyte_gspread.nps_automatic_landlord_6_meses"], "model.houm.stg_whatsapp_nps_colombia_foto": ["source.houm.airbyte_gspread.nps_colombia_foto"], "model.houm.stg_whatsapp_nps_tenant_pc_mx": ["source.houm.airbyte_gspread.nps_rentas_tenant_pc_mx"], "model.houm.stg_whatsapp_nps_sales_promesa_seller": ["source.houm.airbyte_gspread.nps_sales_promesa_seller"], "model.houm.stg_whatsapp_nps_mexico_visit_sales": ["source.houm.airbyte_gspread.nps_mexico_sales"], "model.houm.stg_whatsapp_nps_chile_visit_renta": ["source.houm.airbyte_gspread.nps_chile_renta"], "model.houm.stg_activies": ["source.houm.pipedrive.activities"], "model.houm.stg_pipelines": ["source.houm.pipedrive.pipelines"], "model.houm.stg_bi_persons": ["source.houm.pipedrive.bi_persons"], "model.houm.stg_stages": ["source.houm.pipedrive.stages"], "model.houm.stg_bi_deals": ["source.houm.pipedrive.bi_deals"], "model.houm.stg_deals": ["source.houm.pipedrive.deals"], "model.houm.stg_subscription_subscription": ["source.houm.raw_stage.subscription_subscription"], "model.houm.stg_demand_portalhoum": ["source.houm.raw_stage.demand_portalhoum"], "model.houm.stg_contracts": ["source.houm.historical.historical_contracts"], "model.houm.stg_arriendoasegurado_applicant": ["source.houm.raw_stage.arriendoasegurado_applicant"], "model.houm.stg_scheduler_schedules": ["source.houm.raw_stage.scheduler_schedules"], "model.houm.stg_demand_portalapplicant": ["source.houm.raw_stage.demand_portalapplicant"], "model.houm.stg_users": ["source.houm.raw_stage.users"], "model.houm.stg_scheduler_scheduletypes": ["source.houm.raw_stage.scheduler_scheduletypes"], "model.houm.stg_properties_location": ["source.houm.raw_stage.properties_location"], "model.houm.stg_scheduler_schedulehasapplicant": ["source.houm.raw_stage.scheduler_schedulehasapplicant"], "model.houm.stg_properties": ["source.houm.raw_stage.properties"], "model.houm.stg_demand_lead": ["source.houm.raw_stage.demand_lead"], "model.houm.stg_property_salesdetails": ["source.houm.raw_stage.properties_salesdetails"], "model.houm.stg_homecheckerdetails": ["source.houm.historical.historical_arriendoasegurado_homecheckerdetails"], "model.houm.stg_macrozone": ["source.houm.raw_stage.scheduler_macrozone"], "model.houm.stg_plans": ["source.houm.historical.historical_plans"], "model.houm.stg_propertydetails": ["source.houm.raw_stage.arriendoasegurado_propertydetails"], "model.houm.stg_paid_media_google_campaign_keys": ["source.houm.airbyte_gspread.campaign_keys_gg"], "model.houm.stg_tmp_marketing_pipedrive_data": ["source.houm.airbyte_gspread.data"], "model.houm.stg_paid_media_facebook_campaigns": ["source.houm.airbyte_gspread.bb_fb"], "model.houm.stg_paid_media_google_campaigns_co_mx": ["source.houm.airbyte_gspread.gg_mxco"], "model.houm.stg_paid_media_ad_groups": ["source.houm.airbyte_gspread.anuncios"], "model.houm.stg_paid_media_facebook_campaign_keys": ["source.houm.airbyte_gspread.campaign_keys_fb"], "model.houm.stg_paid_media_google_campaigns_cl": ["source.houm.airbyte_gspread.gg_cl"], "model.houm.stg_zendesk_metrics": ["source.houm.airbyte_zendesk.ticket_metrics"], "model.houm.stg_zendesk_tickets_audits_events": ["source.houm.airbyte_zendesk.ticket_audits", "source.houm.airbyte_zendesk.ticket_audits_events"], "model.houm.stg_zendesk_users": ["source.houm.airbyte_zendesk.users"], "model.houm.stg_zendesk_tickets_audits_via": ["source.houm.airbyte_zendesk.ticket_audits", "source.houm.airbyte_zendesk.ticket_audits_via", "source.houm.airbyte_zendesk.ticket_audits_via_source", "source.houm.airbyte_zendesk.ticket_audits_via_source_from", "source.houm.airbyte_zendesk.ticket_audits_via_source_to"], "model.houm.stg_zendesk_tickets_comments": ["source.houm.airbyte_zendesk.ticket_comments"], "model.houm.stg_zendesk_tickets_audits": ["source.houm.airbyte_zendesk.ticket_audits"], "model.houm.stg_zendesk_tickets": ["source.houm.airbyte_zendesk.tickets"], "model.houm.stg_monthly_inflation_mx": ["source.houm.raw_stage.series_ipc_mx"], "model.houm.stg_monthly_inflation_co": ["source.houm.raw_stage.series_ipc_co"], "model.houm.stg_monthly_inflation_cl": ["source.houm.raw_stage.series_ipc_cl"], "model.houm.stg_payments_cl_db_movements": ["source.houm.mongo_tables.payments_cl_db_movements"], "model.houm.stg_payments_mx_db_movements": ["source.houm.mongo_tables.payments_mx_db_movements"], "model.houm.stg_payments_co_db_movements": ["source.houm.mongo_tables.payments_co_db_movements"], "model.houm.stg_departments": ["source.houm.staging_buk.departments_chile", "source.houm.staging_buk.departments_colombia"], "model.houm.stg_payrolls": ["source.houm.staging_buk.payrolls_chile", "source.houm.staging_buk.payrolls_colombia"], "model.houm.stg_companies": ["source.houm.staging_buk.companies_chile", "source.houm.staging_buk.companies_colombia"], "model.houm.stg_accounting": ["source.houm.staging_buk.payrolls_chile", "source.houm.staging_buk.payrolls_colombia"], "model.houm.stg_jobs": ["source.houm.staging_buk.jobs_chile", "source.houm.staging_buk.jobs_colombia"], "model.houm.stg_areas": ["source.houm.staging_buk.areas_chile", "source.houm.staging_buk.areas_colombia"], "model.houm.stg_line_settlements": ["source.houm.staging_buk.line_settlements_chile", "source.houm.staging_buk.line_settlements_colombia"], "model.houm.stg_employees": ["source.houm.staging_buk.employees_chile", "source.houm.staging_buk.employees_colombia"], "model.houm.stg_roles": ["source.houm.staging_buk.roles_chile", "source.houm.staging_buk.roles_colombia"], "model.houm.proc_closure_subs": ["model.houm.proc_closure_contracts", "model.houm.proc_closure_plans", "model.houm.proc_properties_mz", "model.houm.stg_subscription_subscription"], "model.houm.proc_closure_plans": ["model.houm.stg_plans"], "model.houm.proc_closure_contracts": ["model.houm.stg_contracts"], "model.houm.proc_cx_zendesk_clean_comments": ["model.houm.stg_zendesk_tickets_comments"], "model.houm.proc_cx_zendesk_first_clean_comments": ["model.houm.proc_cx_zendesk_clean_comments"], "model.houm.proc_supply_seller_leads": ["model.houm.proc_properties", "model.houm.proc_properties_mz", "model.houm.stg_bi_deals", "model.houm.stg_bi_persons"], "model.houm.proc_property_salesdetails": ["model.houm.stg_property_salesdetails"], "model.houm.proc_tmp_supply_leads": ["model.houm.proc_tmp_supply_cities", "model.houm.proc_tmp_supply_cities", "model.houm.proc_tmp_supply_deals", "model.houm.proc_tmp_supply_deals", "model.houm.proc_tmp_supply_properties_macrozone"], "model.houm.proc_properties_mz": ["model.houm.proc_macrozone", "model.houm.proc_propertydetails"], "model.houm.proc_supply_schedules": ["model.houm.proc_properties", "model.houm.proc_properties_mz", "model.houm.stg_arriendoasegurado_applicant", "model.houm.stg_scheduler_schedulehasapplicant", "model.houm.stg_scheduler_schedules", "model.houm.stg_scheduler_scheduletypes"], "model.houm.proc_supply_landlord_leads": ["model.houm.proc_properties", "model.houm.proc_properties_mz", "model.houm.stg_bi_deals", "model.houm.stg_bi_persons"], "model.houm.proc_propertydetails": ["model.houm.stg_propertydetails"], "model.houm.proc_tmp_supply_persons_emails": ["model.houm.stg_deals"], "model.houm.proc_tmp_supply_cities": ["model.houm.proc_macrozone"], "model.houm.proc_tmp_supply_deals": ["model.houm.stg_deals"], "model.houm.proc_macrozone": ["model.houm.stg_macrozone"], "model.houm.proc_properties": ["model.houm.stg_properties", "model.houm.stg_users"], "model.houm.proc_tmp_supply_persons_phones": ["model.houm.stg_deals"], "model.houm.proc_tmp_supply_deals_persons": ["model.houm.proc_tmp_supply_persons_emails", "model.houm.proc_tmp_supply_persons_phones", "model.houm.stg_deals"], "model.houm.proc_tmp_supply_properties_macrozone": ["model.houm.proc_macrozone", "model.houm.proc_macrozone", "model.houm.proc_properties", "model.houm.proc_propertydetails"], "model.houm.proc_marketing_paid_media": ["model.houm.dim_macrozones", "model.houm.proc_marketing_facebook", "model.houm.proc_marketing_google_cl", "model.houm.proc_marketing_google_co_mx"], "model.houm.proc_marketing_facebook": ["model.houm.stg_paid_media_facebook_campaigns"], "model.houm.proc_marketing_google_co_mx": ["model.houm.stg_paid_media_google_campaigns_co_mx"], "model.houm.proc_marketing_google_cl": ["model.houm.stg_paid_media_google_campaigns_cl"], "model.houm.sales_local_revenue": [], "model.houm.rentals_units": [], "model.houm.eop_subs": [], "model.houm.sales_units": [], "model.houm.proc_cx_nps_new_listing": ["model.houm.stg_survicate_nps_landlord_listing", "model.houm.stg_whatsapp_nps_rentas_new_listing_cl", "model.houm.stg_whatsapp_nps_rentas_new_listing_co", "model.houm.stg_whatsapp_nps_rentas_new_listing_mx"], "model.houm.proc_cx_nps_visit_cancel": ["model.houm.stg_whatsapp_nps_cancel_visit"], "model.houm.proc_cx_nps_photo": ["model.houm.proc_tmp_demand_schedules_cleaned", "model.houm.stg_survicate_nps_photo_done", "model.houm.stg_whatsapp_nps_chile_foto", "model.houm.stg_whatsapp_nps_colombia_foto", "model.houm.stg_whatsapp_nps_mexico_foto"], "model.houm.proc_cx_nps_landlords": ["model.houm.stg_survicate_nps_landlord_satisfaction_6months_cl", "model.houm.stg_whatsapp_nps_automatic_landlord_3_meses", "model.houm.stg_whatsapp_nps_automatic_landlord_6_meses"], "model.houm.proc_monthly_daily_inflation_mx": ["model.houm.stg_monthly_inflation_mx"], "model.houm.proc_monthly_daily_inflation_co": ["model.houm.stg_monthly_inflation_co"], "model.houm.proc_monthly_daily_inflation_cl": ["model.houm.stg_monthly_inflation_cl"], "model.houm.proc_demand_schedules": ["model.houm.proc_properties", "model.houm.proc_properties_mz", "model.houm.stg_arriendoasegurado_applicant", "model.houm.stg_scheduler_schedulehasapplicant", "model.houm.stg_scheduler_schedules", "model.houm.stg_scheduler_scheduletypes"], "model.houm.proc_tmp_demand_schedules_cleaned": ["model.houm.proc_tmp_demand_schedules"], "model.houm.proc_tmp_demand_schedules": ["model.houm.proc_tmp_supply_properties_macrozone", "model.houm.stg_arriendoasegurado_applicant", "model.houm.stg_scheduler_schedulehasapplicant", "model.houm.stg_scheduler_schedules", "model.houm.stg_scheduler_scheduletypes"], "model.houm.proc_tmp_demand_tenant_houm_leads": ["model.houm.proc_tmp_supply_cities", "model.houm.proc_tmp_supply_properties_macrozone", "model.houm.stg_demand_portalhoum"], "model.houm.proc_demand_reservations": ["model.houm.proc_properties_mz", "model.houm.proc_properties_mz", "model.houm.proc_properties_mz", "model.houm.stg_payments_cl_db_movements", "model.houm.stg_payments_co_db_movements", "model.houm.stg_payments_mx_db_movements"], "model.houm.proc_tmp_demand_tenant_pa_leads": ["model.houm.proc_tmp_supply_properties_macrozone", "model.houm.stg_demand_portalapplicant"], "model.houm.proc_demand_leads": ["model.houm.proc_properties", "model.houm.proc_properties_mz", "model.houm.proc_properties_mz", "model.houm.stg_demand_lead", "model.houm.stg_demand_portalapplicant", "model.houm.stg_demand_portalhoum"], "model.houm.proc_demand_buyer_leads": ["model.houm.proc_properties", "model.houm.proc_properties_mz", "model.houm.stg_bi_deals", "model.houm.stg_bi_persons"], "model.houm.processing_phase": [], "model.houm.staging_phase": [], "model.houm.freshness_phase": [], "model.houm.dwh_phase": [], "test.houm.assert_properties_rent_prices_chile": ["model.houm.stg_properties", "model.houm.stg_propertydetails"], "operation.houm.houm-on-run-end-0": [], "operation.houm.houm-on-run-end-1": [], "operation.houm.houm-on-run-end-2": [], "operation.houm.houm-on-run-end-3": [], "operation.houm.houm-on-run-end-4": [], "operation.houm.houm-on-run-end-5": [], "operation.houm.houm-on-run-end-6": [], "operation.houm.houm-on-run-end-7": [], "operation.houm.houm-on-run-end-8": [], "operation.houm.houm-on-run-end-9": [], "operation.houm.houm-on-run-end-10": [], "operation.houm.houm-on-run-end-11": [], "operation.houm.houm-on-run-end-12": [], "operation.houm.houm-on-run-end-13": [], "operation.houm.houm-on-run-end-14": [], "operation.houm.houm-on-run-end-15": [], "operation.houm.houm-on-run-end-16": [], "operation.houm.houm-on-run-end-17": [], "operation.houm.houm-on-run-end-18": [], "operation.houm.houm-on-run-end-19": [], "operation.houm.houm-on-run-end-20": [], "operation.houm.houm-on-run-end-21": [], "test.houm.unique_properties_published_property_id.3fc869c6e4": ["model.houm.properties_published"], "test.houm.not_null_properties_published_property_id.cfd67d7b86": ["model.houm.properties_published"], "test.houm.unique_dim_macrozones_macrozone.99a7937a3d": ["model.houm.dim_macrozones"], "test.houm.not_null_dim_macrozones_macrozone.5c78ef2445": ["model.houm.dim_macrozones"], "test.houm.unique_stg_properties_id.c012ce6a29": ["model.houm.stg_properties"], "test.houm.not_null_stg_properties_id.d43465ee9b": ["model.houm.stg_properties"], "test.houm.unique_stg_propertydetails_property_id.3d72328240": ["model.houm.stg_propertydetails"], "test.houm.not_null_stg_propertydetails_property_id.e78288fade": ["model.houm.stg_propertydetails"], "test.houm.relationships_stg_propertydetails_property_id__id__ref_stg_properties_.2deb404575": ["model.houm.stg_properties", "model.houm.stg_propertydetails"], "test.houm.unique_stg_property_salesdetails_property_id.6259827ab6": ["model.houm.stg_property_salesdetails"], "test.houm.not_null_stg_property_salesdetails_property_id.a909208778": ["model.houm.stg_property_salesdetails"], "test.houm.relationships_stg_property_salesdetails_property_id__id__ref_stg_properties_.576c9939c2": ["model.houm.stg_properties", "model.houm.stg_property_salesdetails"], "test.houm.unique_stg_employees_dwh_person_id.0af0f11ced": ["model.houm.stg_employees"], "test.houm.not_null_stg_employees_dwh_person_id.1123b1a608": ["model.houm.stg_employees"], "test.houm.unique_stg_zendesk_users_id.e79d686872": ["model.houm.stg_zendesk_users"], "test.houm.not_null_stg_zendesk_users_id.52cc258f65": ["model.houm.stg_zendesk_users"], "test.houm.not_null_stg_zendesk_users_created_at.a5d3a601e4": ["model.houm.stg_zendesk_users"], "test.houm.unique_stg_zendesk_tickets_id.ddc72a2d52": ["model.houm.stg_zendesk_tickets"], "test.houm.not_null_stg_zendesk_tickets_id.1eb8f4773c": ["model.houm.stg_zendesk_tickets"], "test.houm.not_null_stg_zendesk_tickets_created_at.df19eaef06": ["model.houm.stg_zendesk_tickets"], "test.houm.not_null_stg_zendesk_tickets_requester_id.b9b7c97459": ["model.houm.stg_zendesk_tickets"], "test.houm.relationships_stg_zendesk_tickets_requester_id__id__ref_stg_zendesk_users_.2db2d75048": ["model.houm.stg_zendesk_tickets", "model.houm.stg_zendesk_users"], "test.houm.not_null_stg_zendesk_tickets_submitter_id.adeeee890f": ["model.houm.stg_zendesk_tickets"], "test.houm.relationships_stg_zendesk_tickets_submitter_id__id__ref_stg_zendesk_users_.2140f23be2": ["model.houm.stg_zendesk_tickets", "model.houm.stg_zendesk_users"], "model.houm.stg_whatsapp_nps_rentas_propietary_pc": ["source.houm.airbyte_gspread.nps_rentas_tenant_pc_mx"], "model.houm.proc_cx_nps_landlords_pc": [], "source.houm.public.dim_polygons": [], "source.houm.historical.historical_scheduler_macrozone": [], "source.houm.public.dim_dates": [], "source.houm.historical.historical_properties": [], "source.houm.historical.historical_arriendoasegurado_propertydetails": [], "source.houm.historical.historical_properties_salesdetails": [], "source.houm.historical.historical_arriendoasegurado_homecheckerdetails": [], "source.houm.historical.historical_users": [], "source.houm.historical.historical_contracts": [], "source.houm.historical.historical_plans": [], "source.houm.raw_stage.scheduler_macrozone": [], "source.houm.raw_stage.properties_location": [], "source.houm.raw_stage.series_ipc_cl": [], "source.houm.raw_stage.series_ipc_mx": [], "source.houm.raw_stage.series_ipc_co": [], "source.houm.raw_stage.properties": [], "source.houm.raw_stage.properties_salesdetails": [], "source.houm.raw_stage.arriendoasegurado_propertydetails": [], "source.houm.raw_stage.users": [], "source.houm.raw_stage.demand_portalhoum": [], "source.houm.raw_stage.demand_portalapplicant": [], "source.houm.raw_stage.scheduler_schedules": [], "source.houm.raw_stage.scheduler_scheduletypes": [], "source.houm.raw_stage.scheduler_schedulehasapplicant": [], "source.houm.raw_stage.subscription_subscription": [], "source.houm.raw_stage.arriendoasegurado_applicant": [], "source.houm.raw_stage.demand_lead": [], "source.houm.staging_buk.employees_chile": [], "source.houm.staging_buk.employees_colombia": [], "source.houm.staging_buk.roles_chile": [], "source.houm.staging_buk.roles_colombia": [], "source.houm.staging_buk.accounting_chile": [], "source.houm.staging_buk.accounting_colombia": [], "source.houm.staging_buk.areas_chile": [], "source.houm.staging_buk.areas_colombia": [], "source.houm.staging_buk.companies_chile": [], "source.houm.staging_buk.companies_colombia": [], "source.houm.staging_buk.departments_chile": [], "source.houm.staging_buk.departments_colombia": [], "source.houm.staging_buk.jobs_chile": [], "source.houm.staging_buk.jobs_colombia": [], "source.houm.staging_buk.payrolls_chile": [], "source.houm.staging_buk.payrolls_colombia": [], "source.houm.staging_buk.line_settlements_chile": [], "source.houm.staging_buk.line_settlements_colombia": [], "source.houm.airbyte_zendesk.users": [], "source.houm.airbyte_zendesk.tickets": [], "source.houm.airbyte_zendesk.ticket_audits": [], "source.houm.airbyte_zendesk.ticket_audits_events": [], "source.houm.airbyte_zendesk.ticket_audits_via": [], "source.houm.airbyte_zendesk.ticket_audits_via_source": [], "source.houm.airbyte_zendesk.ticket_audits_via_source_from": [], "source.houm.airbyte_zendesk.ticket_audits_via_source_to": [], "source.houm.airbyte_zendesk.ticket_metrics": [], "source.houm.airbyte_zendesk.ticket_comments": [], "source.houm.pipedrive.activities": [], "source.houm.pipedrive.deals": [], "source.houm.pipedrive.pipelines": [], "source.houm.pipedrive.stages": [], "source.houm.pipedrive.bi_persons": [], "source.houm.pipedrive.bi_deals": [], "source.houm.mongo_tables.payments_cl_db_movements": [], "source.houm.mongo_tables.payments_co_db_movements": [], "source.houm.mongo_tables.payments_mx_db_movements": [], "source.houm.airbyte_gspread.bb_fb": [], "source.houm.airbyte_gspread.gg_cl": [], "source.houm.airbyte_gspread.gg_mxco": [], "source.houm.airbyte_gspread.campaign_keys_fb": [], "source.houm.airbyte_gspread.campaign_keys_gg": [], "source.houm.airbyte_gspread.data": [], "source.houm.airbyte_gspread.nps_automatic_landlord_3_meses": [], "source.houm.airbyte_gspread.nps_automatic_landlord_6_meses": [], "source.houm.airbyte_gspread.nps_automatic_tenant_24_hrs": [], "source.houm.airbyte_gspread.nps_automatic_tenant_3_meses": [], "source.houm.airbyte_gspread.nps_automatic_tenant_6_meses": [], "source.houm.airbyte_gspread.nps_cancel_visit": [], "source.houm.airbyte_gspread.nps_chile_foto": [], "source.houm.airbyte_gspread.nps_chile_renta": [], "source.houm.airbyte_gspread.nps_chile_sales": [], "source.houm.airbyte_gspread.nps_colombia_foto": [], "source.houm.airbyte_gspread.nps_colombia_renta": [], "source.houm.airbyte_gspread.nps_colombia_sales": [], "source.houm.airbyte_gspread.nps_mexico_foto": [], "source.houm.airbyte_gspread.nps_mexico_renta": [], "source.houm.airbyte_gspread.nps_mexico_sales": [], "source.houm.airbyte_gspread.nps_sales_post_venta_buyer": [], "source.houm.airbyte_gspread.nps_sales_post_venta_seller": [], "source.houm.airbyte_gspread.nps_sales_promesa_buyer": [], "source.houm.airbyte_gspread.nps_sales_promesa_seller": [], "source.houm.airbyte_gspread.nps_rentas_prop_new_listing_cl": [], "source.houm.airbyte_gspread.nps_rentas_prop_new_listing_co": [], "source.houm.airbyte_gspread.nps_rentas_prop_new_listing_mx": [], "source.houm.airbyte_gspread.nps_rentas_propietary_pc_cl": [], "source.houm.airbyte_gspread.nps_rentas_propietary_pc_co": [], "source.houm.airbyte_gspread.nps_rentas_propietary_pc_mx": [], "source.houm.airbyte_gspread.nps_rentas_tenant_pc_cl": [], "source.houm.airbyte_gspread.nps_rentas_tenant_pc_co": [], "source.houm.airbyte_gspread.nps_rentas_tenant_pc_mx": [], "source.houm.airbyte_gspread.anuncios": [], "source.houm.survicate.nps_landlord_satisfaction_6months_cl": [], "source.houm.survicate.nps_landlord_listing": [], "source.houm.survicate.nps_landlord_new_sub": [], "source.houm.survicate.nps_tennant_new_sub": [], "source.houm.survicate.photo_done": [], "source.houm.survicate.nps_tenant_satisfaction_24hrs": [], "source.houm.survicate.nps_visit_done": []}, "child_map": {"model.houm.goals_current": [], "model.houm.cum_rentals_units": ["model.houm.goals_current"], "model.houm.cum_sales_units": ["model.houm.goals_current"], "model.houm.cum_sales_local_revenue": ["model.houm.goals_current"], "model.houm.sales_seller_metric_leads": ["model.houm.sales_seller_funnel"], "model.houm.rental_landlord_metric_paid_media_cost": ["model.houm.rental_landlord_funnel"], "model.houm.sales_seller_metric_photo_scheduled": ["model.houm.sales_seller_funnel"], "model.houm.rental_landlord_metric_photo_done": ["model.houm.rental_landlord_funnel"], "model.houm.sales_seller_metric_new_sale_listing": ["model.houm.sales_seller_funnel"], "model.houm.sales_seller_metric_leads_qualified_date": ["model.houm.sales_seller_funnel"], "model.houm.properties_published": ["test.houm.not_null_properties_published_property_id.cfd67d7b86", "test.houm.unique_properties_published_property_id.3fc869c6e4"], "model.houm.rental_landlord_metric_leads_qualified": ["model.houm.rental_landlord_funnel"], "model.houm.rental_landlord_metric_photo_scheduled": ["model.houm.rental_landlord_funnel"], "model.houm.rental_landlord_metric_leads_qualified_date": ["model.houm.rental_landlord_funnel"], "model.houm.rental_landlord_metric_new_rental_listing_b2c": ["model.houm.rental_landlord_funnel"], "model.houm.rental_landlord_metric_photo_created": ["model.houm.rental_landlord_funnel"], "model.houm.sales_seller_metric_paid_media_cost": ["model.houm.sales_seller_funnel"], "model.houm.rental_landlord_metric_leads": ["model.houm.rental_landlord_funnel"], "model.houm.sales_seller_metric_photo_created": ["model.houm.sales_seller_funnel"], "model.houm.sales_seller_metric_photo_done": ["model.houm.sales_seller_funnel"], "model.houm.rental_landlord_metric_new_rental_listing": ["model.houm.rental_landlord_funnel"], "model.houm.sales_seller_metric_new_sale_listing_b2c": ["model.houm.sales_seller_funnel"], "model.houm.sales_seller_metric_leads_qualified": ["model.houm.sales_seller_funnel"], "model.houm.kpi_landlord_photo_scheduled": [], "model.houm.kpi_tenant_visit_done": [], "model.houm.kpi_landlord_nrl": [], "model.houm.kpi_landlord_photo_created": [], "model.houm.kpi_landlord_photo_done": [], "model.houm.kpi_tenant_visit_created": [], "model.houm.kpi_landlord_leads": [], "model.houm.kpi_tenant_visit_scheduled": [], "model.houm.kpi_landlord_qualified_leads": [], "model.houm.kpi_seller_photo_created": [], "model.houm.kpi_seller_nsl": [], "model.houm.kpi_seller_photo_scheduled": [], "model.houm.kpi_buyer_visit_done": [], "model.houm.kpi_buyer_visit_created": [], "model.houm.kpi_seller_leads": [], "model.houm.kpi_seller_photo_done": [], "model.houm.kpi_buyer_leads": [], "model.houm.kpi_seller_qualified_leads": [], "model.houm.kpi_buyer_visit_scheduled": [], "model.houm.kpi_buyer_qualified_leads": [], "model.houm.rental_tenant_metric_portal_leads_interactions": ["model.houm.rental_tenant_funnel"], "model.houm.sales_buyer_metrics_leads_sales_qualified_date": ["model.houm.sales_buyer_funnel"], "model.houm.rental_tenant_metric_schedules_created": ["model.houm.rental_tenant_funnel"], "model.houm.sales_buyer_metric_schedules_created": ["model.houm.sales_buyer_funnel"], "model.houm.sales_buyer_metric_schedules_done": ["model.houm.sales_buyer_funnel"], "model.houm.rental_tenant_metric_portal_leads": ["model.houm.rental_tenant_funnel"], "model.houm.sales_buyer_metrics_leads": ["model.houm.sales_buyer_funnel"], "model.houm.rental_tenant_metric_reservations_refunded": ["model.houm.rental_tenant_funnel"], "model.houm.sales_buyer_metric_schedules_scheduled": ["model.houm.sales_buyer_funnel"], "model.houm.sales_buyer_metric_paid_media_cost": ["model.houm.sales_buyer_funnel"], "model.houm.rental_tenant_metric_new_tenant": ["model.houm.rental_tenant_funnel"], "model.houm.sales_buyer_metrics_leads_sales_qualified": ["model.houm.sales_buyer_funnel"], "model.houm.rental_tenant_metric_paid_media_cost": ["model.houm.rental_tenant_funnel"], "model.houm.rental_tenant_metric_reservations": ["model.houm.rental_tenant_funnel"], "model.houm.rental_tenant_metric_schedules_done": ["model.houm.rental_tenant_funnel"], "model.houm.sales_buyer_metrics_leads_sales": ["model.houm.sales_buyer_funnel"], "model.houm.sales_buyer_metric_paid_media_cost_sales": ["model.houm.sales_buyer_funnel"], "model.houm.rental_tenant_metric_new_subs": ["model.houm.rental_tenant_funnel"], "model.houm.rental_tenant_metric_schedules_scheduled": ["model.houm.rental_tenant_funnel"], "model.houm.rental_tenant_metric_reservations_effective": ["model.houm.rental_tenant_funnel"], "model.houm.rental_tenant_funnel": [], "model.houm.rental_landlord_funnel": [], "model.houm.sales_buyer_funnel": [], "model.houm.sales_seller_funnel": [], "model.houm.dim_currency": [], "model.houm.dim_properties": [], "model.houm.dim_business": ["model.houm.facts_pipedrive_leads"], "model.houm.dim_macrozones": ["model.houm.proc_marketing_paid_media", "model.houm.rental_landlord_funnel", "model.houm.rental_tenant_funnel", "model.houm.sales_buyer_funnel", "model.houm.sales_seller_funnel", "test.houm.not_null_dim_macrozones_macrozone.5c78ef2445", "test.houm.unique_dim_macrozones_macrozone.99a7937a3d"], "model.houm.dim_pipedrive_locations": ["model.houm.facts_pipedrive_leads"], "model.houm.dim_cities": [], "model.houm.dim_dates": [], "model.houm.dim_locations": [], "model.houm.rental_landlord_metric_details_paid_media_cost": ["model.houm.rental_landlord_metric_paid_media_cost"], "model.houm.sales_seller_metric_details_leads_qualified_date": ["model.houm.sales_seller_metric_leads_qualified_date"], "model.houm.sales_seller_metric_details_paid_media_cost": ["model.houm.sales_seller_metric_paid_media_cost"], "model.houm.sales_seller_metric_details_new_sale_listing": ["model.houm.sales_seller_metric_new_sale_listing"], "model.houm.sales_seller_metric_details_photo_done": ["model.houm.sales_seller_metric_photo_done"], "model.houm.rental_landlord_metric_details_photo_done": ["model.houm.rental_landlord_metric_photo_done"], "model.houm.rental_landlord_metric_details_leads_qualified": ["model.houm.rental_landlord_metric_leads_qualified"], "model.houm.sales_seller_metric_details_leads_qualified": ["model.houm.sales_seller_metric_leads_qualified"], "model.houm.rental_landlord_metric_details_new_rental_listing": ["model.houm.rental_landlord_metric_new_rental_listing"], "model.houm.sales_seller_metric_details_photo_scheduled": ["model.houm.sales_seller_metric_photo_scheduled"], "model.houm.rental_landlord_metric_details_photo_scheduled": ["model.houm.rental_landlord_metric_photo_scheduled"], "model.houm.sales_seller_metric_details_photo_created": ["model.houm.sales_seller_metric_photo_created"], "model.houm.sales_seller_metric_details_new_sale_listing_b2c": ["model.houm.sales_seller_metric_new_sale_listing_b2c"], "model.houm.rental_landlord_metric_details_new_rental_listing_b2c": ["model.houm.rental_landlord_metric_new_rental_listing_b2c"], "model.houm.rental_landlord_metric_details_photo_created": ["model.houm.rental_landlord_metric_photo_created"], "model.houm.sales_seller_metric_details_leads": ["model.houm.sales_seller_metric_leads"], "model.houm.rental_landlord_metric_details_leads_qualified_date": ["model.houm.rental_landlord_metric_leads_qualified_date"], "model.houm.rental_landlord_metric_details_leads": ["model.houm.rental_landlord_metric_leads"], "model.houm.facts_pipedrive_leads": [], "model.houm.fact_daily_virtual_uf_cl": [], "model.houm.fact_daily_virtual_uf_co": [], "model.houm.fact_daily_virtual_uf_mx": [], "model.houm.sales_investor_metrics_details_leads_sales_qualified": [], "model.houm.rental_tenant_metric_details_reservations_refunded": ["model.houm.rental_tenant_metric_reservations_refunded"], "model.houm.sales_buyer_metrics_details_leads_sales_qualified_date": ["model.houm.sales_buyer_metrics_leads_sales_qualified_date"], "model.houm.sales_buyer_metrics_details_leads": ["model.houm.sales_buyer_metrics_leads"], "model.houm.rental_tenant_metric_details_schedules_scheduled": ["model.houm.rental_tenant_metric_schedules_scheduled"], "model.houm.sales_investor_metric_details_schedules_created": [], "model.houm.rental_tenant_metric_details_schedules_done": ["model.houm.rental_tenant_metric_schedules_done"], "model.houm.sales_investor_metric_details_schedules_scheduled": [], "model.houm.rental_tenant_metric_details_reservations_effective": ["model.houm.rental_tenant_metric_reservations_effective"], "model.houm.sales_buyer_metric_details_schedules_scheduled": ["model.houm.sales_buyer_metric_schedules_scheduled"], "model.houm.rental_tenant_metric_details_leads": ["model.houm.rental_tenant_metric_portal_leads"], "model.houm.sales_buyer_metrics_details_leads_sales": ["model.houm.sales_buyer_metrics_leads_sales"], "model.houm.rental_tenant_metric_details_new_subs": ["model.houm.rental_tenant_metric_new_subs"], "model.houm.rental_tenant_metric_details_reservations": ["model.houm.rental_tenant_metric_reservations"], "model.houm.sales_buyer_metric_details_schedules_created": ["model.houm.sales_buyer_metric_schedules_created"], "model.houm.rental_tenant_metric_details_schedules_created": ["model.houm.rental_tenant_metric_schedules_created"], "model.houm.rental_tenant_metric_details_leads_interactions": ["model.houm.rental_tenant_metric_portal_leads_interactions"], "model.houm.sales_investor_metric_details_schedules_done": [], "model.houm.sales_buyer_metrics_details_leads_sales_qualified": ["model.houm.sales_buyer_metrics_leads_sales_qualified"], "model.houm.rental_tenant_metric_details_new_tenant": ["model.houm.rental_tenant_metric_new_tenant"], "model.houm.rental_tenant_metric_details_paid_media_cost": ["model.houm.rental_tenant_metric_paid_media_cost"], "model.houm.sales_buyer_metric_details_paid_media_cost": ["model.houm.sales_buyer_metric_paid_media_cost"], "model.houm.sales_buyer_metric_details_paid_media_cost_sales": ["model.houm.sales_buyer_metric_paid_media_cost_sales"], "model.houm.sales_investor_metrics_details_leads": [], "model.houm.sales_buyer_metric_details_schedules_done": ["model.houm.sales_buyer_metric_schedules_done"], "model.houm.sales_investor_metrics_details_leads_sales_qualified_date": [], "model.houm.stg_survicate_nps_tenant_satisfaction_24hrs": [], "model.houm.stg_survicate_nps_landlord_satisfaction_6months_cl": ["model.houm.proc_cx_nps_landlords"], "model.houm.stg_survicate_nps_visit_done": [], "model.houm.stg_survicate_nps_landlord_listing": ["model.houm.proc_cx_nps_new_listing"], "model.houm.stg_survicate_nps_landlord_new_sub": [], "model.houm.stg_survicate_nps_photo_done": ["model.houm.proc_cx_nps_photo"], "model.houm.stg_survicate_nps_tenant_new_sub": [], "model.houm.stg_whatsapp_nps_chile_visit_sales": [], "model.houm.stg_whatsapp_nps_tenant_pc_cl": [], "model.houm.stg_whatsapp_nps_tenant_pc_co": [], "model.houm.stg_whatsapp_nps_sales_post_venta_selller": [], "model.houm.stg_whatsapp_nps_cancel_visit": ["model.houm.proc_cx_nps_visit_cancel"], "model.houm.stg_whatsapp_nps_mexico_visit_renta": [], "model.houm.stg_whatsapp_nps_automatic_tenant_24_hrs": [], "model.houm.stg_whatsapp_nps_colombia_visit_sales": [], "model.houm.stg_whatsapp_nps_sales_promesa_buyer": [], "model.houm.stg_whatsapp_nps_automatic_landlord_3_meses": ["model.houm.proc_cx_nps_landlords"], "model.houm.stg_whatsapp_nps_automatic_tenant_6_meses": [], "model.houm.stg_whatsapp_nps_rentas_new_listing_cl": ["model.houm.proc_cx_nps_new_listing"], "model.houm.stg_whatsapp_nps_rentas_new_listing_co": ["model.houm.proc_cx_nps_new_listing"], "model.houm.stg_whatsapp_nps_chile_foto": ["model.houm.proc_cx_nps_photo"], "model.houm.stg_whatsapp_nps_sales_post_venta_buyer": [], "model.houm.stg_whatsapp_nps_mexico_foto": ["model.houm.proc_cx_nps_photo"], "model.houm.stg_whatsapp_nps_automatic_tenant_3_meses": [], "model.houm.stg_whatsapp_nps_rentas_new_listing_mx": ["model.houm.proc_cx_nps_new_listing"], "model.houm.stg_whatsapp_nps_colombia_visit_renta": [], "model.houm.stg_whatsapp_nps_automatic_landlord_6_meses": ["model.houm.proc_cx_nps_landlords"], "model.houm.stg_whatsapp_nps_colombia_foto": ["model.houm.proc_cx_nps_photo"], "model.houm.stg_whatsapp_nps_tenant_pc_mx": [], "model.houm.stg_whatsapp_nps_sales_promesa_seller": [], "model.houm.stg_whatsapp_nps_mexico_visit_sales": [], "model.houm.stg_whatsapp_nps_chile_visit_renta": [], "model.houm.stg_activies": [], "model.houm.stg_pipelines": [], "model.houm.stg_bi_persons": ["model.houm.proc_demand_buyer_leads", "model.houm.proc_supply_landlord_leads", "model.houm.proc_supply_seller_leads"], "model.houm.stg_stages": [], "model.houm.stg_bi_deals": ["model.houm.proc_demand_buyer_leads", "model.houm.proc_supply_landlord_leads", "model.houm.proc_supply_seller_leads"], "model.houm.stg_deals": ["model.houm.proc_tmp_supply_deals", "model.houm.proc_tmp_supply_deals_persons", "model.houm.proc_tmp_supply_persons_emails", "model.houm.proc_tmp_supply_persons_phones"], "model.houm.stg_subscription_subscription": ["model.houm.proc_closure_subs"], "model.houm.stg_demand_portalhoum": ["model.houm.proc_demand_leads", "model.houm.proc_tmp_demand_tenant_houm_leads"], "model.houm.stg_contracts": ["model.houm.proc_closure_contracts"], "model.houm.stg_arriendoasegurado_applicant": ["model.houm.proc_demand_schedules", "model.houm.proc_supply_schedules", "model.houm.proc_tmp_demand_schedules"], "model.houm.stg_scheduler_schedules": ["model.houm.proc_demand_schedules", "model.houm.proc_supply_schedules", "model.houm.proc_tmp_demand_schedules"], "model.houm.stg_demand_portalapplicant": ["model.houm.proc_demand_leads", "model.houm.proc_tmp_demand_tenant_pa_leads"], "model.houm.stg_users": ["model.houm.proc_properties"], "model.houm.stg_scheduler_scheduletypes": ["model.houm.proc_demand_schedules", "model.houm.proc_supply_schedules", "model.houm.proc_tmp_demand_schedules"], "model.houm.stg_properties_location": [], "model.houm.stg_scheduler_schedulehasapplicant": ["model.houm.proc_demand_schedules", "model.houm.proc_supply_schedules", "model.houm.proc_tmp_demand_schedules"], "model.houm.stg_properties": ["model.houm.proc_properties", "test.houm.assert_properties_rent_prices_chile", "test.houm.not_null_stg_properties_id.d43465ee9b", "test.houm.relationships_stg_property_salesdetails_property_id__id__ref_stg_properties_.576c9939c2", "test.houm.relationships_stg_propertydetails_property_id__id__ref_stg_properties_.2deb404575", "test.houm.unique_stg_properties_id.c012ce6a29"], "model.houm.stg_demand_lead": ["model.houm.proc_demand_leads"], "model.houm.stg_property_salesdetails": ["model.houm.proc_property_salesdetails", "test.houm.not_null_stg_property_salesdetails_property_id.a909208778", "test.houm.relationships_stg_property_salesdetails_property_id__id__ref_stg_properties_.576c9939c2", "test.houm.unique_stg_property_salesdetails_property_id.6259827ab6"], "model.houm.stg_homecheckerdetails": [], "model.houm.stg_macrozone": ["model.houm.proc_macrozone"], "model.houm.stg_plans": ["model.houm.proc_closure_plans"], "model.houm.stg_propertydetails": ["model.houm.proc_propertydetails", "test.houm.assert_properties_rent_prices_chile", "test.houm.not_null_stg_propertydetails_property_id.e78288fade", "test.houm.relationships_stg_propertydetails_property_id__id__ref_stg_properties_.2deb404575", "test.houm.unique_stg_propertydetails_property_id.3d72328240"], "model.houm.stg_paid_media_google_campaign_keys": [], "model.houm.stg_tmp_marketing_pipedrive_data": [], "model.houm.stg_paid_media_facebook_campaigns": ["model.houm.proc_marketing_facebook"], "model.houm.stg_paid_media_google_campaigns_co_mx": ["model.houm.proc_marketing_google_co_mx"], "model.houm.stg_paid_media_ad_groups": [], "model.houm.stg_paid_media_facebook_campaign_keys": [], "model.houm.stg_paid_media_google_campaigns_cl": ["model.houm.proc_marketing_google_cl"], "model.houm.stg_zendesk_metrics": [], "model.houm.stg_zendesk_tickets_audits_events": [], "model.houm.stg_zendesk_users": ["test.houm.not_null_stg_zendesk_users_created_at.a5d3a601e4", "test.houm.not_null_stg_zendesk_users_id.52cc258f65", "test.houm.relationships_stg_zendesk_tickets_requester_id__id__ref_stg_zendesk_users_.2db2d75048", "test.houm.relationships_stg_zendesk_tickets_submitter_id__id__ref_stg_zendesk_users_.2140f23be2", "test.houm.unique_stg_zendesk_users_id.e79d686872"], "model.houm.stg_zendesk_tickets_audits_via": [], "model.houm.stg_zendesk_tickets_comments": ["model.houm.proc_cx_zendesk_clean_comments"], "model.houm.stg_zendesk_tickets_audits": [], "model.houm.stg_zendesk_tickets": ["test.houm.not_null_stg_zendesk_tickets_created_at.df19eaef06", "test.houm.not_null_stg_zendesk_tickets_id.1eb8f4773c", "test.houm.not_null_stg_zendesk_tickets_requester_id.b9b7c97459", "test.houm.not_null_stg_zendesk_tickets_submitter_id.adeeee890f", "test.houm.relationships_stg_zendesk_tickets_requester_id__id__ref_stg_zendesk_users_.2db2d75048", "test.houm.relationships_stg_zendesk_tickets_submitter_id__id__ref_stg_zendesk_users_.2140f23be2", "test.houm.unique_stg_zendesk_tickets_id.ddc72a2d52"], "model.houm.stg_monthly_inflation_mx": ["model.houm.proc_monthly_daily_inflation_mx"], "model.houm.stg_monthly_inflation_co": ["model.houm.proc_monthly_daily_inflation_co"], "model.houm.stg_monthly_inflation_cl": ["model.houm.proc_monthly_daily_inflation_cl"], "model.houm.stg_payments_cl_db_movements": ["model.houm.proc_demand_reservations"], "model.houm.stg_payments_mx_db_movements": ["model.houm.proc_demand_reservations"], "model.houm.stg_payments_co_db_movements": ["model.houm.proc_demand_reservations"], "model.houm.stg_departments": [], "model.houm.stg_payrolls": [], "model.houm.stg_companies": [], "model.houm.stg_accounting": [], "model.houm.stg_jobs": [], "model.houm.stg_areas": [], "model.houm.stg_line_settlements": [], "model.houm.stg_employees": ["test.houm.not_null_stg_employees_dwh_person_id.1123b1a608", "test.houm.unique_stg_employees_dwh_person_id.0af0f11ced"], "model.houm.stg_roles": [], "model.houm.proc_closure_subs": ["model.houm.rental_tenant_metric_details_new_subs", "model.houm.rental_tenant_metric_details_new_tenant"], "model.houm.proc_closure_plans": ["model.houm.proc_closure_subs"], "model.houm.proc_closure_contracts": ["model.houm.proc_closure_subs"], "model.houm.proc_cx_zendesk_clean_comments": ["model.houm.proc_cx_zendesk_first_clean_comments"], "model.houm.proc_cx_zendesk_first_clean_comments": [], "model.houm.proc_supply_seller_leads": ["model.houm.sales_seller_metric_details_leads", "model.houm.sales_seller_metric_details_leads_qualified", "model.houm.sales_seller_metric_details_leads_qualified_date"], "model.houm.proc_property_salesdetails": ["model.houm.dim_properties", "model.houm.properties_published", "model.houm.sales_seller_metric_details_new_sale_listing", "model.houm.sales_seller_metric_details_new_sale_listing_b2c"], "model.houm.proc_tmp_supply_leads": ["model.houm.dim_business", "model.houm.dim_pipedrive_locations", "model.houm.facts_pipedrive_leads", "model.houm.kpi_buyer_leads", "model.houm.kpi_buyer_qualified_leads", "model.houm.kpi_landlord_leads", "model.houm.kpi_landlord_qualified_leads", "model.houm.kpi_seller_leads", "model.houm.kpi_seller_qualified_leads"], "model.houm.proc_properties_mz": ["model.houm.proc_closure_subs", "model.houm.proc_demand_buyer_leads", "model.houm.proc_demand_leads", "model.houm.proc_demand_leads", "model.houm.proc_demand_reservations", "model.houm.proc_demand_reservations", "model.houm.proc_demand_reservations", "model.houm.proc_demand_schedules", "model.houm.proc_supply_landlord_leads", "model.houm.proc_supply_schedules", "model.houm.proc_supply_seller_leads", "model.houm.rental_landlord_metric_details_new_rental_listing", "model.houm.rental_landlord_metric_details_new_rental_listing_b2c", "model.houm.sales_seller_metric_details_new_sale_listing", "model.houm.sales_seller_metric_details_new_sale_listing_b2c"], "model.houm.proc_supply_schedules": ["model.houm.rental_landlord_metric_details_photo_created", "model.houm.rental_landlord_metric_details_photo_done", "model.houm.rental_landlord_metric_details_photo_scheduled", "model.houm.sales_seller_metric_details_photo_created", "model.houm.sales_seller_metric_details_photo_done", "model.houm.sales_seller_metric_details_photo_scheduled"], "model.houm.proc_supply_landlord_leads": ["model.houm.rental_landlord_metric_details_leads", "model.houm.rental_landlord_metric_details_leads_qualified", "model.houm.rental_landlord_metric_details_leads_qualified_date"], "model.houm.proc_propertydetails": ["model.houm.dim_properties", "model.houm.proc_properties_mz", "model.houm.proc_tmp_supply_properties_macrozone", "model.houm.properties_published"], "model.houm.proc_tmp_supply_persons_emails": ["model.houm.proc_tmp_supply_deals_persons"], "model.houm.proc_tmp_supply_cities": ["model.houm.proc_tmp_demand_tenant_houm_leads", "model.houm.proc_tmp_supply_leads", "model.houm.proc_tmp_supply_leads"], "model.houm.proc_tmp_supply_deals": ["model.houm.proc_tmp_supply_leads", "model.houm.proc_tmp_supply_leads"], "model.houm.proc_macrozone": ["model.houm.dim_cities", "model.houm.dim_macrozones", "model.houm.proc_properties_mz", "model.houm.proc_tmp_supply_cities", "model.houm.proc_tmp_supply_properties_macrozone", "model.houm.proc_tmp_supply_properties_macrozone"], "model.houm.proc_properties": ["model.houm.dim_properties", "model.houm.proc_demand_buyer_leads", "model.houm.proc_demand_leads", "model.houm.proc_demand_schedules", "model.houm.proc_supply_landlord_leads", "model.houm.proc_supply_schedules", "model.houm.proc_supply_seller_leads", "model.houm.proc_tmp_supply_properties_macrozone", "model.houm.properties_published", "model.houm.rental_landlord_metric_details_new_rental_listing", "model.houm.rental_landlord_metric_details_new_rental_listing_b2c", "model.houm.sales_seller_metric_details_new_sale_listing", "model.houm.sales_seller_metric_details_new_sale_listing_b2c"], "model.houm.proc_tmp_supply_persons_phones": ["model.houm.proc_tmp_supply_deals_persons"], "model.houm.proc_tmp_supply_deals_persons": [], "model.houm.proc_tmp_supply_properties_macrozone": ["model.houm.kpi_landlord_nrl", "model.houm.kpi_seller_nsl", "model.houm.proc_tmp_demand_schedules", "model.houm.proc_tmp_demand_tenant_houm_leads", "model.houm.proc_tmp_demand_tenant_pa_leads", "model.houm.proc_tmp_supply_leads"], "model.houm.proc_marketing_paid_media": ["model.houm.rental_landlord_metric_details_paid_media_cost", "model.houm.rental_tenant_metric_details_paid_media_cost", "model.houm.sales_buyer_metric_details_paid_media_cost", "model.houm.sales_buyer_metric_details_paid_media_cost_sales", "model.houm.sales_seller_metric_details_paid_media_cost"], "model.houm.proc_marketing_facebook": ["model.houm.proc_marketing_paid_media"], "model.houm.proc_marketing_google_co_mx": ["model.houm.proc_marketing_paid_media"], "model.houm.proc_marketing_google_cl": ["model.houm.proc_marketing_paid_media"], "model.houm.sales_local_revenue": ["model.houm.cum_sales_local_revenue", "model.houm.goals_current"], "model.houm.rentals_units": ["model.houm.cum_rentals_units", "model.houm.goals_current"], "model.houm.eop_subs": ["model.houm.goals_current"], "model.houm.sales_units": ["model.houm.cum_sales_units", "model.houm.goals_current"], "model.houm.proc_cx_nps_new_listing": [], "model.houm.proc_cx_nps_visit_cancel": [], "model.houm.proc_cx_nps_photo": [], "model.houm.proc_cx_nps_landlords": [], "model.houm.proc_monthly_daily_inflation_mx": ["model.houm.fact_daily_virtual_uf_mx"], "model.houm.proc_monthly_daily_inflation_co": ["model.houm.fact_daily_virtual_uf_co"], "model.houm.proc_monthly_daily_inflation_cl": ["model.houm.fact_daily_virtual_uf_cl"], "model.houm.proc_demand_schedules": ["model.houm.rental_tenant_metric_details_schedules_created", "model.houm.rental_tenant_metric_details_schedules_done", "model.houm.rental_tenant_metric_details_schedules_scheduled", "model.houm.sales_buyer_metric_details_schedules_created", "model.houm.sales_buyer_metric_details_schedules_done", "model.houm.sales_buyer_metric_details_schedules_scheduled", "model.houm.sales_investor_metric_details_schedules_created", "model.houm.sales_investor_metric_details_schedules_done", "model.houm.sales_investor_metric_details_schedules_scheduled"], "model.houm.proc_tmp_demand_schedules_cleaned": ["model.houm.kpi_buyer_visit_created", "model.houm.kpi_buyer_visit_done", "model.houm.kpi_buyer_visit_scheduled", "model.houm.kpi_landlord_photo_created", "model.houm.kpi_landlord_photo_done", "model.houm.kpi_landlord_photo_scheduled", "model.houm.kpi_seller_photo_created", "model.houm.kpi_seller_photo_done", "model.houm.kpi_seller_photo_scheduled", "model.houm.kpi_tenant_visit_created", "model.houm.kpi_tenant_visit_done", "model.houm.kpi_tenant_visit_scheduled", "model.houm.proc_cx_nps_photo"], "model.houm.proc_tmp_demand_schedules": ["model.houm.proc_tmp_demand_schedules_cleaned"], "model.houm.proc_tmp_demand_tenant_houm_leads": [], "model.houm.proc_demand_reservations": ["model.houm.rental_tenant_metric_details_reservations", "model.houm.rental_tenant_metric_details_reservations_effective", "model.houm.rental_tenant_metric_details_reservations_refunded"], "model.houm.proc_tmp_demand_tenant_pa_leads": [], "model.houm.proc_demand_leads": ["model.houm.rental_tenant_metric_details_leads", "model.houm.rental_tenant_metric_details_leads_interactions"], "model.houm.proc_demand_buyer_leads": ["model.houm.sales_buyer_metrics_details_leads", "model.houm.sales_buyer_metrics_details_leads", "model.houm.sales_buyer_metrics_details_leads_sales", "model.houm.sales_buyer_metrics_details_leads_sales_qualified", "model.houm.sales_buyer_metrics_details_leads_sales_qualified_date", "model.houm.sales_investor_metrics_details_leads", "model.houm.sales_investor_metrics_details_leads_sales_qualified", "model.houm.sales_investor_metrics_details_leads_sales_qualified_date"], "model.houm.processing_phase": [], "model.houm.staging_phase": [], "model.houm.freshness_phase": [], "model.houm.dwh_phase": [], "test.houm.assert_properties_rent_prices_chile": [], "operation.houm.houm-on-run-end-0": [], "operation.houm.houm-on-run-end-1": [], "operation.houm.houm-on-run-end-2": [], "operation.houm.houm-on-run-end-3": [], "operation.houm.houm-on-run-end-4": [], "operation.houm.houm-on-run-end-5": [], "operation.houm.houm-on-run-end-6": [], "operation.houm.houm-on-run-end-7": [], "operation.houm.houm-on-run-end-8": [], "operation.houm.houm-on-run-end-9": [], "operation.houm.houm-on-run-end-10": [], "operation.houm.houm-on-run-end-11": [], "operation.houm.houm-on-run-end-12": [], "operation.houm.houm-on-run-end-13": [], "operation.houm.houm-on-run-end-14": [], "operation.houm.houm-on-run-end-15": [], "operation.houm.houm-on-run-end-16": [], "operation.houm.houm-on-run-end-17": [], "operation.houm.houm-on-run-end-18": [], "operation.houm.houm-on-run-end-19": [], "operation.houm.houm-on-run-end-20": [], "operation.houm.houm-on-run-end-21": [], "test.houm.unique_properties_published_property_id.3fc869c6e4": [], "test.houm.not_null_properties_published_property_id.cfd67d7b86": [], "test.houm.unique_dim_macrozones_macrozone.99a7937a3d": [], "test.houm.not_null_dim_macrozones_macrozone.5c78ef2445": [], "test.houm.unique_stg_properties_id.c012ce6a29": [], "test.houm.not_null_stg_properties_id.d43465ee9b": [], "test.houm.unique_stg_propertydetails_property_id.3d72328240": [], "test.houm.not_null_stg_propertydetails_property_id.e78288fade": [], "test.houm.relationships_stg_propertydetails_property_id__id__ref_stg_properties_.2deb404575": [], "test.houm.unique_stg_property_salesdetails_property_id.6259827ab6": [], "test.houm.not_null_stg_property_salesdetails_property_id.a909208778": [], "test.houm.relationships_stg_property_salesdetails_property_id__id__ref_stg_properties_.576c9939c2": [], "test.houm.unique_stg_employees_dwh_person_id.0af0f11ced": [], "test.houm.not_null_stg_employees_dwh_person_id.1123b1a608": [], "test.houm.unique_stg_zendesk_users_id.e79d686872": [], "test.houm.not_null_stg_zendesk_users_id.52cc258f65": [], "test.houm.not_null_stg_zendesk_users_created_at.a5d3a601e4": [], "test.houm.unique_stg_zendesk_tickets_id.ddc72a2d52": [], "test.houm.not_null_stg_zendesk_tickets_id.1eb8f4773c": [], "test.houm.not_null_stg_zendesk_tickets_created_at.df19eaef06": [], "test.houm.not_null_stg_zendesk_tickets_requester_id.b9b7c97459": [], "test.houm.relationships_stg_zendesk_tickets_requester_id__id__ref_stg_zendesk_users_.2db2d75048": [], "test.houm.not_null_stg_zendesk_tickets_submitter_id.adeeee890f": [], "test.houm.relationships_stg_zendesk_tickets_submitter_id__id__ref_stg_zendesk_users_.2140f23be2": [], "model.houm.stg_whatsapp_nps_rentas_propietary_pc": [], "model.houm.proc_cx_nps_landlords_pc": [], "source.houm.public.dim_polygons": ["model.houm.dim_locations"], "source.houm.historical.historical_scheduler_macrozone": [], "source.houm.public.dim_dates": [], "source.houm.historical.historical_properties": [], "source.houm.historical.historical_arriendoasegurado_propertydetails": [], "source.houm.historical.historical_properties_salesdetails": [], "source.houm.historical.historical_arriendoasegurado_homecheckerdetails": ["model.houm.stg_homecheckerdetails"], "source.houm.historical.historical_users": [], "source.houm.historical.historical_contracts": ["model.houm.stg_contracts"], "source.houm.historical.historical_plans": ["model.houm.stg_plans"], "source.houm.raw_stage.scheduler_macrozone": ["model.houm.stg_macrozone"], "source.houm.raw_stage.properties_location": ["model.houm.stg_properties_location"], "source.houm.raw_stage.series_ipc_cl": ["model.houm.stg_monthly_inflation_cl"], "source.houm.raw_stage.series_ipc_mx": ["model.houm.stg_monthly_inflation_mx"], "source.houm.raw_stage.series_ipc_co": ["model.houm.stg_monthly_inflation_co"], "source.houm.raw_stage.properties": ["model.houm.stg_properties"], "source.houm.raw_stage.properties_salesdetails": ["model.houm.stg_property_salesdetails"], "source.houm.raw_stage.arriendoasegurado_propertydetails": ["model.houm.stg_propertydetails"], "source.houm.raw_stage.users": ["model.houm.stg_users"], "source.houm.raw_stage.demand_portalhoum": ["model.houm.stg_demand_portalhoum"], "source.houm.raw_stage.demand_portalapplicant": ["model.houm.stg_demand_portalapplicant"], "source.houm.raw_stage.scheduler_schedules": ["model.houm.stg_scheduler_schedules"], "source.houm.raw_stage.scheduler_scheduletypes": ["model.houm.stg_scheduler_scheduletypes"], "source.houm.raw_stage.scheduler_schedulehasapplicant": ["model.houm.stg_scheduler_schedulehasapplicant"], "source.houm.raw_stage.subscription_subscription": ["model.houm.stg_subscription_subscription"], "source.houm.raw_stage.arriendoasegurado_applicant": ["model.houm.stg_arriendoasegurado_applicant"], "source.houm.raw_stage.demand_lead": ["model.houm.stg_demand_lead"], "source.houm.staging_buk.employees_chile": ["model.houm.stg_employees"], "source.houm.staging_buk.employees_colombia": ["model.houm.stg_employees"], "source.houm.staging_buk.roles_chile": ["model.houm.stg_roles"], "source.houm.staging_buk.roles_colombia": ["model.houm.stg_roles"], "source.houm.staging_buk.accounting_chile": [], "source.houm.staging_buk.accounting_colombia": [], "source.houm.staging_buk.areas_chile": ["model.houm.stg_areas"], "source.houm.staging_buk.areas_colombia": ["model.houm.stg_areas"], "source.houm.staging_buk.companies_chile": ["model.houm.stg_companies"], "source.houm.staging_buk.companies_colombia": ["model.houm.stg_companies"], "source.houm.staging_buk.departments_chile": ["model.houm.stg_departments"], "source.houm.staging_buk.departments_colombia": ["model.houm.stg_departments"], "source.houm.staging_buk.jobs_chile": ["model.houm.stg_jobs"], "source.houm.staging_buk.jobs_colombia": ["model.houm.stg_jobs"], "source.houm.staging_buk.payrolls_chile": ["model.houm.stg_accounting", "model.houm.stg_payrolls"], "source.houm.staging_buk.payrolls_colombia": ["model.houm.stg_accounting", "model.houm.stg_payrolls"], "source.houm.staging_buk.line_settlements_chile": ["model.houm.stg_line_settlements"], "source.houm.staging_buk.line_settlements_colombia": ["model.houm.stg_line_settlements"], "source.houm.airbyte_zendesk.users": ["model.houm.stg_zendesk_users"], "source.houm.airbyte_zendesk.tickets": ["model.houm.stg_zendesk_tickets"], "source.houm.airbyte_zendesk.ticket_audits": ["model.houm.stg_zendesk_tickets_audits", "model.houm.stg_zendesk_tickets_audits_events", "model.houm.stg_zendesk_tickets_audits_via"], "source.houm.airbyte_zendesk.ticket_audits_events": ["model.houm.stg_zendesk_tickets_audits_events"], "source.houm.airbyte_zendesk.ticket_audits_via": ["model.houm.stg_zendesk_tickets_audits_via"], "source.houm.airbyte_zendesk.ticket_audits_via_source": ["model.houm.stg_zendesk_tickets_audits_via"], "source.houm.airbyte_zendesk.ticket_audits_via_source_from": ["model.houm.stg_zendesk_tickets_audits_via"], "source.houm.airbyte_zendesk.ticket_audits_via_source_to": ["model.houm.stg_zendesk_tickets_audits_via"], "source.houm.airbyte_zendesk.ticket_metrics": ["model.houm.stg_zendesk_metrics"], "source.houm.airbyte_zendesk.ticket_comments": ["model.houm.stg_zendesk_tickets_comments"], "source.houm.pipedrive.activities": ["model.houm.stg_activies"], "source.houm.pipedrive.deals": ["model.houm.stg_deals"], "source.houm.pipedrive.pipelines": ["model.houm.stg_pipelines"], "source.houm.pipedrive.stages": ["model.houm.stg_stages"], "source.houm.pipedrive.bi_persons": ["model.houm.stg_bi_persons"], "source.houm.pipedrive.bi_deals": ["model.houm.stg_bi_deals"], "source.houm.mongo_tables.payments_cl_db_movements": ["model.houm.stg_payments_cl_db_movements"], "source.houm.mongo_tables.payments_co_db_movements": ["model.houm.stg_payments_co_db_movements"], "source.houm.mongo_tables.payments_mx_db_movements": ["model.houm.stg_payments_mx_db_movements"], "source.houm.airbyte_gspread.bb_fb": ["model.houm.stg_paid_media_facebook_campaigns"], "source.houm.airbyte_gspread.gg_cl": ["model.houm.stg_paid_media_google_campaigns_cl"], "source.houm.airbyte_gspread.gg_mxco": ["model.houm.stg_paid_media_google_campaigns_co_mx"], "source.houm.airbyte_gspread.campaign_keys_fb": ["model.houm.stg_paid_media_facebook_campaign_keys"], "source.houm.airbyte_gspread.campaign_keys_gg": ["model.houm.stg_paid_media_google_campaign_keys"], "source.houm.airbyte_gspread.data": ["model.houm.stg_tmp_marketing_pipedrive_data"], "source.houm.airbyte_gspread.nps_automatic_landlord_3_meses": ["model.houm.stg_whatsapp_nps_automatic_landlord_3_meses"], "source.houm.airbyte_gspread.nps_automatic_landlord_6_meses": ["model.houm.stg_whatsapp_nps_automatic_landlord_6_meses"], "source.houm.airbyte_gspread.nps_automatic_tenant_24_hrs": ["model.houm.stg_whatsapp_nps_automatic_tenant_24_hrs"], "source.houm.airbyte_gspread.nps_automatic_tenant_3_meses": ["model.houm.stg_whatsapp_nps_automatic_tenant_3_meses"], "source.houm.airbyte_gspread.nps_automatic_tenant_6_meses": ["model.houm.stg_whatsapp_nps_automatic_tenant_6_meses"], "source.houm.airbyte_gspread.nps_cancel_visit": ["model.houm.stg_whatsapp_nps_cancel_visit"], "source.houm.airbyte_gspread.nps_chile_foto": ["model.houm.stg_whatsapp_nps_chile_foto"], "source.houm.airbyte_gspread.nps_chile_renta": ["model.houm.stg_whatsapp_nps_chile_visit_renta"], "source.houm.airbyte_gspread.nps_chile_sales": ["model.houm.stg_whatsapp_nps_chile_visit_sales"], "source.houm.airbyte_gspread.nps_colombia_foto": ["model.houm.stg_whatsapp_nps_colombia_foto"], "source.houm.airbyte_gspread.nps_colombia_renta": ["model.houm.stg_whatsapp_nps_colombia_visit_renta"], "source.houm.airbyte_gspread.nps_colombia_sales": ["model.houm.stg_whatsapp_nps_colombia_visit_sales"], "source.houm.airbyte_gspread.nps_mexico_foto": ["model.houm.stg_whatsapp_nps_mexico_foto"], "source.houm.airbyte_gspread.nps_mexico_renta": ["model.houm.stg_whatsapp_nps_mexico_visit_renta"], "source.houm.airbyte_gspread.nps_mexico_sales": ["model.houm.stg_whatsapp_nps_mexico_visit_sales"], "source.houm.airbyte_gspread.nps_sales_post_venta_buyer": ["model.houm.stg_whatsapp_nps_sales_post_venta_buyer"], "source.houm.airbyte_gspread.nps_sales_post_venta_seller": ["model.houm.stg_whatsapp_nps_sales_post_venta_selller"], "source.houm.airbyte_gspread.nps_sales_promesa_buyer": ["model.houm.stg_whatsapp_nps_sales_promesa_buyer"], "source.houm.airbyte_gspread.nps_sales_promesa_seller": ["model.houm.stg_whatsapp_nps_sales_promesa_seller"], "source.houm.airbyte_gspread.nps_rentas_prop_new_listing_cl": ["model.houm.stg_whatsapp_nps_rentas_new_listing_cl"], "source.houm.airbyte_gspread.nps_rentas_prop_new_listing_co": ["model.houm.stg_whatsapp_nps_rentas_new_listing_co"], "source.houm.airbyte_gspread.nps_rentas_prop_new_listing_mx": ["model.houm.stg_whatsapp_nps_rentas_new_listing_mx"], "source.houm.airbyte_gspread.nps_rentas_propietary_pc_cl": [], "source.houm.airbyte_gspread.nps_rentas_propietary_pc_co": [], "source.houm.airbyte_gspread.nps_rentas_propietary_pc_mx": [], "source.houm.airbyte_gspread.nps_rentas_tenant_pc_cl": ["model.houm.stg_whatsapp_nps_tenant_pc_cl"], "source.houm.airbyte_gspread.nps_rentas_tenant_pc_co": ["model.houm.stg_whatsapp_nps_tenant_pc_co"], "source.houm.airbyte_gspread.nps_rentas_tenant_pc_mx": ["model.houm.stg_whatsapp_nps_rentas_propietary_pc", "model.houm.stg_whatsapp_nps_tenant_pc_mx"], "source.houm.airbyte_gspread.anuncios": ["model.houm.stg_paid_media_ad_groups"], "source.houm.survicate.nps_landlord_satisfaction_6months_cl": ["model.houm.stg_survicate_nps_landlord_satisfaction_6months_cl"], "source.houm.survicate.nps_landlord_listing": ["model.houm.stg_survicate_nps_landlord_listing"], "source.houm.survicate.nps_landlord_new_sub": ["model.houm.stg_survicate_nps_landlord_new_sub"], "source.houm.survicate.nps_tennant_new_sub": ["model.houm.stg_survicate_nps_tenant_new_sub"], "source.houm.survicate.photo_done": ["model.houm.stg_survicate_nps_photo_done"], "source.houm.survicate.nps_tenant_satisfaction_24hrs": ["model.houm.stg_survicate_nps_tenant_satisfaction_24hrs"], "source.houm.survicate.nps_visit_done": ["model.houm.stg_survicate_nps_visit_done"]}}